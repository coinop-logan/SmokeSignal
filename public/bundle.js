/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./config.json":
/*!*********************!*\
  !*** ./config.json ***!
  \*********************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('[{\"name\":\"xDai\",\"network\":100,\"contract\":\"0x2024A680EE628725bd99c36Df223189f678C6945\",\"scan\":14726216},{\"name\":\"Ethereum\",\"network\":1,\"contract\":\"0x8D213dc5Cc6c3D2746E2B90a2D1C9E589ebCb532\",\"scan\":11927122}]');\n\n//# sourceURL=webpack://smokesignal/./config.json?");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/index.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/index.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/getUrl.js */ \"./node_modules/css-loader/dist/runtime/getUrl.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _fonts_Oswald_VariableFont_wght_ttf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fonts/Oswald-VariableFont_wght.ttf */ \"./src/fonts/Oswald-VariableFont_wght.ttf\");\n/* harmony import */ var _fonts_D_DIN_woff2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fonts/D-DIN.woff2 */ \"./src/fonts/D-DIN.woff2\");\n/* harmony import */ var _fonts_D_DIN_woff__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fonts/D-DIN.woff */ \"./src/fonts/D-DIN.woff\");\n// Imports\n\n\n\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_Oswald_VariableFont_wght_ttf__WEBPACK_IMPORTED_MODULE_2__);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_D_DIN_woff2__WEBPACK_IMPORTED_MODULE_3__);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_D_DIN_woff__WEBPACK_IMPORTED_MODULE_4__);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.multiline > label,\\r\\n.multiline > label > div {\\r\\n  flex-grow: 1;\\r\\n}\\r\\n\\r\\n@keyframes rotation {\\r\\n  from {\\r\\n    transform: rotate(0deg);\\r\\n  }\\r\\n  to {\\r\\n    transform: rotate(359deg);\\r\\n  }\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: \\\"SmallType\\\";\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \") format(\\\"truetype\\\");\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: \\\"DDin\\\";\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \") format(\\\"woff2\\\"),\\r\\n    url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \") format(\\\"woff\\\");\\r\\n}\\r\\n\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://smokesignal/./src/index.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://smokesignal/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = url && url.__esModule ? url.default : url;\n\n  if (typeof url !== \"string\") {\n    return url;\n  } // If url is already wrapped in quotes, remove them\n\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    // eslint-disable-next-line no-param-reassign\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n\n  return url;\n};\n\n//# sourceURL=webpack://smokesignal/./node_modules/css-loader/dist/runtime/getUrl.js?");

/***/ }),

/***/ "./src/elm/App.elm":
/*!*************************!*\
  !*** ./src/elm/App.elm ***!
  \*************************/
/***/ (function() {

eval("(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\nconsole.warn('Compiled in DEV mode. Follow the advice at https://elm-lang.org/0.19.1/optimize for better performance and smaller assets.');\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File !== 'undefined' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[36m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash_UNUSED(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.start.line === region.end.line)\n\t{\n\t\treturn 'on line ' + region.start.line;\n\t}\n\treturn 'on lines ' + region.start.line + ' through ' + region.end.line;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\t/**/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = $elm$core$Set$toList(x);\n\t\ty = $elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**_UNUSED/\n\tif (x.$ < 0)\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**_UNUSED/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0_UNUSED = 0;\nvar _Utils_Tuple0 = { $: '#0' };\n\nfunction _Utils_Tuple2_UNUSED(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr_UNUSED(c) { return c; }\nfunction _Utils_chr(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil_UNUSED = { $: 0 };\nvar _List_Nil = { $: '[]' };\n\nfunction _List_Cons_UNUSED(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn !isNaN(word)\n\t\t? $elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: $elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? $elm$core$Maybe$Nothing\n\t\t: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**/\nfunction _Json_errorToString(error)\n{\n\treturn $elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? $elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn $elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? $elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? $elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!$elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif ($elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn $elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn $elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap(value) { return value.a; }\n\nfunction _Json_wrap_UNUSED(value) { return value; }\nfunction _Json_unwrap_UNUSED(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.init,\n\t\timpl.update,\n\t\timpl.subscriptions,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\t$elm$core$Result$isOk(result) || _Debug_crash(2 /**/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tvar initPair = init(result.a);\n\tvar model = initPair.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tvar pair = A2(update, msg, model);\n\t\tstepper(model = pair.a, viewMetadata);\n\t\t_Platform_enqueueEffects(managers, pair.b, subscriptions(model));\n\t}\n\n\t_Platform_enqueueEffects(managers, initPair.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n//\n// Effects must be queued!\n//\n// Say your init contains a synchronous command, like Time.now or Time.here\n//\n//   - This will produce a batch of effects (FX_1)\n//   - The synchronous task triggers the subsequent `update` call\n//   - This will produce a batch of effects (FX_2)\n//\n// If we just start dispatching FX_2, subscriptions from FX_2 can be processed\n// before subscriptions from FX_1. No good! Earlier versions of this code had\n// this problem, leading to these reports:\n//\n//   https://github.com/elm/core/issues/980\n//   https://github.com/elm/core/pull/981\n//   https://github.com/elm/compiler/issues/1776\n//\n// The queue is necessary to avoid ordering issues for synchronous commands.\n\n\n// Why use true/false here? Why not just check the length of the queue?\n// The goal is to detect \"are we currently dispatching effects?\" If we\n// are, we need to bail and let the ongoing while loop handle things.\n//\n// Now say the queue has 1 element. When we dequeue the final element,\n// the queue will be empty, but we are still actively dispatching effects.\n// So you could get queue jumping in a really tricky category of cases.\n//\nvar _Platform_effectsQueue = [];\nvar _Platform_effectsActive = false;\n\n\nfunction _Platform_enqueueEffects(managers, cmdBag, subBag)\n{\n\t_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });\n\n\tif (_Platform_effectsActive) return;\n\n\t_Platform_effectsActive = true;\n\tfor (var fx; fx = _Platform_effectsQueue.shift(); )\n\t{\n\t\t_Platform_dispatchEffects(fx.p, fx.q, fx.r);\n\t}\n\t_Platform_effectsActive = false;\n}\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\ts: bag.n,\n\t\t\t\tt: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.t)\n\t\t{\n\t\t\tx = temp.s(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\t$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**_UNUSED/\n\tvar node = args['node'];\n\t//*/\n\t/**/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2($elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3($elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\t$elm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tmessage: func(record.message),\n\t\tstopPropagation: record.stopPropagation,\n\t\tpreventDefault: record.preventDefault\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.message;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.stopPropagation;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.preventDefault) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.init,\n\t\timpl.update,\n\t\timpl.subscriptions,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.view;\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.init,\n\t\timpl.update,\n\t\timpl.subscriptions,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.setup && impl.setup(sendToApp)\n\t\t\tvar view = impl.view;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.body);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.title) && (_VirtualDom_doc.title = title = doc.title);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.onUrlChange;\n\tvar onUrlRequest = impl.onUrlRequest;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\nkey['elm-hot-nav-key'] = true;\n\n\treturn _Browser_document({\n\t\tsetup: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = $elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.protocol === next.protocol\n\t\t\t\t\t\t\t&& curr.host === next.host\n\t\t\t\t\t\t\t&& curr.port_.a === next.port_.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? $elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: $elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tinit: function(flags)\n\t\t{\n\t\t\treturn A3(impl.init, flags, _Browser_getUrl(), key);\n\t\t},\n\t\tview: impl.view,\n\t\tupdate: impl.update,\n\t\tsubscriptions: impl.subscriptions\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { hidden: 'hidden', change: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { hidden: 'mozHidden', change: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { hidden: 'msHidden', change: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { hidden: 'webkitHidden', change: 'webkitvisibilitychange' }\n\t\t: { hidden: 'hidden', change: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\tscene: _Browser_getScene(),\n\t\tviewport: {\n\t\t\tx: _Browser_window.pageXOffset,\n\t\t\ty: _Browser_window.pageYOffset,\n\t\t\twidth: _Browser_doc.documentElement.clientWidth,\n\t\t\theight: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\twidth: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\theight: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\tscene: {\n\t\t\t\twidth: node.scrollWidth,\n\t\t\t\theight: node.scrollHeight\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t\tx: node.scrollLeft,\n\t\t\t\ty: node.scrollTop,\n\t\t\t\twidth: node.clientWidth,\n\t\t\t\theight: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\tscene: _Browser_getScene(),\n\t\t\tviewport: {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\twidth: _Browser_doc.documentElement.clientWidth,\n\t\t\t\theight: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\telement: {\n\t\t\t\tx: x + rect.left,\n\t\t\t\ty: y + rect.top,\n\t\t\t\twidth: rect.width,\n\t\t\t\theight: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\n\n\nfunction _Url_percentEncode(string)\n{\n\treturn encodeURIComponent(string);\n}\n\nfunction _Url_percentDecode(string)\n{\n\ttry\n\t{\n\t\treturn $elm$core$Maybe$Just(decodeURIComponent(string));\n\t}\n\tcatch (e)\n\t{\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n}\n\n// CREATE\n\nvar _Regex_never = /.^/;\n\nvar _Regex_fromStringWith = F2(function(options, string)\n{\n\tvar flags = 'g';\n\tif (options.multiline) { flags += 'm'; }\n\tif (options.caseInsensitive) { flags += 'i'; }\n\n\ttry\n\t{\n\t\treturn $elm$core$Maybe$Just(new RegExp(string, flags));\n\t}\n\tcatch(error)\n\t{\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n});\n\n\n// USE\n\nvar _Regex_contains = F2(function(re, string)\n{\n\treturn string.match(re) !== null;\n});\n\n\nvar _Regex_findAtMost = F3(function(n, re, str)\n{\n\tvar out = [];\n\tvar number = 0;\n\tvar string = str;\n\tvar lastIndex = re.lastIndex;\n\tvar prevLastIndex = -1;\n\tvar result;\n\twhile (number++ < n && (result = re.exec(string)))\n\t{\n\t\tif (prevLastIndex == re.lastIndex) break;\n\t\tvar i = result.length - 1;\n\t\tvar subs = new Array(i);\n\t\twhile (i > 0)\n\t\t{\n\t\t\tvar submatch = result[i];\n\t\t\tsubs[--i] = submatch\n\t\t\t\t? $elm$core$Maybe$Just(submatch)\n\t\t\t\t: $elm$core$Maybe$Nothing;\n\t\t}\n\t\tout.push(A4($elm$regex$Regex$Match, result[0], result.index, number, _List_fromArray(subs)));\n\t\tprevLastIndex = re.lastIndex;\n\t}\n\tre.lastIndex = lastIndex;\n\treturn _List_fromArray(out);\n});\n\n\nvar _Regex_replaceAtMost = F4(function(n, re, replacer, string)\n{\n\tvar count = 0;\n\tfunction jsReplacer(match)\n\t{\n\t\tif (count++ >= n)\n\t\t{\n\t\t\treturn match;\n\t\t}\n\t\tvar i = arguments.length - 3;\n\t\tvar submatches = new Array(i);\n\t\twhile (i > 0)\n\t\t{\n\t\t\tvar submatch = arguments[i];\n\t\t\tsubmatches[--i] = submatch\n\t\t\t\t? $elm$core$Maybe$Just(submatch)\n\t\t\t\t: $elm$core$Maybe$Nothing;\n\t\t}\n\t\treturn replacer(A4($elm$regex$Regex$Match, match, arguments[arguments.length - 2], count, _List_fromArray(submatches)));\n\t}\n\treturn string.replace(re, jsReplacer);\n});\n\nvar _Regex_splitAtMost = F3(function(n, re, str)\n{\n\tvar string = str;\n\tvar out = [];\n\tvar start = re.lastIndex;\n\tvar restoreLastIndex = re.lastIndex;\n\twhile (n--)\n\t{\n\t\tvar result = re.exec(string);\n\t\tif (!result) break;\n\t\tout.push(string.slice(start, result.index));\n\t\tstart = re.lastIndex;\n\t}\n\tout.push(string.slice(start));\n\tre.lastIndex = restoreLastIndex;\n\treturn _List_fromArray(out);\n});\n\nvar _Regex_infinity = Infinity;\n\n\n// BYTES\n\nfunction _Bytes_width(bytes)\n{\n\treturn bytes.byteLength;\n}\n\nvar _Bytes_getHostEndianness = F2(function(le, be)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(new Uint8Array(new Uint32Array([1]))[0] === 1 ? le : be));\n\t});\n});\n\n\n// ENCODERS\n\nfunction _Bytes_encode(encoder)\n{\n\tvar mutableBytes = new DataView(new ArrayBuffer($elm$bytes$Bytes$Encode$getWidth(encoder)));\n\t$elm$bytes$Bytes$Encode$write(encoder)(mutableBytes)(0);\n\treturn mutableBytes;\n}\n\n\n// SIGNED INTEGERS\n\nvar _Bytes_write_i8  = F3(function(mb, i, n) { mb.setInt8(i, n); return i + 1; });\nvar _Bytes_write_i16 = F4(function(mb, i, n, isLE) { mb.setInt16(i, n, isLE); return i + 2; });\nvar _Bytes_write_i32 = F4(function(mb, i, n, isLE) { mb.setInt32(i, n, isLE); return i + 4; });\n\n\n// UNSIGNED INTEGERS\n\nvar _Bytes_write_u8  = F3(function(mb, i, n) { mb.setUint8(i, n); return i + 1 ;});\nvar _Bytes_write_u16 = F4(function(mb, i, n, isLE) { mb.setUint16(i, n, isLE); return i + 2; });\nvar _Bytes_write_u32 = F4(function(mb, i, n, isLE) { mb.setUint32(i, n, isLE); return i + 4; });\n\n\n// FLOATS\n\nvar _Bytes_write_f32 = F4(function(mb, i, n, isLE) { mb.setFloat32(i, n, isLE); return i + 4; });\nvar _Bytes_write_f64 = F4(function(mb, i, n, isLE) { mb.setFloat64(i, n, isLE); return i + 8; });\n\n\n// BYTES\n\nvar _Bytes_write_bytes = F3(function(mb, offset, bytes)\n{\n\tfor (var i = 0, len = bytes.byteLength, limit = len - 4; i <= limit; i += 4)\n\t{\n\t\tmb.setUint32(offset + i, bytes.getUint32(i));\n\t}\n\tfor (; i < len; i++)\n\t{\n\t\tmb.setUint8(offset + i, bytes.getUint8(i));\n\t}\n\treturn offset + len;\n});\n\n\n// STRINGS\n\nfunction _Bytes_getStringWidth(string)\n{\n\tfor (var width = 0, i = 0; i < string.length; i++)\n\t{\n\t\tvar code = string.charCodeAt(i);\n\t\twidth +=\n\t\t\t(code < 0x80) ? 1 :\n\t\t\t(code < 0x800) ? 2 :\n\t\t\t(code < 0xD800 || 0xDBFF < code) ? 3 : (i++, 4);\n\t}\n\treturn width;\n}\n\nvar _Bytes_write_string = F3(function(mb, offset, string)\n{\n\tfor (var i = 0; i < string.length; i++)\n\t{\n\t\tvar code = string.charCodeAt(i);\n\t\toffset +=\n\t\t\t(code < 0x80)\n\t\t\t\t? (mb.setUint8(offset, code)\n\t\t\t\t, 1\n\t\t\t\t)\n\t\t\t\t:\n\t\t\t(code < 0x800)\n\t\t\t\t? (mb.setUint16(offset, 0xC080 /* 0b1100000010000000 */\n\t\t\t\t\t| (code >>> 6 & 0x1F /* 0b00011111 */) << 8\n\t\t\t\t\t| code & 0x3F /* 0b00111111 */)\n\t\t\t\t, 2\n\t\t\t\t)\n\t\t\t\t:\n\t\t\t(code < 0xD800 || 0xDBFF < code)\n\t\t\t\t? (mb.setUint16(offset, 0xE080 /* 0b1110000010000000 */\n\t\t\t\t\t| (code >>> 12 & 0xF /* 0b00001111 */) << 8\n\t\t\t\t\t| code >>> 6 & 0x3F /* 0b00111111 */)\n\t\t\t\t, mb.setUint8(offset + 2, 0x80 /* 0b10000000 */\n\t\t\t\t\t| code & 0x3F /* 0b00111111 */)\n\t\t\t\t, 3\n\t\t\t\t)\n\t\t\t\t:\n\t\t\t(code = (code - 0xD800) * 0x400 + string.charCodeAt(++i) - 0xDC00 + 0x10000\n\t\t\t, mb.setUint32(offset, 0xF0808080 /* 0b11110000100000001000000010000000 */\n\t\t\t\t| (code >>> 18 & 0x7 /* 0b00000111 */) << 24\n\t\t\t\t| (code >>> 12 & 0x3F /* 0b00111111 */) << 16\n\t\t\t\t| (code >>> 6 & 0x3F /* 0b00111111 */) << 8\n\t\t\t\t| code & 0x3F /* 0b00111111 */)\n\t\t\t, 4\n\t\t\t);\n\t}\n\treturn offset;\n});\n\n\n// DECODER\n\nvar _Bytes_decode = F2(function(decoder, bytes)\n{\n\ttry {\n\t\treturn $elm$core$Maybe$Just(A2(decoder, bytes, 0).b);\n\t} catch(e) {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n});\n\nvar _Bytes_read_i8  = F2(function(      bytes, offset) { return _Utils_Tuple2(offset + 1, bytes.getInt8(offset)); });\nvar _Bytes_read_i16 = F3(function(isLE, bytes, offset) { return _Utils_Tuple2(offset + 2, bytes.getInt16(offset, isLE)); });\nvar _Bytes_read_i32 = F3(function(isLE, bytes, offset) { return _Utils_Tuple2(offset + 4, bytes.getInt32(offset, isLE)); });\nvar _Bytes_read_u8  = F2(function(      bytes, offset) { return _Utils_Tuple2(offset + 1, bytes.getUint8(offset)); });\nvar _Bytes_read_u16 = F3(function(isLE, bytes, offset) { return _Utils_Tuple2(offset + 2, bytes.getUint16(offset, isLE)); });\nvar _Bytes_read_u32 = F3(function(isLE, bytes, offset) { return _Utils_Tuple2(offset + 4, bytes.getUint32(offset, isLE)); });\nvar _Bytes_read_f32 = F3(function(isLE, bytes, offset) { return _Utils_Tuple2(offset + 4, bytes.getFloat32(offset, isLE)); });\nvar _Bytes_read_f64 = F3(function(isLE, bytes, offset) { return _Utils_Tuple2(offset + 8, bytes.getFloat64(offset, isLE)); });\n\nvar _Bytes_read_bytes = F3(function(len, bytes, offset)\n{\n\treturn _Utils_Tuple2(offset + len, new DataView(bytes.buffer, bytes.byteOffset + offset, len));\n});\n\nvar _Bytes_read_string = F3(function(len, bytes, offset)\n{\n\tvar string = '';\n\tvar end = offset + len;\n\tfor (; offset < end;)\n\t{\n\t\tvar byte = bytes.getUint8(offset++);\n\t\tstring +=\n\t\t\t(byte < 128)\n\t\t\t\t? String.fromCharCode(byte)\n\t\t\t\t:\n\t\t\t((byte & 0xE0 /* 0b11100000 */) === 0xC0 /* 0b11000000 */)\n\t\t\t\t? String.fromCharCode((byte & 0x1F /* 0b00011111 */) << 6 | bytes.getUint8(offset++) & 0x3F /* 0b00111111 */)\n\t\t\t\t:\n\t\t\t((byte & 0xF0 /* 0b11110000 */) === 0xE0 /* 0b11100000 */)\n\t\t\t\t? String.fromCharCode(\n\t\t\t\t\t(byte & 0xF /* 0b00001111 */) << 12\n\t\t\t\t\t| (bytes.getUint8(offset++) & 0x3F /* 0b00111111 */) << 6\n\t\t\t\t\t| bytes.getUint8(offset++) & 0x3F /* 0b00111111 */\n\t\t\t\t)\n\t\t\t\t:\n\t\t\t\t(byte =\n\t\t\t\t\t((byte & 0x7 /* 0b00000111 */) << 18\n\t\t\t\t\t\t| (bytes.getUint8(offset++) & 0x3F /* 0b00111111 */) << 12\n\t\t\t\t\t\t| (bytes.getUint8(offset++) & 0x3F /* 0b00111111 */) << 6\n\t\t\t\t\t\t| bytes.getUint8(offset++) & 0x3F /* 0b00111111 */\n\t\t\t\t\t) - 0x10000\n\t\t\t\t, String.fromCharCode(Math.floor(byte / 0x400) + 0xD800, byte % 0x400 + 0xDC00)\n\t\t\t\t);\n\t}\n\treturn _Utils_Tuple2(offset, string);\n});\n\nvar _Bytes_decodeFailure = F2(function() { throw 0; });\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\n// SEND REQUEST\n\nvar _Http_toTask = F3(function(router, toTask, request)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tfunction done(response) {\n\t\t\tcallback(toTask(request.expect.a(response)));\n\t\t}\n\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.addEventListener('error', function() { done($elm$http$Http$NetworkError_); });\n\t\txhr.addEventListener('timeout', function() { done($elm$http$Http$Timeout_); });\n\t\txhr.addEventListener('load', function() { done(_Http_toResponse(request.expect.b, xhr)); });\n\t\t$elm$core$Maybe$isJust(request.tracker) && _Http_track(router, xhr, request.tracker.a);\n\n\t\ttry {\n\t\t\txhr.open(request.method, request.url, true);\n\t\t} catch (e) {\n\t\t\treturn done($elm$http$Http$BadUrl_(request.url));\n\t\t}\n\n\t\t_Http_configureRequest(xhr, request);\n\n\t\trequest.body.a && xhr.setRequestHeader('Content-Type', request.body.a);\n\t\txhr.send(request.body.b);\n\n\t\treturn function() { xhr.c = true; xhr.abort(); };\n\t});\n});\n\n\n// CONFIGURE\n\nfunction _Http_configureRequest(xhr, request)\n{\n\tfor (var headers = request.headers; headers.b; headers = headers.b) // WHILE_CONS\n\t{\n\t\txhr.setRequestHeader(headers.a.a, headers.a.b);\n\t}\n\txhr.timeout = request.timeout.a || 0;\n\txhr.responseType = request.expect.d;\n\txhr.withCredentials = request.allowCookiesFromOtherDomains;\n}\n\n\n// RESPONSES\n\nfunction _Http_toResponse(toBody, xhr)\n{\n\treturn A2(\n\t\t200 <= xhr.status && xhr.status < 300 ? $elm$http$Http$GoodStatus_ : $elm$http$Http$BadStatus_,\n\t\t_Http_toMetadata(xhr),\n\t\ttoBody(xhr.response)\n\t);\n}\n\n\n// METADATA\n\nfunction _Http_toMetadata(xhr)\n{\n\treturn {\n\t\turl: xhr.responseURL,\n\t\tstatusCode: xhr.status,\n\t\tstatusText: xhr.statusText,\n\t\theaders: _Http_parseHeaders(xhr.getAllResponseHeaders())\n\t};\n}\n\n\n// HEADERS\n\nfunction _Http_parseHeaders(rawHeaders)\n{\n\tif (!rawHeaders)\n\t{\n\t\treturn $elm$core$Dict$empty;\n\t}\n\n\tvar headers = $elm$core$Dict$empty;\n\tvar headerPairs = rawHeaders.split('\\r\\n');\n\tfor (var i = headerPairs.length; i--; )\n\t{\n\t\tvar headerPair = headerPairs[i];\n\t\tvar index = headerPair.indexOf(': ');\n\t\tif (index > 0)\n\t\t{\n\t\t\tvar key = headerPair.substring(0, index);\n\t\t\tvar value = headerPair.substring(index + 2);\n\n\t\t\theaders = A3($elm$core$Dict$update, key, function(oldValue) {\n\t\t\t\treturn $elm$core$Maybe$Just($elm$core$Maybe$isJust(oldValue)\n\t\t\t\t\t? value + ', ' + oldValue.a\n\t\t\t\t\t: value\n\t\t\t\t);\n\t\t\t}, headers);\n\t\t}\n\t}\n\treturn headers;\n}\n\n\n// EXPECT\n\nvar _Http_expect = F3(function(type, toBody, toValue)\n{\n\treturn {\n\t\t$: 0,\n\t\td: type,\n\t\tb: toBody,\n\t\ta: toValue\n\t};\n});\n\nvar _Http_mapExpect = F2(function(func, expect)\n{\n\treturn {\n\t\t$: 0,\n\t\td: expect.d,\n\t\tb: expect.b,\n\t\ta: function(x) { return func(expect.a(x)); }\n\t};\n});\n\nfunction _Http_toDataView(arrayBuffer)\n{\n\treturn new DataView(arrayBuffer);\n}\n\n\n// BODY and PARTS\n\nvar _Http_emptyBody = { $: 0 };\nvar _Http_pair = F2(function(a, b) { return { $: 0, a: a, b: b }; });\n\nfunction _Http_toFormData(parts)\n{\n\tfor (var formData = new FormData(); parts.b; parts = parts.b) // WHILE_CONS\n\t{\n\t\tvar part = parts.a;\n\t\tformData.append(part.a, part.b);\n\t}\n\treturn formData;\n}\n\nvar _Http_bytesToBlob = F2(function(mime, bytes)\n{\n\treturn new Blob([bytes], { type: mime });\n});\n\n\n// PROGRESS\n\nfunction _Http_track(router, xhr, tracker)\n{\n\t// TODO check out lengthComputable on loadstart event\n\n\txhr.upload.addEventListener('progress', function(event) {\n\t\tif (xhr.c) { return; }\n\t\t_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Sending({\n\t\t\tsent: event.loaded,\n\t\t\tsize: event.total\n\t\t}))));\n\t});\n\txhr.addEventListener('progress', function(event) {\n\t\tif (xhr.c) { return; }\n\t\t_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Receiving({\n\t\t\treceived: event.loaded,\n\t\t\tsize: event.lengthComputable ? $elm$core$Maybe$Just(event.total) : $elm$core$Maybe$Nothing\n\t\t}))));\n\t});\n}\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2($elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = $elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = $elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\n\n\n\n\n// STRINGS\n\n\nvar _Parser_isSubString = F5(function(smallString, offset, row, col, bigString)\n{\n\tvar smallLength = smallString.length;\n\tvar isGood = offset + smallLength <= bigString.length;\n\n\tfor (var i = 0; isGood && i < smallLength; )\n\t{\n\t\tvar code = bigString.charCodeAt(offset);\n\t\tisGood =\n\t\t\tsmallString[i++] === bigString[offset++]\n\t\t\t&& (\n\t\t\t\tcode === 0x000A /* \\n */\n\t\t\t\t\t? ( row++, col=1 )\n\t\t\t\t\t: ( col++, (code & 0xF800) === 0xD800 ? smallString[i++] === bigString[offset++] : 1 )\n\t\t\t)\n\t}\n\n\treturn _Utils_Tuple3(isGood ? offset : -1, row, col);\n});\n\n\n\n// CHARS\n\n\nvar _Parser_isSubChar = F3(function(predicate, offset, string)\n{\n\treturn (\n\t\tstring.length <= offset\n\t\t\t? -1\n\t\t\t:\n\t\t(string.charCodeAt(offset) & 0xF800) === 0xD800\n\t\t\t? (predicate(_Utils_chr(string.substr(offset, 2))) ? offset + 2 : -1)\n\t\t\t:\n\t\t(predicate(_Utils_chr(string[offset]))\n\t\t\t? ((string[offset] === '\\n') ? -2 : (offset + 1))\n\t\t\t: -1\n\t\t)\n\t);\n});\n\n\nvar _Parser_isAsciiCode = F3(function(code, offset, string)\n{\n\treturn string.charCodeAt(offset) === code;\n});\n\n\n\n// NUMBERS\n\n\nvar _Parser_chompBase10 = F2(function(offset, string)\n{\n\tfor (; offset < string.length; offset++)\n\t{\n\t\tvar code = string.charCodeAt(offset);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn offset;\n\t\t}\n\t}\n\treturn offset;\n});\n\n\nvar _Parser_consumeBase = F3(function(base, offset, string)\n{\n\tfor (var total = 0; offset < string.length; offset++)\n\t{\n\t\tvar digit = string.charCodeAt(offset) - 0x30;\n\t\tif (digit < 0 || base <= digit) break;\n\t\ttotal = base * total + digit;\n\t}\n\treturn _Utils_Tuple2(offset, total);\n});\n\n\nvar _Parser_consumeBase16 = F2(function(offset, string)\n{\n\tfor (var total = 0; offset < string.length; offset++)\n\t{\n\t\tvar code = string.charCodeAt(offset);\n\t\tif (0x30 <= code && code <= 0x39)\n\t\t{\n\t\t\ttotal = 16 * total + code - 0x30;\n\t\t}\n\t\telse if (0x41 <= code && code <= 0x46)\n\t\t{\n\t\t\ttotal = 16 * total + code - 55;\n\t\t}\n\t\telse if (0x61 <= code && code <= 0x66)\n\t\t{\n\t\t\ttotal = 16 * total + code - 87;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn _Utils_Tuple2(offset, total);\n});\n\n\n\n// FIND STRING\n\n\nvar _Parser_findSubString = F5(function(smallString, offset, row, col, bigString)\n{\n\tvar newOffset = bigString.indexOf(smallString, offset);\n\tvar target = newOffset < 0 ? bigString.length : newOffset + smallString.length;\n\n\twhile (offset < target)\n\t{\n\t\tvar code = bigString.charCodeAt(offset++);\n\t\tcode === 0x000A /* \\n */\n\t\t\t? ( col=1, row++ )\n\t\t\t: ( col++, (code & 0xF800) === 0xD800 && offset++ )\n\t}\n\n\treturn _Utils_Tuple3(newOffset, row, col);\n});\nvar $author$project$Types$LinkClicked = function (a) {\n\treturn {$: 'LinkClicked', a: a};\n};\nvar $author$project$Types$RouteChanged = function (a) {\n\treturn {$: 'RouteChanged', a: a};\n};\nvar $elm$core$List$cons = _List_cons;\nvar $elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar $elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _v0) {\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (node.$ === 'SubTree') {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar $elm$core$Array$toList = function (array) {\n\treturn A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);\n};\nvar $elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2($elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Set$toList = function (_v0) {\n\tvar dict = _v0.a;\n\treturn $elm$core$Dict$keys(dict);\n};\nvar $elm$core$Basics$EQ = {$: 'EQ'};\nvar $elm$core$Basics$GT = {$: 'GT'};\nvar $elm$core$Basics$LT = {$: 'LT'};\nvar $elm$core$Result$Err = function (a) {\n\treturn {$: 'Err', a: a};\n};\nvar $elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Failure', a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Field', a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Index', a: a, b: b};\n\t});\nvar $elm$core$Result$Ok = function (a) {\n\treturn {$: 'Ok', a: a};\n};\nvar $elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 'OneOf', a: a};\n};\nvar $elm$core$Basics$False = {$: 'False'};\nvar $elm$core$Basics$add = _Basics_add;\nvar $elm$core$Maybe$Just = function (a) {\n\treturn {$: 'Just', a: a};\n};\nvar $elm$core$Maybe$Nothing = {$: 'Nothing'};\nvar $elm$core$String$all = _String_all;\nvar $elm$core$Basics$and = _Basics_and;\nvar $elm$core$Basics$append = _Utils_append;\nvar $elm$json$Json$Encode$encode = _Json_encode;\nvar $elm$core$String$fromInt = _String_fromNumber;\nvar $elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar $elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar $elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t'\\n    ',\n\t\tA2($elm$core$String$split, '\\n', str));\n};\nvar $elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$length = function (xs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar $elm$core$List$map2 = _List_map2;\nvar $elm$core$Basics$le = _Utils_le;\nvar $elm$core$Basics$sub = _Basics_sub;\nvar $elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2($elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar $elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$range,\n\t\t\t\t0,\n\t\t\t\t$elm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar $elm$core$Char$toCode = _Char_toCode;\nvar $elm$core$Char$isLower = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar $elm$core$Char$isUpper = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar $elm$core$Basics$or = _Basics_or;\nvar $elm$core$Char$isAlpha = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);\n};\nvar $elm$core$Char$isDigit = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar $elm$core$Char$isAlphaNum = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));\n};\nvar $elm$core$List$reverse = function (list) {\n\treturn A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);\n};\nvar $elm$core$String$uncons = _String_uncons;\nvar $elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(\n\t\t\t$elm$json$Json$Decode$errorToString(error))));\n\t});\nvar $elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar $elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 'Field':\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _v1 = $elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_v1.$ === 'Nothing') {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\t\t\tvar _char = _v2.a;\n\t\t\t\t\t\t\tvar rest = _v2.b;\n\t\t\t\t\t\t\treturn $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 'Index':\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + ($elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 'OneOf':\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t$elm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t$elm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + ($elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2($elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$branchFactor = 32;\nvar $elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 'Array_elm_builtin', a: a, b: b, c: c, d: d};\n\t});\nvar $elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar $elm$core$Basics$ceiling = _Basics_ceiling;\nvar $elm$core$Basics$fdiv = _Basics_fdiv;\nvar $elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar $elm$core$Basics$toFloat = _Basics_toFloat;\nvar $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(\n\tA2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));\nvar $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);\nvar $elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar $elm$core$Array$Leaf = function (a) {\n\treturn {$: 'Leaf', a: a};\n};\nvar $elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$eq = _Utils_equal;\nvar $elm$core$Basics$floor = _Basics_floor;\nvar $elm$core$Elm$JsArray$length = _JsArray_length;\nvar $elm$core$Basics$gt = _Utils_gt;\nvar $elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar $elm$core$Basics$mul = _Basics_mul;\nvar $elm$core$Array$SubTree = function (a) {\n\treturn {$: 'SubTree', a: a};\n};\nvar $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar $elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _v0.a;\n\t\t\tvar remainingNodes = _v0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn $elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Tuple$first = function (_v0) {\n\tvar x = _v0.a;\n\treturn x;\n};\nvar $elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.nodeListSize) {\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.tail),\n\t\t\t\t$elm$core$Array$shiftStep,\n\t\t\t\t$elm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.tail);\n\t\t} else {\n\t\t\tvar treeLen = builder.nodeListSize * $elm$core$Array$branchFactor;\n\t\t\tvar depth = $elm$core$Basics$floor(\n\t\t\t\tA2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.nodeList) : builder.nodeList;\n\t\t\tvar tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.nodeListSize);\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.tail) + treeLen,\n\t\t\t\tA2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.tail);\n\t\t}\n\t});\nvar $elm$core$Basics$idiv = _Basics_idiv;\nvar $elm$core$Basics$lt = _Utils_lt;\nvar $elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{nodeList: nodeList, nodeListSize: (len / $elm$core$Array$branchFactor) | 0, tail: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = $elm$core$Array$Leaf(\n\t\t\t\t\tA3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar $elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn $elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % $elm$core$Array$branchFactor;\n\t\t\tvar tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;\n\t\t\treturn A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar $elm$core$Basics$True = {$: 'True'};\nvar $elm$core$Result$isOk = function (result) {\n\tif (result.$ === 'Ok') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$json$Json$Decode$andThen = _Json_andThen;\nvar $author$project$Browser$Hash$Internal$Hashbang = {$: 'Hashbang'};\nvar $elm$json$Json$Decode$map = _Json_map1;\nvar $elm$json$Json$Decode$map2 = _Json_map2;\nvar $elm$json$Json$Decode$succeed = _Json_succeed;\nvar $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 'Normal':\n\t\t\treturn 0;\n\t\tcase 'MayStopPropagation':\n\t\t\treturn 1;\n\t\tcase 'MayPreventDefault':\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar $elm$browser$Browser$External = function (a) {\n\treturn {$: 'External', a: a};\n};\nvar $elm$browser$Browser$Internal = function (a) {\n\treturn {$: 'Internal', a: a};\n};\nvar $elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar $elm$browser$Browser$Dom$NotFound = function (a) {\n\treturn {$: 'NotFound', a: a};\n};\nvar $elm$url$Url$Http = {$: 'Http'};\nvar $elm$url$Url$Https = {$: 'Https'};\nvar $elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {fragment: fragment, host: host, path: path, port_: port_, protocol: protocol, query: query};\n\t});\nvar $elm$core$String$contains = _String_contains;\nvar $elm$core$String$length = _String_length;\nvar $elm$core$String$slice = _String_slice;\nvar $elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\t$elm$core$String$slice,\n\t\t\tn,\n\t\t\t$elm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar $elm$core$String$indexes = _String_indexes;\nvar $elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar $elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);\n\t});\nvar $elm$core$String$toInt = _String_toInt;\nvar $elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, ':', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\tvar i = _v0.a;\n\t\t\t\t\tvar _v1 = $elm$core$String$toInt(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_v1.$ === 'Nothing') {\n\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _v1;\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\t$elm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2($elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '/', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2($elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '?', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '#', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$String$startsWith = _String_startsWith;\nvar $elm$url$Url$fromString = function (str) {\n\treturn A2($elm$core$String$startsWith, 'http://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t$elm$url$Url$Http,\n\t\tA2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t$elm$url$Url$Https,\n\t\tA2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);\n};\nvar $elm$core$Basics$never = function (_v0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _v0.a;\n\t\tvar $temp$_v0 = nvr;\n\t\t_v0 = $temp$_v0;\n\t\tcontinue never;\n\t}\n};\nvar $elm$core$Task$Perform = function (a) {\n\treturn {$: 'Perform', a: a};\n};\nvar $elm$core$Task$succeed = _Scheduler_succeed;\nvar $elm$core$Task$init = $elm$core$Task$succeed(_Utils_Tuple0);\nvar $elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\t$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4($elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar $elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$core$Task$andThen = _Scheduler_andThen;\nvar $elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\t$elm$core$List$foldr,\n\t\t$elm$core$Task$map2($elm$core$List$cons),\n\t\t$elm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar $elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar $elm$core$Task$spawnCmd = F2(\n\tfunction (router, _v0) {\n\t\tvar task = _v0.a;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar $elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (_v0) {\n\t\t\t\treturn _Utils_Tuple0;\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar $elm$core$Task$onSelfMsg = F3(\n\tfunction (_v0, _v1, _v2) {\n\t\treturn $elm$core$Task$succeed(_Utils_Tuple0);\n\t});\nvar $elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _v0) {\n\t\tvar task = _v0.a;\n\t\treturn $elm$core$Task$Perform(\n\t\t\tA2($elm$core$Task$map, tagger, task));\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);\nvar $elm$core$Task$command = _Platform_leaf('Task');\nvar $elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn $elm$core$Task$command(\n\t\t\t$elm$core$Task$Perform(\n\t\t\t\tA2($elm$core$Task$map, toMessage, task)));\n\t});\nvar $elm$browser$Browser$application = _Browser_application;\nvar $elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $author$project$Browser$Hash$Internal$fixPathQuery = function (url) {\n\tvar _v0 = function () {\n\t\tvar _v1 = A2($elm$core$String$split, '?', url.path);\n\t\tif (_v1.b && _v1.b.b) {\n\t\t\tvar path = _v1.a;\n\t\t\tvar _v2 = _v1.b;\n\t\t\tvar query = _v2.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tpath,\n\t\t\t\t$elm$core$Maybe$Just(query));\n\t\t} else {\n\t\t\treturn _Utils_Tuple2(url.path, url.query);\n\t\t}\n\t}();\n\tvar newPath = _v0.a;\n\tvar newQuery = _v0.b;\n\treturn _Utils_update(\n\t\turl,\n\t\t{path: newPath, query: newQuery});\n};\nvar $elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (maybe.$ === 'Just') {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar $author$project$Browser$Hash$Internal$pathFromFragment = F2(\n\tfunction (hashType, url) {\n\t\tvar newPath = function () {\n\t\t\tvar defaultEmpty = A2($elm$core$Maybe$withDefault, '', url.fragment);\n\t\t\tif (hashType.$ === 'Hash') {\n\t\t\t\treturn defaultEmpty;\n\t\t\t} else {\n\t\t\t\treturn A2($elm$core$String$startsWith, '!', defaultEmpty) ? A2($elm$core$String$dropLeft, 1, defaultEmpty) : defaultEmpty;\n\t\t\t}\n\t\t}();\n\t\treturn _Utils_update(\n\t\t\turl,\n\t\t\t{fragment: $elm$core$Maybe$Nothing, path: newPath});\n\t});\nvar $author$project$Browser$Hash$Internal$updateUrl = function (hashType) {\n\treturn A2(\n\t\t$elm$core$Basics$composeL,\n\t\t$author$project$Browser$Hash$Internal$fixPathQuery,\n\t\t$author$project$Browser$Hash$Internal$pathFromFragment(hashType));\n};\nvar $author$project$Browser$Hashbang$application = function (config) {\n\treturn $elm$browser$Browser$application(\n\t\t{\n\t\t\tinit: F3(\n\t\t\t\tfunction (flags, url, key) {\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\tconfig.init,\n\t\t\t\t\t\tflags,\n\t\t\t\t\t\tA2($author$project$Browser$Hash$Internal$updateUrl, $author$project$Browser$Hash$Internal$Hashbang, url),\n\t\t\t\t\t\tkey);\n\t\t\t\t}),\n\t\t\tonUrlChange: A2(\n\t\t\t\t$elm$core$Basics$composeL,\n\t\t\t\tconfig.onUrlChange,\n\t\t\t\t$author$project$Browser$Hash$Internal$updateUrl($author$project$Browser$Hash$Internal$Hashbang)),\n\t\t\tonUrlRequest: config.onUrlRequest,\n\t\t\tsubscriptions: config.subscriptions,\n\t\t\tupdate: config.update,\n\t\t\tview: config.view\n\t\t});\n};\nvar $elm$json$Json$Decode$bool = _Json_decodeBool;\nvar $elm$core$Basics$composeR = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $elm$json$Json$Decode$field = _Json_decodeField;\nvar $elm$core$Maybe$andThen = F2(\n\tfunction (callback, maybeValue) {\n\t\tif (maybeValue.$ === 'Just') {\n\t\t\tvar value = maybeValue.a;\n\t\t\treturn callback(value);\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar $elm$url$Url$Parser$Internal$Parser = function (a) {\n\treturn {$: 'Parser', a: a};\n};\nvar $elm$core$Basics$compare = _Utils_compare;\nvar $elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _v1 = A2($elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_v1.$) {\n\t\t\t\t\tcase 'LT':\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 'EQ':\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$Parser$Query$custom = F2(\n\tfunction (key, func) {\n\t\treturn $elm$url$Url$Parser$Internal$Parser(\n\t\t\tfunction (dict) {\n\t\t\t\treturn func(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\tA2($elm$core$Dict$get, key, dict)));\n\t\t\t});\n\t});\nvar $elm$url$Url$Parser$Query$int = function (key) {\n\treturn A2(\n\t\t$elm$url$Url$Parser$Query$custom,\n\t\tkey,\n\t\tfunction (stringList) {\n\t\t\tif (stringList.b && (!stringList.b.b)) {\n\t\t\t\tvar str = stringList.a;\n\t\t\t\treturn $elm$core$String$toInt(str);\n\t\t\t} else {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t}\n\t\t});\n};\nvar $elm$url$Url$Parser$Parser = function (a) {\n\treturn {$: 'Parser', a: a};\n};\nvar $elm$url$Url$Parser$State = F5(\n\tfunction (visited, unvisited, params, frag, value) {\n\t\treturn {frag: frag, params: params, unvisited: unvisited, value: value, visited: visited};\n\t});\nvar $elm$url$Url$Parser$mapState = F2(\n\tfunction (func, _v0) {\n\t\tvar visited = _v0.visited;\n\t\tvar unvisited = _v0.unvisited;\n\t\tvar params = _v0.params;\n\t\tvar frag = _v0.frag;\n\t\tvar value = _v0.value;\n\t\treturn A5(\n\t\t\t$elm$url$Url$Parser$State,\n\t\t\tvisited,\n\t\t\tunvisited,\n\t\t\tparams,\n\t\t\tfrag,\n\t\t\tfunc(value));\n\t});\nvar $elm$url$Url$Parser$map = F2(\n\tfunction (subValue, _v0) {\n\t\tvar parseArg = _v0.a;\n\t\treturn $elm$url$Url$Parser$Parser(\n\t\t\tfunction (_v1) {\n\t\t\t\tvar visited = _v1.visited;\n\t\t\t\tvar unvisited = _v1.unvisited;\n\t\t\t\tvar params = _v1.params;\n\t\t\t\tvar frag = _v1.frag;\n\t\t\t\tvar value = _v1.value;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$url$Url$Parser$mapState(value),\n\t\t\t\t\tparseArg(\n\t\t\t\t\t\tA5($elm$url$Url$Parser$State, visited, unvisited, params, frag, subValue)));\n\t\t\t});\n\t});\nvar $elm$url$Url$Parser$getFirstMatch = function (states) {\n\tgetFirstMatch:\n\twhile (true) {\n\t\tif (!states.b) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar state = states.a;\n\t\t\tvar rest = states.b;\n\t\t\tvar _v1 = state.unvisited;\n\t\t\tif (!_v1.b) {\n\t\t\t\treturn $elm$core$Maybe$Just(state.value);\n\t\t\t} else {\n\t\t\t\tif ((_v1.a === '') && (!_v1.b.b)) {\n\t\t\t\t\treturn $elm$core$Maybe$Just(state.value);\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$states = rest;\n\t\t\t\t\tstates = $temp$states;\n\t\t\t\t\tcontinue getFirstMatch;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\nvar $elm$url$Url$Parser$removeFinalEmpty = function (segments) {\n\tif (!segments.b) {\n\t\treturn _List_Nil;\n\t} else {\n\t\tif ((segments.a === '') && (!segments.b.b)) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar segment = segments.a;\n\t\t\tvar rest = segments.b;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\tsegment,\n\t\t\t\t$elm$url$Url$Parser$removeFinalEmpty(rest));\n\t\t}\n\t}\n};\nvar $elm$url$Url$Parser$preparePath = function (path) {\n\tvar _v0 = A2($elm$core$String$split, '/', path);\n\tif (_v0.b && (_v0.a === '')) {\n\t\tvar segments = _v0.b;\n\t\treturn $elm$url$Url$Parser$removeFinalEmpty(segments);\n\t} else {\n\t\tvar segments = _v0;\n\t\treturn $elm$url$Url$Parser$removeFinalEmpty(segments);\n\t}\n};\nvar $elm$url$Url$Parser$addToParametersHelp = F2(\n\tfunction (value, maybeList) {\n\t\tif (maybeList.$ === 'Nothing') {\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[value]));\n\t\t} else {\n\t\t\tvar list = maybeList.a;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\tA2($elm$core$List$cons, value, list));\n\t\t}\n\t});\nvar $elm$url$Url$percentDecode = _Url_percentDecode;\nvar $elm$core$Dict$Black = {$: 'Black'};\nvar $elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: 'RBNode_elm_builtin', a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $elm$core$Dict$RBEmpty_elm_builtin = {$: 'RBEmpty_elm_builtin'};\nvar $elm$core$Dict$Red = {$: 'Red'};\nvar $elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Red')) {\n\t\t\tvar _v1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {\n\t\t\t\tvar _v3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Red,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) && (left.d.$ === 'RBNode_elm_builtin')) && (left.d.a.$ === 'Red')) {\n\t\t\t\tvar _v5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _v6 = left.d;\n\t\t\t\tvar _v7 = _v6.a;\n\t\t\t\tvar llK = _v6.b;\n\t\t\t\tvar llV = _v6.c;\n\t\t\t\tvar llLeft = _v6.d;\n\t\t\t\tvar llRight = _v6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Red,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === 'RBEmpty_elm_builtin') {\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _v1 = A2($elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_v1.$) {\n\t\t\t\tcase 'LT':\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 'EQ':\n\t\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar k = _v0.b;\n\t\t\tvar v = _v0.c;\n\t\t\tvar l = _v0.d;\n\t\t\tvar r = _v0.e;\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _v0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar $elm$core$Dict$getMin = function (dict) {\n\tgetMin:\n\twhile (true) {\n\t\tif ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {\n\t\t\tvar left = dict.d;\n\t\t\tvar $temp$dict = left;\n\t\t\tdict = $temp$dict;\n\t\t\tcontinue getMin;\n\t\t} else {\n\t\t\treturn dict;\n\t\t}\n\t}\n};\nvar $elm$core$Dict$moveRedLeft = function (dict) {\n\tif (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {\n\t\tif ((dict.e.d.$ === 'RBNode_elm_builtin') && (dict.e.d.a.$ === 'Red')) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v1 = dict.d;\n\t\t\tvar lClr = _v1.a;\n\t\t\tvar lK = _v1.b;\n\t\t\tvar lV = _v1.c;\n\t\t\tvar lLeft = _v1.d;\n\t\t\tvar lRight = _v1.e;\n\t\t\tvar _v2 = dict.e;\n\t\t\tvar rClr = _v2.a;\n\t\t\tvar rK = _v2.b;\n\t\t\tvar rV = _v2.c;\n\t\t\tvar rLeft = _v2.d;\n\t\t\tvar _v3 = rLeft.a;\n\t\t\tvar rlK = rLeft.b;\n\t\t\tvar rlV = rLeft.c;\n\t\t\tvar rlL = rLeft.d;\n\t\t\tvar rlR = rLeft.e;\n\t\t\tvar rRight = _v2.e;\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t$elm$core$Dict$Red,\n\t\t\t\trlK,\n\t\t\t\trlV,\n\t\t\t\tA5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Black,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),\n\t\t\t\t\trlL),\n\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rlR, rRight));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v4 = dict.d;\n\t\t\tvar lClr = _v4.a;\n\t\t\tvar lK = _v4.b;\n\t\t\tvar lV = _v4.c;\n\t\t\tvar lLeft = _v4.d;\n\t\t\tvar lRight = _v4.e;\n\t\t\tvar _v5 = dict.e;\n\t\t\tvar rClr = _v5.a;\n\t\t\tvar rK = _v5.b;\n\t\t\tvar rV = _v5.c;\n\t\t\tvar rLeft = _v5.d;\n\t\t\tvar rRight = _v5.e;\n\t\t\tif (clr.$ === 'Black') {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Black,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Black,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar $elm$core$Dict$moveRedRight = function (dict) {\n\tif (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {\n\t\tif ((dict.d.d.$ === 'RBNode_elm_builtin') && (dict.d.d.a.$ === 'Red')) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v1 = dict.d;\n\t\t\tvar lClr = _v1.a;\n\t\t\tvar lK = _v1.b;\n\t\t\tvar lV = _v1.c;\n\t\t\tvar _v2 = _v1.d;\n\t\t\tvar _v3 = _v2.a;\n\t\t\tvar llK = _v2.b;\n\t\t\tvar llV = _v2.c;\n\t\t\tvar llLeft = _v2.d;\n\t\t\tvar llRight = _v2.e;\n\t\t\tvar lRight = _v1.e;\n\t\t\tvar _v4 = dict.e;\n\t\t\tvar rClr = _v4.a;\n\t\t\tvar rK = _v4.b;\n\t\t\tvar rV = _v4.c;\n\t\t\tvar rLeft = _v4.d;\n\t\t\tvar rRight = _v4.e;\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t$elm$core$Dict$Red,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),\n\t\t\t\tA5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Black,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tlRight,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight)));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v5 = dict.d;\n\t\t\tvar lClr = _v5.a;\n\t\t\tvar lK = _v5.b;\n\t\t\tvar lV = _v5.c;\n\t\t\tvar lLeft = _v5.d;\n\t\t\tvar lRight = _v5.e;\n\t\t\tvar _v6 = dict.e;\n\t\t\tvar rClr = _v6.a;\n\t\t\tvar rK = _v6.b;\n\t\t\tvar rV = _v6.c;\n\t\t\tvar rLeft = _v6.d;\n\t\t\tvar rRight = _v6.e;\n\t\t\tif (clr.$ === 'Black') {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Black,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Black,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar $elm$core$Dict$removeHelpPrepEQGT = F7(\n\tfunction (targetKey, dict, color, key, value, left, right) {\n\t\tif ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {\n\t\t\tvar _v1 = left.a;\n\t\t\tvar lK = left.b;\n\t\t\tvar lV = left.c;\n\t\t\tvar lLeft = left.d;\n\t\t\tvar lRight = left.e;\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tlLeft,\n\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, lRight, right));\n\t\t} else {\n\t\t\t_v2$2:\n\t\t\twhile (true) {\n\t\t\t\tif ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Black')) {\n\t\t\t\t\tif (right.d.$ === 'RBNode_elm_builtin') {\n\t\t\t\t\t\tif (right.d.a.$ === 'Black') {\n\t\t\t\t\t\t\tvar _v3 = right.a;\n\t\t\t\t\t\t\tvar _v4 = right.d;\n\t\t\t\t\t\t\tvar _v5 = _v4.a;\n\t\t\t\t\t\t\treturn $elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak _v2$2;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v6 = right.a;\n\t\t\t\t\t\tvar _v7 = right.d;\n\t\t\t\t\t\treturn $elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak _v2$2;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dict;\n\t\t}\n\t});\nvar $elm$core$Dict$removeMin = function (dict) {\n\tif ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {\n\t\tvar color = dict.a;\n\t\tvar key = dict.b;\n\t\tvar value = dict.c;\n\t\tvar left = dict.d;\n\t\tvar lColor = left.a;\n\t\tvar lLeft = left.d;\n\t\tvar right = dict.e;\n\t\tif (lColor.$ === 'Black') {\n\t\t\tif ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {\n\t\t\t\tvar _v3 = lLeft.a;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\t$elm$core$Dict$removeMin(left),\n\t\t\t\t\tright);\n\t\t\t} else {\n\t\t\t\tvar _v4 = $elm$core$Dict$moveRedLeft(dict);\n\t\t\t\tif (_v4.$ === 'RBNode_elm_builtin') {\n\t\t\t\t\tvar nColor = _v4.a;\n\t\t\t\t\tvar nKey = _v4.b;\n\t\t\t\t\tvar nValue = _v4.c;\n\t\t\t\t\tvar nLeft = _v4.d;\n\t\t\t\t\tvar nRight = _v4.e;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\t$elm$core$Dict$removeMin(nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tkey,\n\t\t\t\tvalue,\n\t\t\t\t$elm$core$Dict$removeMin(left),\n\t\t\t\tright);\n\t\t}\n\t} else {\n\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t}\n};\nvar $elm$core$Dict$removeHelp = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === 'RBEmpty_elm_builtin') {\n\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t} else {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_cmp(targetKey, key) < 0) {\n\t\t\t\tif ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Black')) {\n\t\t\t\t\tvar _v4 = left.a;\n\t\t\t\t\tvar lLeft = left.d;\n\t\t\t\t\tif ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {\n\t\t\t\t\t\tvar _v6 = lLeft.a;\n\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\t\tright);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v7 = $elm$core$Dict$moveRedLeft(dict);\n\t\t\t\t\t\tif (_v7.$ === 'RBNode_elm_builtin') {\n\t\t\t\t\t\t\tvar nColor = _v7.a;\n\t\t\t\t\t\t\tvar nKey = _v7.b;\n\t\t\t\t\t\t\tvar nValue = _v7.c;\n\t\t\t\t\t\t\tvar nLeft = _v7.d;\n\t\t\t\t\t\t\tvar nRight = _v7.e;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\t\t\tnColor,\n\t\t\t\t\t\t\t\tnKey,\n\t\t\t\t\t\t\t\tnValue,\n\t\t\t\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, nLeft),\n\t\t\t\t\t\t\t\tnRight);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\tright);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Dict$removeHelpEQGT,\n\t\t\t\t\ttargetKey,\n\t\t\t\t\tA7($elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$removeHelpEQGT = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === 'RBNode_elm_builtin') {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_eq(targetKey, key)) {\n\t\t\t\tvar _v1 = $elm$core$Dict$getMin(right);\n\t\t\t\tif (_v1.$ === 'RBNode_elm_builtin') {\n\t\t\t\t\tvar minKey = _v1.b;\n\t\t\t\t\tvar minValue = _v1.c;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tminKey,\n\t\t\t\t\t\tminValue,\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\t$elm$core$Dict$removeMin(right));\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tleft,\n\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, right));\n\t\t\t}\n\t\t} else {\n\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t}\n\t});\nvar $elm$core$Dict$remove = F2(\n\tfunction (key, dict) {\n\t\tvar _v0 = A2($elm$core$Dict$removeHelp, key, dict);\n\t\tif ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar k = _v0.b;\n\t\t\tvar v = _v0.c;\n\t\t\tvar l = _v0.d;\n\t\t\tvar r = _v0.e;\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _v0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar $elm$core$Dict$update = F3(\n\tfunction (targetKey, alter, dictionary) {\n\t\tvar _v0 = alter(\n\t\t\tA2($elm$core$Dict$get, targetKey, dictionary));\n\t\tif (_v0.$ === 'Just') {\n\t\t\tvar value = _v0.a;\n\t\t\treturn A3($elm$core$Dict$insert, targetKey, value, dictionary);\n\t\t} else {\n\t\t\treturn A2($elm$core$Dict$remove, targetKey, dictionary);\n\t\t}\n\t});\nvar $elm$url$Url$Parser$addParam = F2(\n\tfunction (segment, dict) {\n\t\tvar _v0 = A2($elm$core$String$split, '=', segment);\n\t\tif ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {\n\t\t\tvar rawKey = _v0.a;\n\t\t\tvar _v1 = _v0.b;\n\t\t\tvar rawValue = _v1.a;\n\t\t\tvar _v2 = $elm$url$Url$percentDecode(rawKey);\n\t\t\tif (_v2.$ === 'Nothing') {\n\t\t\t\treturn dict;\n\t\t\t} else {\n\t\t\t\tvar key = _v2.a;\n\t\t\t\tvar _v3 = $elm$url$Url$percentDecode(rawValue);\n\t\t\t\tif (_v3.$ === 'Nothing') {\n\t\t\t\t\treturn dict;\n\t\t\t\t} else {\n\t\t\t\t\tvar value = _v3.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$elm$core$Dict$update,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\t$elm$url$Url$Parser$addToParametersHelp(value),\n\t\t\t\t\t\tdict);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn dict;\n\t\t}\n\t});\nvar $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;\nvar $elm$url$Url$Parser$prepareQuery = function (maybeQuery) {\n\tif (maybeQuery.$ === 'Nothing') {\n\t\treturn $elm$core$Dict$empty;\n\t} else {\n\t\tvar qry = maybeQuery.a;\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\t$elm$url$Url$Parser$addParam,\n\t\t\t$elm$core$Dict$empty,\n\t\t\tA2($elm$core$String$split, '&', qry));\n\t}\n};\nvar $elm$url$Url$Parser$parse = F2(\n\tfunction (_v0, url) {\n\t\tvar parser = _v0.a;\n\t\treturn $elm$url$Url$Parser$getFirstMatch(\n\t\t\tparser(\n\t\t\t\tA5(\n\t\t\t\t\t$elm$url$Url$Parser$State,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t$elm$url$Url$Parser$preparePath(url.path),\n\t\t\t\t\t$elm$url$Url$Parser$prepareQuery(url.query),\n\t\t\t\t\turl.fragment,\n\t\t\t\t\t$elm$core$Basics$identity)));\n\t});\nvar $elm$core$Basics$always = F2(\n\tfunction (a, _v0) {\n\t\treturn a;\n\t});\nvar $elm$url$Url$Parser$custom = F2(\n\tfunction (tipe, stringToSomething) {\n\t\treturn $elm$url$Url$Parser$Parser(\n\t\t\tfunction (_v0) {\n\t\t\t\tvar visited = _v0.visited;\n\t\t\t\tvar unvisited = _v0.unvisited;\n\t\t\t\tvar params = _v0.params;\n\t\t\t\tvar frag = _v0.frag;\n\t\t\t\tvar value = _v0.value;\n\t\t\t\tif (!unvisited.b) {\n\t\t\t\t\treturn _List_Nil;\n\t\t\t\t} else {\n\t\t\t\t\tvar next = unvisited.a;\n\t\t\t\t\tvar rest = unvisited.b;\n\t\t\t\t\tvar _v2 = stringToSomething(next);\n\t\t\t\t\tif (_v2.$ === 'Just') {\n\t\t\t\t\t\tvar nextValue = _v2.a;\n\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA5(\n\t\t\t\t\t\t\t\t$elm$url$Url$Parser$State,\n\t\t\t\t\t\t\t\tA2($elm$core$List$cons, next, visited),\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag,\n\t\t\t\t\t\t\t\tvalue(nextValue))\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _List_Nil;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t});\nvar $author$project$Routing$pathSucceed = A2(\n\t$elm$url$Url$Parser$custom,\n\t'',\n\t$elm$core$Basics$always(\n\t\t$elm$core$Maybe$Just(_Utils_Tuple0)));\nvar $elm$url$Url$Parser$query = function (_v0) {\n\tvar queryParser = _v0.a;\n\treturn $elm$url$Url$Parser$Parser(\n\t\tfunction (_v1) {\n\t\t\tvar visited = _v1.visited;\n\t\t\tvar unvisited = _v1.unvisited;\n\t\t\tvar params = _v1.params;\n\t\t\tvar frag = _v1.frag;\n\t\t\tvar value = _v1.value;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA5(\n\t\t\t\t\t$elm$url$Url$Parser$State,\n\t\t\t\t\tvisited,\n\t\t\t\t\tunvisited,\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tvalue(\n\t\t\t\t\t\tqueryParser(params)))\n\t\t\t\t]);\n\t\t});\n};\nvar $elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar $elm$core$List$concat = function (lists) {\n\treturn A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);\n};\nvar $elm$core$List$concatMap = F2(\n\tfunction (f, list) {\n\t\treturn $elm$core$List$concat(\n\t\t\tA2($elm$core$List$map, f, list));\n\t});\nvar $elm$url$Url$Parser$slash = F2(\n\tfunction (_v0, _v1) {\n\t\tvar parseBefore = _v0.a;\n\t\tvar parseAfter = _v1.a;\n\t\treturn $elm$url$Url$Parser$Parser(\n\t\t\tfunction (state) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$concatMap,\n\t\t\t\t\tparseAfter,\n\t\t\t\t\tparseBefore(state));\n\t\t\t});\n\t});\nvar $elm$url$Url$Parser$questionMark = F2(\n\tfunction (parser, queryParser) {\n\t\treturn A2(\n\t\t\t$elm$url$Url$Parser$slash,\n\t\t\tparser,\n\t\t\t$elm$url$Url$Parser$query(queryParser));\n\t});\nvar $author$project$Routing$blockParser = A2(\n\t$elm$core$Basics$composeR,\n\t$elm$url$Url$Parser$parse(\n\t\tA2(\n\t\t\t$elm$url$Url$Parser$map,\n\t\t\tF2(\n\t\t\t\tfunction (_v0, block) {\n\t\t\t\t\treturn block;\n\t\t\t\t}),\n\t\t\tA2(\n\t\t\t\t$elm$url$Url$Parser$questionMark,\n\t\t\t\t$author$project$Routing$pathSucceed,\n\t\t\t\t$elm$url$Url$Parser$Query$int('block')))),\n\t$elm$core$Maybe$andThen($elm$core$Basics$identity));\nvar $elm$json$Json$Decode$fail = _Json_fail;\nvar $elm$json$Json$Decode$string = _Json_decodeString;\nvar $cmditch$elm_ethereum$Eth$Decode$resultToDecoder = function (strToResult) {\n\tvar convert = function (n) {\n\t\tvar _v0 = strToResult(n);\n\t\tif (_v0.$ === 'Ok') {\n\t\t\tvar val = _v0.a;\n\t\t\treturn $elm$json$Json$Decode$succeed(val);\n\t\t} else {\n\t\t\tvar error = _v0.a;\n\t\t\treturn $elm$json$Json$Decode$fail(error);\n\t\t}\n\t};\n\treturn A2($elm$json$Json$Decode$andThen, convert, $elm$json$Json$Decode$string);\n};\nvar $cmditch$elm_ethereum$Internal$Types$Address = function (a) {\n\treturn {$: 'Address', a: a};\n};\nvar $elm$regex$Regex$Match = F4(\n\tfunction (match, index, number, submatches) {\n\t\treturn {index: index, match: match, number: number, submatches: submatches};\n\t});\nvar $elm$regex$Regex$contains = _Regex_contains;\nvar $elm$regex$Regex$fromStringWith = _Regex_fromStringWith;\nvar $elm$regex$Regex$fromString = function (string) {\n\treturn A2(\n\t\t$elm$regex$Regex$fromStringWith,\n\t\t{caseInsensitive: false, multiline: false},\n\t\tstring);\n};\nvar $elm$regex$Regex$never = _Regex_never;\nvar $cmditch$elm_ethereum$Eth$Utils$isAddress = $elm$regex$Regex$contains(\n\tA2(\n\t\t$elm$core$Maybe$withDefault,\n\t\t$elm$regex$Regex$never,\n\t\t$elm$regex$Regex$fromString('^((0[Xx]){1})?[0-9A-Fa-f]{40}$')));\nvar $elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$not = _Basics_not;\nvar $elm$core$List$all = F2(\n\tfunction (isOkay, list) {\n\t\treturn !A2(\n\t\t\t$elm$core$List$any,\n\t\t\tA2($elm$core$Basics$composeL, $elm$core$Basics$not, isOkay),\n\t\t\tlist);\n\t});\nvar $Chadtech$elm_bool_extra$Bool$Extra$all = $elm$core$List$all($elm$core$Basics$identity);\nvar $elm$core$Result$map2 = F3(\n\tfunction (func, ra, rb) {\n\t\tif (ra.$ === 'Err') {\n\t\t\tvar x = ra.a;\n\t\t\treturn $elm$core$Result$Err(x);\n\t\t} else {\n\t\t\tvar a = ra.a;\n\t\t\tif (rb.$ === 'Err') {\n\t\t\t\tvar x = rb.a;\n\t\t\t\treturn $elm$core$Result$Err(x);\n\t\t\t} else {\n\t\t\t\tvar b = rb.a;\n\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\tA2(func, a, b));\n\t\t\t}\n\t\t}\n\t});\nvar $elm_community$result_extra$Result$Extra$combine = A2(\n\t$elm$core$List$foldr,\n\t$elm$core$Result$map2($elm$core$List$cons),\n\t$elm$core$Result$Ok(_List_Nil));\nvar $prozacchiwawa$elm_keccak$Keccak$KC = function (a) {\n\treturn {$: 'KC', a: a};\n};\nvar $prozacchiwawa$elm_keccak$Keccak$ethereum_keccak_256 = $prozacchiwawa$elm_keccak$Keccak$KC(\n\t{capacity: 512, delSuffix: 1, outputLen: 32, rate: 1088});\nvar $elm$bytes$Bytes$Encode$getWidth = function (builder) {\n\tswitch (builder.$) {\n\t\tcase 'I8':\n\t\t\treturn 1;\n\t\tcase 'I16':\n\t\t\treturn 2;\n\t\tcase 'I32':\n\t\t\treturn 4;\n\t\tcase 'U8':\n\t\t\treturn 1;\n\t\tcase 'U16':\n\t\t\treturn 2;\n\t\tcase 'U32':\n\t\t\treturn 4;\n\t\tcase 'F32':\n\t\t\treturn 4;\n\t\tcase 'F64':\n\t\t\treturn 8;\n\t\tcase 'Seq':\n\t\t\tvar w = builder.a;\n\t\t\treturn w;\n\t\tcase 'Utf8':\n\t\t\tvar w = builder.a;\n\t\t\treturn w;\n\t\tdefault:\n\t\t\tvar bs = builder.a;\n\t\t\treturn _Bytes_width(bs);\n\t}\n};\nvar $elm$bytes$Bytes$LE = {$: 'LE'};\nvar $elm$bytes$Bytes$Encode$write = F3(\n\tfunction (builder, mb, offset) {\n\t\tswitch (builder.$) {\n\t\t\tcase 'I8':\n\t\t\t\tvar n = builder.a;\n\t\t\t\treturn A3(_Bytes_write_i8, mb, offset, n);\n\t\t\tcase 'I16':\n\t\t\t\tvar e = builder.a;\n\t\t\t\tvar n = builder.b;\n\t\t\t\treturn A4(\n\t\t\t\t\t_Bytes_write_i16,\n\t\t\t\t\tmb,\n\t\t\t\t\toffset,\n\t\t\t\t\tn,\n\t\t\t\t\t_Utils_eq(e, $elm$bytes$Bytes$LE));\n\t\t\tcase 'I32':\n\t\t\t\tvar e = builder.a;\n\t\t\t\tvar n = builder.b;\n\t\t\t\treturn A4(\n\t\t\t\t\t_Bytes_write_i32,\n\t\t\t\t\tmb,\n\t\t\t\t\toffset,\n\t\t\t\t\tn,\n\t\t\t\t\t_Utils_eq(e, $elm$bytes$Bytes$LE));\n\t\t\tcase 'U8':\n\t\t\t\tvar n = builder.a;\n\t\t\t\treturn A3(_Bytes_write_u8, mb, offset, n);\n\t\t\tcase 'U16':\n\t\t\t\tvar e = builder.a;\n\t\t\t\tvar n = builder.b;\n\t\t\t\treturn A4(\n\t\t\t\t\t_Bytes_write_u16,\n\t\t\t\t\tmb,\n\t\t\t\t\toffset,\n\t\t\t\t\tn,\n\t\t\t\t\t_Utils_eq(e, $elm$bytes$Bytes$LE));\n\t\t\tcase 'U32':\n\t\t\t\tvar e = builder.a;\n\t\t\t\tvar n = builder.b;\n\t\t\t\treturn A4(\n\t\t\t\t\t_Bytes_write_u32,\n\t\t\t\t\tmb,\n\t\t\t\t\toffset,\n\t\t\t\t\tn,\n\t\t\t\t\t_Utils_eq(e, $elm$bytes$Bytes$LE));\n\t\t\tcase 'F32':\n\t\t\t\tvar e = builder.a;\n\t\t\t\tvar n = builder.b;\n\t\t\t\treturn A4(\n\t\t\t\t\t_Bytes_write_f32,\n\t\t\t\t\tmb,\n\t\t\t\t\toffset,\n\t\t\t\t\tn,\n\t\t\t\t\t_Utils_eq(e, $elm$bytes$Bytes$LE));\n\t\t\tcase 'F64':\n\t\t\t\tvar e = builder.a;\n\t\t\t\tvar n = builder.b;\n\t\t\t\treturn A4(\n\t\t\t\t\t_Bytes_write_f64,\n\t\t\t\t\tmb,\n\t\t\t\t\toffset,\n\t\t\t\t\tn,\n\t\t\t\t\t_Utils_eq(e, $elm$bytes$Bytes$LE));\n\t\t\tcase 'Seq':\n\t\t\t\tvar bs = builder.b;\n\t\t\t\treturn A3($elm$bytes$Bytes$Encode$writeSequence, bs, mb, offset);\n\t\t\tcase 'Utf8':\n\t\t\t\tvar s = builder.b;\n\t\t\t\treturn A3(_Bytes_write_string, mb, offset, s);\n\t\t\tdefault:\n\t\t\t\tvar bs = builder.a;\n\t\t\t\treturn A3(_Bytes_write_bytes, mb, offset, bs);\n\t\t}\n\t});\nvar $elm$bytes$Bytes$Encode$writeSequence = F3(\n\tfunction (builders, mb, offset) {\n\t\twriteSequence:\n\t\twhile (true) {\n\t\t\tif (!builders.b) {\n\t\t\t\treturn offset;\n\t\t\t} else {\n\t\t\t\tvar b = builders.a;\n\t\t\t\tvar bs = builders.b;\n\t\t\t\tvar $temp$builders = bs,\n\t\t\t\t\t$temp$mb = mb,\n\t\t\t\t\t$temp$offset = A3($elm$bytes$Bytes$Encode$write, b, mb, offset);\n\t\t\t\tbuilders = $temp$builders;\n\t\t\t\tmb = $temp$mb;\n\t\t\t\toffset = $temp$offset;\n\t\t\t\tcontinue writeSequence;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$bytes$Bytes$Encode$encode = _Bytes_encode;\nvar $elm$core$Bitwise$and = _Bitwise_and;\nvar $elm$bytes$Bytes$Encode$Bytes = function (a) {\n\treturn {$: 'Bytes', a: a};\n};\nvar $elm$bytes$Bytes$Encode$bytes = $elm$bytes$Bytes$Encode$Bytes;\nvar $elm$bytes$Bytes$Encode$Seq = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Seq', a: a, b: b};\n\t});\nvar $elm$bytes$Bytes$Encode$getWidths = F2(\n\tfunction (width, builders) {\n\t\tgetWidths:\n\t\twhile (true) {\n\t\t\tif (!builders.b) {\n\t\t\t\treturn width;\n\t\t\t} else {\n\t\t\t\tvar b = builders.a;\n\t\t\t\tvar bs = builders.b;\n\t\t\t\tvar $temp$width = width + $elm$bytes$Bytes$Encode$getWidth(b),\n\t\t\t\t\t$temp$builders = bs;\n\t\t\t\twidth = $temp$width;\n\t\t\t\tbuilders = $temp$builders;\n\t\t\t\tcontinue getWidths;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$bytes$Bytes$Encode$sequence = function (builders) {\n\treturn A2(\n\t\t$elm$bytes$Bytes$Encode$Seq,\n\t\tA2($elm$bytes$Bytes$Encode$getWidths, 0, builders),\n\t\tbuilders);\n};\nvar $prozacchiwawa$elm_keccak$Keccak$concatBytesList = function (newPartial) {\n\treturn $elm$bytes$Bytes$Encode$encode(\n\t\t$elm$bytes$Bytes$Encode$sequence(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\t$elm$bytes$Bytes$Encode$bytes,\n\t\t\t\t$elm$core$List$reverse(newPartial))));\n};\nvar $elm$bytes$Bytes$Decode$decode = F2(\n\tfunction (_v0, bs) {\n\t\tvar decoder = _v0.a;\n\t\treturn A2(_Bytes_decode, decoder, bs);\n\t});\nvar $elm$bytes$Bytes$Decode$Done = function (a) {\n\treturn {$: 'Done', a: a};\n};\nvar $elm$bytes$Bytes$Decode$Loop = function (a) {\n\treturn {$: 'Loop', a: a};\n};\nvar $elm$bytes$Bytes$Decode$Decoder = function (a) {\n\treturn {$: 'Decoder', a: a};\n};\nvar $elm$bytes$Bytes$Decode$map = F2(\n\tfunction (func, _v0) {\n\t\tvar decodeA = _v0.a;\n\t\treturn $elm$bytes$Bytes$Decode$Decoder(\n\t\t\tF2(\n\t\t\t\tfunction (bites, offset) {\n\t\t\t\t\tvar _v1 = A2(decodeA, bites, offset);\n\t\t\t\t\tvar aOffset = _v1.a;\n\t\t\t\t\tvar a = _v1.b;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\taOffset,\n\t\t\t\t\t\tfunc(a));\n\t\t\t\t}));\n\t});\nvar $elm$bytes$Bytes$Decode$succeed = function (a) {\n\treturn $elm$bytes$Bytes$Decode$Decoder(\n\t\tF2(\n\t\t\tfunction (_v0, offset) {\n\t\t\t\treturn _Utils_Tuple2(offset, a);\n\t\t\t}));\n};\nvar $prozacchiwawa$elm_keccak$Keccak$listStep = F2(\n\tfunction (decoder, _v0) {\n\t\tvar n = _v0.a;\n\t\tvar xs = _v0.b;\n\t\treturn (n <= 0) ? $elm$bytes$Bytes$Decode$succeed(\n\t\t\t$elm$bytes$Bytes$Decode$Done(\n\t\t\t\t$elm$core$List$reverse(xs))) : A2(\n\t\t\t$elm$bytes$Bytes$Decode$map,\n\t\t\tfunction (x) {\n\t\t\t\treturn $elm$bytes$Bytes$Decode$Loop(\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\tn - 1,\n\t\t\t\t\t\tA2($elm$core$List$cons, x, xs)));\n\t\t\t},\n\t\t\tdecoder);\n\t});\nvar $elm$bytes$Bytes$Decode$loopHelp = F4(\n\tfunction (state, callback, bites, offset) {\n\t\tloopHelp:\n\t\twhile (true) {\n\t\t\tvar _v0 = callback(state);\n\t\t\tvar decoder = _v0.a;\n\t\t\tvar _v1 = A2(decoder, bites, offset);\n\t\t\tvar newOffset = _v1.a;\n\t\t\tvar step = _v1.b;\n\t\t\tif (step.$ === 'Loop') {\n\t\t\t\tvar newState = step.a;\n\t\t\t\tvar $temp$state = newState,\n\t\t\t\t\t$temp$callback = callback,\n\t\t\t\t\t$temp$bites = bites,\n\t\t\t\t\t$temp$offset = newOffset;\n\t\t\t\tstate = $temp$state;\n\t\t\t\tcallback = $temp$callback;\n\t\t\t\tbites = $temp$bites;\n\t\t\t\toffset = $temp$offset;\n\t\t\t\tcontinue loopHelp;\n\t\t\t} else {\n\t\t\t\tvar result = step.a;\n\t\t\t\treturn _Utils_Tuple2(newOffset, result);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$bytes$Bytes$Decode$loop = F2(\n\tfunction (state, callback) {\n\t\treturn $elm$bytes$Bytes$Decode$Decoder(\n\t\t\tA2($elm$bytes$Bytes$Decode$loopHelp, state, callback));\n\t});\nvar $elm$bytes$Bytes$Decode$unsignedInt8 = $elm$bytes$Bytes$Decode$Decoder(_Bytes_read_u8);\nvar $elm$bytes$Bytes$width = _Bytes_width;\nvar $prozacchiwawa$elm_keccak$Keccak$intListOfBytes = function (b) {\n\treturn A2(\n\t\t$elm$core$Maybe$withDefault,\n\t\t_List_Nil,\n\t\tA2(\n\t\t\t$elm$bytes$Bytes$Decode$decode,\n\t\t\tA2(\n\t\t\t\t$elm$bytes$Bytes$Decode$loop,\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t$elm$bytes$Bytes$width(b),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$listStep($elm$bytes$Bytes$Decode$unsignedInt8)),\n\t\t\tb));\n};\nvar $prozacchiwawa$elm_keccak$Keccak$tupleMap2 = F3(\n\tfunction (f, _v0, _v1) {\n\t\tvar a1 = _v0.a;\n\t\tvar b1 = _v0.b;\n\t\tvar a2 = _v1.a;\n\t\tvar b2 = _v1.b;\n\t\treturn _Utils_Tuple2(\n\t\t\tA2(f, a1, a2),\n\t\t\tA2(f, b1, b2));\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$and64 = F2(\n\tfunction (a, b) {\n\t\treturn A3($prozacchiwawa$elm_keccak$Keccak$tupleMap2, $elm$core$Bitwise$and, a, b);\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$five = A2($elm$core$List$range, 0, 4);\nvar $prozacchiwawa$elm_keccak$Keccak$gd = F2(\n\tfunction (n, _v0) {\n\t\tvar d0 = _v0.d0;\n\t\tvar d1 = _v0.d1;\n\t\tvar d2 = _v0.d2;\n\t\tvar d3 = _v0.d3;\n\t\tvar d4 = _v0.d4;\n\t\tswitch (n) {\n\t\t\tcase 0:\n\t\t\t\treturn d0;\n\t\t\tcase 1:\n\t\t\t\treturn d1;\n\t\t\tcase 2:\n\t\t\t\treturn d2;\n\t\t\tcase 3:\n\t\t\t\treturn d3;\n\t\t\tdefault:\n\t\t\t\treturn d4;\n\t\t}\n\t});\nvar $elm$core$Bitwise$complement = _Bitwise_complement;\nvar $prozacchiwawa$elm_keccak$Keccak$elementMask = 4294967295;\nvar $prozacchiwawa$elm_keccak$Keccak$tupleMap = F2(\n\tfunction (f, _v0) {\n\t\tvar a = _v0.a;\n\t\tvar b = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\tf(a),\n\t\t\tf(b));\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$inv64 = function (a) {\n\treturn A2(\n\t\t$prozacchiwawa$elm_keccak$Keccak$tupleMap,\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$elm$core$Bitwise$complement,\n\t\t\t$elm$core$Bitwise$and($prozacchiwawa$elm_keccak$Keccak$elementMask)),\n\t\ta);\n};\nvar $elm$core$Basics$modBy = _Basics_modBy;\nvar $prozacchiwawa$elm_keccak$Keccak$iPerm = F2(\n\tfunction (x, y) {\n\t\treturn (5 * y) + x;\n\t});\nvar $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar $elm$core$Array$bitMask = 4294967295 >>> (32 - $elm$core$Array$shiftStep);\nvar $elm$core$Basics$ge = _Utils_ge;\nvar $elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;\nvar $elm$core$Array$getHelp = F3(\n\tfunction (shift, index, tree) {\n\t\tgetHelp:\n\t\twhile (true) {\n\t\t\tvar pos = $elm$core$Array$bitMask & (index >>> shift);\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (_v0.$ === 'SubTree') {\n\t\t\t\tvar subTree = _v0.a;\n\t\t\t\tvar $temp$shift = shift - $elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$index = index,\n\t\t\t\t\t$temp$tree = subTree;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tindex = $temp$index;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue getHelp;\n\t\t\t} else {\n\t\t\t\tvar values = _v0.a;\n\t\t\t\treturn A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, values);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar $elm$core$Array$tailIndex = function (len) {\n\treturn (len >>> 5) << 5;\n};\nvar $elm$core$Array$get = F2(\n\tfunction (index, _v0) {\n\t\tvar len = _v0.a;\n\t\tvar startShift = _v0.b;\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? $elm$core$Maybe$Nothing : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\t$elm$core$Array$tailIndex(len)) > -1) ? $elm$core$Maybe$Just(\n\t\t\tA2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, tail)) : $elm$core$Maybe$Just(\n\t\t\tA3($elm$core$Array$getHelp, startShift, index, tree)));\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$load64 = F2(\n\tfunction (off, arr) {\n\t\tvar _v0 = A2($elm$core$Array$get, off, arr);\n\t\tif (_v0.$ === 'Just') {\n\t\t\tvar a = _v0.a;\n\t\t\treturn a;\n\t\t} else {\n\t\t\treturn _Utils_Tuple2(0, 0);\n\t\t}\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$readLane = F3(\n\tfunction (x, y, state) {\n\t\tvar off = A2($prozacchiwawa$elm_keccak$Keccak$iPerm, x, y);\n\t\treturn A2($prozacchiwawa$elm_keccak$Keccak$load64, off, state);\n\t});\nvar $elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;\nvar $elm$core$Array$setHelp = F4(\n\tfunction (shift, index, value, tree) {\n\t\tvar pos = $elm$core$Array$bitMask & (index >>> shift);\n\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\tif (_v0.$ === 'SubTree') {\n\t\t\tvar subTree = _v0.a;\n\t\t\tvar newSub = A4($elm$core$Array$setHelp, shift - $elm$core$Array$shiftStep, index, value, subTree);\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\t$elm$core$Array$SubTree(newSub),\n\t\t\t\ttree);\n\t\t} else {\n\t\t\tvar values = _v0.a;\n\t\t\tvar newLeaf = A3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, values);\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\t$elm$core$Array$Leaf(newLeaf),\n\t\t\t\ttree);\n\t\t}\n\t});\nvar $elm$core$Array$set = F3(\n\tfunction (index, value, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\t$elm$core$Array$tailIndex(len)) > -1) ? A4(\n\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\ttree,\n\t\t\tA3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, tail)) : A4(\n\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA4($elm$core$Array$setHelp, startShift, index, value, tree),\n\t\t\ttail));\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$store64 = F3(\n\tfunction (off, v, arr) {\n\t\treturn A3($elm$core$Array$set, off, v, arr);\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$writeLane = F4(\n\tfunction (x, y, lane, state) {\n\t\tvar off = A2($prozacchiwawa$elm_keccak$Keccak$iPerm, x, y);\n\t\treturn A3($prozacchiwawa$elm_keccak$Keccak$store64, off, lane, state);\n\t});\nvar $elm$core$Bitwise$xor = _Bitwise_xor;\nvar $prozacchiwawa$elm_keccak$Keccak$xor64 = F2(\n\tfunction (v, arr) {\n\t\treturn A3($prozacchiwawa$elm_keccak$Keccak$tupleMap2, $elm$core$Bitwise$xor, v, arr);\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$chi = function (ss) {\n\tvar newState = A3(\n\t\t$elm$core$List$foldr,\n\t\tF2(\n\t\t\tfunction (y, state) {\n\t\t\t\tvar temp = {\n\t\t\t\t\td0: A3($prozacchiwawa$elm_keccak$Keccak$readLane, 0, y, ss.state),\n\t\t\t\t\td1: A3($prozacchiwawa$elm_keccak$Keccak$readLane, 1, y, ss.state),\n\t\t\t\t\td2: A3($prozacchiwawa$elm_keccak$Keccak$readLane, 2, y, ss.state),\n\t\t\t\t\td3: A3($prozacchiwawa$elm_keccak$Keccak$readLane, 3, y, ss.state),\n\t\t\t\t\td4: A3($prozacchiwawa$elm_keccak$Keccak$readLane, 4, y, ss.state)\n\t\t\t\t};\n\t\t\t\tvar yupdate = F2(\n\t\t\t\t\tfunction (x, state_) {\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$writeLane,\n\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$xor64,\n\t\t\t\t\t\t\t\tA2($prozacchiwawa$elm_keccak$Keccak$gd, x, temp),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$and64,\n\t\t\t\t\t\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$inv64(\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$gd,\n\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$Basics$modBy, 5, x + 1),\n\t\t\t\t\t\t\t\t\t\t\ttemp)),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$gd,\n\t\t\t\t\t\t\t\t\t\tA2($elm$core$Basics$modBy, 5, x + 2),\n\t\t\t\t\t\t\t\t\t\ttemp))),\n\t\t\t\t\t\t\tstate_);\n\t\t\t\t\t});\n\t\t\t\treturn A2(\n\t\t\t\t\tyupdate,\n\t\t\t\t\t4,\n\t\t\t\t\tA2(\n\t\t\t\t\t\tyupdate,\n\t\t\t\t\t\t3,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tyupdate,\n\t\t\t\t\t\t\t2,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tyupdate,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\tA2(yupdate, 0, state)))));\n\t\t\t}),\n\t\tss.state,\n\t\t$prozacchiwawa$elm_keccak$Keccak$five);\n\treturn _Utils_update(\n\t\tss,\n\t\t{state: newState});\n};\nvar $prozacchiwawa$elm_keccak$Keccak$zero = _Utils_Tuple2(0, 0);\nvar $prozacchiwawa$elm_keccak$Keccak$initRound = function (state) {\n\treturn {current: $prozacchiwawa$elm_keccak$Keccak$zero, lfsrstate: 1, state: state, x: 1, y: 0};\n};\nvar $elm$core$Basics$neq = _Utils_notEqual;\nvar $prozacchiwawa$elm_keccak$Keccak$lfsr86540 = function (lfsr) {\n\tvar result = !(!(lfsr & 1));\n\treturn (!(!(lfsr & 128))) ? _Utils_Tuple2(result, (lfsr << 1) ^ 113) : _Utils_Tuple2(result, lfsr << 1);\n};\nvar $prozacchiwawa$elm_keccak$Keccak$one = _Utils_Tuple2(1, 0);\nvar $prozacchiwawa$elm_keccak$Keccak$bitsPerElement = 32;\nvar $elm$core$Bitwise$or = _Bitwise_or;\nvar $prozacchiwawa$elm_keccak$Keccak$rolbytes = F2(\n\tfunction (n, _v0) {\n\t\tvar va = _v0.a;\n\t\tvar vb = _v0.b;\n\t\treturn (!n) ? _Utils_Tuple2(va, vb) : _Utils_Tuple2(vb, va);\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$rolbits = F2(\n\tfunction (n, v) {\n\t\tif (!n) {\n\t\t\treturn v;\n\t\t} else {\n\t\t\tvar oneRotated = A2($prozacchiwawa$elm_keccak$Keccak$rolbytes, 1, v);\n\t\t\treturn A3(\n\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$tupleMap2,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (a, b) {\n\t\t\t\t\t\treturn $prozacchiwawa$elm_keccak$Keccak$elementMask & ((a << n) | (b >>> ($prozacchiwawa$elm_keccak$Keccak$bitsPerElement - n)));\n\t\t\t\t\t}),\n\t\t\t\tv,\n\t\t\t\toneRotated);\n\t\t}\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$rol64 = F2(\n\tfunction (n, v) {\n\t\tvar rby = A2($elm$core$Basics$modBy, $prozacchiwawa$elm_keccak$Keccak$bitsPerElement, (n / $prozacchiwawa$elm_keccak$Keccak$bitsPerElement) | 0);\n\t\tvar rotated = A2($prozacchiwawa$elm_keccak$Keccak$rolbytes, rby, v);\n\t\tvar rbi = A2($elm$core$Basics$modBy, $prozacchiwawa$elm_keccak$Keccak$bitsPerElement, n);\n\t\treturn A2($prozacchiwawa$elm_keccak$Keccak$rolbits, rbi, rotated);\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$updateArray = F3(\n\tfunction (n, f, a) {\n\t\tvar element = A2($elm$core$Array$get, n, a);\n\t\tif (element.$ === 'Nothing') {\n\t\t\treturn a;\n\t\t} else {\n\t\t\tvar element_ = element.a;\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Array$set,\n\t\t\t\tn,\n\t\t\t\tf(element_),\n\t\t\t\ta);\n\t\t}\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$storexor64 = F3(\n\tfunction (off, v, arr) {\n\t\treturn A3(\n\t\t\t$prozacchiwawa$elm_keccak$Keccak$updateArray,\n\t\t\toff,\n\t\t\t$prozacchiwawa$elm_keccak$Keccak$xor64(v),\n\t\t\tarr);\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$xorLane = F4(\n\tfunction (x, y, lane, state) {\n\t\tvar off = A2($prozacchiwawa$elm_keccak$Keccak$iPerm, x, y);\n\t\treturn A3($prozacchiwawa$elm_keccak$Keccak$storexor64, off, lane, state);\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$iota = function (ss) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (j, ss_) {\n\t\t\t\tvar bitPosition = (1 << j) - 1;\n\t\t\t\tvar _v0 = $prozacchiwawa$elm_keccak$Keccak$lfsr86540(ss_.lfsrstate);\n\t\t\t\tvar o = _v0.a;\n\t\t\t\tvar lfsr = _v0.b;\n\t\t\t\treturn o ? _Utils_update(\n\t\t\t\t\tss_,\n\t\t\t\t\t{\n\t\t\t\t\t\tlfsrstate: lfsr,\n\t\t\t\t\t\tstate: A4(\n\t\t\t\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$xorLane,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tA2($prozacchiwawa$elm_keccak$Keccak$rol64, bitPosition, $prozacchiwawa$elm_keccak$Keccak$one),\n\t\t\t\t\t\t\tss_.state)\n\t\t\t\t\t}) : _Utils_update(\n\t\t\t\t\tss_,\n\t\t\t\t\t{lfsrstate: lfsr});\n\t\t\t}),\n\t\tss,\n\t\tA2($elm$core$List$range, 0, 6));\n};\nvar $prozacchiwawa$elm_keccak$Keccak$twentyThree = A2($elm$core$List$range, 0, 23);\nvar $prozacchiwawa$elm_keccak$Keccak$rhoPi = function (ss) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (t, ss_) {\n\t\t\t\tvar yy = A2($elm$core$Basics$modBy, 5, (2 * ss_.x) + (3 * ss_.y));\n\t\t\t\tvar r = A2($elm$core$Basics$modBy, 64, (((t + 1) * (t + 2)) / 2) | 0);\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tss_,\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent: A3($prozacchiwawa$elm_keccak$Keccak$readLane, ss_.y, yy, ss_.state),\n\t\t\t\t\t\tstate: A4(\n\t\t\t\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$writeLane,\n\t\t\t\t\t\t\tss_.y,\n\t\t\t\t\t\t\tyy,\n\t\t\t\t\t\t\tA2($prozacchiwawa$elm_keccak$Keccak$rol64, r, ss_.current),\n\t\t\t\t\t\t\tss_.state),\n\t\t\t\t\t\tx: ss_.y,\n\t\t\t\t\t\ty: yy\n\t\t\t\t\t});\n\t\t\t}),\n\t\t_Utils_update(\n\t\t\tss,\n\t\t\t{\n\t\t\t\tcurrent: A3($prozacchiwawa$elm_keccak$Keccak$readLane, 1, 0, ss.state),\n\t\t\t\tx: 1,\n\t\t\t\ty: 0\n\t\t\t}),\n\t\t$prozacchiwawa$elm_keccak$Keccak$twentyThree);\n};\nvar $prozacchiwawa$elm_keccak$Keccak$cInitX = F2(\n\tfunction (x, state) {\n\t\treturn A2(\n\t\t\t$prozacchiwawa$elm_keccak$Keccak$xor64,\n\t\t\tA3($prozacchiwawa$elm_keccak$Keccak$readLane, x, 0, state),\n\t\t\tA2(\n\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$xor64,\n\t\t\t\tA3($prozacchiwawa$elm_keccak$Keccak$readLane, x, 1, state),\n\t\t\t\tA2(\n\t\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$xor64,\n\t\t\t\t\tA3($prozacchiwawa$elm_keccak$Keccak$readLane, x, 2, state),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$xor64,\n\t\t\t\t\t\tA3($prozacchiwawa$elm_keccak$Keccak$readLane, x, 3, state),\n\t\t\t\t\t\tA3($prozacchiwawa$elm_keccak$Keccak$readLane, x, 4, state)))));\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$twentyFive = A2($elm$core$List$range, 0, 25);\nvar $prozacchiwawa$elm_keccak$Keccak$theta = function (ss) {\n\tvar d = function (x) {\n\t\tvar c4 = A2(\n\t\t\t$prozacchiwawa$elm_keccak$Keccak$cInitX,\n\t\t\tA2($elm$core$Basics$modBy, 5, x + 4),\n\t\t\tss.state);\n\t\tvar c1 = A2(\n\t\t\t$prozacchiwawa$elm_keccak$Keccak$cInitX,\n\t\t\tA2($elm$core$Basics$modBy, 5, x + 1),\n\t\t\tss.state);\n\t\treturn A2(\n\t\t\t$prozacchiwawa$elm_keccak$Keccak$xor64,\n\t\t\tc4,\n\t\t\tA2($prozacchiwawa$elm_keccak$Keccak$rol64, 1, c1));\n\t};\n\tvar dx = {\n\t\td0: d(0),\n\t\td1: d(1),\n\t\td2: d(2),\n\t\td3: d(3),\n\t\td4: d(4)\n\t};\n\tvar sd = A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (n, state) {\n\t\t\t\tvar x = A2($elm$core$Basics$modBy, 5, n);\n\t\t\t\tvar y = (n / 5) | 0;\n\t\t\t\treturn A4(\n\t\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$xorLane,\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\tA2($prozacchiwawa$elm_keccak$Keccak$gd, x, dx),\n\t\t\t\t\tstate);\n\t\t\t}),\n\t\tss.state,\n\t\t$prozacchiwawa$elm_keccak$Keccak$twentyFive);\n\treturn _Utils_update(\n\t\tss,\n\t\t{state: sd});\n};\nvar $prozacchiwawa$elm_keccak$Keccak$keccakF1600_StatePermute = function (state) {\n\tvar res = A3(\n\t\t$elm$core$List$foldr,\n\t\tfunction (_v0) {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$theta,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$rhoPi,\n\t\t\t\t\tA2($elm$core$Basics$composeR, $prozacchiwawa$elm_keccak$Keccak$chi, $prozacchiwawa$elm_keccak$Keccak$iota)));\n\t\t},\n\t\t$prozacchiwawa$elm_keccak$Keccak$initRound(state),\n\t\t$prozacchiwawa$elm_keccak$Keccak$twentyThree);\n\treturn res.state;\n};\nvar $elm$core$Basics$min = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) < 0) ? x : y;\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$bytesPerElement = ($prozacchiwawa$elm_keccak$Keccak$bitsPerElement / 8) | 0;\nvar $elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;\nvar $prozacchiwawa$elm_keccak$Keccak$retrieveOutputByte = F2(\n\tfunction (i, arr) {\n\t\tvar shift = 8 * A2($elm$core$Basics$modBy, $prozacchiwawa$elm_keccak$Keccak$bytesPerElement, i);\n\t\tvar e = A2($elm$core$Basics$modBy, 2, (i / $prozacchiwawa$elm_keccak$Keccak$bytesPerElement) | 0);\n\t\tvar _v0 = A2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t_Utils_Tuple2(0, 0),\n\t\t\tA2($elm$core$Array$get, (i / 8) | 0, arr));\n\t\tvar ea = _v0.a;\n\t\tvar eb = _v0.b;\n\t\tvar byi = (!e) ? ea : eb;\n\t\treturn 255 & (byi >> shift);\n\t});\nvar $elm$core$List$takeReverse = F3(\n\tfunction (n, list, kept) {\n\t\ttakeReverse:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn kept;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn kept;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs,\n\t\t\t\t\t\t$temp$kept = A2($elm$core$List$cons, x, kept);\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tkept = $temp$kept;\n\t\t\t\t\tcontinue takeReverse;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$takeTailRec = F2(\n\tfunction (n, list) {\n\t\treturn $elm$core$List$reverse(\n\t\t\tA3($elm$core$List$takeReverse, n, list, _List_Nil));\n\t});\nvar $elm$core$List$takeFast = F3(\n\tfunction (ctr, n, list) {\n\t\tif (n <= 0) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar _v0 = _Utils_Tuple2(n, list);\n\t\t\t_v0$1:\n\t\t\twhile (true) {\n\t\t\t\t_v0$5:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\t\treturn list;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_v0.b.b.b) {\n\t\t\t\t\t\t\tswitch (_v0.a) {\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tbreak _v0$1;\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tvar _v2 = _v0.b;\n\t\t\t\t\t\t\t\t\tvar x = _v2.a;\n\t\t\t\t\t\t\t\t\tvar _v3 = _v2.b;\n\t\t\t\t\t\t\t\t\tvar y = _v3.a;\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[x, y]);\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tif (_v0.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _v4 = _v0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _v4.a;\n\t\t\t\t\t\t\t\t\t\tvar _v5 = _v4.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _v5.a;\n\t\t\t\t\t\t\t\t\t\tvar _v6 = _v5.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _v6.a;\n\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[x, y, z]);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tif (_v0.b.b.b.b && _v0.b.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _v7 = _v0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _v7.a;\n\t\t\t\t\t\t\t\t\t\tvar _v8 = _v7.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _v8.a;\n\t\t\t\t\t\t\t\t\t\tvar _v9 = _v8.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _v9.a;\n\t\t\t\t\t\t\t\t\t\tvar _v10 = _v9.b;\n\t\t\t\t\t\t\t\t\t\tvar w = _v10.a;\n\t\t\t\t\t\t\t\t\t\tvar tl = _v10.b;\n\t\t\t\t\t\t\t\t\t\treturn (ctr > 1000) ? A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$takeTailRec, n - 4, tl))))) : A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_v0.a === 1) {\n\t\t\t\t\t\t\t\tbreak _v0$1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _v0$5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\tvar _v1 = _v0.b;\n\t\t\tvar x = _v1.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[x]);\n\t\t}\n\t});\nvar $elm$core$List$take = F2(\n\tfunction (n, list) {\n\t\treturn A3($elm$core$List$takeFast, 0, n, list);\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$xorFromByte = F3(\n\tfunction (shift, sel, by) {\n\t\treturn (!sel) ? _Utils_Tuple2(by << shift, 0) : _Utils_Tuple2(0, by << shift);\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$xorByteIntoState = F3(\n\tfunction (i, v, state) {\n\t\tvar shift = 8 * A2($elm$core$Basics$modBy, $prozacchiwawa$elm_keccak$Keccak$bytesPerElement, i);\n\t\tvar e = A2($elm$core$Basics$modBy, 2, (i / $prozacchiwawa$elm_keccak$Keccak$bytesPerElement) | 0);\n\t\tvar newElt = A3($prozacchiwawa$elm_keccak$Keccak$xorFromByte, shift, e, v);\n\t\treturn A3($prozacchiwawa$elm_keccak$Keccak$storexor64, (i / 8) | 0, newElt, state);\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$xorIntoState = F2(\n\tfunction (block, state) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_v0, s) {\n\t\t\t\t\tvar i = _v0.a;\n\t\t\t\t\tvar e = _v0.b;\n\t\t\t\t\treturn A3($prozacchiwawa$elm_keccak$Keccak$xorByteIntoState, i, e, s);\n\t\t\t\t}),\n\t\t\tstate,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$indexedMap,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (i, e) {\n\t\t\t\t\t\treturn _Utils_Tuple2(i, e);\n\t\t\t\t\t}),\n\t\t\t\tblock));\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$finish = function (_v0) {\n\tvar state = _v0.a;\n\tvar rateInBytes = (state.config.rate / 8) | 0;\n\tvar inputLength = state.inputLength;\n\tvar config = state.config;\n\tvar concat = $prozacchiwawa$elm_keccak$Keccak$concatBytesList(state.partial);\n\tvar inb = $prozacchiwawa$elm_keccak$Keccak$intListOfBytes(concat);\n\tvar s1 = A2($prozacchiwawa$elm_keccak$Keccak$xorIntoState, inb, state.state);\n\tvar blockSize = (!inputLength) ? 0 : ((!A2($elm$core$Basics$modBy, rateInBytes, inputLength)) ? rateInBytes : A2($elm$core$Basics$modBy, rateInBytes, inputLength));\n\tif (((config.rate + config.capacity) !== 1600) || (!(!A2($elm$core$Basics$modBy, 8, config.rate)))) {\n\t\treturn _List_Nil;\n\t} else {\n\t\tvar state1 = A3($prozacchiwawa$elm_keccak$Keccak$xorByteIntoState, blockSize, config.delSuffix, s1);\n\t\tvar state2 = ((!(!(config.delSuffix & 128))) && _Utils_eq(blockSize, rateInBytes - 1)) ? $prozacchiwawa$elm_keccak$Keccak$keccakF1600_StatePermute(state1) : state1;\n\t\tvar state3 = A3($prozacchiwawa$elm_keccak$Keccak$xorByteIntoState, rateInBytes - 1, 128, state2);\n\t\tvar state4 = $prozacchiwawa$elm_keccak$Keccak$keccakF1600_StatePermute(state3);\n\t\tvar processRemainingOutput = F3(\n\t\t\tfunction (state_, output_, outputByteLen) {\n\t\t\t\tprocessRemainingOutput:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (outputByteLen > 0) {\n\t\t\t\t\t\tvar blockSize_ = A2($elm$core$Basics$min, outputByteLen, rateInBytes);\n\t\t\t\t\t\tvar outputBytes = A2(\n\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\tfunction (i) {\n\t\t\t\t\t\t\t\treturn A2($prozacchiwawa$elm_keccak$Keccak$retrieveOutputByte, i, state4);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tA2($elm$core$List$range, 0, blockSize_));\n\t\t\t\t\t\tvar $temp$state_ = $prozacchiwawa$elm_keccak$Keccak$keccakF1600_StatePermute(state_),\n\t\t\t\t\t\t\t$temp$output_ = _Utils_ap(output_, outputBytes),\n\t\t\t\t\t\t\t$temp$outputByteLen = outputByteLen - blockSize_;\n\t\t\t\t\t\tstate_ = $temp$state_;\n\t\t\t\t\t\toutput_ = $temp$output_;\n\t\t\t\t\t\toutputByteLen = $temp$outputByteLen;\n\t\t\t\t\t\tcontinue processRemainingOutput;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn output_;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\treturn A2(\n\t\t\t$elm$core$List$take,\n\t\t\tconfig.outputLen,\n\t\t\tA3(processRemainingOutput, state4, _List_Nil, config.outputLen));\n\t}\n};\nvar $prozacchiwawa$elm_keccak$Keccak$KS = function (a) {\n\treturn {$: 'KS', a: a};\n};\nvar $prozacchiwawa$elm_keccak$Keccak$init = function (_v0) {\n\tvar config = _v0.a;\n\treturn $prozacchiwawa$elm_keccak$Keccak$KS(\n\t\t{\n\t\t\tconfig: config,\n\t\t\tinputLength: 0,\n\t\t\tpartial: _List_Nil,\n\t\t\tstate: A2(\n\t\t\t\t$elm$core$Array$initialize,\n\t\t\t\t25,\n\t\t\t\t$elm$core$Basics$always($prozacchiwawa$elm_keccak$Keccak$zero))\n\t\t});\n};\nvar $elm$bytes$Bytes$Encode$U8 = function (a) {\n\treturn {$: 'U8', a: a};\n};\nvar $elm$bytes$Bytes$Encode$unsignedInt8 = $elm$bytes$Bytes$Encode$U8;\nvar $elm$bytes$Bytes$Decode$bytes = function (n) {\n\treturn $elm$bytes$Bytes$Decode$Decoder(\n\t\t_Bytes_read_bytes(n));\n};\nvar $prozacchiwawa$elm_keccak$Keccak$emptyBytes = $elm$bytes$Bytes$Encode$encode(\n\t$elm$bytes$Bytes$Encode$sequence(_List_Nil));\nvar $elm$bytes$Bytes$Decode$andThen = F2(\n\tfunction (callback, _v0) {\n\t\tvar decodeA = _v0.a;\n\t\treturn $elm$bytes$Bytes$Decode$Decoder(\n\t\t\tF2(\n\t\t\t\tfunction (bites, offset) {\n\t\t\t\t\tvar _v1 = A2(decodeA, bites, offset);\n\t\t\t\t\tvar newOffset = _v1.a;\n\t\t\t\t\tvar a = _v1.b;\n\t\t\t\t\tvar _v2 = callback(a);\n\t\t\t\t\tvar decodeB = _v2.a;\n\t\t\t\t\treturn A2(decodeB, bites, newOffset);\n\t\t\t\t}));\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$restOfBytesDecoder = F2(\n\tfunction (n, m) {\n\t\treturn A2(\n\t\t\t$elm$bytes$Bytes$Decode$andThen,\n\t\t\tfunction (x) {\n\t\t\t\treturn $elm$bytes$Bytes$Decode$bytes(m);\n\t\t\t},\n\t\t\t$elm$bytes$Bytes$Decode$bytes(n));\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$restOfBytes = F2(\n\tfunction (n, b) {\n\t\treturn A2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t$prozacchiwawa$elm_keccak$Keccak$emptyBytes,\n\t\t\tA2(\n\t\t\t\t$elm$bytes$Bytes$Decode$decode,\n\t\t\t\tA2(\n\t\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$restOfBytesDecoder,\n\t\t\t\t\tn,\n\t\t\t\t\t$elm$bytes$Bytes$width(b) - n),\n\t\t\t\tb));\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$update = F2(\n\tfunction (b, _v0) {\n\t\tupdate:\n\t\twhile (true) {\n\t\t\tvar state = _v0.a;\n\t\t\tvar rateInBytes = (state.config.rate / 8) | 0;\n\t\t\tvar newPartial = (!$elm$bytes$Bytes$width(b)) ? state.partial : A2($elm$core$List$cons, b, state.partial);\n\t\t\tvar storedBytes = A3(\n\t\t\t\t$elm$core$List$foldl,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (bs, s) {\n\t\t\t\t\t\treturn s + $elm$bytes$Bytes$width(bs);\n\t\t\t\t\t}),\n\t\t\t\t0,\n\t\t\t\tnewPartial);\n\t\t\tif (_Utils_cmp(storedBytes, rateInBytes) > -1) {\n\t\t\t\tvar concat = $prozacchiwawa$elm_keccak$Keccak$concatBytesList(newPartial);\n\t\t\t\tvar first = A2(\n\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$emptyBytes,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$bytes$Bytes$Decode$decode,\n\t\t\t\t\t\t$elm$bytes$Bytes$Decode$bytes(rateInBytes),\n\t\t\t\t\t\tconcat));\n\t\t\t\tvar inb = $prozacchiwawa$elm_keccak$Keccak$intListOfBytes(first);\n\t\t\t\tvar s1 = A2($prozacchiwawa$elm_keccak$Keccak$xorIntoState, inb, state.state);\n\t\t\t\tvar s2 = $prozacchiwawa$elm_keccak$Keccak$keccakF1600_StatePermute(s1);\n\t\t\t\tvar rest = A2($prozacchiwawa$elm_keccak$Keccak$restOfBytes, rateInBytes, concat);\n\t\t\t\tvar $temp$b = $prozacchiwawa$elm_keccak$Keccak$emptyBytes,\n\t\t\t\t\t$temp$_v0 = $prozacchiwawa$elm_keccak$Keccak$KS(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinputLength: $elm$bytes$Bytes$width(b) + state.inputLength,\n\t\t\t\t\t\t\tpartial: _List_fromArray(\n\t\t\t\t\t\t\t\t[rest]),\n\t\t\t\t\t\t\tstate: s2\n\t\t\t\t\t\t}));\n\t\t\t\tb = $temp$b;\n\t\t\t\t_v0 = $temp$_v0;\n\t\t\t\tcontinue update;\n\t\t\t} else {\n\t\t\t\treturn $prozacchiwawa$elm_keccak$Keccak$KS(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinputLength: $elm$bytes$Bytes$width(b) + state.inputLength,\n\t\t\t\t\t\t\tpartial: newPartial\n\t\t\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$Int$keccak = F2(\n\tfunction (config, ints) {\n\t\treturn $prozacchiwawa$elm_keccak$Keccak$finish(\n\t\t\tA2(\n\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$update,\n\t\t\t\t$elm$bytes$Bytes$Encode$encode(\n\t\t\t\t\t$elm$bytes$Bytes$Encode$sequence(\n\t\t\t\t\t\tA2($elm$core$List$map, $elm$bytes$Bytes$Encode$unsignedInt8, ints))),\n\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$init(config)));\n\t});\nvar $prozacchiwawa$elm_keccak$Keccak$Int$ethereum_keccak_256 = $prozacchiwawa$elm_keccak$Keccak$Int$keccak($prozacchiwawa$elm_keccak$Keccak$ethereum_keccak_256);\nvar $elm$core$String$cons = _String_cons;\nvar $elm$core$String$fromChar = function (_char) {\n\treturn A2($elm$core$String$cons, _char, '');\n};\nvar $elm$core$Basics$pow = _Basics_pow;\nvar $rtfeldman$elm_hex$Hex$fromStringHelp = F3(\n\tfunction (position, chars, accumulated) {\n\t\tfromStringHelp:\n\t\twhile (true) {\n\t\t\tif (!chars.b) {\n\t\t\t\treturn $elm$core$Result$Ok(accumulated);\n\t\t\t} else {\n\t\t\t\tvar _char = chars.a;\n\t\t\t\tvar rest = chars.b;\n\t\t\t\tswitch (_char.valueOf()) {\n\t\t\t\t\tcase '0':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated;\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tcase '1':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated + A2($elm$core$Basics$pow, 16, position);\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tcase '2':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated + (2 * A2($elm$core$Basics$pow, 16, position));\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tcase '3':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated + (3 * A2($elm$core$Basics$pow, 16, position));\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tcase '4':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated + (4 * A2($elm$core$Basics$pow, 16, position));\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tcase '5':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated + (5 * A2($elm$core$Basics$pow, 16, position));\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tcase '6':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated + (6 * A2($elm$core$Basics$pow, 16, position));\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tcase '7':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated + (7 * A2($elm$core$Basics$pow, 16, position));\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tcase '8':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated + (8 * A2($elm$core$Basics$pow, 16, position));\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tcase '9':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated + (9 * A2($elm$core$Basics$pow, 16, position));\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tcase 'a':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated + (10 * A2($elm$core$Basics$pow, 16, position));\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated + (11 * A2($elm$core$Basics$pow, 16, position));\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated + (12 * A2($elm$core$Basics$pow, 16, position));\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated + (13 * A2($elm$core$Basics$pow, 16, position));\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tcase 'e':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated + (14 * A2($elm$core$Basics$pow, 16, position));\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tvar $temp$position = position - 1,\n\t\t\t\t\t\t\t$temp$chars = rest,\n\t\t\t\t\t\t\t$temp$accumulated = accumulated + (15 * A2($elm$core$Basics$pow, 16, position));\n\t\t\t\t\t\tposition = $temp$position;\n\t\t\t\t\t\tchars = $temp$chars;\n\t\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\t\tcontinue fromStringHelp;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar nonHex = _char;\n\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t$elm$core$String$fromChar(nonHex) + ' is not a valid hexadecimal character.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Result$map = F2(\n\tfunction (func, ra) {\n\t\tif (ra.$ === 'Ok') {\n\t\t\tvar a = ra.a;\n\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\tfunc(a));\n\t\t} else {\n\t\t\tvar e = ra.a;\n\t\t\treturn $elm$core$Result$Err(e);\n\t\t}\n\t});\nvar $elm$core$Result$mapError = F2(\n\tfunction (f, result) {\n\t\tif (result.$ === 'Ok') {\n\t\t\tvar v = result.a;\n\t\t\treturn $elm$core$Result$Ok(v);\n\t\t} else {\n\t\t\tvar e = result.a;\n\t\t\treturn $elm$core$Result$Err(\n\t\t\t\tf(e));\n\t\t}\n\t});\nvar $elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar $elm$core$List$tail = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn $elm$core$Maybe$Just(xs);\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $elm$core$String$foldr = _String_foldr;\nvar $elm$core$String$toList = function (string) {\n\treturn A3($elm$core$String$foldr, $elm$core$List$cons, _List_Nil, string);\n};\nvar $rtfeldman$elm_hex$Hex$fromString = function (str) {\n\tif ($elm$core$String$isEmpty(str)) {\n\t\treturn $elm$core$Result$Err('Empty strings are not valid hexadecimal strings.');\n\t} else {\n\t\tvar result = function () {\n\t\t\tif (A2($elm$core$String$startsWith, '-', str)) {\n\t\t\t\tvar list = A2(\n\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t$elm$core$List$tail(\n\t\t\t\t\t\t$elm$core$String$toList(str)));\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t$elm$core$Basics$negate,\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$rtfeldman$elm_hex$Hex$fromStringHelp,\n\t\t\t\t\t\t$elm$core$List$length(list) - 1,\n\t\t\t\t\t\tlist,\n\t\t\t\t\t\t0));\n\t\t\t} else {\n\t\t\t\treturn A3(\n\t\t\t\t\t$rtfeldman$elm_hex$Hex$fromStringHelp,\n\t\t\t\t\t$elm$core$String$length(str) - 1,\n\t\t\t\t\t$elm$core$String$toList(str),\n\t\t\t\t\t0);\n\t\t\t}\n\t\t}();\n\t\tvar formatError = function (err) {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t' ',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t['\\\"' + (str + '\\\"'), 'is not a valid hexadecimal string because', err]));\n\t\t};\n\t\treturn A2($elm$core$Result$mapError, formatError, result);\n\t}\n};\nvar $elm$core$String$append = _String_append;\nvar $cmditch$elm_ethereum$Eth$Utils$toByteLength = function (str) {\n\treturn (A2(\n\t\t$elm$core$Basics$modBy,\n\t\t2,\n\t\t$elm$core$String$length(str)) === 1) ? A2($elm$core$String$append, '0', str) : str;\n};\nvar $elm$core$Char$toLower = _Char_toLower;\nvar $elm$core$String$fromList = _String_fromList;\nvar $rtfeldman$elm_hex$Hex$unsafeToDigit = function (num) {\n\tunsafeToDigit:\n\twhile (true) {\n\t\tswitch (num) {\n\t\t\tcase 0:\n\t\t\t\treturn _Utils_chr('0');\n\t\t\tcase 1:\n\t\t\t\treturn _Utils_chr('1');\n\t\t\tcase 2:\n\t\t\t\treturn _Utils_chr('2');\n\t\t\tcase 3:\n\t\t\t\treturn _Utils_chr('3');\n\t\t\tcase 4:\n\t\t\t\treturn _Utils_chr('4');\n\t\t\tcase 5:\n\t\t\t\treturn _Utils_chr('5');\n\t\t\tcase 6:\n\t\t\t\treturn _Utils_chr('6');\n\t\t\tcase 7:\n\t\t\t\treturn _Utils_chr('7');\n\t\t\tcase 8:\n\t\t\t\treturn _Utils_chr('8');\n\t\t\tcase 9:\n\t\t\t\treturn _Utils_chr('9');\n\t\t\tcase 10:\n\t\t\t\treturn _Utils_chr('a');\n\t\t\tcase 11:\n\t\t\t\treturn _Utils_chr('b');\n\t\t\tcase 12:\n\t\t\t\treturn _Utils_chr('c');\n\t\t\tcase 13:\n\t\t\t\treturn _Utils_chr('d');\n\t\t\tcase 14:\n\t\t\t\treturn _Utils_chr('e');\n\t\t\tcase 15:\n\t\t\t\treturn _Utils_chr('f');\n\t\t\tdefault:\n\t\t\t\tvar $temp$num = num;\n\t\t\t\tnum = $temp$num;\n\t\t\t\tcontinue unsafeToDigit;\n\t\t}\n\t}\n};\nvar $rtfeldman$elm_hex$Hex$unsafePositiveToDigits = F2(\n\tfunction (digits, num) {\n\t\tunsafePositiveToDigits:\n\t\twhile (true) {\n\t\t\tif (num < 16) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$rtfeldman$elm_hex$Hex$unsafeToDigit(num),\n\t\t\t\t\tdigits);\n\t\t\t} else {\n\t\t\t\tvar $temp$digits = A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$rtfeldman$elm_hex$Hex$unsafeToDigit(\n\t\t\t\t\t\tA2($elm$core$Basics$modBy, 16, num)),\n\t\t\t\t\tdigits),\n\t\t\t\t\t$temp$num = (num / 16) | 0;\n\t\t\t\tdigits = $temp$digits;\n\t\t\t\tnum = $temp$num;\n\t\t\t\tcontinue unsafePositiveToDigits;\n\t\t\t}\n\t\t}\n\t});\nvar $rtfeldman$elm_hex$Hex$toString = function (num) {\n\treturn $elm$core$String$fromList(\n\t\t(num < 0) ? A2(\n\t\t\t$elm$core$List$cons,\n\t\t\t_Utils_chr('-'),\n\t\t\tA2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, -num)) : A2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, num));\n};\nvar $elm$core$Result$withDefault = F2(\n\tfunction (def, result) {\n\t\tif (result.$ === 'Ok') {\n\t\t\tvar a = result.a;\n\t\t\treturn a;\n\t\t} else {\n\t\t\treturn def;\n\t\t}\n\t});\nvar $cmditch$elm_ethereum$Eth$Utils$checksumHelper = function (zeroLessAddress) {\n\tvar addressChars = $elm$core$String$toList(zeroLessAddress);\n\treturn function (b) {\n\t\treturn _Utils_Tuple2(addressChars, b);\n\t}(\n\t\tA2(\n\t\t\t$elm$core$Result$withDefault,\n\t\t\t_List_Nil,\n\t\t\t$elm_community$result_extra$Result$Extra$combine(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$rtfeldman$elm_hex$Hex$fromString,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$String$split,\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\tA2($elm$core$Basics$composeR, $rtfeldman$elm_hex$Hex$toString, $cmditch$elm_ethereum$Eth$Utils$toByteLength),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$take,\n\t\t\t\t\t\t\t\t\t20,\n\t\t\t\t\t\t\t\t\t$prozacchiwawa$elm_keccak$Keccak$Int$ethereum_keccak_256(\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$Basics$composeR, $elm$core$Char$toLower, $elm$core$Char$toCode),\n\t\t\t\t\t\t\t\t\t\t\taddressChars))))))))));\n};\nvar $cmditch$elm_ethereum$Eth$Utils$remove0x = function (str) {\n\treturn (A2($elm$core$String$startsWith, '0x', str) || A2($elm$core$String$startsWith, '0X', str)) ? A2($elm$core$String$dropLeft, 2, str) : str;\n};\nvar $cmditch$elm_ethereum$Eth$Utils$isChecksumAddress = function (str) {\n\tvar checksumTestChar = F2(\n\t\tfunction (addrChar, hashInt) {\n\t\t\treturn (((hashInt >= 8) && $elm$core$Char$isLower(addrChar)) || ((hashInt < 8) && $elm$core$Char$isUpper(addrChar))) ? false : true;\n\t\t});\n\tvar _v0 = $cmditch$elm_ethereum$Eth$Utils$checksumHelper(\n\t\t$cmditch$elm_ethereum$Eth$Utils$remove0x(str));\n\tvar addrChars = _v0.a;\n\tvar hashInts = _v0.b;\n\tvar checksumCorrect = A3($elm$core$List$map2, checksumTestChar, addrChars, hashInts);\n\treturn $cmditch$elm_ethereum$Eth$Utils$isAddress(str) ? $Chadtech$elm_bool_extra$Bool$Extra$all(checksumCorrect) : false;\n};\nvar $cmditch$elm_ethereum$Eth$Utils$isLowerCaseAddress = $elm$regex$Regex$contains(\n\tA2(\n\t\t$elm$core$Maybe$withDefault,\n\t\t$elm$regex$Regex$never,\n\t\t$elm$regex$Regex$fromString('^((0[Xx]){1})?[0-9a-f]{40}$')));\nvar $cmditch$elm_ethereum$Eth$Utils$isUpperCaseAddress = $elm$regex$Regex$contains(\n\tA2(\n\t\t$elm$core$Maybe$withDefault,\n\t\t$elm$regex$Regex$never,\n\t\t$elm$regex$Regex$fromString('^((0[Xx]){1})?[0-9A-F]{40}$')));\nvar $cmditch$elm_ethereum$Eth$Utils$quote = function (str) {\n\treturn '\\\"' + (str + '\\\"');\n};\nvar $elm$core$String$right = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(\n\t\t\t$elm$core$String$slice,\n\t\t\t-n,\n\t\t\t$elm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar $elm$core$String$toLower = _String_toLower;\nvar $cmditch$elm_ethereum$Eth$Utils$toAddress = function (str) {\n\tvar normalize = A2(\n\t\t$elm$core$Basics$composeR,\n\t\t$elm$core$String$toLower,\n\t\tA2($elm$core$Basics$composeR, $cmditch$elm_ethereum$Internal$Types$Address, $elm$core$Result$Ok));\n\tvar noZeroX = $cmditch$elm_ethereum$Eth$Utils$remove0x(str);\n\tvar emptyZerosInBytes32 = A2($elm$core$String$left, 24, noZeroX);\n\tvar bytes32Address = A2($elm$core$String$right, 40, str);\n\treturn (($elm$core$String$length(noZeroX) === 64) && A2(\n\t\t$elm$core$String$all,\n\t\t$elm$core$Basics$eq(\n\t\t\t_Utils_chr('0')),\n\t\temptyZerosInBytes32)) ? (($cmditch$elm_ethereum$Eth$Utils$isUpperCaseAddress(bytes32Address) || $cmditch$elm_ethereum$Eth$Utils$isLowerCaseAddress(bytes32Address)) ? normalize(bytes32Address) : ($cmditch$elm_ethereum$Eth$Utils$isChecksumAddress(bytes32Address) ? normalize(bytes32Address) : $elm$core$Result$Err(\n\t\t'Given address ' + ($cmditch$elm_ethereum$Eth$Utils$quote(str) + ' failed the EIP-55 checksum test.')))) : (($elm$core$String$length(noZeroX) !== 40) ? $elm$core$Result$Err(\n\t\t'Given address ' + ($cmditch$elm_ethereum$Eth$Utils$quote(str) + ' is not the correct length.')) : ((!$cmditch$elm_ethereum$Eth$Utils$isAddress(noZeroX)) ? $elm$core$Result$Err(\n\t\t'Given address ' + ($cmditch$elm_ethereum$Eth$Utils$quote(str) + ' contains invalid hex characters.')) : (($cmditch$elm_ethereum$Eth$Utils$isUpperCaseAddress(noZeroX) || $cmditch$elm_ethereum$Eth$Utils$isLowerCaseAddress(noZeroX)) ? normalize(noZeroX) : ($cmditch$elm_ethereum$Eth$Utils$isChecksumAddress(noZeroX) ? normalize(noZeroX) : $elm$core$Result$Err(\n\t\t'Given address ' + ($cmditch$elm_ethereum$Eth$Utils$quote(str) + ' failed the EIP-55 checksum test.'))))));\n};\nvar $cmditch$elm_ethereum$Eth$Decode$address = $cmditch$elm_ethereum$Eth$Decode$resultToDecoder($cmditch$elm_ethereum$Eth$Utils$toAddress);\nvar $author$project$Types$Eth = {$: 'Eth'};\nvar $author$project$Types$NetworkNotSupported = {$: 'NetworkNotSupported'};\nvar $author$project$Types$XDai = {$: 'XDai'};\nvar $elm$json$Json$Decode$int = _Json_decodeInt;\nvar $cmditch$elm_ethereum$Eth$Net$ETCMain = {$: 'ETCMain'};\nvar $cmditch$elm_ethereum$Eth$Net$ETCTest = {$: 'ETCTest'};\nvar $cmditch$elm_ethereum$Eth$Net$Expanse = {$: 'Expanse'};\nvar $cmditch$elm_ethereum$Eth$Net$Kovan = {$: 'Kovan'};\nvar $cmditch$elm_ethereum$Eth$Net$Mainnet = {$: 'Mainnet'};\nvar $cmditch$elm_ethereum$Eth$Net$Private = function (a) {\n\treturn {$: 'Private', a: a};\n};\nvar $cmditch$elm_ethereum$Eth$Net$Rinkeby = {$: 'Rinkeby'};\nvar $cmditch$elm_ethereum$Eth$Net$Ropsten = {$: 'Ropsten'};\nvar $cmditch$elm_ethereum$Eth$Net$RskMain = {$: 'RskMain'};\nvar $cmditch$elm_ethereum$Eth$Net$RskTest = {$: 'RskTest'};\nvar $cmditch$elm_ethereum$Eth$Net$toNetworkId = function (idInt) {\n\tswitch (idInt) {\n\t\tcase 1:\n\t\t\treturn $cmditch$elm_ethereum$Eth$Net$Mainnet;\n\t\tcase 2:\n\t\t\treturn $cmditch$elm_ethereum$Eth$Net$Expanse;\n\t\tcase 3:\n\t\t\treturn $cmditch$elm_ethereum$Eth$Net$Ropsten;\n\t\tcase 4:\n\t\t\treturn $cmditch$elm_ethereum$Eth$Net$Rinkeby;\n\t\tcase 30:\n\t\t\treturn $cmditch$elm_ethereum$Eth$Net$RskMain;\n\t\tcase 31:\n\t\t\treturn $cmditch$elm_ethereum$Eth$Net$RskTest;\n\t\tcase 42:\n\t\t\treturn $cmditch$elm_ethereum$Eth$Net$Kovan;\n\t\tcase 41:\n\t\t\treturn $cmditch$elm_ethereum$Eth$Net$ETCMain;\n\t\tcase 62:\n\t\t\treturn $cmditch$elm_ethereum$Eth$Net$ETCTest;\n\t\tdefault:\n\t\t\treturn $cmditch$elm_ethereum$Eth$Net$Private(idInt);\n\t}\n};\nvar $cmditch$elm_ethereum$Eth$Net$intyIdDecoder = A2($elm$json$Json$Decode$map, $cmditch$elm_ethereum$Eth$Net$toNetworkId, $elm$json$Json$Decode$int);\nvar $elm$json$Json$Decode$oneOf = _Json_oneOf;\nvar $elm$core$Result$fromMaybe = F2(\n\tfunction (err, maybe) {\n\t\tif (maybe.$ === 'Just') {\n\t\t\tvar v = maybe.a;\n\t\t\treturn $elm$core$Result$Ok(v);\n\t\t} else {\n\t\t\treturn $elm$core$Result$Err(err);\n\t\t}\n\t});\nvar $cmditch$elm_ethereum$Eth$Net$stringyIdDecoder = $cmditch$elm_ethereum$Eth$Decode$resultToDecoder(\n\tA2(\n\t\t$elm$core$Basics$composeR,\n\t\t$elm$core$String$toInt,\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$elm$core$Result$fromMaybe('Failure decoding stringy int'),\n\t\t\t$elm$core$Result$map($cmditch$elm_ethereum$Eth$Net$toNetworkId))));\nvar $cmditch$elm_ethereum$Eth$Net$networkIdDecoder = $elm$json$Json$Decode$oneOf(\n\t_List_fromArray(\n\t\t[$cmditch$elm_ethereum$Eth$Net$stringyIdDecoder, $cmditch$elm_ethereum$Eth$Net$intyIdDecoder]));\nvar $author$project$Chain$decodeChain = A2(\n\t$elm$json$Json$Decode$map,\n\tfunction (network) {\n\t\t_v0$3:\n\t\twhile (true) {\n\t\t\tswitch (network.$) {\n\t\t\t\tcase 'Mainnet':\n\t\t\t\t\treturn $elm$core$Result$Ok($author$project$Types$Eth);\n\t\t\t\tcase 'Private':\n\t\t\t\t\tswitch (network.a) {\n\t\t\t\t\t\tcase 100:\n\t\t\t\t\t\t\treturn $elm$core$Result$Ok($author$project$Types$XDai);\n\t\t\t\t\t\tcase 31337:\n\t\t\t\t\t\t\treturn $elm$core$Result$Ok($author$project$Types$Eth);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak _v0$3;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tbreak _v0$3;\n\t\t\t}\n\t\t}\n\t\treturn $elm$core$Result$Err($author$project$Types$NetworkNotSupported);\n\t},\n\t$cmditch$elm_ethereum$Eth$Net$networkIdDecoder);\nvar $elm$json$Json$Decode$list = _Json_decodeList;\nvar $elm$json$Json$Decode$map3 = _Json_map3;\nvar $elm_community$result_extra$Result$Extra$unpack = F3(\n\tfunction (errFunc, okFunc, result) {\n\t\tif (result.$ === 'Ok') {\n\t\t\tvar ok = result.a;\n\t\t\treturn okFunc(ok);\n\t\t} else {\n\t\t\tvar err = result.a;\n\t\t\treturn errFunc(err);\n\t\t}\n\t});\nvar $author$project$Chain$chainDecoder = function (flags) {\n\treturn $elm$json$Json$Decode$list(\n\t\tA4(\n\t\t\t$elm$json$Json$Decode$map3,\n\t\t\tF3(\n\t\t\t\tfunction (chain, contract, scan) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tchain: chain,\n\t\t\t\t\t\tcontract: contract,\n\t\t\t\t\t\tproviderUrl: function () {\n\t\t\t\t\t\t\tif (chain.$ === 'Eth') {\n\t\t\t\t\t\t\t\treturn flags.ethProviderUrl;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn flags.xDaiProviderUrl;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}(),\n\t\t\t\t\t\tstartScanBlock: scan\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\tA2(\n\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\tA2(\n\t\t\t\t\t$elm_community$result_extra$Result$Extra$unpack,\n\t\t\t\t\t$elm$core$Basics$always(\n\t\t\t\t\t\t$elm$json$Json$Decode$fail('bad network')),\n\t\t\t\t\t$elm$json$Json$Decode$succeed),\n\t\t\t\tA2($elm$json$Json$Decode$field, 'network', $author$project$Chain$decodeChain)),\n\t\t\tA2($elm$json$Json$Decode$field, 'contract', $cmditch$elm_ethereum$Eth$Decode$address),\n\t\t\tA2($elm$json$Json$Decode$field, 'scan', $elm$json$Json$Decode$int)));\n};\nvar $elm$json$Json$Decode$decodeValue = _Json_run;\nvar $author$project$Types$CancelPostInput = {$: 'CancelPostInput'};\nvar $author$project$Helpers$Element$Desktop = {$: 'Desktop'};\nvar $author$project$Types$NoneDetected = {$: 'NoneDetected'};\nvar $author$project$Types$ViewHome = {$: 'ViewHome'};\nvar $author$project$Types$TopLevel = function (a) {\n\treturn {$: 'TopLevel', a: a};\n};\nvar $author$project$Post$defaultTopic = 'misc';\nvar $author$project$Misc$emptyComposeModel = {\n\tbody: '',\n\tcontext: $author$project$Types$TopLevel($author$project$Post$defaultTopic),\n\tdollar: '',\n\tdonate: true,\n\terror: $elm$core$Maybe$Nothing,\n\tinProgress: false,\n\tmodal: false,\n\tpreview: false,\n\ttitle: ''\n};\nvar $cmditch$elm_ethereum$Eth$Utils$unsafeToAddress = A2(\n\t$elm$core$Basics$composeR,\n\t$cmditch$elm_ethereum$Eth$Utils$remove0x,\n\tA2($elm$core$Basics$composeR, $elm$core$String$toLower, $cmditch$elm_ethereum$Internal$Types$Address));\nvar $author$project$Misc$emptyAddress = $cmditch$elm_ethereum$Eth$Utils$unsafeToAddress('');\nvar $author$project$Misc$emptyConfig = {\n\tethereum: {chain: $author$project$Types$Eth, contract: $author$project$Misc$emptyAddress, providerUrl: '', startScanBlock: 0},\n\txDai: {chain: $author$project$Types$Eth, contract: $author$project$Misc$emptyAddress, providerUrl: '', startScanBlock: 0}\n};\nvar $elm$core$Set$Set_elm_builtin = function (a) {\n\treturn {$: 'Set_elm_builtin', a: a};\n};\nvar $elm$core$Set$empty = $elm$core$Set$Set_elm_builtin($elm$core$Dict$empty);\nvar $author$project$GTag$emptyGtagHistory = {sentOnlyOnChange: _List_Nil, sentOnlyOnce: $elm$core$Set$empty};\nvar $cmditch$elm_ethereum$Eth$Sentry$Event$BlockNumber = function (a) {\n\treturn {$: 'BlockNumber', a: a};\n};\nvar $cmditch$elm_ethereum$Eth$Sentry$Event$EventSentry = function (a) {\n\treturn {$: 'EventSentry', a: a};\n};\nvar $elm$core$Task$onError = _Scheduler_onError;\nvar $elm$core$Task$attempt = F2(\n\tfunction (resultToMessage, task) {\n\t\treturn $elm$core$Task$command(\n\t\t\t$elm$core$Task$Perform(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Task$onError,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeL,\n\t\t\t\t\t\tA2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),\n\t\t\t\t\t\t$elm$core$Result$Err),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Basics$composeL,\n\t\t\t\t\t\t\tA2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),\n\t\t\t\t\t\t\t$elm$core$Result$Ok),\n\t\t\t\t\t\ttask))));\n\t});\nvar $cmditch$elm_ethereum$Eth$Decode$hexInt = $cmditch$elm_ethereum$Eth$Decode$resultToDecoder(\n\tA2($elm$core$Basics$composeR, $cmditch$elm_ethereum$Eth$Utils$remove0x, $rtfeldman$elm_hex$Hex$fromString));\nvar $elm$http$Http$BadBody = function (a) {\n\treturn {$: 'BadBody', a: a};\n};\nvar $elm$http$Http$BadStatus = function (a) {\n\treturn {$: 'BadStatus', a: a};\n};\nvar $elm$http$Http$BadUrl = function (a) {\n\treturn {$: 'BadUrl', a: a};\n};\nvar $elm$http$Http$NetworkError = {$: 'NetworkError'};\nvar $elm$http$Http$Timeout = {$: 'Timeout'};\nvar $elm$json$Json$Decode$decodeString = _Json_runOnString;\nvar $cmditch$elm_ethereum$Eth$RPC$expectJson = F2(\n\tfunction (decoder, response) {\n\t\tswitch (response.$) {\n\t\t\tcase 'BadUrl_':\n\t\t\t\tvar url = response.a;\n\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t$elm$http$Http$BadUrl(url));\n\t\t\tcase 'Timeout_':\n\t\t\t\treturn $elm$core$Result$Err($elm$http$Http$Timeout);\n\t\t\tcase 'NetworkError_':\n\t\t\t\treturn $elm$core$Result$Err($elm$http$Http$NetworkError);\n\t\t\tcase 'BadStatus_':\n\t\t\t\tvar metadata = response.a;\n\t\t\t\tvar body = response.b;\n\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t$elm$http$Http$BadStatus(metadata.statusCode));\n\t\t\tdefault:\n\t\t\t\tvar metadata = response.a;\n\t\t\t\tvar body = response.b;\n\t\t\t\tvar _v1 = A2(\n\t\t\t\t\t$elm$json$Json$Decode$decodeString,\n\t\t\t\t\tA2($elm$json$Json$Decode$field, 'result', decoder),\n\t\t\t\t\tbody);\n\t\t\t\tif (_v1.$ === 'Ok') {\n\t\t\t\t\tvar value = _v1.a;\n\t\t\t\t\treturn $elm$core$Result$Ok(value);\n\t\t\t\t} else {\n\t\t\t\t\tvar err = _v1.a;\n\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t$elm$http$Http$BadBody(\n\t\t\t\t\t\t\t$elm$json$Json$Decode$errorToString(err)));\n\t\t\t\t}\n\t\t}\n\t});\nvar $elm$http$Http$BadStatus_ = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'BadStatus_', a: a, b: b};\n\t});\nvar $elm$http$Http$BadUrl_ = function (a) {\n\treturn {$: 'BadUrl_', a: a};\n};\nvar $elm$http$Http$GoodStatus_ = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'GoodStatus_', a: a, b: b};\n\t});\nvar $elm$http$Http$NetworkError_ = {$: 'NetworkError_'};\nvar $elm$http$Http$Receiving = function (a) {\n\treturn {$: 'Receiving', a: a};\n};\nvar $elm$http$Http$Sending = function (a) {\n\treturn {$: 'Sending', a: a};\n};\nvar $elm$http$Http$Timeout_ = {$: 'Timeout_'};\nvar $elm$core$Maybe$isJust = function (maybe) {\n\tif (maybe.$ === 'Just') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar $elm$http$Http$stringResolver = A2(_Http_expect, '', $elm$core$Basics$identity);\nvar $elm$core$Task$fail = _Scheduler_fail;\nvar $elm$http$Http$resultToTask = function (result) {\n\tif (result.$ === 'Ok') {\n\t\tvar a = result.a;\n\t\treturn $elm$core$Task$succeed(a);\n\t} else {\n\t\tvar x = result.a;\n\t\treturn $elm$core$Task$fail(x);\n\t}\n};\nvar $elm$http$Http$task = function (r) {\n\treturn A3(\n\t\t_Http_toTask,\n\t\t_Utils_Tuple0,\n\t\t$elm$http$Http$resultToTask,\n\t\t{allowCookiesFromOtherDomains: false, body: r.body, expect: r.resolver, headers: r.headers, method: r.method, timeout: r.timeout, tracker: $elm$core$Maybe$Nothing, url: r.url});\n};\nvar $elm$json$Json$Encode$int = _Json_wrap;\nvar $cmditch$elm_ethereum$Eth$RPC$jsonRPCVersion = '2.0';\nvar $elm$json$Json$Encode$list = F2(\n\tfunction (func, entries) {\n\t\treturn _Json_wrap(\n\t\t\tA3(\n\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t_Json_addEntry(func),\n\t\t\t\t_Json_emptyArray(_Utils_Tuple0),\n\t\t\t\tentries));\n\t});\nvar $elm$json$Json$Encode$object = function (pairs) {\n\treturn _Json_wrap(\n\t\tA3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_v0, obj) {\n\t\t\t\t\tvar k = _v0.a;\n\t\t\t\t\tvar v = _v0.b;\n\t\t\t\t\treturn A3(_Json_addField, k, v, obj);\n\t\t\t\t}),\n\t\t\t_Json_emptyObject(_Utils_Tuple0),\n\t\t\tpairs));\n};\nvar $elm$json$Json$Encode$string = _Json_wrap;\nvar $cmditch$elm_ethereum$Eth$RPC$encode = F3(\n\tfunction (id, method, params) {\n\t\treturn $elm$json$Json$Encode$object(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'id',\n\t\t\t\t\t$elm$json$Json$Encode$int(id)),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'jsonrpc',\n\t\t\t\t\t$elm$json$Json$Encode$string($cmditch$elm_ethereum$Eth$RPC$jsonRPCVersion)),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'method',\n\t\t\t\t\t$elm$json$Json$Encode$string(method)),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'params',\n\t\t\t\t\tA2($elm$json$Json$Encode$list, $elm$core$Basics$identity, params))\n\t\t\t\t]));\n\t});\nvar $elm$http$Http$jsonBody = function (value) {\n\treturn A2(\n\t\t_Http_pair,\n\t\t'application/json',\n\t\tA2($elm$json$Json$Encode$encode, 0, value));\n};\nvar $cmditch$elm_ethereum$Eth$RPC$toHttpBody = F3(\n\tfunction (id, method, params) {\n\t\treturn $elm$http$Http$jsonBody(\n\t\t\tA3($cmditch$elm_ethereum$Eth$RPC$encode, id, method, params));\n\t});\nvar $cmditch$elm_ethereum$Eth$RPC$toTask = function (_v0) {\n\tvar url = _v0.url;\n\tvar method = _v0.method;\n\tvar params = _v0.params;\n\tvar decoder = _v0.decoder;\n\treturn $elm$http$Http$task(\n\t\t{\n\t\t\tbody: A3($cmditch$elm_ethereum$Eth$RPC$toHttpBody, 1, method, params),\n\t\t\theaders: _List_Nil,\n\t\t\tmethod: 'POST',\n\t\t\tresolver: $elm$http$Http$stringResolver(\n\t\t\t\t$cmditch$elm_ethereum$Eth$RPC$expectJson(decoder)),\n\t\t\ttimeout: $elm$core$Maybe$Nothing,\n\t\t\turl: url\n\t\t});\n};\nvar $cmditch$elm_ethereum$Eth$getBlockNumber = function (ethNode) {\n\treturn $cmditch$elm_ethereum$Eth$RPC$toTask(\n\t\t{decoder: $cmditch$elm_ethereum$Eth$Decode$hexInt, method: 'eth_blockNumber', params: _List_Nil, url: ethNode});\n};\nvar $cmditch$elm_ethereum$Eth$Sentry$Event$init = F2(\n\tfunction (tagger, nodePath) {\n\t\treturn _Utils_Tuple2(\n\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$EventSentry(\n\t\t\t\t{blockNumber: $elm$core$Maybe$Nothing, errors: _List_Nil, nodePath: nodePath, pending: $elm$core$Set$empty, ref: 1, requests: $elm$core$Dict$empty, tagger: tagger, watching: $elm$core$Set$empty}),\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$attempt,\n\t\t\t\tA2($elm$core$Basics$composeR, $cmditch$elm_ethereum$Eth$Sentry$Event$BlockNumber, tagger),\n\t\t\t\t$cmditch$elm_ethereum$Eth$getBlockNumber(nodePath)));\n\t});\nvar $author$project$Misc$initDemoPhaceSrc = '2222222222222222222222222228083888c8f222';\nvar $elm$time$Time$Posix = function (a) {\n\treturn {$: 'Posix', a: a};\n};\nvar $elm$time$Time$millisToPosix = $elm$time$Time$Posix;\nvar $author$project$Misc$emptyModel = function (key) {\n\treturn {\n\t\taccounting: $elm$core$Dict$empty,\n\t\talphaUrl: '',\n\t\tblockTimes: $elm$core$Dict$empty,\n\t\tcompose: $author$project$Misc$emptyComposeModel,\n\t\tconfig: $author$project$Misc$emptyConfig,\n\t\tcookieConsentGranted: false,\n\t\tcurrentPage: 0,\n\t\tdProfile: $author$project$Helpers$Element$Desktop,\n\t\tdemoPhaceSrc: $author$project$Misc$initDemoPhaceSrc,\n\t\tgtagHistory: $author$project$GTag$emptyGtagHistory,\n\t\thasNavigated: false,\n\t\tmaybeSeoDescription: $elm$core$Maybe$Nothing,\n\t\tnavKey: key,\n\t\tnewUserModal: false,\n\t\tnow: $elm$time$Time$millisToPosix(0),\n\t\tpages: $elm$core$Array$empty,\n\t\tpostState: $elm$core$Maybe$Nothing,\n\t\treplyIds: $elm$core$Dict$empty,\n\t\treplyPosts: $elm$core$Dict$empty,\n\t\trootPosts: $elm$core$Dict$empty,\n\t\tsentries: {\n\t\t\tethereum: A2(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$init,\n\t\t\t\t$elm$core$Basics$always($author$project$Types$CancelPostInput),\n\t\t\t\t'').a,\n\t\t\txDai: A2(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$init,\n\t\t\t\t$elm$core$Basics$always($author$project$Types$CancelPostInput),\n\t\t\t\t'').a\n\t\t},\n\t\tshowAddressId: $elm$core$Maybe$Nothing,\n\t\tshowExpandedTrackedTxs: false,\n\t\ttopicInput: '',\n\t\ttopics: $elm$core$Dict$empty,\n\t\ttrackedTxs: $elm$core$Dict$empty,\n\t\tuserNotices: _List_Nil,\n\t\tview: $author$project$Types$ViewHome,\n\t\twallet: $author$project$Types$NoneDetected\n\t};\n};\nvar $elm$core$Platform$Cmd$batch = _Platform_batch;\nvar $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);\nvar $elm$browser$Browser$Navigation$load = _Browser_load;\nvar $elm$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tif (maybe.$ === 'Just') {\n\t\t\tvar value = maybe.a;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\tf(value));\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar $elm$url$Url$addPort = F2(\n\tfunction (maybePort, starter) {\n\t\tif (maybePort.$ === 'Nothing') {\n\t\t\treturn starter;\n\t\t} else {\n\t\t\tvar port_ = maybePort.a;\n\t\t\treturn starter + (':' + $elm$core$String$fromInt(port_));\n\t\t}\n\t});\nvar $elm$url$Url$addPrefixed = F3(\n\tfunction (prefix, maybeSegment, starter) {\n\t\tif (maybeSegment.$ === 'Nothing') {\n\t\t\treturn starter;\n\t\t} else {\n\t\t\tvar segment = maybeSegment.a;\n\t\t\treturn _Utils_ap(\n\t\t\t\tstarter,\n\t\t\t\t_Utils_ap(prefix, segment));\n\t\t}\n\t});\nvar $elm$url$Url$toString = function (url) {\n\tvar http = function () {\n\t\tvar _v0 = url.protocol;\n\t\tif (_v0.$ === 'Http') {\n\t\t\treturn 'http://';\n\t\t} else {\n\t\t\treturn 'https://';\n\t\t}\n\t}();\n\treturn A3(\n\t\t$elm$url$Url$addPrefixed,\n\t\t'#',\n\t\turl.fragment,\n\t\tA3(\n\t\t\t$elm$url$Url$addPrefixed,\n\t\t\t'?',\n\t\t\turl.query,\n\t\t\t_Utils_ap(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$url$Url$addPort,\n\t\t\t\t\turl.port_,\n\t\t\t\t\t_Utils_ap(http, url.host)),\n\t\t\t\turl.path)));\n};\nvar $author$project$App$redirectDomain = function (url) {\n\treturn A2(\n\t\t$elm$core$Maybe$map,\n\t\tfunction (newHost) {\n\t\t\treturn $elm$browser$Browser$Navigation$load(\n\t\t\t\t$elm$url$Url$toString(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\turl,\n\t\t\t\t\t\t{host: newHost})));\n\t\t},\n\t\tfunction () {\n\t\t\tvar _v0 = url.host;\n\t\t\tswitch (_v0) {\n\t\t\t\tcase 'smokesignal.eth.link':\n\t\t\t\t\treturn $elm$core$Maybe$Just('alpha.smokesignal.eth.link');\n\t\t\t\tcase 'smokesignal.eth':\n\t\t\t\t\treturn $elm$core$Maybe$Just('alpha.smokesignal.eth');\n\t\t\t\tdefault:\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$Types$NetworkReady = {$: 'NetworkReady'};\nvar $author$project$Types$NewDemoSrc = function (a) {\n\treturn {$: 'NewDemoSrc', a: a};\n};\nvar $elm$core$List$head = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn $elm$core$Maybe$Just(x);\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $elm$random$Random$Generator = function (a) {\n\treturn {$: 'Generator', a: a};\n};\nvar $elm$random$Random$Seed = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Seed', a: a, b: b};\n\t});\nvar $elm$random$Random$next = function (_v0) {\n\tvar state0 = _v0.a;\n\tvar incr = _v0.b;\n\treturn A2($elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);\n};\nvar $elm$random$Random$peel = function (_v0) {\n\tvar state = _v0.a;\n\tvar word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;\n\treturn ((word >>> 22) ^ word) >>> 0;\n};\nvar $elm$random$Random$int = F2(\n\tfunction (a, b) {\n\t\treturn $elm$random$Random$Generator(\n\t\t\tfunction (seed0) {\n\t\t\t\tvar _v0 = (_Utils_cmp(a, b) < 0) ? _Utils_Tuple2(a, b) : _Utils_Tuple2(b, a);\n\t\t\t\tvar lo = _v0.a;\n\t\t\t\tvar hi = _v0.b;\n\t\t\t\tvar range = (hi - lo) + 1;\n\t\t\t\tif (!((range - 1) & range)) {\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t(((range - 1) & $elm$random$Random$peel(seed0)) >>> 0) + lo,\n\t\t\t\t\t\t$elm$random$Random$next(seed0));\n\t\t\t\t} else {\n\t\t\t\t\tvar threshhold = (((-range) >>> 0) % range) >>> 0;\n\t\t\t\t\tvar accountForBias = function (seed) {\n\t\t\t\t\t\taccountForBias:\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\tvar x = $elm$random$Random$peel(seed);\n\t\t\t\t\t\t\tvar seedN = $elm$random$Random$next(seed);\n\t\t\t\t\t\t\tif (_Utils_cmp(x, threshhold) < 0) {\n\t\t\t\t\t\t\t\tvar $temp$seed = seedN;\n\t\t\t\t\t\t\t\tseed = $temp$seed;\n\t\t\t\t\t\t\t\tcontinue accountForBias;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2((x % range) + lo, seedN);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\treturn accountForBias(seed0);\n\t\t\t\t}\n\t\t\t});\n\t});\nvar $elm$random$Random$map = F2(\n\tfunction (func, _v0) {\n\t\tvar genA = _v0.a;\n\t\treturn $elm$random$Random$Generator(\n\t\t\tfunction (seed0) {\n\t\t\t\tvar _v1 = genA(seed0);\n\t\t\t\tvar a = _v1.a;\n\t\t\t\tvar seed1 = _v1.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tfunc(a),\n\t\t\t\t\tseed1);\n\t\t\t});\n\t});\nvar $author$project$DemoPhaceSrcMutator$hexCharGenerator = A2(\n\t$elm$random$Random$map,\n\tA2(\n\t\t$elm$core$Basics$composeR,\n\t\t$rtfeldman$elm_hex$Hex$toString,\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$elm$core$String$toList,\n\t\t\tA2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t$elm$core$List$head,\n\t\t\t\t$elm$core$Maybe$withDefault(\n\t\t\t\t\t_Utils_chr('0'))))),\n\tA2($elm$random$Random$int, 0, 15));\nvar $elm$random$Random$listHelp = F4(\n\tfunction (revList, n, gen, seed) {\n\t\tlistHelp:\n\t\twhile (true) {\n\t\t\tif (n < 1) {\n\t\t\t\treturn _Utils_Tuple2(revList, seed);\n\t\t\t} else {\n\t\t\t\tvar _v0 = gen(seed);\n\t\t\t\tvar value = _v0.a;\n\t\t\t\tvar newSeed = _v0.b;\n\t\t\t\tvar $temp$revList = A2($elm$core$List$cons, value, revList),\n\t\t\t\t\t$temp$n = n - 1,\n\t\t\t\t\t$temp$gen = gen,\n\t\t\t\t\t$temp$seed = newSeed;\n\t\t\t\trevList = $temp$revList;\n\t\t\t\tn = $temp$n;\n\t\t\t\tgen = $temp$gen;\n\t\t\t\tseed = $temp$seed;\n\t\t\t\tcontinue listHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$random$Random$list = F2(\n\tfunction (n, _v0) {\n\t\tvar gen = _v0.a;\n\t\treturn $elm$random$Random$Generator(\n\t\t\tfunction (seed) {\n\t\t\t\treturn A4($elm$random$Random$listHelp, _List_Nil, n, gen, seed);\n\t\t\t});\n\t});\nvar $author$project$DemoPhaceSrcMutator$addressSrcGenerator = A2(\n\t$elm$random$Random$map,\n\t$elm$core$String$fromList,\n\tA2($elm$random$Random$list, 40, $author$project$DemoPhaceSrcMutator$hexCharGenerator));\nvar $author$project$Misc$defaultSeoDescription = 'SmokeSignal - Uncensorable, Global, Immutable chat. Burn crypto to cement your writing on the blockchain. Grant your ideas immortality.';\nvar $elm$core$String$endsWith = _String_endsWith;\nvar $elm$random$Random$Generate = function (a) {\n\treturn {$: 'Generate', a: a};\n};\nvar $elm$random$Random$initialSeed = function (x) {\n\tvar _v0 = $elm$random$Random$next(\n\t\tA2($elm$random$Random$Seed, 0, 1013904223));\n\tvar state1 = _v0.a;\n\tvar incr = _v0.b;\n\tvar state2 = (state1 + x) >>> 0;\n\treturn $elm$random$Random$next(\n\t\tA2($elm$random$Random$Seed, state2, incr));\n};\nvar $elm$time$Time$Name = function (a) {\n\treturn {$: 'Name', a: a};\n};\nvar $elm$time$Time$Offset = function (a) {\n\treturn {$: 'Offset', a: a};\n};\nvar $elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Zone', a: a, b: b};\n\t});\nvar $elm$time$Time$customZone = $elm$time$Time$Zone;\nvar $elm$time$Time$now = _Time_now($elm$time$Time$millisToPosix);\nvar $elm$time$Time$posixToMillis = function (_v0) {\n\tvar millis = _v0.a;\n\treturn millis;\n};\nvar $elm$random$Random$init = A2(\n\t$elm$core$Task$andThen,\n\tfunction (time) {\n\t\treturn $elm$core$Task$succeed(\n\t\t\t$elm$random$Random$initialSeed(\n\t\t\t\t$elm$time$Time$posixToMillis(time)));\n\t},\n\t$elm$time$Time$now);\nvar $elm$random$Random$step = F2(\n\tfunction (_v0, seed) {\n\t\tvar generator = _v0.a;\n\t\treturn generator(seed);\n\t});\nvar $elm$random$Random$onEffects = F3(\n\tfunction (router, commands, seed) {\n\t\tif (!commands.b) {\n\t\t\treturn $elm$core$Task$succeed(seed);\n\t\t} else {\n\t\t\tvar generator = commands.a.a;\n\t\t\tvar rest = commands.b;\n\t\t\tvar _v1 = A2($elm$random$Random$step, generator, seed);\n\t\t\tvar value = _v1.a;\n\t\t\tvar newSeed = _v1.b;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v2) {\n\t\t\t\t\treturn A3($elm$random$Random$onEffects, router, rest, newSeed);\n\t\t\t\t},\n\t\t\t\tA2($elm$core$Platform$sendToApp, router, value));\n\t\t}\n\t});\nvar $elm$random$Random$onSelfMsg = F3(\n\tfunction (_v0, _v1, seed) {\n\t\treturn $elm$core$Task$succeed(seed);\n\t});\nvar $elm$random$Random$cmdMap = F2(\n\tfunction (func, _v0) {\n\t\tvar generator = _v0.a;\n\t\treturn $elm$random$Random$Generate(\n\t\t\tA2($elm$random$Random$map, func, generator));\n\t});\n_Platform_effectManagers['Random'] = _Platform_createManager($elm$random$Random$init, $elm$random$Random$onEffects, $elm$random$Random$onSelfMsg, $elm$random$Random$cmdMap);\nvar $elm$random$Random$command = _Platform_leaf('Random');\nvar $elm$random$Random$generate = F2(\n\tfunction (tagger, generator) {\n\t\treturn $elm$random$Random$command(\n\t\t\t$elm$random$Random$Generate(\n\t\t\t\tA2($elm$random$Random$map, tagger, generator)));\n\t});\nvar $author$project$UserNotice$BottomRight = {$: 'BottomRight'};\nvar $author$project$UserNotice$Error = {$: 'Error'};\nvar $mdgriffith$elm_ui$Internal$Model$Text = function (a) {\n\treturn {$: 'Text', a: a};\n};\nvar $mdgriffith$elm_ui$Element$text = function (content) {\n\treturn $mdgriffith$elm_ui$Internal$Model$Text(content);\n};\nvar $author$project$UserNotice$routeNotFound = function (maybeErrStr) {\n\treturn {\n\t\talign: $author$project$UserNotice$BottomRight,\n\t\tmainParagraphs: _List_fromArray(\n\t\t\t[\n\t\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t'I don\\'t understand that url' + function () {\n\t\t\t\t\t\tif (maybeErrStr.$ === 'Just') {\n\t\t\t\t\t\t\tvar errStr = maybeErrStr.a;\n\t\t\t\t\t\t\treturn ': ' + errStr;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}())\n\t\t\t\t])\n\t\t\t]),\n\t\tnoticeType: $author$project$UserNotice$Error,\n\t\tuniqueLabel: 'routeNotFound'\n\t};\n};\nvar $author$project$Helpers$Element$Mobile = {$: 'Mobile'};\nvar $author$project$Helpers$Element$screenWidthToDisplayProfile = function (width) {\n\treturn (width >= 1150) ? $author$project$Helpers$Element$Desktop : $author$project$Helpers$Element$Mobile;\n};\nvar $author$project$Ports$setDescription = _Platform_outgoingPort('setDescription', $elm$json$Json$Encode$string);\nvar $cmditch$elm_ethereum$Eth$Types$BlockNum = function (a) {\n\treturn {$: 'BlockNum', a: a};\n};\nvar $author$project$Types$EventSentryMsg = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'EventSentryMsg', a: a, b: b};\n\t});\nvar $cmditch$elm_ethereum$Eth$Types$LatestBlock = {$: 'LatestBlock'};\nvar $author$project$Types$PostLogReceived = function (a) {\n\treturn {$: 'PostLogReceived', a: a};\n};\nvar $cmditch$elm_ethereum$Eth$Utils$add0x = function (str) {\n\treturn (A2($elm$core$String$startsWith, '0x', str) || A2($elm$core$String$startsWith, '0X', str)) ? str : ('0x' + str);\n};\nvar $cmditch$elm_ethereum$Eth$Utils$hexToString = function (_v0) {\n\tvar hex = _v0.a;\n\treturn $cmditch$elm_ethereum$Eth$Utils$add0x(hex);\n};\nvar $cmditch$elm_ethereum$Eth$Encode$hex = A2($elm$core$Basics$composeR, $cmditch$elm_ethereum$Eth$Utils$hexToString, $elm$json$Json$Encode$string);\nvar $cmditch$elm_ethereum$Eth$Decode$event = F2(\n\tfunction (decoder, log_) {\n\t\treturn {\n\t\t\taddress: log_.address,\n\t\t\tblockHash: log_.blockHash,\n\t\t\tblockNumber: log_.blockNumber,\n\t\t\tdata: log_.data,\n\t\t\tlogIndex: log_.logIndex,\n\t\t\tremoved: log_.removed,\n\t\t\treturnData: A2(\n\t\t\t\t$elm$json$Json$Decode$decodeValue,\n\t\t\t\tdecoder,\n\t\t\t\t$elm$json$Json$Encode$object(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t'data',\n\t\t\t\t\t\t\t$elm$json$Json$Encode$string(log_.data)),\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t'topics',\n\t\t\t\t\t\t\tA2($elm$json$Json$Encode$list, $cmditch$elm_ethereum$Eth$Encode$hex, log_.topics))\n\t\t\t\t\t\t]))),\n\t\t\ttopics: log_.topics,\n\t\t\ttransactionHash: log_.transactionHash,\n\t\t\ttransactionIndex: log_.transactionIndex\n\t\t};\n\t});\nvar $author$project$Contracts$Generated$SmokeSignal$MessageBurn = F5(\n\tfunction (hash, from, burnAmount, burnUsdValue, message) {\n\t\treturn {burnAmount: burnAmount, burnUsdValue: burnUsdValue, from: from, hash: hash, message: message};\n\t});\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$AbiDecoder = function (a) {\n\treturn {$: 'AbiDecoder', a: a};\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$Tape = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Tape', a: a, b: b};\n\t});\nvar $cmditch$elm_ethereum$Eth$Utils$drop64 = $elm$core$String$dropLeft(64);\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$newTape = F3(\n\tfunction (original, altered, val) {\n\t\treturn _Utils_Tuple2(\n\t\t\tA2(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$Tape,\n\t\t\t\toriginal,\n\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$drop64(altered)),\n\t\t\tval);\n\t});\nvar $cmditch$elm_ethereum$Eth$Utils$take64 = $elm$core$String$left(64);\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$address = $cmditch$elm_ethereum$Eth$Abi$Decode$AbiDecoder(\n\tfunction (_v0) {\n\t\tvar original = _v0.a;\n\t\tvar altered = _v0.b;\n\t\treturn A2(\n\t\t\t$elm$core$Result$map,\n\t\t\tA2($cmditch$elm_ethereum$Eth$Abi$Decode$newTape, original, altered),\n\t\t\t$cmditch$elm_ethereum$Eth$Utils$toAddress(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$take64(altered)));\n\t});\nvar $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom = $elm$json$Json$Decode$map2($elm$core$Basics$apR);\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$dropBytes = F2(\n\tfunction (location, _v0) {\n\t\tvar decoder = _v0.a;\n\t\treturn $cmditch$elm_ethereum$Eth$Abi$Decode$AbiDecoder(\n\t\t\tfunction (_v1) {\n\t\t\t\tvar original = _v1.a;\n\t\t\t\tvar altered = _v1.b;\n\t\t\t\treturn decoder(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$Tape,\n\t\t\t\t\t\toriginal,\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, location * 64, altered)));\n\t\t\t});\n\t});\nvar $elm$core$Tuple$second = function (_v0) {\n\tvar y = _v0.b;\n\treturn y;\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$fromString = F2(\n\tfunction (_v0, abiString) {\n\t\tvar abiDecoder = _v0.a;\n\t\treturn A2(\n\t\t\t$elm$core$Result$map,\n\t\t\t$elm$core$Tuple$second,\n\t\t\tabiDecoder(\n\t\t\t\tfunction (a) {\n\t\t\t\t\treturn A2($cmditch$elm_ethereum$Eth$Abi$Decode$Tape, a, a);\n\t\t\t\t}(\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$remove0x(abiString))));\n\t});\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$toElmDecoder = A2($elm$core$Basics$composeR, $cmditch$elm_ethereum$Eth$Abi$Decode$fromString, $cmditch$elm_ethereum$Eth$Decode$resultToDecoder);\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$data = F2(\n\tfunction (index, abiDecoder) {\n\t\treturn A2(\n\t\t\t$elm$json$Json$Decode$field,\n\t\t\t'data',\n\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$toElmDecoder(\n\t\t\t\tA2($cmditch$elm_ethereum$Eth$Abi$Decode$dropBytes, index, abiDecoder)));\n\t});\nvar $cmditch$elm_ethereum$Internal$Types$Hex = function (a) {\n\treturn {$: 'Hex', a: a};\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$staticBytes = function (bytesLen) {\n\treturn $cmditch$elm_ethereum$Eth$Abi$Decode$AbiDecoder(\n\t\tfunction (_v0) {\n\t\t\tvar original = _v0.a;\n\t\t\tvar altered = _v0.b;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Result$map,\n\t\t\t\tA2($cmditch$elm_ethereum$Eth$Abi$Decode$newTape, original, altered),\n\t\t\t\t$elm$core$Result$Ok(\n\t\t\t\t\t$cmditch$elm_ethereum$Internal$Types$Hex(\n\t\t\t\t\t\tA2($elm$core$String$left, bytesLen * 2, altered))));\n\t\t});\n};\nvar $elm$core$Result$andThen = F2(\n\tfunction (callback, result) {\n\t\tif (result.$ === 'Ok') {\n\t\t\tvar value = result.a;\n\t\t\treturn callback(value);\n\t\t} else {\n\t\t\tvar msg = result.a;\n\t\t\treturn $elm$core$Result$Err(msg);\n\t\t}\n\t});\nvar $elm_community$string_extra$String$Extra$breaker = F3(\n\tfunction (width, string, acc) {\n\t\tbreaker:\n\t\twhile (true) {\n\t\t\tif (string === '') {\n\t\t\t\treturn $elm$core$List$reverse(acc);\n\t\t\t} else {\n\t\t\t\tvar $temp$width = width,\n\t\t\t\t\t$temp$string = A2($elm$core$String$dropLeft, width, string),\n\t\t\t\t\t$temp$acc = A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\tA3($elm$core$String$slice, 0, width, string),\n\t\t\t\t\tacc);\n\t\t\t\twidth = $temp$width;\n\t\t\t\tstring = $temp$string;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue breaker;\n\t\t\t}\n\t\t}\n\t});\nvar $elm_community$string_extra$String$Extra$break = F2(\n\tfunction (width, string) {\n\t\treturn ((!width) || (string === '')) ? _List_fromArray(\n\t\t\t[string]) : A3($elm_community$string_extra$String$Extra$breaker, width, string, _List_Nil);\n\t});\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$buildBytes = F2(\n\tfunction (fullTape, lengthIndex) {\n\t\tvar sliceData = F2(\n\t\t\tfunction (dataIndex, strLength) {\n\t\t\t\treturn A3($elm$core$String$slice, dataIndex, dataIndex + (strLength * 2), fullTape);\n\t\t\t});\n\t\tvar hexToLength = A2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$rtfeldman$elm_hex$Hex$fromString,\n\t\t\t$elm$core$Result$map(\n\t\t\t\t$elm$core$Basics$mul(2)));\n\t\treturn A2(\n\t\t\t$elm$core$Result$andThen,\n\t\t\tfunction (index) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\tfunction (dataLength) {\n\t\t\t\t\t\treturn A2(sliceData, index + 64, dataLength);\n\t\t\t\t\t},\n\t\t\t\t\t$rtfeldman$elm_hex$Hex$fromString(\n\t\t\t\t\t\tA3($elm$core$String$slice, index, index + 64, fullTape)));\n\t\t\t},\n\t\t\thexToLength(lengthIndex));\n\t});\nvar $elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar $zwilias$elm_utf_tools$String$UTF8$utf8ToUtf32 = F3(\n\tfunction (add, _char, _v0) {\n\t\tvar curr = _v0.a;\n\t\tvar need = _v0.b;\n\t\tvar acc = _v0.c;\n\t\tvar shiftAndAdd = function (_int) {\n\t\t\treturn (63 & _int) | (curr << 6);\n\t\t};\n\t\treturn (!need) ? ((!(128 & _char)) ? _Utils_Tuple3(\n\t\t\t0,\n\t\t\t0,\n\t\t\tA2(add, _char, acc)) : (((224 & _char) === 192) ? _Utils_Tuple3(31 & _char, 1, acc) : (((240 & _char) === 224) ? _Utils_Tuple3(15 & _char, 2, acc) : _Utils_Tuple3(7 & _char, 3, acc)))) : ((need === 1) ? _Utils_Tuple3(\n\t\t\t0,\n\t\t\t0,\n\t\t\tA2(\n\t\t\t\tadd,\n\t\t\t\tshiftAndAdd(_char),\n\t\t\t\tacc)) : _Utils_Tuple3(\n\t\t\tshiftAndAdd(_char),\n\t\t\tneed - 1,\n\t\t\tacc));\n\t});\nvar $zwilias$elm_utf_tools$String$UTF8$foldlUTF8 = F3(\n\tfunction (op, acc, input) {\n\t\tvar _v0 = A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\t$zwilias$elm_utf_tools$String$UTF8$utf8ToUtf32(op),\n\t\t\t_Utils_Tuple3(0, 0, acc),\n\t\t\tinput);\n\t\tif (!_v0.b) {\n\t\t\tvar res = _v0.c;\n\t\t\treturn $elm$core$Result$Ok(res);\n\t\t} else {\n\t\t\treturn $elm$core$Result$Err('invalid UTF-8 sequence');\n\t\t}\n\t});\nvar $elm$core$Char$fromCode = _Char_fromCode;\nvar $zwilias$elm_utf_tools$String$UTF8$utf32ByteToString = function (_byte) {\n\treturn $elm$core$String$fromChar(\n\t\t$elm$core$Char$fromCode(_byte));\n};\nvar $zwilias$elm_utf_tools$String$UTF8$toString = function (input) {\n\treturn A3(\n\t\t$zwilias$elm_utf_tools$String$UTF8$foldlUTF8,\n\t\tF2(\n\t\t\tfunction (_char, string) {\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\tstring,\n\t\t\t\t\t$zwilias$elm_utf_tools$String$UTF8$utf32ByteToString(_char));\n\t\t\t}),\n\t\t'',\n\t\tinput);\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$string = $cmditch$elm_ethereum$Eth$Abi$Decode$AbiDecoder(\n\tfunction (_v0) {\n\t\tvar original = _v0.a;\n\t\tvar altered = _v0.b;\n\t\treturn A2(\n\t\t\t$elm$core$Result$map,\n\t\t\tA2($cmditch$elm_ethereum$Eth$Abi$Decode$newTape, original, altered),\n\t\t\tA2(\n\t\t\t\t$elm$core$Result$andThen,\n\t\t\t\t$zwilias$elm_utf_tools$String$UTF8$toString,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Result$andThen,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t$elm$core$List$map($rtfeldman$elm_hex$Hex$fromString),\n\t\t\t\t\t\t$elm_community$result_extra$Result$Extra$combine),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\t$elm$core$List$filter(\n\t\t\t\t\t\t\tA2($elm$core$Basics$composeR, $elm$core$String$isEmpty, $elm$core$Basics$not)),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\t\t$elm_community$string_extra$String$Extra$break(2),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$buildBytes,\n\t\t\t\t\t\t\t\toriginal,\n\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$take64(altered)))))));\n\t});\nvar $elm$json$Json$Decode$index = _Json_decodeIndex;\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$topic = F2(\n\tfunction (index, abiDecoder) {\n\t\treturn A2(\n\t\t\t$elm$json$Json$Decode$field,\n\t\t\t'topics',\n\t\t\tA2(\n\t\t\t\t$elm$json$Json$Decode$index,\n\t\t\t\tindex,\n\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$toElmDecoder(abiDecoder)));\n\t});\nvar $cmditch$elm_bigint$BigInt$BigIntNotNormalised = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'BigIntNotNormalised', a: a, b: b};\n\t});\nvar $cmditch$elm_bigint$BigInt$MagnitudeNotNormalised = function (a) {\n\treturn {$: 'MagnitudeNotNormalised', a: a};\n};\nvar $cmditch$elm_bigint$BigInt$Positive = {$: 'Positive'};\nvar $cmditch$elm_bigint$BigInt$Magnitude = function (a) {\n\treturn {$: 'Magnitude', a: a};\n};\nvar $elm_community$list_extra$List$Extra$last = function (items) {\n\tlast:\n\twhile (true) {\n\t\tif (!items.b) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tif (!items.b.b) {\n\t\t\t\tvar x = items.a;\n\t\t\t\treturn $elm$core$Maybe$Just(x);\n\t\t\t} else {\n\t\t\t\tvar rest = items.b;\n\t\t\t\tvar $temp$items = rest;\n\t\t\t\titems = $temp$items;\n\t\t\t\tcontinue last;\n\t\t\t}\n\t\t}\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$isNegativeMagnitude = function (digits) {\n\tvar _v0 = $elm_community$list_extra$List$Extra$last(digits);\n\tif (_v0.$ === 'Nothing') {\n\t\treturn false;\n\t} else {\n\t\tvar x = _v0.a;\n\t\treturn x < 0;\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$Neg = function (a) {\n\treturn {$: 'Neg', a: a};\n};\nvar $cmditch$elm_bigint$BigInt$Pos = function (a) {\n\treturn {$: 'Pos', a: a};\n};\nvar $cmditch$elm_bigint$BigInt$Zer = {$: 'Zer'};\nvar $elm$core$List$isEmpty = function (xs) {\n\tif (!xs.b) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$mkBigInt = F2(\n\tfunction (s, mag) {\n\t\tvar digits = mag.a;\n\t\tif ($elm$core$List$isEmpty(digits)) {\n\t\t\treturn $cmditch$elm_bigint$BigInt$Zer;\n\t\t} else {\n\t\t\tswitch (s.$) {\n\t\t\t\tcase 'Zero':\n\t\t\t\t\treturn $cmditch$elm_bigint$BigInt$Zer;\n\t\t\t\tcase 'Positive':\n\t\t\t\t\treturn $cmditch$elm_bigint$BigInt$Pos(mag);\n\t\t\t\tdefault:\n\t\t\t\t\treturn $cmditch$elm_bigint$BigInt$Neg(mag);\n\t\t\t}\n\t\t}\n\t});\nvar $cmditch$elm_bigint$BigInt$mkBigIntNotNormalised = F2(\n\tfunction (s, digits) {\n\t\treturn A2(\n\t\t\t$cmditch$elm_bigint$BigInt$BigIntNotNormalised,\n\t\t\ts,\n\t\t\t$cmditch$elm_bigint$BigInt$MagnitudeNotNormalised(digits));\n\t});\nvar $elm_community$list_extra$List$Extra$dropWhileRight = function (p) {\n\treturn A2(\n\t\t$elm$core$List$foldr,\n\t\tF2(\n\t\t\tfunction (x, xs) {\n\t\t\t\treturn (p(x) && $elm$core$List$isEmpty(xs)) ? _List_Nil : A2($elm$core$List$cons, x, xs);\n\t\t\t}),\n\t\t_List_Nil);\n};\nvar $cmditch$elm_bigint$BigInt$dropZeroes = $elm_community$list_extra$List$Extra$dropWhileRight(\n\t$elm$core$Basics$eq(0));\nvar $cmditch$elm_bigint$Constants$maxDigitMagnitude = 7;\nvar $cmditch$elm_bigint$Constants$maxDigitValue = (-1) + A2($elm$core$Basics$pow, 10, $cmditch$elm_bigint$Constants$maxDigitMagnitude);\nvar $cmditch$elm_bigint$BigInt$baseDigit = $cmditch$elm_bigint$Constants$maxDigitValue + 1;\nvar $elm$core$Tuple$mapFirst = F2(\n\tfunction (func, _v0) {\n\t\tvar x = _v0.a;\n\t\tvar y = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\tfunc(x),\n\t\t\ty);\n\t});\nvar $cmditch$elm_bigint$BigInt$normaliseDigit = function (x) {\n\treturn (x < 0) ? A2(\n\t\t$elm$core$Tuple$mapFirst,\n\t\t$elm$core$Basics$add(-1),\n\t\t$cmditch$elm_bigint$BigInt$normaliseDigit(x + $cmditch$elm_bigint$BigInt$baseDigit)) : _Utils_Tuple2((x / $cmditch$elm_bigint$BigInt$baseDigit) | 0, x % $cmditch$elm_bigint$BigInt$baseDigit);\n};\nvar $cmditch$elm_bigint$BigInt$normaliseDigitList = F2(\n\tfunction (carry, xs) {\n\t\tnormaliseDigitList:\n\t\twhile (true) {\n\t\t\tif (!xs.b) {\n\t\t\t\tif (_Utils_cmp(carry, $cmditch$elm_bigint$BigInt$baseDigit) > 0) {\n\t\t\t\t\tvar $temp$carry = 0,\n\t\t\t\t\t\t$temp$xs = _List_fromArray(\n\t\t\t\t\t\t[carry]);\n\t\t\t\t\tcarry = $temp$carry;\n\t\t\t\t\txs = $temp$xs;\n\t\t\t\t\tcontinue normaliseDigitList;\n\t\t\t\t} else {\n\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t[carry]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar x = xs.a;\n\t\t\t\tvar xs_ = xs.b;\n\t\t\t\tvar _v1 = $cmditch$elm_bigint$BigInt$normaliseDigit(x + carry);\n\t\t\t\tvar newCarry = _v1.a;\n\t\t\t\tvar x_ = _v1.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\tx_,\n\t\t\t\t\tA2($cmditch$elm_bigint$BigInt$normaliseDigitList, newCarry, xs_));\n\t\t\t}\n\t\t}\n\t});\nvar $cmditch$elm_bigint$BigInt$normaliseMagnitude = function (_v0) {\n\tvar xs = _v0.a;\n\treturn $cmditch$elm_bigint$BigInt$Magnitude(\n\t\t$cmditch$elm_bigint$BigInt$dropZeroes(\n\t\t\tA2($cmditch$elm_bigint$BigInt$normaliseDigitList, 0, xs)));\n};\nvar $cmditch$elm_bigint$BigInt$reverseMagnitude = $elm$core$List$map($elm$core$Basics$negate);\nvar $cmditch$elm_bigint$BigInt$Negative = {$: 'Negative'};\nvar $cmditch$elm_bigint$BigInt$Zero = {$: 'Zero'};\nvar $cmditch$elm_bigint$BigInt$signNegate = function (sign_) {\n\tswitch (sign_.$) {\n\t\tcase 'Positive':\n\t\t\treturn $cmditch$elm_bigint$BigInt$Negative;\n\t\tcase 'Negative':\n\t\t\treturn $cmditch$elm_bigint$BigInt$Positive;\n\t\tdefault:\n\t\t\treturn $cmditch$elm_bigint$BigInt$Zero;\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$normalise = function (_v0) {\n\tnormalise:\n\twhile (true) {\n\t\tvar s = _v0.a;\n\t\tvar digits = _v0.b;\n\t\tvar _v1 = $cmditch$elm_bigint$BigInt$normaliseMagnitude(digits);\n\t\tvar normalisedMag = _v1.a;\n\t\tif ($cmditch$elm_bigint$BigInt$isNegativeMagnitude(normalisedMag)) {\n\t\t\tvar $temp$_v0 = A2(\n\t\t\t\t$cmditch$elm_bigint$BigInt$mkBigIntNotNormalised,\n\t\t\t\t$cmditch$elm_bigint$BigInt$signNegate(s),\n\t\t\t\t$cmditch$elm_bigint$BigInt$reverseMagnitude(normalisedMag));\n\t\t\t_v0 = $temp$_v0;\n\t\t\tcontinue normalise;\n\t\t} else {\n\t\t\treturn A2(\n\t\t\t\t$cmditch$elm_bigint$BigInt$mkBigInt,\n\t\t\t\ts,\n\t\t\t\t$cmditch$elm_bigint$BigInt$Magnitude(normalisedMag));\n\t\t}\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$MagnitudePair = function (a) {\n\treturn {$: 'MagnitudePair', a: a};\n};\nvar $cmditch$elm_bigint$BigInt$sameSizeRaw = F2(\n\tfunction (xs, ys) {\n\t\tvar _v0 = _Utils_Tuple2(xs, ys);\n\t\tif (!_v0.a.b) {\n\t\t\tif (!_v0.b.b) {\n\t\t\t\treturn _List_Nil;\n\t\t\t} else {\n\t\t\t\tvar _v2 = _v0.b;\n\t\t\t\tvar y = _v2.a;\n\t\t\t\tvar ys_ = _v2.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(0, y),\n\t\t\t\t\tA2($cmditch$elm_bigint$BigInt$sameSizeRaw, _List_Nil, ys_));\n\t\t\t}\n\t\t} else {\n\t\t\tif (!_v0.b.b) {\n\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\tvar x = _v1.a;\n\t\t\t\tvar xs_ = _v1.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(x, 0),\n\t\t\t\t\tA2($cmditch$elm_bigint$BigInt$sameSizeRaw, xs_, _List_Nil));\n\t\t\t} else {\n\t\t\t\tvar _v3 = _v0.a;\n\t\t\t\tvar x = _v3.a;\n\t\t\t\tvar xs_ = _v3.b;\n\t\t\t\tvar _v4 = _v0.b;\n\t\t\t\tvar y = _v4.a;\n\t\t\t\tvar ys_ = _v4.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(x, y),\n\t\t\t\t\tA2($cmditch$elm_bigint$BigInt$sameSizeRaw, xs_, ys_));\n\t\t\t}\n\t\t}\n\t});\nvar $cmditch$elm_bigint$BigInt$sameSizeNotNormalized = F2(\n\tfunction (_v0, _v1) {\n\t\tvar xs = _v0.a;\n\t\tvar ys = _v1.a;\n\t\treturn $cmditch$elm_bigint$BigInt$MagnitudePair(\n\t\t\tA2($cmditch$elm_bigint$BigInt$sameSizeRaw, xs, ys));\n\t});\nvar $cmditch$elm_bigint$BigInt$toPositiveSign = function (bigInt) {\n\tswitch (bigInt.$) {\n\t\tcase 'Zer':\n\t\t\treturn A2($cmditch$elm_bigint$BigInt$mkBigIntNotNormalised, $cmditch$elm_bigint$BigInt$Zero, _List_Nil);\n\t\tcase 'Neg':\n\t\t\tvar digits = bigInt.a.a;\n\t\t\treturn A2(\n\t\t\t\t$cmditch$elm_bigint$BigInt$mkBigIntNotNormalised,\n\t\t\t\t$cmditch$elm_bigint$BigInt$Positive,\n\t\t\t\t$cmditch$elm_bigint$BigInt$reverseMagnitude(digits));\n\t\tdefault:\n\t\t\tvar digits = bigInt.a.a;\n\t\t\treturn A2($cmditch$elm_bigint$BigInt$mkBigIntNotNormalised, $cmditch$elm_bigint$BigInt$Positive, digits);\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$add = F2(\n\tfunction (a, b) {\n\t\tvar _v0 = $cmditch$elm_bigint$BigInt$toPositiveSign(b);\n\t\tvar mb = _v0.b;\n\t\tvar _v1 = $cmditch$elm_bigint$BigInt$toPositiveSign(a);\n\t\tvar ma = _v1.b;\n\t\tvar _v2 = A2($cmditch$elm_bigint$BigInt$sameSizeNotNormalized, ma, mb);\n\t\tvar pairs = _v2.a;\n\t\tvar added = A2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (_v3) {\n\t\t\t\tvar a_ = _v3.a;\n\t\t\t\tvar b_ = _v3.b;\n\t\t\t\treturn a_ + b_;\n\t\t\t},\n\t\t\tpairs);\n\t\treturn $cmditch$elm_bigint$BigInt$normalise(\n\t\t\tA2(\n\t\t\t\t$cmditch$elm_bigint$BigInt$BigIntNotNormalised,\n\t\t\t\t$cmditch$elm_bigint$BigInt$Positive,\n\t\t\t\t$cmditch$elm_bigint$BigInt$MagnitudeNotNormalised(added)));\n\t});\nvar $elm$core$Maybe$map2 = F3(\n\tfunction (func, ma, mb) {\n\t\tif (ma.$ === 'Nothing') {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar a = ma.a;\n\t\t\tif (mb.$ === 'Nothing') {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar b = mb.a;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA2(func, a, b));\n\t\t\t}\n\t\t}\n\t});\nvar $elm_community$maybe_extra$Maybe$Extra$combine = A2(\n\t$elm$core$List$foldr,\n\t$elm$core$Maybe$map2($elm$core$List$cons),\n\t$elm$core$Maybe$Just(_List_Nil));\nvar $elm$core$Basics$abs = function (n) {\n\treturn (n < 0) ? (-n) : n;\n};\nvar $cmditch$elm_bigint$BigInt$signFromInt = function (x) {\n\tvar _v0 = A2($elm$core$Basics$compare, x, 0);\n\tswitch (_v0.$) {\n\t\tcase 'LT':\n\t\t\treturn $cmditch$elm_bigint$BigInt$Negative;\n\t\tcase 'GT':\n\t\t\treturn $cmditch$elm_bigint$BigInt$Positive;\n\t\tdefault:\n\t\t\treturn $cmditch$elm_bigint$BigInt$Zero;\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$fromInt = function (x) {\n\treturn $cmditch$elm_bigint$BigInt$normalise(\n\t\tA2(\n\t\t\t$cmditch$elm_bigint$BigInt$BigIntNotNormalised,\n\t\t\t$cmditch$elm_bigint$BigInt$signFromInt(x),\n\t\t\t$cmditch$elm_bigint$BigInt$MagnitudeNotNormalised(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$core$Basics$abs(x)\n\t\t\t\t\t]))));\n};\nvar $cmditch$elm_bigint$BigInt$magnitude = function (bigInt) {\n\tswitch (bigInt.$) {\n\t\tcase 'Zer':\n\t\t\treturn $cmditch$elm_bigint$BigInt$Magnitude(_List_Nil);\n\t\tcase 'Pos':\n\t\t\tvar mag = bigInt.a;\n\t\t\treturn mag;\n\t\tdefault:\n\t\t\tvar mag = bigInt.a;\n\t\t\treturn mag;\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$mulSingleDigit = F2(\n\tfunction (_v0, d) {\n\t\tvar xs = _v0.a;\n\t\treturn $cmditch$elm_bigint$BigInt$normaliseMagnitude(\n\t\t\t$cmditch$elm_bigint$BigInt$MagnitudeNotNormalised(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Basics$mul(d),\n\t\t\t\t\txs)));\n\t});\nvar $cmditch$elm_bigint$BigInt$mulMagnitudes = F2(\n\tfunction (_v0, _v1) {\n\t\tvar mag1 = _v0.a;\n\t\tvar mag2 = _v1.a;\n\t\tif (!mag1.b) {\n\t\t\treturn $cmditch$elm_bigint$BigInt$Magnitude(_List_Nil);\n\t\t} else {\n\t\t\tif (!mag1.b.b) {\n\t\t\t\tvar m = mag1.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$mulSingleDigit,\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$Magnitude(mag2),\n\t\t\t\t\tm);\n\t\t\t} else {\n\t\t\t\tvar m = mag1.a;\n\t\t\t\tvar mx = mag1.b;\n\t\t\t\tvar accum = A2(\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$mulSingleDigit,\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$Magnitude(mag2),\n\t\t\t\t\tm);\n\t\t\t\tvar _v3 = A2(\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$mulMagnitudes,\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$Magnitude(mx),\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$Magnitude(mag2));\n\t\t\t\tvar rest = _v3.a;\n\t\t\t\tvar bigInt = A2(\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$add,\n\t\t\t\t\tA2($cmditch$elm_bigint$BigInt$mkBigInt, $cmditch$elm_bigint$BigInt$Positive, accum),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$mkBigInt,\n\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$Positive,\n\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$Magnitude(\n\t\t\t\t\t\t\tA2($elm$core$List$cons, 0, rest))));\n\t\t\t\treturn $cmditch$elm_bigint$BigInt$magnitude(bigInt);\n\t\t\t}\n\t\t}\n\t});\nvar $cmditch$elm_bigint$BigInt$sign = function (bigInt) {\n\tswitch (bigInt.$) {\n\t\tcase 'Zer':\n\t\t\treturn $cmditch$elm_bigint$BigInt$Zero;\n\t\tcase 'Pos':\n\t\t\treturn $cmditch$elm_bigint$BigInt$Positive;\n\t\tdefault:\n\t\t\treturn $cmditch$elm_bigint$BigInt$Negative;\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$signProduct = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_eq(x, $cmditch$elm_bigint$BigInt$Zero) || _Utils_eq(y, $cmditch$elm_bigint$BigInt$Zero)) ? $cmditch$elm_bigint$BigInt$Zero : (_Utils_eq(x, y) ? $cmditch$elm_bigint$BigInt$Positive : $cmditch$elm_bigint$BigInt$Negative);\n\t});\nvar $cmditch$elm_bigint$BigInt$mul = F2(\n\tfunction (int1, int2) {\n\t\treturn A2(\n\t\t\t$cmditch$elm_bigint$BigInt$mkBigInt,\n\t\t\tA2(\n\t\t\t\t$cmditch$elm_bigint$BigInt$signProduct,\n\t\t\t\t$cmditch$elm_bigint$BigInt$sign(int1),\n\t\t\t\t$cmditch$elm_bigint$BigInt$sign(int2)),\n\t\t\tA2(\n\t\t\t\t$cmditch$elm_bigint$BigInt$mulMagnitudes,\n\t\t\t\t$cmditch$elm_bigint$BigInt$magnitude(int1),\n\t\t\t\t$cmditch$elm_bigint$BigInt$magnitude(int2)));\n\t});\nvar $cmditch$elm_bigint$BigInt$eightHexDigits = A2(\n\t$cmditch$elm_bigint$BigInt$mul,\n\t$cmditch$elm_bigint$BigInt$fromInt(2),\n\t$cmditch$elm_bigint$BigInt$fromInt(2147483648));\nvar $elm$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm_community$list_extra$List$Extra$greedyGroupsOfWithStep = F3(\n\tfunction (size, step, xs) {\n\t\tvar xs_ = A2($elm$core$List$drop, step, xs);\n\t\tvar okayXs = $elm$core$List$length(xs) > 0;\n\t\tvar okayArgs = (size > 0) && (step > 0);\n\t\treturn (okayArgs && okayXs) ? A2(\n\t\t\t$elm$core$List$cons,\n\t\t\tA2($elm$core$List$take, size, xs),\n\t\t\tA3($elm_community$list_extra$List$Extra$greedyGroupsOfWithStep, size, step, xs_)) : _List_Nil;\n\t});\nvar $elm_community$list_extra$List$Extra$greedyGroupsOf = F2(\n\tfunction (size, xs) {\n\t\treturn A3($elm_community$list_extra$List$Extra$greedyGroupsOfWithStep, size, size, xs);\n\t});\nvar $cmditch$elm_bigint$Constants$hexDigitMagnitude = 8;\nvar $elm$core$Result$toMaybe = function (result) {\n\tif (result.$ === 'Ok') {\n\t\tvar v = result.a;\n\t\treturn $elm$core$Maybe$Just(v);\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$zero = $cmditch$elm_bigint$BigInt$fromInt(0);\nvar $cmditch$elm_bigint$BigInt$fromHexString_ = function (x) {\n\tvar _v0 = A2(\n\t\t$elm$regex$Regex$contains,\n\t\tA2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t$elm$regex$Regex$never,\n\t\t\t$elm$regex$Regex$fromString('^[0-9A-Fa-f]')),\n\t\t$elm$core$String$fromList(x));\n\tif (_v0) {\n\t\treturn A2(\n\t\t\t$elm$core$Maybe$map,\n\t\t\tA2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t$elm$core$List$reverse,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\tF2(\n\t\t\t\t\t\tfunction (e, s) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$add,\n\t\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromInt(e),\n\t\t\t\t\t\t\t\tA2($cmditch$elm_bigint$BigInt$mul, s, $cmditch$elm_bigint$BigInt$eightHexDigits));\n\t\t\t\t\t\t}),\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$zero)),\n\t\t\t$elm_community$maybe_extra$Maybe$Extra$combine(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t$elm$core$List$reverse,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t$elm$core$String$fromList,\n\t\t\t\t\t\t\tA2($elm$core$Basics$composeR, $rtfeldman$elm_hex$Hex$fromString, $elm$core$Result$toMaybe))),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm_community$list_extra$List$Extra$greedyGroupsOf,\n\t\t\t\t\t\t$cmditch$elm_bigint$Constants$hexDigitMagnitude,\n\t\t\t\t\t\t$elm$core$List$reverse(x)))));\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$fromHexString = function (x) {\n\tvar _v0 = $elm$core$String$toList(\n\t\t$elm$core$String$toLower(x));\n\t_v0$9:\n\twhile (true) {\n\t\tif (!_v0.b) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tswitch (_v0.a.valueOf()) {\n\t\t\t\tcase '-':\n\t\t\t\t\tif (_v0.b.b) {\n\t\t\t\t\t\tif ((('0' === _v0.b.a.valueOf()) && _v0.b.b.b) && ('x' === _v0.b.b.a.valueOf())) {\n\t\t\t\t\t\t\tif (!_v0.b.b.b.b) {\n\t\t\t\t\t\t\t\tvar _v1 = _v0.b;\n\t\t\t\t\t\t\t\tvar _v2 = _v1.b;\n\t\t\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar _v3 = _v0.b;\n\t\t\t\t\t\t\t\tvar _v4 = _v3.b;\n\t\t\t\t\t\t\t\tvar xs = _v4.b;\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$mul(\n\t\t\t\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromInt(-1)),\n\t\t\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromHexString_(xs));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar xs = _v0.b;\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$mul(\n\t\t\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromInt(-1)),\n\t\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromHexString_(xs));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t}\n\t\t\t\tcase '+':\n\t\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar xs = _v0.b;\n\t\t\t\t\t\treturn $cmditch$elm_bigint$BigInt$fromHexString_(xs);\n\t\t\t\t\t}\n\t\t\t\tcase '0':\n\t\t\t\t\tif (_v0.b.b && ('x' === _v0.b.a.valueOf())) {\n\t\t\t\t\t\tif (!_v0.b.b.b) {\n\t\t\t\t\t\t\tvar _v5 = _v0.b;\n\t\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _v6 = _v0.b;\n\t\t\t\t\t\t\tvar xs = _v6.b;\n\t\t\t\t\t\t\treturn $cmditch$elm_bigint$BigInt$fromHexString_(xs);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$9;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tbreak _v0$9;\n\t\t\t}\n\t\t}\n\t}\n\tvar xs = _v0;\n\treturn $cmditch$elm_bigint$BigInt$fromHexString_(xs);\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$uint = $cmditch$elm_ethereum$Eth$Abi$Decode$AbiDecoder(\n\tfunction (_v0) {\n\t\tvar original = _v0.a;\n\t\tvar altered = _v0.b;\n\t\treturn A2(\n\t\t\t$elm$core$Result$map,\n\t\t\tA2($cmditch$elm_ethereum$Eth$Abi$Decode$newTape, original, altered),\n\t\t\tA2(\n\t\t\t\t$elm$core$Result$fromMaybe,\n\t\t\t\t'Error Decoding Uint into BigInt',\n\t\t\t\t$cmditch$elm_bigint$BigInt$fromHexString(\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$add0x(\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$take64(altered)))));\n\t});\nvar $author$project$Contracts$Generated$SmokeSignal$messageBurnDecoder = A2(\n\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,\n\tA2($cmditch$elm_ethereum$Eth$Abi$Decode$data, 2, $cmditch$elm_ethereum$Eth$Abi$Decode$string),\n\tA2(\n\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,\n\t\tA2($cmditch$elm_ethereum$Eth$Abi$Decode$data, 1, $cmditch$elm_ethereum$Eth$Abi$Decode$uint),\n\t\tA2(\n\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,\n\t\t\tA2($cmditch$elm_ethereum$Eth$Abi$Decode$data, 0, $cmditch$elm_ethereum$Eth$Abi$Decode$uint),\n\t\t\tA2(\n\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,\n\t\t\t\tA2($cmditch$elm_ethereum$Eth$Abi$Decode$topic, 2, $cmditch$elm_ethereum$Eth$Abi$Decode$address),\n\t\t\t\tA2(\n\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$topic,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$staticBytes(32)),\n\t\t\t\t\t$elm$json$Json$Decode$succeed($author$project$Contracts$Generated$SmokeSignal$MessageBurn))))));\nvar $author$project$Types$LogReply = function (a) {\n\treturn {$: 'LogReply', a: a};\n};\nvar $author$project$Types$LogRoot = function (a) {\n\treturn {$: 'LogRoot', a: a};\n};\nvar $author$project$Types$Content = F3(\n\tfunction (title, desc, body) {\n\t\treturn {body: body, desc: desc, title: title};\n\t});\nvar $author$project$Post$justBodyContent = A2($author$project$Types$Content, $elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing);\nvar $elm_community$string_extra$String$Extra$nonEmpty = function (string) {\n\treturn $elm$core$String$isEmpty(string) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(string);\n};\nvar $author$project$Post$messageDataDecoder = function (metadataVersion) {\n\treturn A2(\n\t\t$elm$json$Json$Decode$field,\n\t\t'm',\n\t\t(metadataVersion < 3) ? A2($elm$json$Json$Decode$map, $author$project$Post$justBodyContent, $elm$json$Json$Decode$string) : A4(\n\t\t\t$elm$json$Json$Decode$map3,\n\t\t\t$author$project$Types$Content,\n\t\t\tA2(\n\t\t\t\t$elm$json$Json$Decode$index,\n\t\t\t\t0,\n\t\t\t\tA2($elm$json$Json$Decode$map, $elm_community$string_extra$String$Extra$nonEmpty, $elm$json$Json$Decode$string)),\n\t\t\tA2(\n\t\t\t\t$elm$json$Json$Decode$index,\n\t\t\t\t1,\n\t\t\t\tA2($elm$json$Json$Decode$map, $elm_community$string_extra$String$Extra$nonEmpty, $elm$json$Json$Decode$string)),\n\t\t\tA2($elm$json$Json$Decode$index, 2, $elm$json$Json$Decode$string)));\n};\nvar $elm$json$Json$Decode$maybe = function (decoder) {\n\treturn $elm$json$Json$Decode$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder),\n\t\t\t\t$elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing)\n\t\t\t]));\n};\nvar $author$project$Post$versionDecoder = A2(\n\t$elm$json$Json$Decode$map,\n\t$elm$core$Maybe$withDefault(1),\n\t$elm$json$Json$Decode$maybe(\n\t\tA2($elm$json$Json$Decode$field, 'v', $elm$json$Json$Decode$int)));\nvar $author$project$Types$Metadata = F3(\n\tfunction (metadataVersion, context, maybeDecodeError) {\n\t\treturn {context: context, maybeDecodeError: maybeDecodeError, metadataVersion: metadataVersion};\n\t});\nvar $author$project$Types$Reply = function (a) {\n\treturn {$: 'Reply', a: a};\n};\nvar $author$project$Types$PostId = F2(\n\tfunction (block, messageHash) {\n\t\treturn {block: block, messageHash: messageHash};\n\t});\nvar $cmditch$elm_ethereum$Eth$Utils$isHex = $elm$regex$Regex$contains(\n\tA2(\n\t\t$elm$core$Maybe$withDefault,\n\t\t$elm$regex$Regex$never,\n\t\t$elm$regex$Regex$fromString('^((0[Xx]){1})?[0-9a-fA-F]+$')));\nvar $cmditch$elm_ethereum$Eth$Utils$toHex = function (str) {\n\treturn $cmditch$elm_ethereum$Eth$Utils$isHex(str) ? $elm$core$Result$Ok(\n\t\t$cmditch$elm_ethereum$Internal$Types$Hex(\n\t\t\t$cmditch$elm_ethereum$Eth$Utils$remove0x(str))) : $elm$core$Result$Err(\n\t\t'Something in here is not very hexy: ' + $cmditch$elm_ethereum$Eth$Utils$quote(str));\n};\nvar $author$project$Post$hexDecoder = A2(\n\t$elm$json$Json$Decode$andThen,\n\tA2(\n\t\t$elm$core$Basics$composeR,\n\t\t$cmditch$elm_ethereum$Eth$Utils$toHex,\n\t\tA2($elm_community$result_extra$Result$Extra$unpack, $elm$json$Json$Decode$fail, $elm$json$Json$Decode$succeed)),\n\t$elm$json$Json$Decode$string);\nvar $author$project$Post$postIdDecoder = A3(\n\t$elm$json$Json$Decode$map2,\n\t$author$project$Types$PostId,\n\tA2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$int),\n\tA2($elm$json$Json$Decode$index, 1, $author$project$Post$hexDecoder));\nvar $author$project$Post$contextDecoder = $elm$json$Json$Decode$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$json$Json$Decode$map,\n\t\t\t$author$project$Types$Reply,\n\t\t\tA2($elm$json$Json$Decode$field, 're', $author$project$Post$postIdDecoder)),\n\t\t\tA2(\n\t\t\t$elm$json$Json$Decode$map,\n\t\t\t$author$project$Types$TopLevel,\n\t\t\tA2($elm$json$Json$Decode$field, 'topic', $elm$json$Json$Decode$string))\n\t\t]));\nvar $author$project$Post$currentMetadataDecoder = function (decodedVersion) {\n\treturn A2(\n\t\t$elm$json$Json$Decode$map,\n\t\tfunction (context) {\n\t\t\treturn A3($author$project$Types$Metadata, decodedVersion, context, $elm$core$Maybe$Nothing);\n\t\t},\n\t\tA2($elm$json$Json$Decode$field, 'c', $author$project$Post$contextDecoder));\n};\nvar $author$project$Post$currentMetadataVersion = 3;\nvar $author$project$Post$nullMetadata = A3(\n\t$author$project$Types$Metadata,\n\t0,\n\t$author$project$Types$TopLevel($author$project$Post$defaultTopic),\n\t$elm$core$Maybe$Nothing);\nvar $author$project$Post$versionedMetadataDecoder = function (version) {\n\tswitch (version) {\n\t\tcase 0:\n\t\t\treturn $elm$json$Json$Decode$succeed($author$project$Post$nullMetadata);\n\t\tcase 1:\n\t\t\treturn A2(\n\t\t\t\t$elm$json$Json$Decode$map,\n\t\t\t\tfunction (maybeReplyTo) {\n\t\t\t\t\tif (maybeReplyTo.$ === 'Just') {\n\t\t\t\t\t\tvar replyTo = maybeReplyTo.a;\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$author$project$Types$Metadata,\n\t\t\t\t\t\t\tversion,\n\t\t\t\t\t\t\t$author$project$Types$Reply(replyTo),\n\t\t\t\t\t\t\t$elm$core$Maybe$Nothing);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$author$project$Types$Metadata,\n\t\t\t\t\t\t\tversion,\n\t\t\t\t\t\t\t$author$project$Types$TopLevel($author$project$Post$defaultTopic),\n\t\t\t\t\t\t\t$elm$core$Maybe$Nothing);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t$elm$json$Json$Decode$maybe(\n\t\t\t\t\tA2($elm$json$Json$Decode$field, 're', $author$project$Post$postIdDecoder)));\n\t\tcase 2:\n\t\t\treturn A2(\n\t\t\t\t$elm$json$Json$Decode$map,\n\t\t\t\tfunction (context) {\n\t\t\t\t\treturn A3($author$project$Types$Metadata, version, context, $elm$core$Maybe$Nothing);\n\t\t\t\t},\n\t\t\t\tA2($elm$json$Json$Decode$field, 'c', $author$project$Post$contextDecoder));\n\t\tcase 3:\n\t\t\treturn $author$project$Post$currentMetadataDecoder(version);\n\t\tdefault:\n\t\t\treturn A2(\n\t\t\t\t$elm$json$Json$Decode$map,\n\t\t\t\tfunction (metadata) {\n\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\tmetadata,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaybeDecodeError: $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t'Unknown metadata version \\'' + ($elm$core$String$fromInt(version) + ('\\'. Decoding for version \\'' + ($elm$core$String$fromInt($author$project$Post$currentMetadataVersion) + '\\'.'))))\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t$author$project$Post$currentMetadataDecoder(version));\n\t}\n};\nvar $author$project$Post$metadataDecoder = A2($elm$json$Json$Decode$andThen, $author$project$Post$versionedMetadataDecoder, $author$project$Post$versionDecoder);\nvar $author$project$Misc$postIdToKey = function (id) {\n\treturn _Utils_Tuple2(\n\t\t$elm$core$String$fromInt(id.block),\n\t\t$cmditch$elm_ethereum$Eth$Utils$hexToString(id.messageHash));\n};\nvar $author$project$TokenValue$TokenValue = function (a) {\n\treturn {$: 'TokenValue', a: a};\n};\nvar $author$project$TokenValue$tokenValue = function (evmValue) {\n\treturn $author$project$TokenValue$TokenValue(evmValue);\n};\nvar $author$project$Contracts$SmokeSignal$postDecoder = F3(\n\tfunction (chain, log, messageBurn) {\n\t\tvar _v0 = A2($elm$core$String$split, '!smokesignal', messageBurn.message);\n\t\tif ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {\n\t\t\tvar _v1 = _v0.b;\n\t\t\tvar encoded = _v1.a;\n\t\t\treturn A3(\n\t\t\t\t$elm_community$result_extra$Result$Extra$unpack,\n\t\t\t\tA2($elm$core$Basics$composeR, $elm$json$Json$Decode$errorToString, $elm$json$Json$Decode$fail),\n\t\t\t\t$elm$json$Json$Decode$succeed,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$json$Json$Decode$decodeString,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\tfunction (metadata) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$json$Json$Decode$map,\n\t\t\t\t\t\t\t\tfunction (content) {\n\t\t\t\t\t\t\t\t\tvar id = {block: log.blockNumber, messageHash: messageBurn.hash};\n\t\t\t\t\t\t\t\t\tvar key = $author$project$Misc$postIdToKey(id);\n\t\t\t\t\t\t\t\t\tvar core = {\n\t\t\t\t\t\t\t\t\t\tauthor: messageBurn.from,\n\t\t\t\t\t\t\t\t\t\tauthorBurn: $author$project$TokenValue$tokenValue(messageBurn.burnAmount),\n\t\t\t\t\t\t\t\t\t\tchain: chain,\n\t\t\t\t\t\t\t\t\t\tcontent: content,\n\t\t\t\t\t\t\t\t\t\tid: id,\n\t\t\t\t\t\t\t\t\t\tkey: key,\n\t\t\t\t\t\t\t\t\t\tmetadataVersion: metadata.metadataVersion,\n\t\t\t\t\t\t\t\t\t\ttxHash: log.transactionHash\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tvar _v2 = metadata.context;\n\t\t\t\t\t\t\t\t\tif (_v2.$ === 'TopLevel') {\n\t\t\t\t\t\t\t\t\t\tvar topic = _v2.a;\n\t\t\t\t\t\t\t\t\t\treturn $author$project$Types$LogRoot(\n\t\t\t\t\t\t\t\t\t\t\t{core: core, topic: topic});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar parent = _v2.a;\n\t\t\t\t\t\t\t\t\t\treturn $author$project$Types$LogReply(\n\t\t\t\t\t\t\t\t\t\t\t{core: core, parent: parent});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t$author$project$Post$messageDataDecoder(metadata.metadataVersion));\n\t\t\t\t\t\t},\n\t\t\t\t\t\t$author$project$Post$metadataDecoder),\n\t\t\t\t\tencoded));\n\t\t} else {\n\t\t\treturn $elm$json$Json$Decode$fail('Missing \\'!smokesignal\\'');\n\t\t}\n\t});\nvar $author$project$Contracts$SmokeSignal$decodePost = F2(\n\tfunction (chain, log) {\n\t\treturn A2(\n\t\t\t$cmditch$elm_ethereum$Eth$Decode$event,\n\t\t\tA2(\n\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\tA2($author$project$Contracts$SmokeSignal$postDecoder, chain, log),\n\t\t\t\t$author$project$Contracts$Generated$SmokeSignal$messageBurnDecoder),\n\t\t\tlog);\n\t});\nvar $elm$core$String$repeatHelp = F3(\n\tfunction (n, chunk, result) {\n\t\treturn (n <= 0) ? result : A3(\n\t\t\t$elm$core$String$repeatHelp,\n\t\t\tn >> 1,\n\t\t\t_Utils_ap(chunk, chunk),\n\t\t\t(!(n & 1)) ? result : _Utils_ap(result, chunk));\n\t});\nvar $elm$core$String$repeat = F2(\n\tfunction (n, chunk) {\n\t\treturn A3($elm$core$String$repeatHelp, n, chunk, '');\n\t});\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$tillMod64 = function (n) {\n\tvar _v0 = A2($elm$core$Basics$modBy, 64, n);\n\tif (!_v0) {\n\t\treturn 0;\n\t} else {\n\t\tvar n_ = _v0;\n\t\treturn 64 - n_;\n\t}\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$rightPadMod64 = function (str) {\n\treturn _Utils_ap(\n\t\tstr,\n\t\tA2(\n\t\t\t$elm$core$String$repeat,\n\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$tillMod64(\n\t\t\t\t$elm$core$String$length(str)),\n\t\t\t'0'));\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$bytesOrStringToDynamicLLEncoding = function (strVal) {\n\treturn _Utils_Tuple2(\n\t\t$elm$core$Maybe$Just(\n\t\t\t($elm$core$String$length(strVal) / 2) | 0),\n\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$rightPadMod64(strVal));\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$listToDynamicLLEncoding = F2(\n\tfunction (listLen, strVal) {\n\t\treturn _Utils_Tuple2(\n\t\t\t$elm$core$Maybe$Just(listLen),\n\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$rightPadMod64(strVal));\n\t});\nvar $elm$core$String$padLeft = F3(\n\tfunction (n, _char, string) {\n\t\treturn _Utils_ap(\n\t\t\tA2(\n\t\t\t\t$elm$core$String$repeat,\n\t\t\t\tn - $elm$core$String$length(string),\n\t\t\t\t$elm$core$String$fromChar(_char)),\n\t\t\tstring);\n\t});\nvar $cmditch$elm_ethereum$Eth$Utils$leftPadTo64 = function (str) {\n\treturn A3(\n\t\t$elm$core$String$padLeft,\n\t\t64,\n\t\t_Utils_chr('0'),\n\t\tstr);\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$lowLevelEncodeList = function (vals) {\n\tvar reducer = F2(\n\t\tfunction (_v2, _v3) {\n\t\t\tvar mLength = _v2.a;\n\t\t\tvar val = _v2.b;\n\t\t\tvar dynValPointer = _v3.a;\n\t\t\tvar staticVals = _v3.b;\n\t\t\tvar dynamicVals = _v3.c;\n\t\t\tif (mLength.$ === 'Just') {\n\t\t\t\tvar length = mLength.a;\n\t\t\t\tvar newStaticVals = $cmditch$elm_ethereum$Eth$Utils$leftPadTo64(\n\t\t\t\t\t$rtfeldman$elm_hex$Hex$toString(dynValPointer));\n\t\t\t\tvar newDynVals = function (lengthInHex) {\n\t\t\t\t\treturn _Utils_ap(lengthInHex, val);\n\t\t\t\t}(\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$leftPadTo64(\n\t\t\t\t\t\t$rtfeldman$elm_hex$Hex$toString(length)));\n\t\t\t\tvar newDynValPointer = (dynValPointer + 32) + (($elm$core$String$length(val) / 2) | 0);\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tnewDynValPointer,\n\t\t\t\t\t_Utils_ap(staticVals, newStaticVals),\n\t\t\t\t\t_Utils_ap(dynamicVals, newDynVals));\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdynValPointer,\n\t\t\t\t\t_Utils_ap(staticVals, val),\n\t\t\t\t\tdynamicVals);\n\t\t\t}\n\t\t});\n\treturn function (_v0) {\n\t\tvar sVals = _v0.b;\n\t\tvar dVals = _v0.c;\n\t\treturn _Utils_ap(sVals, dVals);\n\t}(\n\t\tA3(\n\t\t\t$elm$core$List$foldl,\n\t\t\treducer,\n\t\t\t_Utils_Tuple3(\n\t\t\t\t$elm$core$List$length(vals) * 32,\n\t\t\t\t'',\n\t\t\t\t''),\n\t\t\tvals));\n};\nvar $elm$core$String$foldl = _String_foldl;\nvar $zwilias$elm_utf_tools$String$UTF8$utf32ToUtf8 = F3(\n\tfunction (add, _char, acc) {\n\t\treturn (_char < 128) ? A2(add, _char, acc) : ((_char < 2048) ? A2(\n\t\t\tadd,\n\t\t\t128 | (63 & _char),\n\t\t\tA2(add, 192 | (_char >>> 6), acc)) : ((_char < 65536) ? A2(\n\t\t\tadd,\n\t\t\t128 | (63 & _char),\n\t\t\tA2(\n\t\t\t\tadd,\n\t\t\t\t128 | (63 & (_char >>> 6)),\n\t\t\t\tA2(add, 224 | (_char >>> 12), acc))) : A2(\n\t\t\tadd,\n\t\t\t128 | (63 & _char),\n\t\t\tA2(\n\t\t\t\tadd,\n\t\t\t\t128 | (63 & (_char >>> 6)),\n\t\t\t\tA2(\n\t\t\t\t\tadd,\n\t\t\t\t\t128 | (63 & (_char >>> 12)),\n\t\t\t\t\tA2(add, 240 | (_char >>> 18), acc))))));\n\t});\nvar $zwilias$elm_utf_tools$String$UTF8$foldl = F3(\n\tfunction (op, initialAcc, input) {\n\t\treturn A3(\n\t\t\t$elm$core$String$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_char, acc) {\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$zwilias$elm_utf_tools$String$UTF8$utf32ToUtf8,\n\t\t\t\t\t\top,\n\t\t\t\t\t\t$elm$core$Char$toCode(_char),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\tinitialAcc,\n\t\t\tinput);\n\t});\nvar $zwilias$elm_utf_tools$String$UTF8$toBytes = function (input) {\n\treturn $elm$core$List$reverse(\n\t\tA3($zwilias$elm_utf_tools$String$UTF8$foldl, $elm$core$List$cons, _List_Nil, input));\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$stringToHex = function (strVal) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t'',\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tA2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t$rtfeldman$elm_hex$Hex$toString,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$String$padLeft,\n\t\t\t\t\t2,\n\t\t\t\t\t_Utils_chr('0'))),\n\t\t\t$zwilias$elm_utf_tools$String$UTF8$toBytes(strVal)));\n};\nvar $cmditch$elm_bigint$BigInt$bigIntToInt_ = function (bigInt) {\n\t_v0$3:\n\twhile (true) {\n\t\tswitch (bigInt.$) {\n\t\t\tcase 'Zer':\n\t\t\t\treturn 0;\n\t\t\tcase 'Pos':\n\t\t\t\tif (bigInt.a.a.b) {\n\t\t\t\t\tif (!bigInt.a.a.b.b) {\n\t\t\t\t\t\tvar _v1 = bigInt.a.a;\n\t\t\t\t\t\tvar a = _v1.a;\n\t\t\t\t\t\treturn a;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!bigInt.a.a.b.b.b) {\n\t\t\t\t\t\t\tvar _v2 = bigInt.a.a;\n\t\t\t\t\t\t\tvar a = _v2.a;\n\t\t\t\t\t\t\tvar _v3 = _v2.b;\n\t\t\t\t\t\t\tvar b = _v3.a;\n\t\t\t\t\t\t\treturn (b * A2($elm$core$Basics$pow, 10, $cmditch$elm_bigint$Constants$maxDigitMagnitude)) + a;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak _v0$3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak _v0$3;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak _v0$3;\n\t\t}\n\t}\n\treturn 42;\n};\nvar $cmditch$elm_bigint$BigInt$abs = function (bigInt) {\n\tswitch (bigInt.$) {\n\t\tcase 'Zer':\n\t\t\treturn $cmditch$elm_bigint$BigInt$Zer;\n\t\tcase 'Neg':\n\t\t\tvar mag = bigInt.a;\n\t\t\treturn $cmditch$elm_bigint$BigInt$Pos(mag);\n\t\tdefault:\n\t\t\tvar i = bigInt;\n\t\t\treturn i;\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$compareMagnitude = F4(\n\tfunction (x, y, xs, ys) {\n\t\tcompareMagnitude:\n\t\twhile (true) {\n\t\t\tvar _v0 = _Utils_Tuple2(xs, ys);\n\t\t\tif (!_v0.a.b) {\n\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\treturn A2($elm$core$Basics$compare, x, y);\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Basics$LT;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\treturn $elm$core$Basics$GT;\n\t\t\t\t} else {\n\t\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\t\tvar x_ = _v1.a;\n\t\t\t\t\tvar xss = _v1.b;\n\t\t\t\t\tvar _v2 = _v0.b;\n\t\t\t\t\tvar y_ = _v2.a;\n\t\t\t\t\tvar yss = _v2.b;\n\t\t\t\t\tif (_Utils_eq(x_, y_)) {\n\t\t\t\t\t\tvar $temp$x = x,\n\t\t\t\t\t\t\t$temp$y = y,\n\t\t\t\t\t\t\t$temp$xs = xss,\n\t\t\t\t\t\t\t$temp$ys = yss;\n\t\t\t\t\t\tx = $temp$x;\n\t\t\t\t\t\ty = $temp$y;\n\t\t\t\t\t\txs = $temp$xs;\n\t\t\t\t\t\tys = $temp$ys;\n\t\t\t\t\t\tcontinue compareMagnitude;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$x = x_,\n\t\t\t\t\t\t\t$temp$y = y_,\n\t\t\t\t\t\t\t$temp$xs = xss,\n\t\t\t\t\t\t\t$temp$ys = yss;\n\t\t\t\t\t\tx = $temp$x;\n\t\t\t\t\t\ty = $temp$y;\n\t\t\t\t\t\txs = $temp$xs;\n\t\t\t\t\t\tys = $temp$ys;\n\t\t\t\t\t\tcontinue compareMagnitude;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $cmditch$elm_bigint$BigInt$orderNegate = function (x) {\n\tswitch (x.$) {\n\t\tcase 'LT':\n\t\t\treturn $elm$core$Basics$GT;\n\t\tcase 'EQ':\n\t\t\treturn $elm$core$Basics$EQ;\n\t\tdefault:\n\t\t\treturn $elm$core$Basics$LT;\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$compare = F2(\n\tfunction (int1, int2) {\n\t\tvar _v0 = _Utils_Tuple2(int1, int2);\n\t\tswitch (_v0.a.$) {\n\t\t\tcase 'Pos':\n\t\t\t\tif (_v0.b.$ === 'Pos') {\n\t\t\t\t\tvar mag1 = _v0.a.a.a;\n\t\t\t\t\tvar mag2 = _v0.b.a.a;\n\t\t\t\t\treturn A4($cmditch$elm_bigint$BigInt$compareMagnitude, 0, 0, mag1, mag2);\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Basics$GT;\n\t\t\t\t}\n\t\t\tcase 'Neg':\n\t\t\t\tif (_v0.b.$ === 'Neg') {\n\t\t\t\t\tvar mag1 = _v0.a.a.a;\n\t\t\t\t\tvar mag2 = _v0.b.a.a;\n\t\t\t\t\treturn $cmditch$elm_bigint$BigInt$orderNegate(\n\t\t\t\t\t\tA4($cmditch$elm_bigint$BigInt$compareMagnitude, 0, 0, mag1, mag2));\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Basics$LT;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tswitch (_v0.b.$) {\n\t\t\t\t\tcase 'Pos':\n\t\t\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\t\t\treturn $elm$core$Basics$LT;\n\t\t\t\t\tcase 'Zer':\n\t\t\t\t\t\tvar _v2 = _v0.a;\n\t\t\t\t\t\tvar _v3 = _v0.b;\n\t\t\t\t\t\treturn $elm$core$Basics$EQ;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar _v4 = _v0.a;\n\t\t\t\t\t\treturn $elm$core$Basics$GT;\n\t\t\t\t}\n\t\t}\n\t});\nvar $cmditch$elm_bigint$BigInt$gt = F2(\n\tfunction (x, y) {\n\t\treturn _Utils_eq(\n\t\t\tA2($cmditch$elm_bigint$BigInt$compare, x, y),\n\t\t\t$elm$core$Basics$GT);\n\t});\nvar $cmditch$elm_bigint$BigInt$lte = F2(\n\tfunction (x, y) {\n\t\treturn !A2($cmditch$elm_bigint$BigInt$gt, x, y);\n\t});\nvar $cmditch$elm_bigint$BigInt$negate = function (bigInt) {\n\tswitch (bigInt.$) {\n\t\tcase 'Zer':\n\t\t\treturn $cmditch$elm_bigint$BigInt$Zer;\n\t\tcase 'Pos':\n\t\t\tvar mag = bigInt.a;\n\t\t\treturn $cmditch$elm_bigint$BigInt$Neg(mag);\n\t\tdefault:\n\t\t\tvar mag = bigInt.a;\n\t\t\treturn $cmditch$elm_bigint$BigInt$Pos(mag);\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$sub = F2(\n\tfunction (a, b) {\n\t\treturn A2(\n\t\t\t$cmditch$elm_bigint$BigInt$add,\n\t\t\ta,\n\t\t\t$cmditch$elm_bigint$BigInt$negate(b));\n\t});\nvar $cmditch$elm_bigint$BigInt$divmodDigit_ = F4(\n\tfunction (to_test, padding, num, den) {\n\t\tif (!to_test) {\n\t\t\treturn _Utils_Tuple2($cmditch$elm_bigint$BigInt$zero, num);\n\t\t} else {\n\t\t\tvar x = $cmditch$elm_bigint$BigInt$fromInt(to_test);\n\t\t\tvar candidate = A2(\n\t\t\t\t$cmditch$elm_bigint$BigInt$mul,\n\t\t\t\tA2($cmditch$elm_bigint$BigInt$mul, x, den),\n\t\t\t\tpadding);\n\t\t\tvar _v0 = A2($cmditch$elm_bigint$BigInt$lte, candidate, num) ? _Utils_Tuple2(\n\t\t\t\tA2($cmditch$elm_bigint$BigInt$mul, x, padding),\n\t\t\t\tA2($cmditch$elm_bigint$BigInt$sub, num, candidate)) : _Utils_Tuple2($cmditch$elm_bigint$BigInt$zero, num);\n\t\t\tvar newdiv = _v0.a;\n\t\t\tvar newmod = _v0.b;\n\t\t\tvar _v1 = A4($cmditch$elm_bigint$BigInt$divmodDigit_, (to_test / 2) | 0, padding, newmod, den);\n\t\t\tvar restdiv = _v1.a;\n\t\t\tvar restmod = _v1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tA2($cmditch$elm_bigint$BigInt$add, newdiv, restdiv),\n\t\t\t\trestmod);\n\t\t}\n\t});\nvar $cmditch$elm_bigint$BigInt$maxDigitBits = $elm$core$Basics$ceiling(\n\tA2($elm$core$Basics$logBase, 2, $cmditch$elm_bigint$Constants$maxDigitValue));\nvar $cmditch$elm_bigint$BigInt$divmodDigit = F3(\n\tfunction (padding, x, y) {\n\t\treturn A4(\n\t\t\t$cmditch$elm_bigint$BigInt$divmodDigit_,\n\t\t\tA2($elm$core$Basics$pow, 2, $cmditch$elm_bigint$BigInt$maxDigitBits),\n\t\t\tpadding,\n\t\t\tx,\n\t\t\ty);\n\t});\nvar $cmditch$elm_bigint$BigInt$one = $cmditch$elm_bigint$BigInt$fromInt(1);\nvar $cmditch$elm_bigint$BigInt$repeatedly = F3(\n\tfunction (f, x, n) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\t$elm$core$Basics$always(f),\n\t\t\tx,\n\t\t\tA2($elm$core$List$range, 1, n));\n\t});\nvar $cmditch$elm_bigint$BigInt$padDigits = function (n) {\n\treturn A3(\n\t\t$cmditch$elm_bigint$BigInt$repeatedly,\n\t\t$cmditch$elm_bigint$BigInt$mul(\n\t\t\t$cmditch$elm_bigint$BigInt$fromInt($cmditch$elm_bigint$BigInt$baseDigit)),\n\t\t$cmditch$elm_bigint$BigInt$one,\n\t\tn);\n};\nvar $cmditch$elm_bigint$BigInt$divMod_ = F3(\n\tfunction (n, num, den) {\n\t\tif (!n) {\n\t\t\treturn A3(\n\t\t\t\t$cmditch$elm_bigint$BigInt$divmodDigit,\n\t\t\t\t$cmditch$elm_bigint$BigInt$padDigits(n),\n\t\t\t\tnum,\n\t\t\t\tden);\n\t\t} else {\n\t\t\tvar _v0 = A3(\n\t\t\t\t$cmditch$elm_bigint$BigInt$divmodDigit,\n\t\t\t\t$cmditch$elm_bigint$BigInt$padDigits(n),\n\t\t\t\tnum,\n\t\t\t\tden);\n\t\t\tvar cdiv = _v0.a;\n\t\t\tvar cmod = _v0.b;\n\t\t\tvar _v1 = A3($cmditch$elm_bigint$BigInt$divMod_, n - 1, cmod, den);\n\t\t\tvar rdiv = _v1.a;\n\t\t\tvar rmod = _v1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tA2($cmditch$elm_bigint$BigInt$add, cdiv, rdiv),\n\t\t\t\trmod);\n\t\t}\n\t});\nvar $cmditch$elm_bigint$BigInt$toDigits = function (bigInt) {\n\tswitch (bigInt.$) {\n\t\tcase 'Zer':\n\t\t\treturn _List_Nil;\n\t\tcase 'Pos':\n\t\t\tvar ds = bigInt.a.a;\n\t\t\treturn ds;\n\t\tdefault:\n\t\t\tvar ds = bigInt.a.a;\n\t\t\treturn ds;\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$divmod = F2(\n\tfunction (num, den) {\n\t\tif (_Utils_eq(den, $cmditch$elm_bigint$BigInt$zero)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar cand_l = ($elm$core$List$length(\n\t\t\t\t$cmditch$elm_bigint$BigInt$toDigits(num)) - $elm$core$List$length(\n\t\t\t\t$cmditch$elm_bigint$BigInt$toDigits(den))) + 1;\n\t\t\tvar _v0 = A3(\n\t\t\t\t$cmditch$elm_bigint$BigInt$divMod_,\n\t\t\t\tA2($elm$core$Basics$max, 0, cand_l),\n\t\t\t\t$cmditch$elm_bigint$BigInt$abs(num),\n\t\t\t\t$cmditch$elm_bigint$BigInt$abs(den));\n\t\t\tvar d = _v0.a;\n\t\t\tvar m = _v0.b;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$mkBigInt,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$signProduct,\n\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$sign(num),\n\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$sign(den)),\n\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$magnitude(d)),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$mkBigInt,\n\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$sign(num),\n\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$magnitude(m))));\n\t\t}\n\t});\nvar $cmditch$elm_bigint$BigInt$hexMagnitudeToString = function (bigInt) {\n\tvar _v0 = A2($cmditch$elm_bigint$BigInt$divmod, bigInt, $cmditch$elm_bigint$BigInt$eightHexDigits);\n\tif (_v0.$ === 'Nothing') {\n\t\treturn 'Failure converting BigInt to hex string. Should be impossible. Open up issue on the elm-bigint repo.';\n\t} else {\n\t\tvar _v1 = _v0.a;\n\t\tvar d = _v1.a;\n\t\tvar r = _v1.b;\n\t\tvar rString = $rtfeldman$elm_hex$Hex$toString(\n\t\t\t$cmditch$elm_bigint$BigInt$bigIntToInt_(r));\n\t\treturn _Utils_eq(\n\t\t\td,\n\t\t\t$cmditch$elm_bigint$BigInt$fromInt(0)) ? rString : _Utils_ap(\n\t\t\t$cmditch$elm_bigint$BigInt$hexMagnitudeToString(d),\n\t\t\tA3(\n\t\t\t\t$elm$core$String$padLeft,\n\t\t\t\t8,\n\t\t\t\t_Utils_chr('0'),\n\t\t\t\trString));\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$toHexString = function (bigInt) {\n\tswitch (bigInt.$) {\n\t\tcase 'Zer':\n\t\t\treturn '0';\n\t\tcase 'Pos':\n\t\t\tvar mag = bigInt.a;\n\t\t\treturn _Utils_eq(\n\t\t\t\tmag,\n\t\t\t\t$cmditch$elm_bigint$BigInt$Magnitude(_List_Nil)) ? '0' : $cmditch$elm_bigint$BigInt$hexMagnitudeToString(\n\t\t\t\t$cmditch$elm_bigint$BigInt$Pos(mag));\n\t\tdefault:\n\t\t\tvar mag = bigInt.a;\n\t\t\treturn '-' + $cmditch$elm_bigint$BigInt$toHexString(\n\t\t\t\tA2(\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$mul,\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromInt(-1),\n\t\t\t\t\tbigInt));\n\t}\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$toStaticLLEncoding = function (strVal) {\n\treturn _Utils_Tuple2(\n\t\t$elm$core$Maybe$Nothing,\n\t\t$cmditch$elm_ethereum$Eth$Utils$leftPadTo64(strVal));\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Int$fromBinaryUnsafe = function (str) {\n\tswitch (str) {\n\t\tcase '0000':\n\t\t\treturn _Utils_chr('0');\n\t\tcase '0001':\n\t\t\treturn _Utils_chr('1');\n\t\tcase '0010':\n\t\t\treturn _Utils_chr('2');\n\t\tcase '0011':\n\t\t\treturn _Utils_chr('3');\n\t\tcase '0100':\n\t\t\treturn _Utils_chr('4');\n\t\tcase '0101':\n\t\t\treturn _Utils_chr('5');\n\t\tcase '0110':\n\t\t\treturn _Utils_chr('6');\n\t\tcase '0111':\n\t\t\treturn _Utils_chr('7');\n\t\tcase '1000':\n\t\t\treturn _Utils_chr('8');\n\t\tcase '1001':\n\t\t\treturn _Utils_chr('9');\n\t\tcase '1010':\n\t\t\treturn _Utils_chr('a');\n\t\tcase '1011':\n\t\t\treturn _Utils_chr('b');\n\t\tcase '1100':\n\t\t\treturn _Utils_chr('c');\n\t\tcase '1101':\n\t\t\treturn _Utils_chr('d');\n\t\tcase '1110':\n\t\t\treturn _Utils_chr('e');\n\t\tcase '1111':\n\t\t\treturn _Utils_chr('f');\n\t\tdefault:\n\t\t\treturn _Utils_chr('!');\n\t}\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Int$toBinaryUnsafe = function (_char) {\n\tswitch (_char.valueOf()) {\n\t\tcase '0':\n\t\t\treturn '0000';\n\t\tcase '1':\n\t\t\treturn '0001';\n\t\tcase '2':\n\t\t\treturn '0010';\n\t\tcase '3':\n\t\t\treturn '0011';\n\t\tcase '4':\n\t\t\treturn '0100';\n\t\tcase '5':\n\t\t\treturn '0101';\n\t\tcase '6':\n\t\t\treturn '0110';\n\t\tcase '7':\n\t\t\treturn '0111';\n\t\tcase '8':\n\t\t\treturn '1000';\n\t\tcase '9':\n\t\t\treturn '1001';\n\t\tcase 'a':\n\t\t\treturn '1010';\n\t\tcase 'b':\n\t\t\treturn '1011';\n\t\tcase 'c':\n\t\t\treturn '1100';\n\t\tcase 'd':\n\t\t\treturn '1101';\n\t\tcase 'e':\n\t\t\treturn '1110';\n\t\tcase 'f':\n\t\t\treturn '1111';\n\t\tdefault:\n\t\t\treturn 'error converting hex to binary';\n\t}\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Int$twosComplementUnsafe = function (str) {\n\tvar reducer = F2(\n\t\tfunction (_char, _v1) {\n\t\t\tvar accum = _v1.a;\n\t\t\tvar isFlipping = _v1.b;\n\t\t\tvar _v0 = _Utils_Tuple2(_char, isFlipping);\n\t\t\t_v0$4:\n\t\t\twhile (true) {\n\t\t\t\tif (!_v0.b) {\n\t\t\t\t\tswitch (_v0.a.valueOf()) {\n\t\t\t\t\t\tcase '0':\n\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$cons,\n\t\t\t\t\t\t\t\t\t_Utils_chr('0'),\n\t\t\t\t\t\t\t\t\taccum),\n\t\t\t\t\t\t\t\tfalse);\n\t\t\t\t\t\tcase '1':\n\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$cons,\n\t\t\t\t\t\t\t\t\t_Utils_chr('1'),\n\t\t\t\t\t\t\t\t\taccum),\n\t\t\t\t\t\t\t\ttrue);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak _v0$4;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tswitch (_v0.a.valueOf()) {\n\t\t\t\t\t\tcase '0':\n\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$cons,\n\t\t\t\t\t\t\t\t\t_Utils_chr('1'),\n\t\t\t\t\t\t\t\t\taccum),\n\t\t\t\t\t\t\t\ttrue);\n\t\t\t\t\t\tcase '1':\n\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$cons,\n\t\t\t\t\t\t\t\t\t_Utils_chr('0'),\n\t\t\t\t\t\t\t\t\taccum),\n\t\t\t\t\t\t\t\ttrue);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak _v0$4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn _Utils_Tuple2(accum, true);\n\t\t});\n\treturn A3(\n\t\t$elm$core$String$foldr,\n\t\treducer,\n\t\t_Utils_Tuple2('', false),\n\t\tstr).a;\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Int$toString = function (num) {\n\tvar _v0 = function () {\n\t\tvar _v1 = $elm$core$String$toList(\n\t\t\t$cmditch$elm_bigint$BigInt$toHexString(num));\n\t\tif (_v1.b && ('-' === _v1.a.valueOf())) {\n\t\t\tvar xs = _v1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\txs,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Int$twosComplementUnsafe,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$String$padLeft,\n\t\t\t\t\t\t256,\n\t\t\t\t\t\t_Utils_chr('1'))));\n\t\t} else {\n\t\t\tvar xs = _v1;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\txs,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$String$padLeft,\n\t\t\t\t\t256,\n\t\t\t\t\t_Utils_chr('0')));\n\t\t}\n\t}();\n\tvar xs_ = _v0.a;\n\tvar twosComplementOrNotTwosComplement = _v0.b;\n\treturn $elm$core$String$fromList(\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\t$cmditch$elm_ethereum$Eth$Abi$Int$fromBinaryUnsafe,\n\t\t\tA2(\n\t\t\t\t$elm_community$string_extra$String$Extra$break,\n\t\t\t\t4,\n\t\t\t\ttwosComplementOrNotTwosComplement(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tA2($elm$core$List$map, $cmditch$elm_ethereum$Eth$Abi$Int$toBinaryUnsafe, xs_))))));\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$lowLevelEncode = function (enc) {\n\tswitch (enc.$) {\n\t\tcase 'AddressE':\n\t\t\tvar address_ = enc.a.a;\n\t\t\treturn $cmditch$elm_ethereum$Eth$Abi$Encode$toStaticLLEncoding(address_);\n\t\tcase 'UintE':\n\t\t\tvar uint_ = enc.a;\n\t\t\treturn $cmditch$elm_ethereum$Eth$Abi$Encode$toStaticLLEncoding(\n\t\t\t\t$cmditch$elm_bigint$BigInt$toHexString(uint_));\n\t\tcase 'IntE':\n\t\t\tvar int_ = enc.a;\n\t\t\treturn $cmditch$elm_ethereum$Eth$Abi$Encode$toStaticLLEncoding(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Int$toString(int_));\n\t\tcase 'BoolE':\n\t\t\tif (enc.a) {\n\t\t\t\treturn $cmditch$elm_ethereum$Eth$Abi$Encode$toStaticLLEncoding('1');\n\t\t\t} else {\n\t\t\t\treturn $cmditch$elm_ethereum$Eth$Abi$Encode$toStaticLLEncoding('0');\n\t\t\t}\n\t\tcase 'DBytesE':\n\t\t\tvar hexString = enc.a.a;\n\t\t\treturn $cmditch$elm_ethereum$Eth$Abi$Encode$bytesOrStringToDynamicLLEncoding(hexString);\n\t\tcase 'BytesE':\n\t\t\tvar hexString = enc.a.a;\n\t\t\treturn $cmditch$elm_ethereum$Eth$Abi$Encode$toStaticLLEncoding(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$remove0x(hexString));\n\t\tcase 'StringE':\n\t\t\tvar string_ = enc.a;\n\t\t\treturn $cmditch$elm_ethereum$Eth$Abi$Encode$bytesOrStringToDynamicLLEncoding(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$stringToHex(string_));\n\t\tcase 'ListE':\n\t\t\tvar encodings = enc.a;\n\t\t\treturn function (_v1) {\n\t\t\t\tvar hexString = _v1.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$listToDynamicLLEncoding,\n\t\t\t\t\t$elm$core$List$length(encodings),\n\t\t\t\t\thexString);\n\t\t\t}(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$cyclic$abiEncodeList()(encodings));\n\t\tdefault:\n\t\t\tvar string_ = enc.a;\n\t\t\treturn $cmditch$elm_ethereum$Eth$Abi$Encode$toStaticLLEncoding(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$remove0x(string_));\n\t}\n};\nfunction $cmditch$elm_ethereum$Eth$Abi$Encode$cyclic$abiEncodeList() {\n\treturn A2(\n\t\t$elm$core$Basics$composeR,\n\t\t$elm$core$List$map($cmditch$elm_ethereum$Eth$Abi$Encode$lowLevelEncode),\n\t\tA2($elm$core$Basics$composeR, $cmditch$elm_ethereum$Eth$Abi$Encode$lowLevelEncodeList, $cmditch$elm_ethereum$Internal$Types$Hex));\n}\ntry {\n\tvar $cmditch$elm_ethereum$Eth$Abi$Encode$abiEncodeList = $cmditch$elm_ethereum$Eth$Abi$Encode$cyclic$abiEncodeList();\n\t$cmditch$elm_ethereum$Eth$Abi$Encode$cyclic$abiEncodeList = function () {\n\t\treturn $cmditch$elm_ethereum$Eth$Abi$Encode$abiEncodeList;\n\t};\n} catch ($) {\n\tthrow 'Some top-level definitions from `Eth.Abi.Encode` are causing infinite recursion:\\n\\n  ┌─────┐\\n  │    abiEncodeList\\n  │     ↓\\n  │    lowLevelEncode\\n  └─────┘\\n\\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$abiEncode = A2(\n\t$elm$core$Basics$composeR,\n\t$cmditch$elm_ethereum$Eth$Abi$Encode$lowLevelEncode,\n\tA2(\n\t\t$elm$core$Basics$composeR,\n\t\tfunction (v) {\n\t\t\treturn $cmditch$elm_ethereum$Eth$Abi$Encode$lowLevelEncodeList(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[v]));\n\t\t},\n\t\t$cmditch$elm_ethereum$Internal$Types$Hex));\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$AddressE = function (a) {\n\treturn {$: 'AddressE', a: a};\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$address = $cmditch$elm_ethereum$Eth$Abi$Encode$AddressE;\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$BytesE = function (a) {\n\treturn {$: 'BytesE', a: a};\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$staticBytes = function (size) {\n\treturn $cmditch$elm_ethereum$Eth$Abi$Encode$BytesE;\n};\nvar $cmditch$elm_ethereum$Eth$Utils$unsafeToHex = A2(\n\t$elm$core$Basics$composeR,\n\t$cmditch$elm_ethereum$Eth$Utils$remove0x,\n\tA2($elm$core$Basics$composeR, $elm$core$String$toLower, $cmditch$elm_ethereum$Internal$Types$Hex));\nvar $author$project$Contracts$Generated$SmokeSignal$messageBurnEvent = F3(\n\tfunction (contractAddress, hash_, from_) {\n\t\treturn {\n\t\t\taddress: contractAddress,\n\t\t\tfromBlock: $cmditch$elm_ethereum$Eth$Types$LatestBlock,\n\t\t\ttoBlock: $cmditch$elm_ethereum$Eth$Types$LatestBlock,\n\t\t\ttopics: _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$unsafeToHex('519b8d5fdc037910f06b87b0bffb6367d2f521894a7868f09bff7feba068f0bb')),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeL,\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$abiEncode,\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$staticBytes(32)),\n\t\t\t\t\thash_),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\tA2($elm$core$Basics$composeL, $cmditch$elm_ethereum$Eth$Abi$Encode$abiEncode, $cmditch$elm_ethereum$Eth$Abi$Encode$address),\n\t\t\t\t\tfrom_)\n\t\t\t\t])\n\t\t};\n\t});\nvar $author$project$Contracts$SmokeSignal$messageBurnEventFilter = F5(\n\tfunction (smokeSignalContractAddress, from, to, maybeHash, maybeAuthor) {\n\t\treturn function (filter) {\n\t\t\treturn _Utils_update(\n\t\t\t\tfilter,\n\t\t\t\t{fromBlock: from, toBlock: to});\n\t\t}(\n\t\t\tA3($author$project$Contracts$Generated$SmokeSignal$messageBurnEvent, smokeSignalContractAddress, maybeHash, maybeAuthor));\n\t});\nvar $cmditch$elm_ethereum$Eth$Sentry$Event$GetLogs = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'GetLogs', a: a, b: b};\n\t});\nvar $elm$core$Set$insert = F2(\n\tfunction (key, _v0) {\n\t\tvar dict = _v0.a;\n\t\treturn $elm$core$Set$Set_elm_builtin(\n\t\t\tA3($elm$core$Dict$insert, key, _Utils_Tuple0, dict));\n\t});\nvar $cmditch$elm_ethereum$Eth$Types$Log = F9(\n\tfunction (address, data, topics, removed, logIndex, transactionIndex, transactionHash, blockHash, blockNumber) {\n\t\treturn {address: address, blockHash: blockHash, blockNumber: blockNumber, data: data, logIndex: logIndex, removed: removed, topics: topics, transactionHash: transactionHash, transactionIndex: transactionIndex};\n\t});\nvar $cmditch$elm_ethereum$Internal$Types$BlockHash = function (a) {\n\treturn {$: 'BlockHash', a: a};\n};\nvar $cmditch$elm_ethereum$Eth$Utils$isSha256 = $elm$regex$Regex$contains(\n\tA2(\n\t\t$elm$core$Maybe$withDefault,\n\t\t$elm$regex$Regex$never,\n\t\t$elm$regex$Regex$fromString('^((0[Xx]){1})?[0-9a-fA-F]{64}$')));\nvar $cmditch$elm_ethereum$Eth$Utils$toBlockHash = function (str) {\n\treturn $cmditch$elm_ethereum$Eth$Utils$isSha256(str) ? $elm$core$Result$Ok(\n\t\t$cmditch$elm_ethereum$Internal$Types$BlockHash(\n\t\t\t$cmditch$elm_ethereum$Eth$Utils$remove0x(str))) : $elm$core$Result$Err(\n\t\t'Given blockHash ' + ($cmditch$elm_ethereum$Eth$Utils$quote(str) + ' is not valid.'));\n};\nvar $cmditch$elm_ethereum$Eth$Decode$blockHash = $cmditch$elm_ethereum$Eth$Decode$resultToDecoder($cmditch$elm_ethereum$Eth$Utils$toBlockHash);\nvar $cmditch$elm_ethereum$Eth$Decode$hex = $cmditch$elm_ethereum$Eth$Decode$resultToDecoder($cmditch$elm_ethereum$Eth$Utils$toHex);\nvar $elm$json$Json$Decode$null = _Json_decodeNull;\nvar $elm$json$Json$Decode$value = _Json_decodeValue;\nvar $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optionalDecoder = F3(\n\tfunction (pathDecoder, valDecoder, fallback) {\n\t\tvar nullOr = function (decoder) {\n\t\t\treturn $elm$json$Json$Decode$oneOf(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tdecoder,\n\t\t\t\t\t\t$elm$json$Json$Decode$null(fallback)\n\t\t\t\t\t]));\n\t\t};\n\t\tvar handleResult = function (input) {\n\t\t\tvar _v0 = A2($elm$json$Json$Decode$decodeValue, pathDecoder, input);\n\t\t\tif (_v0.$ === 'Ok') {\n\t\t\t\tvar rawValue = _v0.a;\n\t\t\t\tvar _v1 = A2(\n\t\t\t\t\t$elm$json$Json$Decode$decodeValue,\n\t\t\t\t\tnullOr(valDecoder),\n\t\t\t\t\trawValue);\n\t\t\t\tif (_v1.$ === 'Ok') {\n\t\t\t\t\tvar finalResult = _v1.a;\n\t\t\t\t\treturn $elm$json$Json$Decode$succeed(finalResult);\n\t\t\t\t} else {\n\t\t\t\t\tvar finalErr = _v1.a;\n\t\t\t\t\treturn $elm$json$Json$Decode$fail(\n\t\t\t\t\t\t$elm$json$Json$Decode$errorToString(finalErr));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn $elm$json$Json$Decode$succeed(fallback);\n\t\t\t}\n\t\t};\n\t\treturn A2($elm$json$Json$Decode$andThen, handleResult, $elm$json$Json$Decode$value);\n\t});\nvar $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional = F4(\n\tfunction (key, valDecoder, fallback, decoder) {\n\t\treturn A2(\n\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,\n\t\t\tA3(\n\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optionalDecoder,\n\t\t\t\tA2($elm$json$Json$Decode$field, key, $elm$json$Json$Decode$value),\n\t\t\t\tvalDecoder,\n\t\t\t\tfallback),\n\t\t\tdecoder);\n\t});\nvar $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required = F3(\n\tfunction (key, valDecoder, decoder) {\n\t\treturn A2(\n\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,\n\t\t\tA2($elm$json$Json$Decode$field, key, valDecoder),\n\t\t\tdecoder);\n\t});\nvar $cmditch$elm_ethereum$Internal$Types$TxHash = function (a) {\n\treturn {$: 'TxHash', a: a};\n};\nvar $cmditch$elm_ethereum$Eth$Utils$toTxHash = function (str) {\n\treturn $cmditch$elm_ethereum$Eth$Utils$isSha256(str) ? $elm$core$Result$Ok(\n\t\t$cmditch$elm_ethereum$Internal$Types$TxHash(\n\t\t\t$cmditch$elm_ethereum$Eth$Utils$remove0x(str))) : $elm$core$Result$Err(\n\t\t'Given txHash ' + ($cmditch$elm_ethereum$Eth$Utils$quote(str) + ' is not valid.'));\n};\nvar $cmditch$elm_ethereum$Eth$Decode$txHash = $cmditch$elm_ethereum$Eth$Decode$resultToDecoder($cmditch$elm_ethereum$Eth$Utils$toTxHash);\nvar $cmditch$elm_ethereum$Eth$Decode$log = A3(\n\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t'blockNumber',\n\t$cmditch$elm_ethereum$Eth$Decode$hexInt,\n\tA3(\n\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t'blockHash',\n\t\t$cmditch$elm_ethereum$Eth$Decode$blockHash,\n\t\tA3(\n\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t'transactionHash',\n\t\t\t$cmditch$elm_ethereum$Eth$Decode$txHash,\n\t\t\tA3(\n\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t'transactionIndex',\n\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$hexInt,\n\t\t\t\tA3(\n\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t'logIndex',\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$hexInt,\n\t\t\t\t\tA4(\n\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,\n\t\t\t\t\t\t'removed',\n\t\t\t\t\t\t$elm$json$Json$Decode$bool,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t'topics',\n\t\t\t\t\t\t\t$elm$json$Json$Decode$list($cmditch$elm_ethereum$Eth$Decode$hex),\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t'data',\n\t\t\t\t\t\t\t\t$elm$json$Json$Decode$string,\n\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t\t'address',\n\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$address,\n\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$succeed($cmditch$elm_ethereum$Eth$Types$Log))))))))));\nvar $cmditch$elm_ethereum$Eth$Utils$addressToString = function (_v0) {\n\tvar address = _v0.a;\n\treturn $cmditch$elm_ethereum$Eth$Utils$add0x(address);\n};\nvar $cmditch$elm_ethereum$Eth$Encode$address = A2($elm$core$Basics$composeR, $cmditch$elm_ethereum$Eth$Utils$addressToString, $elm$json$Json$Encode$string);\nvar $cmditch$elm_ethereum$Eth$Encode$blockId = function (blockId_) {\n\tswitch (blockId_.$) {\n\t\tcase 'BlockNum':\n\t\t\tvar num = blockId_.a;\n\t\t\treturn $elm$json$Json$Encode$string(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$add0x(\n\t\t\t\t\t$rtfeldman$elm_hex$Hex$toString(num)));\n\t\tcase 'EarliestBlock':\n\t\t\treturn $elm$json$Json$Encode$string('earliest');\n\t\tcase 'LatestBlock':\n\t\t\treturn $elm$json$Json$Encode$string('latest');\n\t\tdefault:\n\t\t\treturn $elm$json$Json$Encode$string('pending');\n\t}\n};\nvar $elm$json$Json$Encode$null = _Json_encodeNull;\nvar $cmditch$elm_ethereum$Eth$Encode$topicsList = function (topics) {\n\tvar toVal = function (val) {\n\t\tif (val.$ === 'Just') {\n\t\t\tvar hexVal = val.a;\n\t\t\treturn $elm$json$Json$Encode$string(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$hexToString(hexVal));\n\t\t} else {\n\t\t\treturn $elm$json$Json$Encode$null;\n\t\t}\n\t};\n\treturn A2($elm$json$Json$Encode$list, toVal, topics);\n};\nvar $cmditch$elm_ethereum$Eth$Encode$logFilter = function (lf) {\n\treturn $elm$json$Json$Encode$object(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'fromBlock',\n\t\t\t\t$cmditch$elm_ethereum$Eth$Encode$blockId(lf.fromBlock)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'toBlock',\n\t\t\t\t$cmditch$elm_ethereum$Eth$Encode$blockId(lf.toBlock)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'address',\n\t\t\t\t$cmditch$elm_ethereum$Eth$Encode$address(lf.address)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'topics',\n\t\t\t\t$cmditch$elm_ethereum$Eth$Encode$topicsList(lf.topics))\n\t\t\t]));\n};\nvar $cmditch$elm_ethereum$Eth$getLogs = F2(\n\tfunction (ethNode, logFilter) {\n\t\treturn $cmditch$elm_ethereum$Eth$RPC$toTask(\n\t\t\t{\n\t\t\t\tdecoder: $elm$json$Json$Decode$list($cmditch$elm_ethereum$Eth$Decode$log),\n\t\t\t\tmethod: 'eth_getLogs',\n\t\t\t\tparams: _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Encode$logFilter(logFilter)\n\t\t\t\t\t]),\n\t\t\t\turl: ethNode\n\t\t\t});\n\t});\nvar $cmditch$elm_ethereum$Eth$Sentry$Event$requestInitialEvents = F3(\n\tfunction (nodePath, logFilter, _v0) {\n\t\tvar fromBlock = _v0.a;\n\t\tvar toBlock = _v0.b;\n\t\tvar _v1 = logFilter.toBlock;\n\t\tif (_v1.$ === 'BlockNum') {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (logs) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Task$map,\n\t\t\t\t\t\t$elm$core$Basics$append(logs),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$getLogs,\n\t\t\t\t\t\t\tnodePath,\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tlogFilter,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfromBlock: $cmditch$elm_ethereum$Eth$Types$BlockNum(fromBlock),\n\t\t\t\t\t\t\t\t\ttoBlock: $cmditch$elm_ethereum$Eth$Types$BlockNum(toBlock)\n\t\t\t\t\t\t\t\t})));\n\t\t\t\t},\n\t\t\t\tA2($cmditch$elm_ethereum$Eth$getLogs, nodePath, logFilter));\n\t\t} else {\n\t\t\treturn A2($cmditch$elm_ethereum$Eth$getLogs, nodePath, logFilter);\n\t\t}\n\t});\nvar $cmditch$elm_ethereum$Eth$Sentry$Event$watch_ = F4(\n\tfunction (onlyOnce, onReceive, _v0, logFilter) {\n\t\tvar sentry = _v0.a;\n\t\tvar requestState = {logCount: 0, logFilter: logFilter, ref: sentry.ref, tagger: onReceive, watchOnce: onlyOnce};\n\t\tvar newSentry = _Utils_update(\n\t\t\tsentry,\n\t\t\t{\n\t\t\t\tref: sentry.ref + 1,\n\t\t\t\trequests: A3($elm$core$Dict$insert, sentry.ref, requestState, sentry.requests)\n\t\t\t});\n\t\tvar _return = function (task) {\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$EventSentry(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tnewSentry,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twatching: A2($elm$core$Set$insert, sentry.ref, newSentry.watching)\n\t\t\t\t\t\t})),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Task$attempt,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$GetLogs(sentry.ref),\n\t\t\t\t\t\tsentry.tagger),\n\t\t\t\t\ttask),\n\t\t\t\tsentry.ref);\n\t\t};\n\t\tvar _v1 = sentry.blockNumber;\n\t\tif (_v1.$ === 'Just') {\n\t\t\tvar blockNum = _v1.a;\n\t\t\treturn _return(\n\t\t\t\tA3(\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$requestInitialEvents,\n\t\t\t\t\tsentry.nodePath,\n\t\t\t\t\tlogFilter,\n\t\t\t\t\t_Utils_Tuple2(blockNum, blockNum)));\n\t\t} else {\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$EventSentry(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tnewSentry,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpending: A2($elm$core$Set$insert, sentry.ref, newSentry.pending)\n\t\t\t\t\t\t})),\n\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\tsentry.ref);\n\t\t}\n\t});\nvar $cmditch$elm_ethereum$Eth$Sentry$Event$watch = $cmditch$elm_ethereum$Eth$Sentry$Event$watch_(false);\nvar $author$project$App$startSentry = function (config) {\n\tvar scan = A5(\n\t\t$author$project$Contracts$SmokeSignal$messageBurnEventFilter,\n\t\tconfig.contract,\n\t\t$cmditch$elm_ethereum$Eth$Types$BlockNum(config.startScanBlock),\n\t\t$cmditch$elm_ethereum$Eth$Types$LatestBlock,\n\t\t$elm$core$Maybe$Nothing,\n\t\t$elm$core$Maybe$Nothing);\n\tvar _v0 = A2(\n\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$init,\n\t\t$author$project$Types$EventSentryMsg(config.chain),\n\t\tconfig.providerUrl);\n\tvar initEventSentry = _v0.a;\n\tvar initEventSentryCmd = _v0.b;\n\tvar _v1 = A3(\n\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$watch,\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$author$project$Contracts$SmokeSignal$decodePost(config.chain),\n\t\t\t$author$project$Types$PostLogReceived),\n\t\tinitEventSentry,\n\t\tscan);\n\tvar eventSentry = _v1.a;\n\tvar secondEventSentryCmd = _v1.b;\n\treturn _Utils_Tuple3(eventSentry, initEventSentryCmd, secondEventSentryCmd);\n};\nvar $author$project$Types$ViewPost = function (a) {\n\treturn {$: 'ViewPost', a: a};\n};\nvar $author$project$Types$ViewTopic = function (a) {\n\treturn {$: 'ViewTopic', a: a};\n};\nvar $author$project$Types$ViewTopics = {$: 'ViewTopics'};\nvar $author$project$Types$ViewTxns = {$: 'ViewTxns'};\nvar $author$project$Types$ViewWallet = {$: 'ViewWallet'};\nvar $elm_community$string_extra$String$Extra$regexFromString = A2(\n\t$elm$core$Basics$composeR,\n\t$elm$regex$Regex$fromString,\n\t$elm$core$Maybe$withDefault($elm$regex$Regex$never));\nvar $elm$regex$Regex$replace = _Regex_replaceAtMost(_Regex_infinity);\nvar $elm$core$String$trim = _String_trim;\nvar $elm_community$string_extra$String$Extra$clean = function (string) {\n\treturn $elm$core$String$trim(\n\t\tA3(\n\t\t\t$elm$regex$Regex$replace,\n\t\t\t$elm_community$string_extra$String$Extra$regexFromString('\\\\s\\\\s+'),\n\t\t\t$elm$core$Basics$always(' '),\n\t\t\tstring));\n};\nvar $elm$core$String$map = _String_map;\nvar $elm$core$String$replace = F3(\n\tfunction (before, after, string) {\n\t\treturn A2(\n\t\t\t$elm$core$String$join,\n\t\t\tafter,\n\t\t\tA2($elm$core$String$split, before, string));\n\t});\nvar $author$project$Misc$validateTopic = A2(\n\t$elm$core$Basics$composeR,\n\t$elm$core$String$toLower,\n\tA2(\n\t\t$elm$core$Basics$composeR,\n\t\t$elm$core$String$map(\n\t\t\tfunction (c) {\n\t\t\t\treturn $elm$core$Char$isAlphaNum(c) ? c : _Utils_chr(' ');\n\t\t\t}),\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$elm_community$string_extra$String$Extra$clean,\n\t\t\tA2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\tA2($elm$core$String$replace, ' ', '-'),\n\t\t\t\tfunction (str) {\n\t\t\t\t\treturn $elm$core$String$isEmpty(str) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(str);\n\t\t\t\t}))));\nvar $author$project$Misc$tryRouteToView = function (route) {\n\tswitch (route.$) {\n\t\tcase 'RouteHome':\n\t\t\treturn $elm$core$Result$Ok($author$project$Types$ViewHome);\n\t\tcase 'RouteWallet':\n\t\t\treturn $elm$core$Result$Ok($author$project$Types$ViewWallet);\n\t\tcase 'RouteTxns':\n\t\t\treturn $elm$core$Result$Ok($author$project$Types$ViewTxns);\n\t\tcase 'RouteTopics':\n\t\t\treturn $elm$core$Result$Ok($author$project$Types$ViewTopics);\n\t\tcase 'RouteViewPost':\n\t\t\tvar postId = route.a;\n\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t$author$project$Types$ViewPost(postId));\n\t\tcase 'RouteTopic':\n\t\t\tvar topic = route.a;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Result$fromMaybe,\n\t\t\t\t'Malformed topic',\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t$author$project$Types$ViewTopic,\n\t\t\t\t\t$author$project$Misc$validateTopic(topic)));\n\t\tcase 'RouteMalformedPostId':\n\t\t\treturn $elm$core$Result$Err('Malformed post ID');\n\t\tdefault:\n\t\t\treturn $elm$core$Result$Err('Path not found');\n\t}\n};\nvar $author$project$Types$RouteInvalid = {$: 'RouteInvalid'};\nvar $author$project$Types$RouteHome = {$: 'RouteHome'};\nvar $author$project$Types$RouteMalformedPostId = {$: 'RouteMalformedPostId'};\nvar $author$project$Types$RouteTopic = function (a) {\n\treturn {$: 'RouteTopic', a: a};\n};\nvar $author$project$Types$RouteTopics = {$: 'RouteTopics'};\nvar $author$project$Types$RouteTxns = {$: 'RouteTxns'};\nvar $author$project$Types$RouteViewPost = function (a) {\n\treturn {$: 'RouteViewPost', a: a};\n};\nvar $author$project$Types$RouteWallet = {$: 'RouteWallet'};\nvar $elm$url$Url$Parser$oneOf = function (parsers) {\n\treturn $elm$url$Url$Parser$Parser(\n\t\tfunction (state) {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$concatMap,\n\t\t\t\tfunction (_v0) {\n\t\t\t\t\tvar parser = _v0.a;\n\t\t\t\t\treturn parser(state);\n\t\t\t\t},\n\t\t\t\tparsers);\n\t\t});\n};\nvar $elm$url$Url$Parser$Query$map = F2(\n\tfunction (func, _v0) {\n\t\tvar a = _v0.a;\n\t\treturn $elm$url$Url$Parser$Internal$Parser(\n\t\t\tfunction (dict) {\n\t\t\t\treturn func(\n\t\t\t\t\ta(dict));\n\t\t\t});\n\t});\nvar $elm$url$Url$Parser$Query$string = function (key) {\n\treturn A2(\n\t\t$elm$url$Url$Parser$Query$custom,\n\t\tkey,\n\t\tfunction (stringList) {\n\t\t\tif (stringList.b && (!stringList.b.b)) {\n\t\t\t\tvar str = stringList.a;\n\t\t\t\treturn $elm$core$Maybe$Just(str);\n\t\t\t} else {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t}\n\t\t});\n};\nvar $author$project$Routing$hexQueryParser = function (label) {\n\treturn A2(\n\t\t$elm$url$Url$Parser$Query$map,\n\t\t$elm$core$Maybe$andThen(\n\t\t\tA2($elm$core$Basics$composeR, $cmditch$elm_ethereum$Eth$Utils$toHex, $elm$core$Result$toMaybe)),\n\t\t$elm$url$Url$Parser$Query$string(label));\n};\nvar $elm$url$Url$Parser$Query$map2 = F3(\n\tfunction (func, _v0, _v1) {\n\t\tvar a = _v0.a;\n\t\tvar b = _v1.a;\n\t\treturn $elm$url$Url$Parser$Internal$Parser(\n\t\t\tfunction (dict) {\n\t\t\t\treturn A2(\n\t\t\t\t\tfunc,\n\t\t\t\t\ta(dict),\n\t\t\t\t\tb(dict));\n\t\t\t});\n\t});\nvar $author$project$Routing$postIdQueryParser = A3(\n\t$elm$url$Url$Parser$Query$map2,\n\t$elm$core$Maybe$map2($author$project$Types$PostId),\n\t$elm$url$Url$Parser$Query$int('block'),\n\t$author$project$Routing$hexQueryParser('hash'));\nvar $elm$url$Url$Parser$s = function (str) {\n\treturn $elm$url$Url$Parser$Parser(\n\t\tfunction (_v0) {\n\t\t\tvar visited = _v0.visited;\n\t\t\tvar unvisited = _v0.unvisited;\n\t\t\tvar params = _v0.params;\n\t\t\tvar frag = _v0.frag;\n\t\t\tvar value = _v0.value;\n\t\t\tif (!unvisited.b) {\n\t\t\t\treturn _List_Nil;\n\t\t\t} else {\n\t\t\t\tvar next = unvisited.a;\n\t\t\t\tvar rest = unvisited.b;\n\t\t\t\treturn _Utils_eq(next, str) ? _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA5(\n\t\t\t\t\t\t$elm$url$Url$Parser$State,\n\t\t\t\t\t\tA2($elm$core$List$cons, next, visited),\n\t\t\t\t\t\trest,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tfrag,\n\t\t\t\t\t\tvalue)\n\t\t\t\t\t]) : _List_Nil;\n\t\t\t}\n\t\t});\n};\nvar $elm$url$Url$Parser$top = $elm$url$Url$Parser$Parser(\n\tfunction (state) {\n\t\treturn _List_fromArray(\n\t\t\t[state]);\n\t});\nvar $elm$url$Url$Parser$string = A2($elm$url$Url$Parser$custom, 'STRING', $elm$core$Maybe$Just);\nvar $author$project$Routing$topicParser = A2($elm$url$Url$Parser$map, $elm$url$Url$percentDecode, $elm$url$Url$Parser$string);\nvar $elm_community$maybe_extra$Maybe$Extra$unwrap = F3(\n\tfunction (_default, f, m) {\n\t\tif (m.$ === 'Nothing') {\n\t\t\treturn _default;\n\t\t} else {\n\t\t\tvar a = m.a;\n\t\t\treturn f(a);\n\t\t}\n\t});\nvar $author$project$Routing$routeParser = $elm$url$Url$Parser$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2($elm$url$Url$Parser$map, $author$project$Types$RouteHome, $elm$url$Url$Parser$top),\n\t\t\tA2(\n\t\t\t$elm$url$Url$Parser$map,\n\t\t\tA2($elm_community$maybe_extra$Maybe$Extra$unwrap, $author$project$Types$RouteMalformedPostId, $author$project$Types$RouteViewPost),\n\t\t\tA2(\n\t\t\t\t$elm$url$Url$Parser$questionMark,\n\t\t\t\t$elm$url$Url$Parser$s('post'),\n\t\t\t\t$author$project$Routing$postIdQueryParser)),\n\t\t\tA2(\n\t\t\t$elm$url$Url$Parser$map,\n\t\t\tA2($elm_community$maybe_extra$Maybe$Extra$unwrap, $author$project$Types$RouteInvalid, $author$project$Types$RouteTopic),\n\t\t\tA2(\n\t\t\t\t$elm$url$Url$Parser$slash,\n\t\t\t\t$elm$url$Url$Parser$s('topic'),\n\t\t\t\t$author$project$Routing$topicParser)),\n\t\t\tA2(\n\t\t\t$elm$url$Url$Parser$map,\n\t\t\t$author$project$Types$RouteTopics,\n\t\t\t$elm$url$Url$Parser$s('topics')),\n\t\t\tA2(\n\t\t\t$elm$url$Url$Parser$map,\n\t\t\t$author$project$Types$RouteTxns,\n\t\t\t$elm$url$Url$Parser$s('transactions')),\n\t\t\tA2(\n\t\t\t$elm$url$Url$Parser$map,\n\t\t\t$author$project$Types$RouteWallet,\n\t\t\t$elm$url$Url$Parser$s('wallet'))\n\t\t]));\nvar $author$project$Routing$urlToRoute = function (url) {\n\treturn A2(\n\t\t$elm$core$Maybe$withDefault,\n\t\t$author$project$Types$RouteInvalid,\n\t\tA2($elm$url$Url$Parser$parse, $author$project$Routing$routeParser, url));\n};\nvar $author$project$App$startApp = F3(\n\tfunction (flags, url, model) {\n\t\tvar wallet = flags.hasWallet ? $author$project$Types$NetworkReady : $author$project$Types$NoneDetected;\n\t\tvar route = $author$project$Routing$urlToRoute(url);\n\t\tvar now = $elm$time$Time$millisToPosix(flags.nowInMillis);\n\t\tvar alphaUrl = A2($elm$core$String$endsWith, '.eth', url.host) ? 'http://alpha.smokesignal.eth' : 'http://alpha.smokesignal.eth.link';\n\t\tvar _v0 = $author$project$App$startSentry(model.config.xDai);\n\t\tvar xDaiSentry = _v0.a;\n\t\tvar xDaiCmd1 = _v0.b;\n\t\tvar xDaiCmd2 = _v0.c;\n\t\tvar _v1 = function () {\n\t\t\tvar _v2 = $author$project$Misc$tryRouteToView(route);\n\t\t\tif (_v2.$ === 'Ok') {\n\t\t\t\tvar v = _v2.a;\n\t\t\t\treturn _Utils_Tuple2(v, _List_Nil);\n\t\t\t} else {\n\t\t\t\tvar err = _v2.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t$author$project$Types$ViewHome,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$author$project$UserNotice$routeNotFound(\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(err))\n\t\t\t\t\t\t]));\n\t\t\t}\n\t\t}();\n\t\tvar view = _v1.a;\n\t\tvar routingUserNotices = _v1.b;\n\t\tvar _v3 = $author$project$App$startSentry(model.config.ethereum);\n\t\tvar ethSentry = _v3.a;\n\t\tvar ethCmd1 = _v3.b;\n\t\tvar ethCmd2 = _v3.c;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\talphaUrl: alphaUrl,\n\t\t\t\t\tcookieConsentGranted: flags.cookieConsent,\n\t\t\t\t\tdProfile: $author$project$Helpers$Element$screenWidthToDisplayProfile(flags.width),\n\t\t\t\t\tnewUserModal: flags.newUser,\n\t\t\t\t\tnow: now,\n\t\t\t\t\tsentries: function (cs) {\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tcs,\n\t\t\t\t\t\t\t{ethereum: ethSentry, xDai: xDaiSentry});\n\t\t\t\t\t}(model.sentries),\n\t\t\t\t\tuserNotices: routingUserNotices,\n\t\t\t\t\tview: view,\n\t\t\t\t\twallet: wallet\n\t\t\t\t}),\n\t\t\t$elm$core$Platform$Cmd$batch(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tethCmd1,\n\t\t\t\t\t\tethCmd2,\n\t\t\t\t\t\txDaiCmd1,\n\t\t\t\t\t\txDaiCmd2,\n\t\t\t\t\t\tA2($elm$random$Random$generate, $author$project$Types$NewDemoSrc, $author$project$DemoPhaceSrcMutator$addressSrcGenerator),\n\t\t\t\t\t\t$author$project$Ports$setDescription($author$project$Misc$defaultSeoDescription)\n\t\t\t\t\t])));\n\t});\nvar $author$project$UserNotice$ShouldBeImpossible = {$: 'ShouldBeImpossible'};\nvar $author$project$UserNotice$unexpectedError = function (text) {\n\treturn {\n\t\talign: $author$project$UserNotice$BottomRight,\n\t\tmainParagraphs: _List_fromArray(\n\t\t\t[\n\t\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(text)\n\t\t\t\t])\n\t\t\t]),\n\t\tnoticeType: $author$project$UserNotice$ShouldBeImpossible,\n\t\tuniqueLabel: 'unexpectedError ' + text\n\t};\n};\nvar $author$project$App$init = F3(\n\tfunction (flags, url, key) {\n\t\tvar model = $author$project$Misc$emptyModel(key);\n\t\treturn A3(\n\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t_Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tmodel,\n\t\t\t\t\t{\n\t\t\t\t\t\tuserNotices: _List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$author$project$UserNotice$unexpectedError('Config decode failure')\n\t\t\t\t\t\t\t])\n\t\t\t\t\t}),\n\t\t\t\t$elm$core$Platform$Cmd$none),\n\t\t\tfunction (chainConfigs) {\n\t\t\t\tvar config = A3(\n\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\tfunction (data) {\n\t\t\t\t\t\tvar _v0 = data.chain;\n\t\t\t\t\t\tif (_v0.$ === 'XDai') {\n\t\t\t\t\t\t\treturn function (config_) {\n\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\tconfig_,\n\t\t\t\t\t\t\t\t\t{xDai: data});\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn function (config_) {\n\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\tconfig_,\n\t\t\t\t\t\t\t\t\t{ethereum: data});\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tmodel.config,\n\t\t\t\t\tchainConfigs);\n\t\t\t\tvar modelWithConfig = _Utils_update(\n\t\t\t\t\tmodel,\n\t\t\t\t\t{config: config});\n\t\t\t\tvar redirectCmd = A2(\n\t\t\t\t\t$elm$core$Maybe$andThen,\n\t\t\t\t\tfunction (block) {\n\t\t\t\t\t\treturn (_Utils_cmp(block, config.ethereum.startScanBlock) < 0) ? $author$project$App$redirectDomain(url) : $elm$core$Maybe$Nothing;\n\t\t\t\t\t},\n\t\t\t\t\t$author$project$Routing$blockParser(url));\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\t\tA3($author$project$App$startApp, flags, url, modelWithConfig),\n\t\t\t\t\tfunction (redirect) {\n\t\t\t\t\t\treturn _Utils_Tuple2(modelWithConfig, redirect);\n\t\t\t\t\t},\n\t\t\t\t\tredirectCmd);\n\t\t\t},\n\t\t\t$elm$core$Result$toMaybe(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$json$Json$Decode$decodeValue,\n\t\t\t\t\t$author$project$Chain$chainDecoder(flags),\n\t\t\t\t\tflags.chains)));\n\t});\nvar $author$project$Types$ChangeDemoPhaceSrc = {$: 'ChangeDemoPhaceSrc'};\nvar $author$project$Types$CheckTrackedTxsStatus = {$: 'CheckTrackedTxsStatus'};\nvar $author$project$Types$PostResponse = function (a) {\n\treturn {$: 'PostResponse', a: a};\n};\nvar $author$project$Types$PostTxResponse = function (a) {\n\treturn {$: 'PostTxResponse', a: a};\n};\nvar $author$project$Types$Resize = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Resize', a: a, b: b};\n\t});\nvar $author$project$Types$Tick = function (a) {\n\treturn {$: 'Tick', a: a};\n};\nvar $author$project$Types$WalletResponse = function (a) {\n\treturn {$: 'WalletResponse', a: a};\n};\nvar $elm$core$Platform$Sub$batch = _Platform_batch;\nvar $author$project$Types$WalletCancel = {$: 'WalletCancel'};\nvar $author$project$Types$WalletError = function (a) {\n\treturn {$: 'WalletError', a: a};\n};\nvar $author$project$Types$WalletInProgress = {$: 'WalletInProgress'};\nvar $cmditch$elm_ethereum$Eth$Decode$bigInt = $cmditch$elm_ethereum$Eth$Decode$resultToDecoder(\n\tA2(\n\t\t$elm$core$Basics$composeR,\n\t\t$cmditch$elm_ethereum$Eth$Utils$add0x,\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$cmditch$elm_bigint$BigInt$fromHexString,\n\t\t\t$elm$core$Result$fromMaybe('Error decoding hex to BigInt'))));\nvar $author$project$Wallet$connectResponseDecoder = A2(\n\t$elm$core$Basics$composeR,\n\t$elm$json$Json$Decode$decodeValue(\n\t\t$elm$json$Json$Decode$oneOf(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\tfunction (networkRes) {\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$elm$json$Json$Decode$map2,\n\t\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\t\tfunction (addr, bal) {\n\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\t\t\t\t\tfunction (chain) {\n\t\t\t\t\t\t\t\t\t\t\treturn {address: addr, balance: bal, chain: chain};\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tnetworkRes);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'address', $cmditch$elm_ethereum$Eth$Decode$address),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$json$Json$Decode$map,\n\t\t\t\t\t\t\t\t$author$project$TokenValue$tokenValue,\n\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'balance', $cmditch$elm_ethereum$Eth$Decode$bigInt)));\n\t\t\t\t\t},\n\t\t\t\t\tA2($elm$json$Json$Decode$field, 'network', $author$project$Chain$decodeChain)),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$json$Json$Decode$map,\n\t\t\t\t\tfunction (n) {\n\t\t\t\t\t\tswitch (n) {\n\t\t\t\t\t\t\tcase 4001:\n\t\t\t\t\t\t\t\treturn $elm$core$Result$Err($author$project$Types$WalletCancel);\n\t\t\t\t\t\t\tcase 32002:\n\t\t\t\t\t\t\t\treturn $elm$core$Result$Err($author$project$Types$WalletInProgress);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t\t\t$author$project$Types$WalletError(\n\t\t\t\t\t\t\t\t\t\t'Code: ' + $elm$core$String$fromInt(n)));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tA2($elm$json$Json$Decode$field, 'code', $elm$json$Json$Decode$int))\n\t\t\t\t]))),\n\tA2(\n\t\t$elm_community$result_extra$Result$Extra$unpack,\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$elm$json$Json$Decode$errorToString,\n\t\t\tA2($elm$core$Basics$composeR, $author$project$Types$WalletError, $elm$core$Result$Err)),\n\t\t$elm$core$Basics$identity));\nvar $elm$time$Time$Every = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Every', a: a, b: b};\n\t});\nvar $elm$time$Time$State = F2(\n\tfunction (taggers, processes) {\n\t\treturn {processes: processes, taggers: taggers};\n\t});\nvar $elm$time$Time$init = $elm$core$Task$succeed(\n\tA2($elm$time$Time$State, $elm$core$Dict$empty, $elm$core$Dict$empty));\nvar $elm$time$Time$addMySub = F2(\n\tfunction (_v0, state) {\n\t\tvar interval = _v0.a;\n\t\tvar tagger = _v0.b;\n\t\tvar _v1 = A2($elm$core$Dict$get, interval, state);\n\t\tif (_v1.$ === 'Nothing') {\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[tagger]),\n\t\t\t\tstate);\n\t\t} else {\n\t\t\tvar taggers = _v1.a;\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\tA2($elm$core$List$cons, tagger, taggers),\n\t\t\t\tstate);\n\t\t}\n\t});\nvar $elm$core$Process$kill = _Scheduler_kill;\nvar $elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _v0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _v0.a;\n\t\t\t\t\tvar result = _v0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v2 = list.a;\n\t\t\t\t\t\tvar lKey = _v2.a;\n\t\t\t\t\t\tvar lValue = _v2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_v0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_v0 = $temp$_v0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _v3 = A3(\n\t\t\t$elm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\t$elm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _v3.a;\n\t\tvar intermediateResult = _v3.b;\n\t\treturn A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_v4, result) {\n\t\t\t\t\tvar k = _v4.a;\n\t\t\t\t\tvar v = _v4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar $elm$time$Time$setInterval = _Time_setInterval;\nvar $elm$core$Process$spawn = _Scheduler_spawn;\nvar $elm$time$Time$spawnHelp = F3(\n\tfunction (router, intervals, processes) {\n\t\tif (!intervals.b) {\n\t\t\treturn $elm$core$Task$succeed(processes);\n\t\t} else {\n\t\t\tvar interval = intervals.a;\n\t\t\tvar rest = intervals.b;\n\t\t\tvar spawnTimer = $elm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$time$Time$setInterval,\n\t\t\t\t\tinterval,\n\t\t\t\t\tA2($elm$core$Platform$sendToSelf, router, interval)));\n\t\t\tvar spawnRest = function (id) {\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$time$Time$spawnHelp,\n\t\t\t\t\trouter,\n\t\t\t\t\trest,\n\t\t\t\t\tA3($elm$core$Dict$insert, interval, id, processes));\n\t\t\t};\n\t\t\treturn A2($elm$core$Task$andThen, spawnRest, spawnTimer);\n\t\t}\n\t});\nvar $elm$time$Time$onEffects = F3(\n\tfunction (router, subs, _v0) {\n\t\tvar processes = _v0.processes;\n\t\tvar rightStep = F3(\n\t\t\tfunction (_v6, id, _v7) {\n\t\t\t\tvar spawns = _v7.a;\n\t\t\t\tvar existing = _v7.b;\n\t\t\t\tvar kills = _v7.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\texisting,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\t\tfunction (_v5) {\n\t\t\t\t\t\t\treturn kills;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t$elm$core$Process$kill(id)));\n\t\t\t});\n\t\tvar newTaggers = A3($elm$core$List$foldl, $elm$time$Time$addMySub, $elm$core$Dict$empty, subs);\n\t\tvar leftStep = F3(\n\t\t\tfunction (interval, taggers, _v4) {\n\t\t\t\tvar spawns = _v4.a;\n\t\t\t\tvar existing = _v4.b;\n\t\t\t\tvar kills = _v4.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2($elm$core$List$cons, interval, spawns),\n\t\t\t\t\texisting,\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar bothStep = F4(\n\t\t\tfunction (interval, taggers, id, _v3) {\n\t\t\t\tvar spawns = _v3.a;\n\t\t\t\tvar existing = _v3.b;\n\t\t\t\tvar kills = _v3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\tA3($elm$core$Dict$insert, interval, id, existing),\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar _v1 = A6(\n\t\t\t$elm$core$Dict$merge,\n\t\t\tleftStep,\n\t\t\tbothStep,\n\t\t\trightStep,\n\t\t\tnewTaggers,\n\t\t\tprocesses,\n\t\t\t_Utils_Tuple3(\n\t\t\t\t_List_Nil,\n\t\t\t\t$elm$core$Dict$empty,\n\t\t\t\t$elm$core$Task$succeed(_Utils_Tuple0)));\n\t\tvar spawnList = _v1.a;\n\t\tvar existingDict = _v1.b;\n\t\tvar killTask = _v1.c;\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (newProcesses) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tA2($elm$time$Time$State, newTaggers, newProcesses));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v2) {\n\t\t\t\t\treturn A3($elm$time$Time$spawnHelp, router, spawnList, existingDict);\n\t\t\t\t},\n\t\t\t\tkillTask));\n\t});\nvar $elm$time$Time$onSelfMsg = F3(\n\tfunction (router, interval, state) {\n\t\tvar _v0 = A2($elm$core$Dict$get, interval, state.taggers);\n\t\tif (_v0.$ === 'Nothing') {\n\t\t\treturn $elm$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar taggers = _v0.a;\n\t\t\tvar tellTaggers = function (time) {\n\t\t\t\treturn $elm$core$Task$sequence(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (tagger) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$Platform$sendToApp,\n\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\ttagger(time));\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttaggers));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\treturn $elm$core$Task$succeed(state);\n\t\t\t\t},\n\t\t\t\tA2($elm$core$Task$andThen, tellTaggers, $elm$time$Time$now));\n\t\t}\n\t});\nvar $elm$time$Time$subMap = F2(\n\tfunction (f, _v0) {\n\t\tvar interval = _v0.a;\n\t\tvar tagger = _v0.b;\n\t\treturn A2(\n\t\t\t$elm$time$Time$Every,\n\t\t\tinterval,\n\t\t\tA2($elm$core$Basics$composeL, f, tagger));\n\t});\n_Platform_effectManagers['Time'] = _Platform_createManager($elm$time$Time$init, $elm$time$Time$onEffects, $elm$time$Time$onSelfMsg, 0, $elm$time$Time$subMap);\nvar $elm$time$Time$subscription = _Platform_leaf('Time');\nvar $elm$time$Time$every = F2(\n\tfunction (interval, tagger) {\n\t\treturn $elm$time$Time$subscription(\n\t\t\tA2($elm$time$Time$Every, interval, tagger));\n\t});\nvar $elm$browser$Browser$Events$Window = {$: 'Window'};\nvar $elm$browser$Browser$Events$MySub = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'MySub', a: a, b: b, c: c};\n\t});\nvar $elm$browser$Browser$Events$State = F2(\n\tfunction (subs, pids) {\n\t\treturn {pids: pids, subs: subs};\n\t});\nvar $elm$browser$Browser$Events$init = $elm$core$Task$succeed(\n\tA2($elm$browser$Browser$Events$State, _List_Nil, $elm$core$Dict$empty));\nvar $elm$browser$Browser$Events$nodeToKey = function (node) {\n\tif (node.$ === 'Document') {\n\t\treturn 'd_';\n\t} else {\n\t\treturn 'w_';\n\t}\n};\nvar $elm$browser$Browser$Events$addKey = function (sub) {\n\tvar node = sub.a;\n\tvar name = sub.b;\n\treturn _Utils_Tuple2(\n\t\t_Utils_ap(\n\t\t\t$elm$browser$Browser$Events$nodeToKey(node),\n\t\t\tname),\n\t\tsub);\n};\nvar $elm$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, dict) {\n\t\t\t\tvar key = _v0.a;\n\t\t\t\tvar value = _v0.b;\n\t\t\t\treturn A3($elm$core$Dict$insert, key, value, dict);\n\t\t\t}),\n\t\t$elm$core$Dict$empty,\n\t\tassocs);\n};\nvar $elm$browser$Browser$Events$Event = F2(\n\tfunction (key, event) {\n\t\treturn {event: event, key: key};\n\t});\nvar $elm$browser$Browser$Events$spawn = F3(\n\tfunction (router, key, _v0) {\n\t\tvar node = _v0.a;\n\t\tvar name = _v0.b;\n\t\tvar actualNode = function () {\n\t\t\tif (node.$ === 'Document') {\n\t\t\t\treturn _Browser_doc;\n\t\t\t} else {\n\t\t\t\treturn _Browser_window;\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (value) {\n\t\t\t\treturn _Utils_Tuple2(key, value);\n\t\t\t},\n\t\t\tA3(\n\t\t\t\t_Browser_on,\n\t\t\t\tactualNode,\n\t\t\t\tname,\n\t\t\t\tfunction (event) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Platform$sendToSelf,\n\t\t\t\t\t\trouter,\n\t\t\t\t\t\tA2($elm$browser$Browser$Events$Event, key, event));\n\t\t\t\t}));\n\t});\nvar $elm$core$Dict$union = F2(\n\tfunction (t1, t2) {\n\t\treturn A3($elm$core$Dict$foldl, $elm$core$Dict$insert, t2, t1);\n\t});\nvar $elm$browser$Browser$Events$onEffects = F3(\n\tfunction (router, subs, state) {\n\t\tvar stepRight = F3(\n\t\t\tfunction (key, sub, _v6) {\n\t\t\t\tvar deads = _v6.a;\n\t\t\t\tvar lives = _v6.b;\n\t\t\t\tvar news = _v6.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tlives,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tA3($elm$browser$Browser$Events$spawn, router, key, sub),\n\t\t\t\t\t\tnews));\n\t\t\t});\n\t\tvar stepLeft = F3(\n\t\t\tfunction (_v4, pid, _v5) {\n\t\t\t\tvar deads = _v5.a;\n\t\t\t\tvar lives = _v5.b;\n\t\t\t\tvar news = _v5.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2($elm$core$List$cons, pid, deads),\n\t\t\t\t\tlives,\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar stepBoth = F4(\n\t\t\tfunction (key, pid, _v2, _v3) {\n\t\t\t\tvar deads = _v3.a;\n\t\t\t\tvar lives = _v3.b;\n\t\t\t\tvar news = _v3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tA3($elm$core$Dict$insert, key, pid, lives),\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar newSubs = A2($elm$core$List$map, $elm$browser$Browser$Events$addKey, subs);\n\t\tvar _v0 = A6(\n\t\t\t$elm$core$Dict$merge,\n\t\t\tstepLeft,\n\t\t\tstepBoth,\n\t\t\tstepRight,\n\t\t\tstate.pids,\n\t\t\t$elm$core$Dict$fromList(newSubs),\n\t\t\t_Utils_Tuple3(_List_Nil, $elm$core$Dict$empty, _List_Nil));\n\t\tvar deadPids = _v0.a;\n\t\tvar livePids = _v0.b;\n\t\tvar makeNewPids = _v0.c;\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (pids) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$browser$Browser$Events$State,\n\t\t\t\t\t\tnewSubs,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Dict$union,\n\t\t\t\t\t\t\tlivePids,\n\t\t\t\t\t\t\t$elm$core$Dict$fromList(pids))));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\treturn $elm$core$Task$sequence(makeNewPids);\n\t\t\t\t},\n\t\t\t\t$elm$core$Task$sequence(\n\t\t\t\t\tA2($elm$core$List$map, $elm$core$Process$kill, deadPids))));\n\t});\nvar $elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _v0 = f(mx);\n\t\tif (_v0.$ === 'Just') {\n\t\t\tvar x = _v0.a;\n\t\t\treturn A2($elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar $elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\t$elm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$browser$Browser$Events$onSelfMsg = F3(\n\tfunction (router, _v0, state) {\n\t\tvar key = _v0.key;\n\t\tvar event = _v0.event;\n\t\tvar toMessage = function (_v2) {\n\t\t\tvar subKey = _v2.a;\n\t\t\tvar _v3 = _v2.b;\n\t\t\tvar node = _v3.a;\n\t\t\tvar name = _v3.b;\n\t\t\tvar decoder = _v3.c;\n\t\t\treturn _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : $elm$core$Maybe$Nothing;\n\t\t};\n\t\tvar messages = A2($elm$core$List$filterMap, toMessage, state.subs);\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (_v1) {\n\t\t\t\treturn $elm$core$Task$succeed(state);\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\t\tmessages)));\n\t});\nvar $elm$browser$Browser$Events$subMap = F2(\n\tfunction (func, _v0) {\n\t\tvar node = _v0.a;\n\t\tvar name = _v0.b;\n\t\tvar decoder = _v0.c;\n\t\treturn A3(\n\t\t\t$elm$browser$Browser$Events$MySub,\n\t\t\tnode,\n\t\t\tname,\n\t\t\tA2($elm$json$Json$Decode$map, func, decoder));\n\t});\n_Platform_effectManagers['Browser.Events'] = _Platform_createManager($elm$browser$Browser$Events$init, $elm$browser$Browser$Events$onEffects, $elm$browser$Browser$Events$onSelfMsg, 0, $elm$browser$Browser$Events$subMap);\nvar $elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');\nvar $elm$browser$Browser$Events$on = F3(\n\tfunction (node, name, decoder) {\n\t\treturn $elm$browser$Browser$Events$subscription(\n\t\t\tA3($elm$browser$Browser$Events$MySub, node, name, decoder));\n\t});\nvar $elm$browser$Browser$Events$onResize = function (func) {\n\treturn A3(\n\t\t$elm$browser$Browser$Events$on,\n\t\t$elm$browser$Browser$Events$Window,\n\t\t'resize',\n\t\tA2(\n\t\t\t$elm$json$Json$Decode$field,\n\t\t\t'target',\n\t\t\tA3(\n\t\t\t\t$elm$json$Json$Decode$map2,\n\t\t\t\tfunc,\n\t\t\t\tA2($elm$json$Json$Decode$field, 'innerWidth', $elm$json$Json$Decode$int),\n\t\t\t\tA2($elm$json$Json$Decode$field, 'innerHeight', $elm$json$Json$Decode$int))));\n};\nvar $author$project$Ports$postResponse = _Platform_incomingPort('postResponse', $elm$json$Json$Decode$value);\nvar $author$project$Types$OtherErr = function (a) {\n\treturn {$: 'OtherErr', a: a};\n};\nvar $author$project$Types$UserRejected = {$: 'UserRejected'};\nvar $author$project$Wallet$postResponseDecoder = A2(\n\t$elm$core$Basics$composeR,\n\t$elm$json$Json$Decode$decodeValue(\n\t\t$elm$json$Json$Decode$oneOf(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($elm$json$Json$Decode$map, $elm$core$Result$Ok, $cmditch$elm_ethereum$Eth$Decode$txHash),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$json$Json$Decode$map,\n\t\t\t\t\tfunction (n) {\n\t\t\t\t\t\tif (n === 4001) {\n\t\t\t\t\t\t\treturn $elm$core$Result$Err($author$project$Types$UserRejected);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t\t$author$project$Types$OtherErr(\n\t\t\t\t\t\t\t\t\t'Code: ' + $elm$core$String$fromInt(n)));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tA2($elm$json$Json$Decode$field, 'code', $elm$json$Json$Decode$int))\n\t\t\t\t]))),\n\tA2(\n\t\t$elm_community$result_extra$Result$Extra$unpack,\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$elm$json$Json$Decode$errorToString,\n\t\t\tA2($elm$core$Basics$composeR, $author$project$Types$OtherErr, $elm$core$Result$Err)),\n\t\t$elm$core$Basics$identity));\nvar $author$project$Ports$txIn = _Platform_incomingPort('txIn', $elm$json$Json$Decode$value);\nvar $author$project$Ports$walletResponse = _Platform_incomingPort('walletResponse', $elm$json$Json$Decode$value);\nvar $author$project$App$subscriptions = function (_v0) {\n\treturn $elm$core$Platform$Sub$batch(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($elm$time$Time$every, 1000, $author$project$Types$Tick),\n\t\t\t\tA2(\n\t\t\t\t$elm$time$Time$every,\n\t\t\t\t3000,\n\t\t\t\t$elm$core$Basics$always($author$project$Types$ChangeDemoPhaceSrc)),\n\t\t\t\tA2(\n\t\t\t\t$elm$time$Time$every,\n\t\t\t\t5000,\n\t\t\t\t$elm$core$Basics$always($author$project$Types$CheckTrackedTxsStatus)),\n\t\t\t\t$author$project$Ports$walletResponse(\n\t\t\t\tA2($elm$core$Basics$composeR, $author$project$Wallet$connectResponseDecoder, $author$project$Types$WalletResponse)),\n\t\t\t\t$elm$browser$Browser$Events$onResize($author$project$Types$Resize),\n\t\t\t\t$author$project$Ports$txIn(\n\t\t\t\tA2($elm$core$Basics$composeR, $author$project$Wallet$postResponseDecoder, $author$project$Types$PostTxResponse)),\n\t\t\t\t$author$project$Ports$postResponse(\n\t\t\t\tA2($elm$core$Basics$composeR, $author$project$Wallet$postResponseDecoder, $author$project$Types$PostResponse))\n\t\t\t]));\n};\nvar $author$project$Types$Active = function (a) {\n\treturn {$: 'Active', a: a};\n};\nvar $author$project$Types$Connecting = {$: 'Connecting'};\nvar $author$project$GTag$GTagData = F4(\n\tfunction (event, category, label, value) {\n\t\treturn {category: category, event: event, label: label, value: value};\n\t});\nvar $author$project$Types$Mining = {$: 'Mining'};\nvar $author$project$Types$PostTx = {$: 'PostTx'};\nvar $author$project$Types$PostTxPriceResponse = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'PostTxPriceResponse', a: a, b: b};\n\t});\nvar $author$project$Types$PriceResponse = function (a) {\n\treturn {$: 'PriceResponse', a: a};\n};\nvar $author$project$Types$TipTx = function (a) {\n\treturn {$: 'TipTx', a: a};\n};\nvar $author$project$Types$TrackedTxStatusResult = function (a) {\n\treturn {$: 'TrackedTxStatusResult', a: a};\n};\nvar $author$project$TokenValue$getEvmValue = function (_v0) {\n\tvar tokens = _v0.a;\n\treturn tokens;\n};\nvar $author$project$TokenValue$add = F2(\n\tfunction (t1, t2) {\n\t\treturn $author$project$TokenValue$TokenValue(\n\t\t\tA2(\n\t\t\t\t$cmditch$elm_bigint$BigInt$add,\n\t\t\t\t$author$project$TokenValue$getEvmValue(t1),\n\t\t\t\t$author$project$TokenValue$getEvmValue(t2)));\n\t});\nvar $elm$core$Array$fromListHelp = F3(\n\tfunction (list, nodeList, nodeListSize) {\n\t\tfromListHelp:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, list);\n\t\t\tvar jsArray = _v0.a;\n\t\t\tvar remainingItems = _v0.b;\n\t\t\tif (_Utils_cmp(\n\t\t\t\t$elm$core$Elm$JsArray$length(jsArray),\n\t\t\t\t$elm$core$Array$branchFactor) < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{nodeList: nodeList, nodeListSize: nodeListSize, tail: jsArray});\n\t\t\t} else {\n\t\t\t\tvar $temp$list = remainingItems,\n\t\t\t\t\t$temp$nodeList = A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$elm$core$Array$Leaf(jsArray),\n\t\t\t\t\tnodeList),\n\t\t\t\t\t$temp$nodeListSize = nodeListSize + 1;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue fromListHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$fromList = function (list) {\n\tif (!list.b) {\n\t\treturn $elm$core$Array$empty;\n\t} else {\n\t\treturn A3($elm$core$Array$fromListHelp, list, _List_Nil, 0);\n\t}\n};\nvar $elm$core$List$sortBy = _List_sortBy;\nvar $elm$core$Basics$clamp = F3(\n\tfunction (low, high, number) {\n\t\treturn (_Utils_cmp(number, low) < 0) ? low : ((_Utils_cmp(number, high) > 0) ? high : number);\n\t});\nvar $author$project$Helpers$Time$getRatio = F2(\n\tfunction (t1, t2) {\n\t\treturn $elm$time$Time$posixToMillis(t1) / $elm$time$Time$posixToMillis(t2);\n\t});\nvar $author$project$Helpers$Time$mul = F2(\n\tfunction (t, i) {\n\t\treturn $elm$time$Time$millisToPosix(\n\t\t\ti * $elm$time$Time$posixToMillis(t));\n\t});\nvar $author$project$Helpers$Time$secondsToPosix = function (s) {\n\treturn $elm$time$Time$millisToPosix(s * 1000);\n};\nvar $author$project$Helpers$Time$oneDay = $author$project$Helpers$Time$secondsToPosix((60 * 60) * 24);\nvar $author$project$Helpers$Time$sub = F2(\n\tfunction (t1, t2) {\n\t\treturn $elm$time$Time$millisToPosix(\n\t\t\t$elm$time$Time$posixToMillis(t1) - $elm$time$Time$posixToMillis(t2));\n\t});\nvar $author$project$MaybeDebugLog$maybeDebugLog = F2(\n\tfunction (_v0, a) {\n\t\treturn a;\n\t});\nvar $elm$core$String$toFloat = _String_toFloat;\nvar $elm$core$String$dropRight = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3($elm$core$String$slice, 0, -n, string);\n\t});\nvar $author$project$TokenValue$removeUnnecessaryZerosAndDots = function (numString) {\n\tremoveUnnecessaryZerosAndDots:\n\twhile (true) {\n\t\tif (A2($elm$core$String$endsWith, '.', numString)) {\n\t\t\treturn A3($elm$core$String$slice, 0, -1, numString);\n\t\t} else {\n\t\t\tif (A2($elm$core$String$endsWith, '0', numString)) {\n\t\t\t\tvar $temp$numString = A3($elm$core$String$slice, 0, -1, numString);\n\t\t\t\tnumString = $temp$numString;\n\t\t\t\tcontinue removeUnnecessaryZerosAndDots;\n\t\t\t} else {\n\t\t\t\tif (numString === '') {\n\t\t\t\t\treturn '0';\n\t\t\t\t} else {\n\t\t\t\t\treturn numString;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\nvar $elm$core$String$concat = function (strings) {\n\treturn A2($elm$core$String$join, '', strings);\n};\nvar $cmditch$elm_bigint$BigInt$fillZeroes = A2(\n\t$elm$core$Basics$composeL,\n\tA2(\n\t\t$elm$core$String$padLeft,\n\t\t$cmditch$elm_bigint$Constants$maxDigitMagnitude,\n\t\t_Utils_chr('0')),\n\t$elm$core$String$fromInt);\nvar $cmditch$elm_bigint$BigInt$revMagnitudeToString = function (_v0) {\n\tvar digits = _v0.a;\n\tvar _v1 = $elm$core$List$reverse(digits);\n\tif (!_v1.b) {\n\t\treturn '0';\n\t} else {\n\t\tvar x = _v1.a;\n\t\tvar xs = _v1.b;\n\t\treturn $elm$core$String$concat(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$String$fromInt(x),\n\t\t\t\tA2($elm$core$List$map, $cmditch$elm_bigint$BigInt$fillZeroes, xs)));\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$toString = function (bigInt) {\n\tswitch (bigInt.$) {\n\t\tcase 'Zer':\n\t\t\treturn '0';\n\t\tcase 'Pos':\n\t\t\tvar mag = bigInt.a;\n\t\t\treturn $cmditch$elm_bigint$BigInt$revMagnitudeToString(mag);\n\t\tdefault:\n\t\t\tvar mag = bigInt.a;\n\t\t\treturn '-' + $cmditch$elm_bigint$BigInt$revMagnitudeToString(mag);\n\t}\n};\nvar $author$project$TokenValue$tokenDecimals = 18;\nvar $author$project$TokenValue$evmValueToUserFloatString = function (evmValue) {\n\tif (_Utils_eq(\n\t\tA2(\n\t\t\t$cmditch$elm_bigint$BigInt$compare,\n\t\t\tevmValue,\n\t\t\t$cmditch$elm_bigint$BigInt$fromInt(0)),\n\t\t$elm$core$Basics$LT)) {\n\t\treturn '-' + $author$project$TokenValue$evmValueToUserFloatString(\n\t\t\t$cmditch$elm_bigint$BigInt$negate(evmValue));\n\t} else {\n\t\tvar zeroPaddedString = A3(\n\t\t\t$elm$core$String$padLeft,\n\t\t\t$author$project$TokenValue$tokenDecimals,\n\t\t\t_Utils_chr('0'),\n\t\t\t$cmditch$elm_bigint$BigInt$toString(evmValue));\n\t\tvar withDecimalString = A2($elm$core$String$dropRight, $author$project$TokenValue$tokenDecimals, zeroPaddedString) + ('.' + A2($elm$core$String$right, $author$project$TokenValue$tokenDecimals, zeroPaddedString));\n\t\treturn function (s) {\n\t\t\treturn (s === '') ? '0' : s;\n\t\t}(\n\t\t\t$author$project$TokenValue$removeUnnecessaryZerosAndDots(withDecimalString));\n\t}\n};\nvar $author$project$TokenValue$evmValueToTruncatedUserFloatString = F2(\n\tfunction (maxDigitsAfterDecimal, evmValue) {\n\t\tvar untruncatedString = $author$project$TokenValue$evmValueToUserFloatString(evmValue);\n\t\tvar maybeDecimalPos = $elm$core$List$head(\n\t\t\tA2($elm$core$String$indexes, '.', untruncatedString));\n\t\tif (maybeDecimalPos.$ === 'Nothing') {\n\t\t\treturn untruncatedString;\n\t\t} else {\n\t\t\tvar decimalPos = maybeDecimalPos.a;\n\t\t\treturn (!maxDigitsAfterDecimal) ? A2($elm$core$String$left, decimalPos, untruncatedString) : A2($elm$core$String$left, (decimalPos + 1) + maxDigitsAfterDecimal, untruncatedString);\n\t\t}\n\t});\nvar $author$project$TokenValue$toFloatString = F2(\n\tfunction (maxDigitsAfterDecimal, tokens) {\n\t\tif (maxDigitsAfterDecimal.$ === 'Nothing') {\n\t\t\treturn $author$project$TokenValue$evmValueToUserFloatString(\n\t\t\t\t$author$project$TokenValue$getEvmValue(tokens));\n\t\t} else {\n\t\t\tvar maxDigits = maxDigitsAfterDecimal.a;\n\t\t\treturn A2(\n\t\t\t\t$author$project$TokenValue$evmValueToTruncatedUserFloatString,\n\t\t\t\tmaxDigits,\n\t\t\t\t$author$project$TokenValue$getEvmValue(tokens));\n\t\t}\n\t});\nvar $author$project$TokenValue$toFloatWithWarning = function (tokens) {\n\tvar _v0 = $elm$core$String$toFloat(\n\t\tA2($author$project$TokenValue$toFloatString, $elm$core$Maybe$Nothing, tokens));\n\tif (_v0.$ === 'Just') {\n\t\tvar f = _v0.a;\n\t\treturn f;\n\t} else {\n\t\tvar _v1 = A2($author$project$MaybeDebugLog$maybeDebugLog, 'Error converting tokenValue to float: string -> float failed', tokens);\n\t\treturn 0;\n\t}\n};\nvar $author$project$Misc$sortPosts = F4(\n\tfunction (blockTimes, accounting, now, post) {\n\t\tvar totalBurned = $author$project$TokenValue$toFloatWithWarning(\n\t\t\tA3(\n\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\tpost.authorBurn,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.totalBurned;\n\t\t\t\t},\n\t\t\t\tA2($elm$core$Dict$get, post.key, accounting)));\n\t\tvar postTimeDefaultZero = A2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t$elm$time$Time$millisToPosix(0),\n\t\t\tA2($elm$core$Dict$get, post.id.block, blockTimes));\n\t\tvar age = A2($author$project$Helpers$Time$sub, now, postTimeDefaultZero);\n\t\tvar ageFactor = function (ascNum) {\n\t\t\treturn 1 - ascNum;\n\t\t}(\n\t\t\tA3(\n\t\t\t\t$elm$core$Basics$clamp,\n\t\t\t\t0,\n\t\t\t\t1,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$Helpers$Time$getRatio,\n\t\t\t\t\tage,\n\t\t\t\t\tA2($author$project$Helpers$Time$mul, $author$project$Helpers$Time$oneDay, 90))));\n\t\tvar newnessMultiplier = (ageFactor * 4.0) + 1;\n\t\treturn -(totalBurned * newnessMultiplier);\n\t});\nvar $elm$core$Dict$values = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, valueList) {\n\t\t\t\treturn A2($elm$core$List$cons, value, valueList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $author$project$Update$calculatePagination = F3(\n\tfunction (blockTimes, accounting, now) {\n\t\treturn A2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$elm$core$Dict$values,\n\t\t\tA2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t$elm$core$List$sortBy(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\treturn $.core;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA3($author$project$Misc$sortPosts, blockTimes, accounting, now))),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t$elm$core$List$map(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\treturn $.core;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\treturn $.key;\n\t\t\t\t\t\t\t})),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t$elm_community$list_extra$List$Extra$greedyGroupsOf(10),\n\t\t\t\t\t\t$elm$core$Array$fromList))));\n\t});\nvar $author$project$TokenValue$zero = $author$project$TokenValue$TokenValue(\n\t$cmditch$elm_bigint$BigInt$fromInt(0));\nvar $author$project$Update$addPost = F2(\n\tfunction (log, model) {\n\t\tif (log.$ === 'LogRoot') {\n\t\t\tvar post = log.a;\n\t\t\tvar rootPosts = A3($elm$core$Dict$insert, post.core.key, post, model.rootPosts);\n\t\t\treturn _Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tpages: A4($author$project$Update$calculatePagination, model.blockTimes, model.accounting, model.now, rootPosts),\n\t\t\t\t\trootPosts: rootPosts,\n\t\t\t\t\ttopics: A3(\n\t\t\t\t\t\t$elm$core$Dict$update,\n\t\t\t\t\t\tpost.topic,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t$elm$core$Maybe$withDefault(\n\t\t\t\t\t\t\t\t{ids: $elm$core$Set$empty, total: $author$project$TokenValue$zero}),\n\t\t\t\t\t\t\t$elm$core$Maybe$Just),\n\t\t\t\t\t\tmodel.topics)\n\t\t\t\t});\n\t\t} else {\n\t\t\tvar post = log.a;\n\t\t\treturn _Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\treplyIds: A3(\n\t\t\t\t\t\t$elm$core$Dict$update,\n\t\t\t\t\t\t$author$project$Misc$postIdToKey(post.parent),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t$elm$core$Maybe$withDefault($elm$core$Set$empty),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\t$elm$core$Set$insert(post.core.key),\n\t\t\t\t\t\t\t\t$elm$core$Maybe$Just)),\n\t\t\t\t\t\tmodel.replyIds),\n\t\t\t\t\treplyPosts: A3($elm$core$Dict$insert, post.core.key, post, model.replyPosts)\n\t\t\t\t});\n\t\t}\n\t});\nvar $elm$core$Dict$member = F2(\n\tfunction (key, dict) {\n\t\tvar _v0 = A2($elm$core$Dict$get, key, dict);\n\t\tif (_v0.$ === 'Just') {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\nvar $elm$core$Set$member = F2(\n\tfunction (key, _v0) {\n\t\tvar dict = _v0.a;\n\t\treturn A2($elm$core$Dict$member, key, dict);\n\t});\nvar $elm_community$list_extra$List$Extra$uniqueHelp = F4(\n\tfunction (f, existing, remaining, accumulator) {\n\t\tuniqueHelp:\n\t\twhile (true) {\n\t\t\tif (!remaining.b) {\n\t\t\t\treturn $elm$core$List$reverse(accumulator);\n\t\t\t} else {\n\t\t\t\tvar first = remaining.a;\n\t\t\t\tvar rest = remaining.b;\n\t\t\t\tvar computedFirst = f(first);\n\t\t\t\tif (A2($elm$core$Set$member, computedFirst, existing)) {\n\t\t\t\t\tvar $temp$f = f,\n\t\t\t\t\t\t$temp$existing = existing,\n\t\t\t\t\t\t$temp$remaining = rest,\n\t\t\t\t\t\t$temp$accumulator = accumulator;\n\t\t\t\t\tf = $temp$f;\n\t\t\t\t\texisting = $temp$existing;\n\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\taccumulator = $temp$accumulator;\n\t\t\t\t\tcontinue uniqueHelp;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$f = f,\n\t\t\t\t\t\t$temp$existing = A2($elm$core$Set$insert, computedFirst, existing),\n\t\t\t\t\t\t$temp$remaining = rest,\n\t\t\t\t\t\t$temp$accumulator = A2($elm$core$List$cons, first, accumulator);\n\t\t\t\t\tf = $temp$f;\n\t\t\t\t\texisting = $temp$existing;\n\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\taccumulator = $temp$accumulator;\n\t\t\t\t\tcontinue uniqueHelp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm_community$list_extra$List$Extra$uniqueBy = F2(\n\tfunction (f, list) {\n\t\treturn A4($elm_community$list_extra$List$Extra$uniqueHelp, f, $elm$core$Set$empty, list, _List_Nil);\n\t});\nvar $author$project$Update$addUserNotices = F2(\n\tfunction (notices, model) {\n\t\treturn _Utils_update(\n\t\t\tmodel,\n\t\t\t{\n\t\t\t\tuserNotices: A2(\n\t\t\t\t\t$elm_community$list_extra$List$Extra$uniqueBy,\n\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\treturn $.uniqueLabel;\n\t\t\t\t\t},\n\t\t\t\t\tA2($elm$core$List$append, model.userNotices, notices))\n\t\t\t});\n\t});\nvar $author$project$Update$addUserNotice = F2(\n\tfunction (notice, model) {\n\t\treturn A2(\n\t\t\t$author$project$Update$addUserNotices,\n\t\t\t_List_fromArray(\n\t\t\t\t[notice]),\n\t\t\tmodel);\n\t});\nvar $elm$browser$Browser$Navigation$back = F2(\n\tfunction (key, n) {\n\t\treturn A2(_Browser_go, key, -n);\n\t});\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$functionCall = F2(\n\tfunction (abiSig, encodings) {\n\t\tvar byteCodeEncodings = $cmditch$elm_ethereum$Eth$Abi$Encode$lowLevelEncodeList(\n\t\t\tA2($elm$core$List$map, $cmditch$elm_ethereum$Eth$Abi$Encode$lowLevelEncode, encodings));\n\t\treturn $cmditch$elm_ethereum$Internal$Types$Hex(\n\t\t\t_Utils_ap(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$remove0x(abiSig),\n\t\t\t\tbyteCodeEncodings));\n\t});\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$StringE = function (a) {\n\treturn {$: 'StringE', a: a};\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$string = $cmditch$elm_ethereum$Eth$Abi$Encode$StringE;\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$UintE = function (a) {\n\treturn {$: 'UintE', a: a};\n};\nvar $cmditch$elm_ethereum$Eth$Abi$Encode$uint = $cmditch$elm_ethereum$Eth$Abi$Encode$UintE;\nvar $author$project$Contracts$Generated$SmokeSignal$burnMessage = F3(\n\tfunction (contractAddress, message_, donateAmount_) {\n\t\treturn {\n\t\t\tdata: $elm$core$Maybe$Just(\n\t\t\t\tA2(\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$functionCall,\n\t\t\t\t\t'131d0b57',\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$string(message_),\n\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$uint(donateAmount_)\n\t\t\t\t\t\t]))),\n\t\t\tdecoder: $cmditch$elm_ethereum$Eth$Abi$Decode$toElmDecoder(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$staticBytes(32)),\n\t\t\tfrom: $elm$core$Maybe$Nothing,\n\t\t\tgas: $elm$core$Maybe$Nothing,\n\t\t\tgasPrice: $elm$core$Maybe$Nothing,\n\t\t\tnonce: $elm$core$Maybe$Nothing,\n\t\t\tto: $elm$core$Maybe$Just(contractAddress),\n\t\t\tvalue: $elm$core$Maybe$Nothing\n\t\t};\n\t});\nvar $author$project$Post$encodeContent = function (content) {\n\treturn A2(\n\t\t$elm$json$Json$Encode$list,\n\t\t$elm$core$Basics$identity,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$json$Json$Encode$string(\n\t\t\t\tA2($elm$core$Maybe$withDefault, '', content.title)),\n\t\t\t\t$elm$json$Json$Encode$string(\n\t\t\t\tA2($elm$core$Maybe$withDefault, '', content.desc)),\n\t\t\t\t$elm$json$Json$Encode$string(content.body)\n\t\t\t]));\n};\nvar $author$project$Post$encodePostId = function (postId) {\n\treturn A2(\n\t\t$elm$json$Json$Encode$list,\n\t\t$elm$core$Basics$identity,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$json$Json$Encode$int(postId.block),\n\t\t\t\t$elm$json$Json$Encode$string(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$hexToString(postId.messageHash))\n\t\t\t]));\n};\nvar $author$project$Post$encodeContext = function (context) {\n\tif (context.$ === 'Reply') {\n\t\tvar postId = context.a;\n\t\treturn $elm$json$Json$Encode$object(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t're',\n\t\t\t\t\t$author$project$Post$encodePostId(postId))\n\t\t\t\t]));\n\t} else {\n\t\tvar topic = context.a;\n\t\treturn $elm$json$Json$Encode$object(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'topic',\n\t\t\t\t\t$elm$json$Json$Encode$string(topic))\n\t\t\t\t]));\n\t}\n};\nvar $author$project$Post$encodePostContent = function (draft) {\n\treturn '!smokesignal' + A2(\n\t\t$elm$json$Json$Encode$encode,\n\t\t0,\n\t\t$elm$json$Json$Encode$object(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'm',\n\t\t\t\t\t$author$project$Post$encodeContent(draft.content)),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'v',\n\t\t\t\t\t$elm$json$Json$Encode$int(draft.metadata.metadataVersion)),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'c',\n\t\t\t\t\t$author$project$Post$encodeContext(draft.metadata.context))\n\t\t\t\t])));\n};\nvar $author$project$Helpers$Eth$updateCallValue = F2(\n\tfunction (value, call) {\n\t\treturn _Utils_update(\n\t\t\tcall,\n\t\t\t{\n\t\t\t\tvalue: $elm$core$Maybe$Just(value)\n\t\t\t});\n\t});\nvar $author$project$Contracts$SmokeSignal$burnEncodedPost = F3(\n\tfunction (wallet, smokeSignalContractAddress, draft) {\n\t\treturn function (call) {\n\t\t\treturn _Utils_update(\n\t\t\t\tcall,\n\t\t\t\t{\n\t\t\t\t\tfrom: $elm$core$Maybe$Just(wallet.address)\n\t\t\t\t});\n\t\t}(\n\t\t\tA2(\n\t\t\t\t$author$project$Helpers$Eth$updateCallValue,\n\t\t\t\t$author$project$TokenValue$getEvmValue(draft.authorBurn),\n\t\t\t\tA3(\n\t\t\t\t\t$author$project$Contracts$Generated$SmokeSignal$burnMessage,\n\t\t\t\t\tsmokeSignalContractAddress,\n\t\t\t\t\t$author$project$Post$encodePostContent(draft),\n\t\t\t\t\t$author$project$TokenValue$getEvmValue(draft.donateAmount))));\n\t});\nvar $author$project$Contracts$Generated$SmokeSignal$burnHash = F3(\n\tfunction (contractAddress, hash_, donateAmount_) {\n\t\treturn {\n\t\t\tdata: $elm$core$Maybe$Just(\n\t\t\t\tA2(\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$functionCall,\n\t\t\t\t\t'dd35b7ce',\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$staticBytes(32)(hash_),\n\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$uint(donateAmount_)\n\t\t\t\t\t\t]))),\n\t\t\tdecoder: $elm$json$Json$Decode$succeed(_Utils_Tuple0),\n\t\t\tfrom: $elm$core$Maybe$Nothing,\n\t\t\tgas: $elm$core$Maybe$Nothing,\n\t\t\tgasPrice: $elm$core$Maybe$Nothing,\n\t\t\tnonce: $elm$core$Maybe$Nothing,\n\t\t\tto: $elm$core$Maybe$Just(contractAddress),\n\t\t\tvalue: $elm$core$Maybe$Nothing\n\t\t};\n\t});\nvar $cmditch$elm_bigint$BigInt$div = F2(\n\tfunction (num, den) {\n\t\treturn A2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t$cmditch$elm_bigint$BigInt$zero,\n\t\t\tA2(\n\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t$elm$core$Tuple$first,\n\t\t\t\tA2($cmditch$elm_bigint$BigInt$divmod, num, den)));\n\t});\nvar $author$project$TokenValue$div = F2(\n\tfunction (t, i) {\n\t\treturn $author$project$TokenValue$TokenValue(\n\t\t\tA2(\n\t\t\t\t$cmditch$elm_bigint$BigInt$div,\n\t\t\t\t$author$project$TokenValue$getEvmValue(t),\n\t\t\t\t$cmditch$elm_bigint$BigInt$fromInt(i)));\n\t});\nvar $author$project$Contracts$SmokeSignal$burnForPost = F5(\n\tfunction (wallet, smokeSignalContractAddress, messageHash, amount, donate) {\n\t\treturn function (call) {\n\t\t\treturn _Utils_update(\n\t\t\t\tcall,\n\t\t\t\t{\n\t\t\t\t\tfrom: $elm$core$Maybe$Just(wallet.address)\n\t\t\t\t});\n\t\t}(\n\t\t\tA2(\n\t\t\t\t$author$project$Helpers$Eth$updateCallValue,\n\t\t\t\t$author$project$TokenValue$getEvmValue(amount),\n\t\t\t\tA3(\n\t\t\t\t\t$author$project$Contracts$Generated$SmokeSignal$burnHash,\n\t\t\t\t\tsmokeSignalContractAddress,\n\t\t\t\t\tmessageHash,\n\t\t\t\t\tdonate ? $author$project$TokenValue$getEvmValue(\n\t\t\t\t\t\tA2($author$project$TokenValue$div, amount, 100)) : $author$project$TokenValue$getEvmValue($author$project$TokenValue$zero))));\n\t});\nvar $author$project$TokenValue$compare = F2(\n\tfunction (t1, t2) {\n\t\treturn A2(\n\t\t\t$cmditch$elm_bigint$BigInt$compare,\n\t\t\t$author$project$TokenValue$getEvmValue(t1),\n\t\t\t$author$project$TokenValue$getEvmValue(t2));\n\t});\nvar $author$project$Ports$connectToWeb3 = _Platform_outgoingPort(\n\t'connectToWeb3',\n\tfunction ($) {\n\t\treturn $elm$json$Json$Encode$null;\n\t});\nvar $author$project$Ports$consentToCookies = _Platform_outgoingPort(\n\t'consentToCookies',\n\tfunction ($) {\n\t\treturn $elm$json$Json$Encode$null;\n\t});\nvar $myrho$elm_round$Round$addSign = F2(\n\tfunction (signed, str) {\n\t\tvar isNotZero = A2(\n\t\t\t$elm$core$List$any,\n\t\t\tfunction (c) {\n\t\t\t\treturn (!_Utils_eq(\n\t\t\t\t\tc,\n\t\t\t\t\t_Utils_chr('0'))) && (!_Utils_eq(\n\t\t\t\t\tc,\n\t\t\t\t\t_Utils_chr('.')));\n\t\t\t},\n\t\t\t$elm$core$String$toList(str));\n\t\treturn _Utils_ap(\n\t\t\t(signed && isNotZero) ? '-' : '',\n\t\t\tstr);\n\t});\nvar $elm$core$String$fromFloat = _String_fromNumber;\nvar $myrho$elm_round$Round$increaseNum = function (_v0) {\n\tvar head = _v0.a;\n\tvar tail = _v0.b;\n\tif (_Utils_eq(\n\t\thead,\n\t\t_Utils_chr('9'))) {\n\t\tvar _v1 = $elm$core$String$uncons(tail);\n\t\tif (_v1.$ === 'Nothing') {\n\t\t\treturn '01';\n\t\t} else {\n\t\t\tvar headtail = _v1.a;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$String$cons,\n\t\t\t\t_Utils_chr('0'),\n\t\t\t\t$myrho$elm_round$Round$increaseNum(headtail));\n\t\t}\n\t} else {\n\t\tvar c = $elm$core$Char$toCode(head);\n\t\treturn ((c >= 48) && (c < 57)) ? A2(\n\t\t\t$elm$core$String$cons,\n\t\t\t$elm$core$Char$fromCode(c + 1),\n\t\t\ttail) : '0';\n\t}\n};\nvar $elm$core$Basics$isInfinite = _Basics_isInfinite;\nvar $elm$core$Basics$isNaN = _Basics_isNaN;\nvar $elm$core$String$padRight = F3(\n\tfunction (n, _char, string) {\n\t\treturn _Utils_ap(\n\t\t\tstring,\n\t\t\tA2(\n\t\t\t\t$elm$core$String$repeat,\n\t\t\t\tn - $elm$core$String$length(string),\n\t\t\t\t$elm$core$String$fromChar(_char)));\n\t});\nvar $elm$core$String$reverse = _String_reverse;\nvar $myrho$elm_round$Round$splitComma = function (str) {\n\tvar _v0 = A2($elm$core$String$split, '.', str);\n\tif (_v0.b) {\n\t\tif (_v0.b.b) {\n\t\t\tvar before = _v0.a;\n\t\t\tvar _v1 = _v0.b;\n\t\t\tvar after = _v1.a;\n\t\t\treturn _Utils_Tuple2(before, after);\n\t\t} else {\n\t\t\tvar before = _v0.a;\n\t\t\treturn _Utils_Tuple2(before, '0');\n\t\t}\n\t} else {\n\t\treturn _Utils_Tuple2('0', '0');\n\t}\n};\nvar $myrho$elm_round$Round$toDecimal = function (fl) {\n\tvar _v0 = A2(\n\t\t$elm$core$String$split,\n\t\t'e',\n\t\t$elm$core$String$fromFloat(\n\t\t\t$elm$core$Basics$abs(fl)));\n\tif (_v0.b) {\n\t\tif (_v0.b.b) {\n\t\t\tvar num = _v0.a;\n\t\t\tvar _v1 = _v0.b;\n\t\t\tvar exp = _v1.a;\n\t\t\tvar e = A2(\n\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t0,\n\t\t\t\t$elm$core$String$toInt(\n\t\t\t\t\tA2($elm$core$String$startsWith, '+', exp) ? A2($elm$core$String$dropLeft, 1, exp) : exp));\n\t\t\tvar _v2 = $myrho$elm_round$Round$splitComma(num);\n\t\t\tvar before = _v2.a;\n\t\t\tvar after = _v2.b;\n\t\t\tvar total = _Utils_ap(before, after);\n\t\t\tvar zeroed = (e < 0) ? A2(\n\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t'0',\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\tfunction (_v3) {\n\t\t\t\t\t\tvar a = _v3.a;\n\t\t\t\t\t\tvar b = _v3.b;\n\t\t\t\t\t\treturn a + ('.' + b);\n\t\t\t\t\t},\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t$elm$core$Tuple$mapFirst($elm$core$String$fromChar),\n\t\t\t\t\t\t$elm$core$String$uncons(\n\t\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$repeat,\n\t\t\t\t\t\t\t\t\t$elm$core$Basics$abs(e),\n\t\t\t\t\t\t\t\t\t'0'),\n\t\t\t\t\t\t\t\ttotal))))) : A3(\n\t\t\t\t$elm$core$String$padRight,\n\t\t\t\te + 1,\n\t\t\t\t_Utils_chr('0'),\n\t\t\t\ttotal);\n\t\t\treturn _Utils_ap(\n\t\t\t\t(fl < 0) ? '-' : '',\n\t\t\t\tzeroed);\n\t\t} else {\n\t\t\tvar num = _v0.a;\n\t\t\treturn _Utils_ap(\n\t\t\t\t(fl < 0) ? '-' : '',\n\t\t\t\tnum);\n\t\t}\n\t} else {\n\t\treturn '';\n\t}\n};\nvar $myrho$elm_round$Round$roundFun = F3(\n\tfunction (functor, s, fl) {\n\t\tif ($elm$core$Basics$isInfinite(fl) || $elm$core$Basics$isNaN(fl)) {\n\t\t\treturn $elm$core$String$fromFloat(fl);\n\t\t} else {\n\t\t\tvar signed = fl < 0;\n\t\t\tvar _v0 = $myrho$elm_round$Round$splitComma(\n\t\t\t\t$myrho$elm_round$Round$toDecimal(\n\t\t\t\t\t$elm$core$Basics$abs(fl)));\n\t\t\tvar before = _v0.a;\n\t\t\tvar after = _v0.b;\n\t\t\tvar r = $elm$core$String$length(before) + s;\n\t\t\tvar normalized = _Utils_ap(\n\t\t\t\tA2($elm$core$String$repeat, (-r) + 1, '0'),\n\t\t\t\tA3(\n\t\t\t\t\t$elm$core$String$padRight,\n\t\t\t\t\tr,\n\t\t\t\t\t_Utils_chr('0'),\n\t\t\t\t\t_Utils_ap(before, after)));\n\t\t\tvar totalLen = $elm$core$String$length(normalized);\n\t\t\tvar roundDigitIndex = A2($elm$core$Basics$max, 1, r);\n\t\t\tvar increase = A2(\n\t\t\t\tfunctor,\n\t\t\t\tsigned,\n\t\t\t\tA3($elm$core$String$slice, roundDigitIndex, totalLen, normalized));\n\t\t\tvar remains = A3($elm$core$String$slice, 0, roundDigitIndex, normalized);\n\t\t\tvar num = increase ? $elm$core$String$reverse(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t'1',\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t$myrho$elm_round$Round$increaseNum,\n\t\t\t\t\t\t$elm$core$String$uncons(\n\t\t\t\t\t\t\t$elm$core$String$reverse(remains))))) : remains;\n\t\t\tvar numLen = $elm$core$String$length(num);\n\t\t\tvar numZeroed = (num === '0') ? num : ((s <= 0) ? _Utils_ap(\n\t\t\t\tnum,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$String$repeat,\n\t\t\t\t\t$elm$core$Basics$abs(s),\n\t\t\t\t\t'0')) : ((_Utils_cmp(\n\t\t\t\ts,\n\t\t\t\t$elm$core$String$length(after)) < 0) ? (A3($elm$core$String$slice, 0, numLen - s, num) + ('.' + A3($elm$core$String$slice, numLen - s, numLen, num))) : _Utils_ap(\n\t\t\t\tbefore + '.',\n\t\t\t\tA3(\n\t\t\t\t\t$elm$core$String$padRight,\n\t\t\t\t\ts,\n\t\t\t\t\t_Utils_chr('0'),\n\t\t\t\t\tafter))));\n\t\t\treturn A2($myrho$elm_round$Round$addSign, signed, numZeroed);\n\t\t}\n\t});\nvar $myrho$elm_round$Round$round = $myrho$elm_round$Round$roundFun(\n\tF2(\n\t\tfunction (signed, str) {\n\t\t\tvar _v0 = $elm$core$String$uncons(str);\n\t\t\tif (_v0.$ === 'Nothing') {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tif ('5' === _v0.a.a.valueOf()) {\n\t\t\t\t\tif (_v0.a.b === '') {\n\t\t\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\t\t\treturn !signed;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v2 = _v0.a;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar _v3 = _v0.a;\n\t\t\t\t\tvar _int = _v3.a;\n\t\t\t\t\treturn function (i) {\n\t\t\t\t\t\treturn ((i > 53) && signed) || ((i >= 53) && (!signed));\n\t\t\t\t\t}(\n\t\t\t\t\t\t$elm$core$Char$toCode(_int));\n\t\t\t\t}\n\t\t\t}\n\t\t}));\nvar $elm_community$list_extra$List$Extra$dropWhile = F2(\n\tfunction (predicate, list) {\n\t\tdropWhile:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn _List_Nil;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (predicate(x)) {\n\t\t\t\t\tvar $temp$predicate = predicate,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tpredicate = $temp$predicate;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue dropWhile;\n\t\t\t\t} else {\n\t\t\t\t\treturn list;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $cmditch$elm_bigint$BigInt$emptyZero = function (_v0) {\n\tvar xs = _v0.a;\n\tvar _v1 = A2(\n\t\t$elm_community$list_extra$List$Extra$dropWhile,\n\t\t$elm$core$Basics$eq(0),\n\t\txs);\n\tif (!_v1.b) {\n\t\treturn $cmditch$elm_bigint$BigInt$Magnitude(_List_Nil);\n\t} else {\n\t\treturn $cmditch$elm_bigint$BigInt$Magnitude(xs);\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$fromString_ = function (x) {\n\tvar _v0 = A2(\n\t\t$elm$regex$Regex$contains,\n\t\tA2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t$elm$regex$Regex$never,\n\t\t\t$elm$regex$Regex$fromString('^[0-9]')),\n\t\t$elm$core$String$fromList(x));\n\tif (_v0) {\n\t\treturn A2(\n\t\t\t$elm$core$Maybe$map,\n\t\t\tA2($elm$core$Basics$composeL, $cmditch$elm_bigint$BigInt$emptyZero, $cmditch$elm_bigint$BigInt$Magnitude),\n\t\t\t$elm_community$maybe_extra$Maybe$Extra$combine(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t$elm$core$List$reverse,\n\t\t\t\t\t\tA2($elm$core$Basics$composeR, $elm$core$String$fromList, $elm$core$String$toInt)),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm_community$list_extra$List$Extra$greedyGroupsOf,\n\t\t\t\t\t\t$cmditch$elm_bigint$Constants$maxDigitMagnitude,\n\t\t\t\t\t\t$elm$core$List$reverse(x)))));\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$fromIntString = function (x) {\n\tvar _v0 = $elm$core$String$toList(\n\t\t$elm$core$String$toLower(x));\n\tif (!_v0.b) {\n\t\treturn $elm$core$Maybe$Nothing;\n\t} else {\n\t\tswitch (_v0.a.valueOf()) {\n\t\t\tcase '-':\n\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t} else {\n\t\t\t\t\tvar xs = _v0.b;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$mkBigInt($cmditch$elm_bigint$BigInt$Negative),\n\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromString_(xs));\n\t\t\t\t}\n\t\t\tcase '+':\n\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t} else {\n\t\t\t\t\tvar xs = _v0.b;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$mkBigInt($cmditch$elm_bigint$BigInt$Positive),\n\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromString_(xs));\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tvar xs = _v0;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$mkBigInt($cmditch$elm_bigint$BigInt$Positive),\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromString_(xs));\n\t\t}\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$isEven = function (num) {\n\tvar even = function (i) {\n\t\treturn !A2($elm$core$Basics$modBy, 2, i);\n\t};\n\tswitch (num.$) {\n\t\tcase 'Zer':\n\t\t\treturn true;\n\t\tcase 'Pos':\n\t\t\tvar mag = num.a.a;\n\t\t\treturn even(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t0,\n\t\t\t\t\t$elm$core$List$head(mag)));\n\t\tdefault:\n\t\t\tvar mag = num.a.a;\n\t\t\treturn even(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t0,\n\t\t\t\t\t$elm$core$List$head(mag)));\n\t}\n};\nvar $cmditch$elm_bigint$BigInt$square = function (num) {\n\treturn A2($cmditch$elm_bigint$BigInt$mul, num, num);\n};\nvar $cmditch$elm_bigint$BigInt$two = $cmditch$elm_bigint$BigInt$fromInt(2);\nvar $cmditch$elm_bigint$BigInt$powHelp = F3(\n\tfunction (work, num, exp) {\n\t\tpowHelp:\n\t\twhile (true) {\n\t\t\tswitch (exp.$) {\n\t\t\t\tcase 'Zer':\n\t\t\t\t\treturn $cmditch$elm_bigint$BigInt$one;\n\t\t\t\tcase 'Neg':\n\t\t\t\t\treturn $cmditch$elm_bigint$BigInt$Zer;\n\t\t\t\tdefault:\n\t\t\t\t\tif (_Utils_eq(exp, $cmditch$elm_bigint$BigInt$one)) {\n\t\t\t\t\t\treturn A2($cmditch$elm_bigint$BigInt$mul, work, num);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ($cmditch$elm_bigint$BigInt$isEven(exp)) {\n\t\t\t\t\t\t\tvar $temp$work = work,\n\t\t\t\t\t\t\t\t$temp$num = $cmditch$elm_bigint$BigInt$square(num),\n\t\t\t\t\t\t\t\t$temp$exp = A2($cmditch$elm_bigint$BigInt$div, exp, $cmditch$elm_bigint$BigInt$two);\n\t\t\t\t\t\t\twork = $temp$work;\n\t\t\t\t\t\t\tnum = $temp$num;\n\t\t\t\t\t\t\texp = $temp$exp;\n\t\t\t\t\t\t\tcontinue powHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $temp$work = A2($cmditch$elm_bigint$BigInt$mul, num, work),\n\t\t\t\t\t\t\t\t$temp$num = $cmditch$elm_bigint$BigInt$square(num),\n\t\t\t\t\t\t\t\t$temp$exp = A2(\n\t\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$div,\n\t\t\t\t\t\t\t\tA2($cmditch$elm_bigint$BigInt$sub, exp, $cmditch$elm_bigint$BigInt$one),\n\t\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$two);\n\t\t\t\t\t\t\twork = $temp$work;\n\t\t\t\t\t\t\tnum = $temp$num;\n\t\t\t\t\t\t\texp = $temp$exp;\n\t\t\t\t\t\t\tcontinue powHelp;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $cmditch$elm_bigint$BigInt$pow = F2(\n\tfunction (base, exp) {\n\t\treturn A3($cmditch$elm_bigint$BigInt$powHelp, $cmditch$elm_bigint$BigInt$one, base, exp);\n\t});\nvar $author$project$TokenValue$pullAnyFirstDecimalOffToRight = function (numString) {\n\tvar maybeDecimalPosition = $elm$core$List$head(\n\t\tA2($elm$core$String$indexes, '.', numString));\n\tif (maybeDecimalPosition.$ === 'Nothing') {\n\t\treturn _Utils_Tuple2(numString, 0);\n\t} else {\n\t\tvar decimalPos = maybeDecimalPosition.a;\n\t\tvar numDigitsMoved = ($elm$core$String$length(numString) - 1) - decimalPos;\n\t\tvar newString = _Utils_ap(\n\t\t\tA2($elm$core$String$left, decimalPos, numString),\n\t\t\tA2($elm$core$String$dropLeft, decimalPos + 1, numString));\n\t\treturn _Utils_Tuple2(newString, numDigitsMoved);\n\t}\n};\nvar $author$project$TokenValue$userStringToEvmValue = function (amountString) {\n\tif (amountString === '') {\n\t\treturn $elm$core$Maybe$Nothing;\n\t} else {\n\t\tvar _v0 = $author$project$TokenValue$pullAnyFirstDecimalOffToRight(amountString);\n\t\tvar newString = _v0.a;\n\t\tvar numDigitsMoved = _v0.b;\n\t\tvar numDigitsLeftToMove = $author$project$TokenValue$tokenDecimals - numDigitsMoved;\n\t\tvar maybeBigIntAmount = (numDigitsLeftToMove < 0) ? $cmditch$elm_bigint$BigInt$fromIntString(\n\t\t\tA2($elm$core$String$dropRight, -numDigitsLeftToMove, newString)) : $cmditch$elm_bigint$BigInt$fromIntString(newString);\n\t\treturn A2(\n\t\t\t$elm$core$Maybe$map,\n\t\t\t$cmditch$elm_bigint$BigInt$mul(\n\t\t\t\tA2(\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$pow,\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromInt(10),\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromInt(numDigitsLeftToMove))),\n\t\t\tmaybeBigIntAmount);\n\t}\n};\nvar $author$project$TokenValue$fromFloatWithWarning = function (val) {\n\tvar _v0 = $author$project$TokenValue$userStringToEvmValue(\n\t\tA2($myrho$elm_round$Round$round, $author$project$TokenValue$tokenDecimals, val));\n\tif (_v0.$ === 'Just') {\n\t\tvar bigint = _v0.a;\n\t\treturn $author$project$TokenValue$tokenValue(bigint);\n\t} else {\n\t\tvar _v1 = A2($author$project$MaybeDebugLog$maybeDebugLog, 'Error converting float to tokenValue', val);\n\t\treturn $author$project$TokenValue$tokenValue(\n\t\t\t$cmditch$elm_bigint$BigInt$fromInt(0));\n\t}\n};\nvar $author$project$Misc$dollarStringToToken = function (ethPrice) {\n\treturn A2(\n\t\t$elm$core$Basics$composeR,\n\t\t$elm$core$String$toFloat,\n\t\t$elm$core$Maybe$map(\n\t\t\tfunction (dollarValue) {\n\t\t\t\treturn $author$project$TokenValue$fromFloatWithWarning(dollarValue / ethPrice);\n\t\t\t}));\n};\nvar $cmditch$elm_ethereum$Eth$Encode$bigInt = A2(\n\t$elm$core$Basics$composeR,\n\t$cmditch$elm_bigint$BigInt$toHexString,\n\tA2($elm$core$Basics$composeR, $cmditch$elm_ethereum$Eth$Utils$add0x, $elm$json$Json$Encode$string));\nvar $cmditch$elm_ethereum$Eth$Encode$hexInt = A2(\n\t$elm$core$Basics$composeR,\n\t$rtfeldman$elm_hex$Hex$toString,\n\tA2($elm$core$Basics$composeR, $cmditch$elm_ethereum$Eth$Utils$add0x, $elm$json$Json$Encode$string));\nvar $cmditch$elm_ethereum$Eth$Encode$listOfMaybesToVal = function (keyValueList) {\n\treturn $elm$json$Json$Encode$object(\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (_v1) {\n\t\t\t\tvar k = _v1.a;\n\t\t\t\tvar v = _v1.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tk,\n\t\t\t\t\tA2($elm$core$Maybe$withDefault, $elm$json$Json$Encode$null, v));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$List$filter,\n\t\t\t\tfunction (_v0) {\n\t\t\t\t\tvar k = _v0.a;\n\t\t\t\t\tvar v = _v0.b;\n\t\t\t\t\treturn !_Utils_eq(v, $elm$core$Maybe$Nothing);\n\t\t\t\t},\n\t\t\t\tkeyValueList)));\n};\nvar $cmditch$elm_ethereum$Eth$encodeSend = function (callData) {\n\treturn $cmditch$elm_ethereum$Eth$Encode$listOfMaybesToVal(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'to',\n\t\t\t\tA2($elm$core$Maybe$map, $cmditch$elm_ethereum$Eth$Encode$address, callData.to)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'from',\n\t\t\t\tA2($elm$core$Maybe$map, $cmditch$elm_ethereum$Eth$Encode$address, callData.from)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'gas',\n\t\t\t\tA2($elm$core$Maybe$map, $cmditch$elm_ethereum$Eth$Encode$hexInt, callData.gas)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'gasPrice',\n\t\t\t\tA2($elm$core$Maybe$map, $cmditch$elm_ethereum$Eth$Encode$bigInt, callData.gasPrice)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'value',\n\t\t\t\tA2($elm$core$Maybe$map, $cmditch$elm_ethereum$Eth$Encode$bigInt, callData.value)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'data',\n\t\t\t\tA2($elm$core$Maybe$map, $cmditch$elm_ethereum$Eth$Encode$hex, callData.data)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'nonce',\n\t\t\t\tA2($elm$core$Maybe$map, $cmditch$elm_ethereum$Eth$Encode$hexInt, callData.nonce))\n\t\t\t]));\n};\nvar $author$project$Types$BlockTimeFetched = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'BlockTimeFetched', a: a, b: b};\n\t});\nvar $author$project$Types$PostAccountingFetched = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'PostAccountingFetched', a: a, b: b};\n\t});\nvar $cmditch$elm_ethereum$Eth$Encode$txCall = function (_v0) {\n\tvar to = _v0.to;\n\tvar from = _v0.from;\n\tvar gas = _v0.gas;\n\tvar gasPrice = _v0.gasPrice;\n\tvar value = _v0.value;\n\tvar data = _v0.data;\n\treturn $cmditch$elm_ethereum$Eth$Encode$listOfMaybesToVal(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'to',\n\t\t\t\tA2($elm$core$Maybe$map, $cmditch$elm_ethereum$Eth$Encode$address, to)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'from',\n\t\t\t\tA2($elm$core$Maybe$map, $cmditch$elm_ethereum$Eth$Encode$address, from)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'gas',\n\t\t\t\tA2($elm$core$Maybe$map, $cmditch$elm_ethereum$Eth$Encode$hexInt, gas)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'gasPrice',\n\t\t\t\tA2($elm$core$Maybe$map, $cmditch$elm_ethereum$Eth$Encode$bigInt, gasPrice)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'value',\n\t\t\t\tA2($elm$core$Maybe$map, $cmditch$elm_ethereum$Eth$Encode$bigInt, value)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'data',\n\t\t\t\tA2($elm$core$Maybe$map, $cmditch$elm_ethereum$Eth$Encode$hex, data))\n\t\t\t]));\n};\nvar $cmditch$elm_ethereum$Eth$callAtBlock = F3(\n\tfunction (ethNode, txParams, blockId) {\n\t\treturn $cmditch$elm_ethereum$Eth$RPC$toTask(\n\t\t\t{\n\t\t\t\tdecoder: txParams.decoder,\n\t\t\t\tmethod: 'eth_call',\n\t\t\t\tparams: _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Encode$txCall(txParams),\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Encode$blockId(blockId)\n\t\t\t\t\t]),\n\t\t\t\turl: ethNode\n\t\t\t});\n\t});\nvar $cmditch$elm_ethereum$Eth$call = F2(\n\tfunction (ethNode, txParams) {\n\t\treturn A3($cmditch$elm_ethereum$Eth$callAtBlock, ethNode, txParams, $cmditch$elm_ethereum$Eth$Types$LatestBlock);\n\t});\nvar $author$project$Contracts$Generated$SmokeSignal$StoredMessageData = F5(\n\tfunction (firstAuthor, nativeBurned, dollarsBurned, nativeTipped, dollarsTipped) {\n\t\treturn {dollarsBurned: dollarsBurned, dollarsTipped: dollarsTipped, firstAuthor: firstAuthor, nativeBurned: nativeBurned, nativeTipped: nativeTipped};\n\t});\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$abiDecode = function (val) {\n\treturn $cmditch$elm_ethereum$Eth$Abi$Decode$AbiDecoder(\n\t\tfunction (tape) {\n\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t_Utils_Tuple2(tape, val));\n\t\t});\n};\nvar $elm$core$Tuple$mapSecond = F2(\n\tfunction (func, _v0) {\n\t\tvar x = _v0.a;\n\t\tvar y = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\tx,\n\t\t\tfunc(y));\n\t});\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$map2 = F3(\n\tfunction (f, _v0, _v1) {\n\t\tvar decA = _v0.a;\n\t\tvar decB = _v1.a;\n\t\treturn $cmditch$elm_ethereum$Eth$Abi$Decode$AbiDecoder(\n\t\t\tfunction (tape0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Result$andThen,\n\t\t\t\t\tfunction (_v2) {\n\t\t\t\t\t\tvar tape1 = _v2.a;\n\t\t\t\t\t\tvar vA = _v2.b;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\t\t$elm$core$Tuple$mapSecond(\n\t\t\t\t\t\t\t\tf(vA)),\n\t\t\t\t\t\t\tdecB(tape1));\n\t\t\t\t\t},\n\t\t\t\t\tdecA(tape0));\n\t\t\t});\n\t});\nvar $cmditch$elm_ethereum$Eth$Abi$Decode$andMap = F2(\n\tfunction (dVal, dFunc) {\n\t\treturn A3(\n\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$map2,\n\t\t\tF2(\n\t\t\t\tfunction (f, v) {\n\t\t\t\t\treturn f(v);\n\t\t\t\t}),\n\t\t\tdFunc,\n\t\t\tdVal);\n\t});\nvar $author$project$Contracts$Generated$SmokeSignal$storedMessageDataDecoder = $cmditch$elm_ethereum$Eth$Abi$Decode$toElmDecoder(\n\tA2(\n\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$andMap,\n\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$uint,\n\t\tA2(\n\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$andMap,\n\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$uint,\n\t\t\tA2(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$andMap,\n\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$uint,\n\t\t\t\tA2(\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$andMap,\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$uint,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$andMap,\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$address,\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Decode$abiDecode($author$project$Contracts$Generated$SmokeSignal$StoredMessageData)))))));\nvar $author$project$Contracts$Generated$SmokeSignal$storedMessageData = F2(\n\tfunction (contractAddress, a_) {\n\t\treturn {\n\t\t\tdata: $elm$core$Maybe$Just(\n\t\t\t\tA2(\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$functionCall,\n\t\t\t\t\t'056a2dd6',\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$staticBytes(32)(a_)\n\t\t\t\t\t\t]))),\n\t\t\tdecoder: $author$project$Contracts$Generated$SmokeSignal$storedMessageDataDecoder,\n\t\t\tfrom: $elm$core$Maybe$Nothing,\n\t\t\tgas: $elm$core$Maybe$Nothing,\n\t\t\tgasPrice: $elm$core$Maybe$Nothing,\n\t\t\tnonce: $elm$core$Maybe$Nothing,\n\t\t\tto: $elm$core$Maybe$Just(contractAddress),\n\t\t\tvalue: $elm$core$Maybe$Nothing\n\t\t};\n\t});\nvar $author$project$Contracts$SmokeSignal$getAccountingCmd = F2(\n\tfunction (config, msgHash) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (storedMessageData) {\n\t\t\t\treturn {\n\t\t\t\t\tfirstAuthor: storedMessageData.firstAuthor,\n\t\t\t\t\ttotalBurned: $author$project$TokenValue$tokenValue(storedMessageData.dollarsBurned),\n\t\t\t\t\ttotalTipped: $author$project$TokenValue$tokenValue(storedMessageData.dollarsTipped)\n\t\t\t\t};\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$cmditch$elm_ethereum$Eth$call,\n\t\t\t\tconfig.providerUrl,\n\t\t\t\tA2($author$project$Contracts$Generated$SmokeSignal$storedMessageData, config.contract, msgHash)));\n\t});\nvar $cmditch$elm_ethereum$Eth$Types$Block = function (number) {\n\treturn function (hash) {\n\t\treturn function (parentHash) {\n\t\t\treturn function (nonce) {\n\t\t\t\treturn function (sha3Uncles) {\n\t\t\t\t\treturn function (logsBloom) {\n\t\t\t\t\t\treturn function (transactionsRoot) {\n\t\t\t\t\t\t\treturn function (stateRoot) {\n\t\t\t\t\t\t\t\treturn function (receiptsRoot) {\n\t\t\t\t\t\t\t\t\treturn function (miner) {\n\t\t\t\t\t\t\t\t\t\treturn function (difficulty) {\n\t\t\t\t\t\t\t\t\t\t\treturn function (totalDifficulty) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn function (extraData) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn function (size) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn function (gasLimit) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn function (gasUsed) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn function (timestamp) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn function (transactions) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn function (uncles) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn {difficulty: difficulty, extraData: extraData, gasLimit: gasLimit, gasUsed: gasUsed, hash: hash, logsBloom: logsBloom, miner: miner, nonce: nonce, number: number, parentHash: parentHash, receiptsRoot: receiptsRoot, sha3Uncles: sha3Uncles, size: size, stateRoot: stateRoot, timestamp: timestamp, totalDifficulty: totalDifficulty, transactions: transactions, transactionsRoot: transactionsRoot, uncles: uncles};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\nvar $cmditch$elm_ethereum$Eth$Decode$hexTime = $cmditch$elm_ethereum$Eth$Decode$resultToDecoder(\n\tA2(\n\t\t$elm$core$Basics$composeR,\n\t\t$cmditch$elm_ethereum$Eth$Utils$remove0x,\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$rtfeldman$elm_hex$Hex$fromString,\n\t\t\t$elm$core$Result$map(\n\t\t\t\tfunction (v) {\n\t\t\t\t\treturn $elm$time$Time$millisToPosix(v * 1000);\n\t\t\t\t}))));\nvar $cmditch$elm_ethereum$Eth$Decode$block = function (txsDecoder) {\n\treturn A4(\n\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,\n\t\t'uncles',\n\t\t$elm$json$Json$Decode$list($elm$json$Json$Decode$string),\n\t\t_List_Nil,\n\t\tA4(\n\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,\n\t\t\t'transactions',\n\t\t\t$elm$json$Json$Decode$list(txsDecoder),\n\t\t\t_List_Nil,\n\t\t\tA4(\n\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,\n\t\t\t\t'timestamp',\n\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$hexTime,\n\t\t\t\t$elm$time$Time$millisToPosix(0),\n\t\t\t\tA3(\n\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t'gasUsed',\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$hexInt,\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t'gasLimit',\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$hexInt,\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t'size',\n\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$hexInt,\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t'extraData',\n\t\t\t\t\t\t\t\t$elm$json$Json$Decode$string,\n\t\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,\n\t\t\t\t\t\t\t\t\t'totalDifficulty',\n\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$bigInt,\n\t\t\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromInt(0),\n\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t\t\t'difficulty',\n\t\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$bigInt,\n\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t\t\t\t'miner',\n\t\t\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$address,\n\t\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t\t\t\t\t'receiptsRoot',\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$string,\n\t\t\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t\t\t\t\t\t'stateRoot',\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$string,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'transactionsRoot',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$string,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'logsBloom',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$string,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'sha3Uncles',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$string,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'nonce',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$string,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'not provided by node',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'parentHash',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$blockHash,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'hash',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$blockHash,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'number',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$hexInt,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$succeed($cmditch$elm_ethereum$Eth$Types$Block))))))))))))))))))));\n};\nvar $elm$json$Json$Encode$bool = _Json_wrap;\nvar $cmditch$elm_ethereum$Eth$getBlock = F2(\n\tfunction (ethNode, blockNum) {\n\t\treturn $cmditch$elm_ethereum$Eth$RPC$toTask(\n\t\t\t{\n\t\t\t\tdecoder: $cmditch$elm_ethereum$Eth$Decode$block($cmditch$elm_ethereum$Eth$Decode$txHash),\n\t\t\t\tmethod: 'eth_getBlockByNumber',\n\t\t\t\tparams: _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Encode$hexInt(blockNum),\n\t\t\t\t\t\t$elm$json$Json$Encode$bool(false)\n\t\t\t\t\t]),\n\t\t\t\turl: ethNode\n\t\t\t});\n\t});\nvar $author$project$Chain$getConfig = function (chain) {\n\tif (chain.$ === 'Eth') {\n\t\treturn function ($) {\n\t\t\treturn $.ethereum;\n\t\t};\n\t} else {\n\t\treturn function ($) {\n\t\t\treturn $.xDai;\n\t\t};\n\t}\n};\nvar $author$project$Chain$getProviderUrl = function (chain) {\n\tif (chain.$ === 'Eth') {\n\t\treturn A2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.ethereum;\n\t\t\t},\n\t\t\tfunction ($) {\n\t\t\t\treturn $.providerUrl;\n\t\t\t});\n\t} else {\n\t\treturn A2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.xDai;\n\t\t\t},\n\t\t\tfunction ($) {\n\t\t\t\treturn $.providerUrl;\n\t\t\t});\n\t}\n};\nvar $author$project$Update$fetchPostInfo = F3(\n\tfunction (blockTimes, config, core) {\n\t\treturn $elm$core$Platform$Cmd$batch(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Task$attempt,\n\t\t\t\t\t$author$project$Types$PostAccountingFetched(core.id),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Contracts$SmokeSignal$getAccountingCmd,\n\t\t\t\t\t\tA2($author$project$Chain$getConfig, core.chain, config),\n\t\t\t\t\t\tcore.id.messageHash)),\n\t\t\t\t\tA2($elm$core$Dict$member, core.id.block, blockTimes) ? $elm$core$Platform$Cmd$none : A2(\n\t\t\t\t\t$elm$core$Task$attempt,\n\t\t\t\t\t$author$project$Types$BlockTimeFetched(core.id.block),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Task$map,\n\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\treturn $.timestamp;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$getBlock,\n\t\t\t\t\t\t\tA2($author$project$Chain$getProviderUrl, core.chain, config),\n\t\t\t\t\t\t\tcore.id.block)))\n\t\t\t\t]));\n\t});\nvar $author$project$GTag$encodeGTag = function (gtag) {\n\treturn $elm$json$Json$Encode$object(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'event',\n\t\t\t\t$elm$json$Json$Encode$string(gtag.event)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'category',\n\t\t\t\t$elm$json$Json$Encode$string(\n\t\t\t\t\tA2($elm$core$Maybe$withDefault, '[none]', gtag.category))),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'label',\n\t\t\t\t$elm$json$Json$Encode$string(\n\t\t\t\t\tA2($elm$core$Maybe$withDefault, '', gtag.label))),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'value',\n\t\t\t\t$elm$json$Json$Encode$int(\n\t\t\t\t\tA2($elm$core$Maybe$withDefault, 0, gtag.value)))\n\t\t\t]));\n};\nvar $author$project$GTag$gTagOutPort = _Platform_outgoingPort('gTagOutPort', $elm$core$Basics$identity);\nvar $author$project$GTag$gTagOut = A2($elm$core$Basics$composeR, $author$project$GTag$encodeGTag, $author$project$GTag$gTagOutPort);\nvar $elm_community$list_extra$List$Extra$updateIf = F3(\n\tfunction (predicate, update, list) {\n\t\treturn A2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (item) {\n\t\t\t\treturn predicate(item) ? update(item) : item;\n\t\t\t},\n\t\t\tlist);\n\t});\nvar $elm_community$list_extra$List$Extra$setIf = F3(\n\tfunction (predicate, replacement, list) {\n\t\treturn A3(\n\t\t\t$elm_community$list_extra$List$Extra$updateIf,\n\t\t\tpredicate,\n\t\t\t$elm$core$Basics$always(replacement),\n\t\t\tlist);\n\t});\nvar $author$project$GTag$gTagOutOnlyOnLabelOrValueChange = F2(\n\tfunction (gtagHistory, gtag) {\n\t\tvar hasEvent = function (event) {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.event;\n\t\t\t\t},\n\t\t\t\t$elm$core$Basics$eq(event));\n\t\t};\n\t\tvar maybeLastLogged = $elm$core$List$head(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$filter,\n\t\t\t\thasEvent(gtag.event),\n\t\t\t\tgtagHistory.sentOnlyOnChange));\n\t\tif (maybeLastLogged.$ === 'Nothing') {\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tgtagHistory,\n\t\t\t\t\t{\n\t\t\t\t\t\tsentOnlyOnChange: A2(\n\t\t\t\t\t\t\t$elm$core$List$append,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[gtag]),\n\t\t\t\t\t\t\tgtagHistory.sentOnlyOnChange)\n\t\t\t\t\t}),\n\t\t\t\t$author$project$GTag$gTagOut(gtag));\n\t\t} else {\n\t\t\tvar lastLogged = maybeLastLogged.a;\n\t\t\treturn (_Utils_eq(gtag.label, lastLogged.label) && _Utils_eq(gtag.value, lastLogged.value)) ? _Utils_Tuple2(gtagHistory, $elm$core$Platform$Cmd$none) : _Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tgtagHistory,\n\t\t\t\t\t{\n\t\t\t\t\t\tsentOnlyOnChange: A3(\n\t\t\t\t\t\t\t$elm_community$list_extra$List$Extra$setIf,\n\t\t\t\t\t\t\thasEvent(gtag.event),\n\t\t\t\t\t\t\tgtag,\n\t\t\t\t\t\t\tgtagHistory.sentOnlyOnChange)\n\t\t\t\t\t}),\n\t\t\t\t$author$project$GTag$gTagOut(gtag));\n\t\t}\n\t});\nvar $author$project$GTag$gTagOutOnlyOnceForEvent = F2(\n\tfunction (gtagHistory, gtag) {\n\t\treturn A2($elm$core$Set$member, gtag.event, gtagHistory.sentOnlyOnce) ? _Utils_Tuple2(gtagHistory, $elm$core$Platform$Cmd$none) : _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tgtagHistory,\n\t\t\t\t{\n\t\t\t\t\tsentOnlyOnce: A2($elm$core$Set$insert, gtag.event, gtagHistory.sentOnlyOnce)\n\t\t\t\t}),\n\t\t\t$author$project$GTag$gTagOut(gtag));\n\t});\nvar $author$project$Contracts$Generated$SmokeSignal$ethPrice = function (contractAddress) {\n\treturn {\n\t\tdata: $elm$core$Maybe$Just(\n\t\t\tA2($cmditch$elm_ethereum$Eth$Abi$Encode$functionCall, '2cc812bc', _List_Nil)),\n\t\tdecoder: $cmditch$elm_ethereum$Eth$Abi$Decode$toElmDecoder($cmditch$elm_ethereum$Eth$Abi$Decode$uint),\n\t\tfrom: $elm$core$Maybe$Nothing,\n\t\tgas: $elm$core$Maybe$Nothing,\n\t\tgasPrice: $elm$core$Maybe$Nothing,\n\t\tnonce: $elm$core$Maybe$Nothing,\n\t\tto: $elm$core$Maybe$Just(contractAddress),\n\t\tvalue: $elm$core$Maybe$Nothing\n\t};\n};\nvar $author$project$Contracts$SmokeSignal$getEthPriceCmd = function (config) {\n\treturn A2(\n\t\t$elm$core$Task$map,\n\t\tA2($elm$core$Basics$composeR, $author$project$TokenValue$tokenValue, $author$project$TokenValue$toFloatWithWarning),\n\t\tA2(\n\t\t\t$cmditch$elm_ethereum$Eth$call,\n\t\t\tconfig.providerUrl,\n\t\t\t$author$project$Contracts$Generated$SmokeSignal$ethPrice(config.contract)));\n};\nvar $author$project$Update$getPostBurnAmount = F2(\n\tfunction (price, txt) {\n\t\treturn $elm$core$String$isEmpty(txt) ? $elm$core$Result$Ok($author$project$TokenValue$zero) : A2(\n\t\t\t$elm$core$Result$fromMaybe,\n\t\t\t'Invalid burn amount',\n\t\t\tA2($author$project$Misc$dollarStringToToken, price, txt));\n\t});\nvar $author$project$Misc$getPostOrReply = F2(\n\tfunction (id, model) {\n\t\tvar key = $author$project$Misc$postIdToKey(id);\n\t\treturn A3(\n\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\tA2(\n\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.core;\n\t\t\t\t},\n\t\t\t\tA2($elm$core$Dict$get, key, model.replyPosts)),\n\t\t\tA2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.core;\n\t\t\t\t},\n\t\t\t\t$elm$core$Maybe$Just),\n\t\t\tA2($elm$core$Dict$get, key, model.rootPosts));\n\t});\nvar $elm$json$Json$Decode$nullable = function (decoder) {\n\treturn $elm$json$Json$Decode$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$json$Json$Decode$null($elm$core$Maybe$Nothing),\n\t\t\t\tA2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder)\n\t\t\t]));\n};\nvar $cmditch$elm_ethereum$Eth$Utils$txHashToString = function (_v0) {\n\tvar txHash = _v0.a;\n\treturn $cmditch$elm_ethereum$Eth$Utils$add0x(txHash);\n};\nvar $cmditch$elm_ethereum$Eth$Encode$txHash = A2($elm$core$Basics$composeR, $cmditch$elm_ethereum$Eth$Utils$txHashToString, $elm$json$Json$Encode$string);\nvar $cmditch$elm_ethereum$Eth$Types$TxReceipt = function (hash) {\n\treturn function (index) {\n\t\treturn function (blockHash) {\n\t\t\treturn function (blockNumber) {\n\t\t\t\treturn function (gasUsed) {\n\t\t\t\t\treturn function (cumulativeGasUsed) {\n\t\t\t\t\t\treturn function (contractAddress) {\n\t\t\t\t\t\t\treturn function (logs) {\n\t\t\t\t\t\t\t\treturn function (logsBloom) {\n\t\t\t\t\t\t\t\t\treturn function (root) {\n\t\t\t\t\t\t\t\t\t\treturn function (status) {\n\t\t\t\t\t\t\t\t\t\t\treturn {blockHash: blockHash, blockNumber: blockNumber, contractAddress: contractAddress, cumulativeGasUsed: cumulativeGasUsed, gasUsed: gasUsed, hash: hash, index: index, logs: logs, logsBloom: logsBloom, root: root, status: status};\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\nvar $cmditch$elm_ethereum$Eth$Decode$hexBool = function () {\n\tvar isBool = function (n) {\n\t\tswitch (n) {\n\t\t\tcase '0x0':\n\t\t\t\treturn $elm$core$Result$Ok(false);\n\t\t\tcase '0x1':\n\t\t\t\treturn $elm$core$Result$Ok(true);\n\t\t\tdefault:\n\t\t\t\treturn $elm$core$Result$Err('Error decoding ' + (n + 'as bool.'));\n\t\t}\n\t};\n\treturn $cmditch$elm_ethereum$Eth$Decode$resultToDecoder(isBool);\n}();\nvar $cmditch$elm_ethereum$Eth$Decode$txReceipt = A2(\n\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,\n\t$elm$json$Json$Decode$maybe(\n\t\tA2($elm$json$Json$Decode$field, 'status', $cmditch$elm_ethereum$Eth$Decode$hexBool)),\n\tA2(\n\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,\n\t\t$elm$json$Json$Decode$maybe(\n\t\t\tA2($elm$json$Json$Decode$field, 'root', $elm$json$Json$Decode$string)),\n\t\tA3(\n\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t'logsBloom',\n\t\t\t$elm$json$Json$Decode$string,\n\t\t\tA3(\n\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t'logs',\n\t\t\t\t$elm$json$Json$Decode$list($cmditch$elm_ethereum$Eth$Decode$log),\n\t\t\t\tA2(\n\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,\n\t\t\t\t\t$elm$json$Json$Decode$maybe(\n\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'contractAddress', $cmditch$elm_ethereum$Eth$Decode$address)),\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t'cumulativeGasUsed',\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$bigInt,\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t'gasUsed',\n\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$bigInt,\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t'blockNumber',\n\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$hexInt,\n\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t\t'blockHash',\n\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$blockHash,\n\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t\t\t'transactionIndex',\n\t\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$hexInt,\n\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,\n\t\t\t\t\t\t\t\t\t\t\t'transactionHash',\n\t\t\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Decode$txHash,\n\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$succeed($cmditch$elm_ethereum$Eth$Types$TxReceipt))))))))))));\nvar $author$project$Misc$getTxReceipt = F2(\n\tfunction (url, txHash) {\n\t\treturn $cmditch$elm_ethereum$Eth$RPC$toTask(\n\t\t\t{\n\t\t\t\tdecoder: $elm$json$Json$Decode$nullable($cmditch$elm_ethereum$Eth$Decode$txReceipt),\n\t\t\t\tmethod: 'eth_getTransactionReceipt',\n\t\t\t\tparams: _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Encode$txHash(txHash)\n\t\t\t\t\t]),\n\t\t\t\turl: url\n\t\t\t});\n\t});\nvar $author$project$Update$handleRoute = F2(\n\tfunction (model, route) {\n\t\tswitch (route.$) {\n\t\t\tcase 'RouteTopics':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{view: $author$project$Types$ViewTopics}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'RouteHome':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{view: $author$project$Types$ViewHome}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'RouteTxns':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{view: $author$project$Types$ViewTxns}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'RouteWallet':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{view: $author$project$Types$ViewWallet}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'RouteInvalid':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tuserNotices: _List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$author$project$UserNotice$routeNotFound($elm$core$Maybe$Nothing)\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'RouteViewPost':\n\t\t\t\tvar id = route.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tview: $author$project$Types$ViewPost(id)\n\t\t\t\t\t\t}),\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t$author$project$Ports$setDescription,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Maybe$andThen,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\t\treturn $.core;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\t\t\treturn $.content;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\t\t\treturn $.desc;\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$Dict$get,\n\t\t\t\t\t\t\t\t$author$project$Misc$postIdToKey(id),\n\t\t\t\t\t\t\t\tmodel.rootPosts))));\n\t\t\tcase 'RouteMalformedPostId':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tuserNotices: _List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$author$project$UserNotice$routeNotFound($elm$core$Maybe$Nothing)\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\tvar topic = route.a;\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuserNotices: _List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$author$project$UserNotice$routeNotFound($elm$core$Maybe$Nothing)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tview: $author$project$Types$ViewHome\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none),\n\t\t\t\t\tfunction (t) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tview: $author$project$Types$ViewTopic(t)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t$author$project$Ports$setDescription('Discussions related to #' + (topic + ' on SmokeSignal')));\n\t\t\t\t\t},\n\t\t\t\t\t$author$project$Misc$validateTopic(topic));\n\t\t}\n\t});\nvar $author$project$Types$Failed = function (a) {\n\treturn {$: 'Failed', a: a};\n};\nvar $author$project$Types$Mined = function (a) {\n\treturn {$: 'Mined', a: a};\n};\nvar $author$project$Types$MinedButExecutionFailed = {$: 'MinedButExecutionFailed'};\nvar $author$project$Update$handleTxReceipt = F2(\n\tfunction (chain, txReceipt) {\n\t\tvar _v0 = txReceipt.status;\n\t\tif (_v0.$ === 'Just') {\n\t\t\tif (_v0.a) {\n\t\t\t\tvar post = $elm$core$List$head(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$filterMap,\n\t\t\t\t\t\t$elm$core$Result$toMaybe,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\t$author$project$Contracts$SmokeSignal$decodePost(chain),\n\t\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\t\treturn $.returnData;\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\ttxReceipt.logs)));\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t$author$project$Types$Mined(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t\tfunction (p) {\n\t\t\t\t\t\t\t\tif (p.$ === 'LogReply') {\n\t\t\t\t\t\t\t\t\tvar x = p.a;\n\t\t\t\t\t\t\t\t\treturn x.core.id;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar x = p.a;\n\t\t\t\t\t\t\t\t\treturn x.core.id;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpost)),\n\t\t\t\t\tpost,\n\t\t\t\t\t$elm$core$Maybe$Nothing);\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t$author$project$Types$Failed($author$project$Types$MinedButExecutionFailed),\n\t\t\t\t\t$elm$core$Maybe$Nothing,\n\t\t\t\t\t$elm$core$Maybe$Nothing);\n\t\t\t}\n\t\t} else {\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\t$author$project$Types$Mining,\n\t\t\t\t$elm$core$Maybe$Nothing,\n\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t$author$project$UserNotice$unexpectedError('Weird. I Got a transaction receipt with a success value of \\'Nothing\\'. Depending on why this happened I might be a little confused about any mining transactions.')));\n\t\t}\n\t});\nvar $author$project$Ports$log = _Platform_outgoingPort('log', $elm$json$Json$Encode$string);\nvar $author$project$Misc$parseHttpError = function (err) {\n\tswitch (err.$) {\n\t\tcase 'BadUrl':\n\t\t\treturn 'Bad Url';\n\t\tcase 'Timeout':\n\t\t\treturn 'Timeout';\n\t\tcase 'NetworkError':\n\t\t\treturn 'Network Error';\n\t\tcase 'BadStatus':\n\t\t\tvar statusCode = err.a;\n\t\t\treturn 'Status Code: ' + $elm$core$String$fromInt(statusCode);\n\t\tdefault:\n\t\t\tvar e = err.a;\n\t\t\treturn e;\n\t}\n};\nvar $author$project$Update$logHttpError = function (tag) {\n\treturn A2(\n\t\t$elm$core$Basics$composeR,\n\t\t$author$project$Misc$parseHttpError,\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$elm$core$Basics$append(tag + ':\\n'),\n\t\t\t$author$project$Ports$log));\n};\nvar $author$project$UserNotice$Update = {$: 'Update'};\nvar $author$project$UserNotice$notify = function (text) {\n\treturn {\n\t\talign: $author$project$UserNotice$BottomRight,\n\t\tmainParagraphs: _List_fromArray(\n\t\t\t[\n\t\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(text)\n\t\t\t\t])\n\t\t\t]),\n\t\tnoticeType: $author$project$UserNotice$Update,\n\t\tuniqueLabel: text\n\t};\n};\nvar $elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;\nvar $elm_community$list_extra$List$Extra$removeAt = F2(\n\tfunction (index, l) {\n\t\tif (index < 0) {\n\t\t\treturn l;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$List$drop, index, l);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn l;\n\t\t\t} else {\n\t\t\t\tvar rest = _v0.b;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\tA2($elm$core$List$take, index, l),\n\t\t\t\t\trest);\n\t\t\t}\n\t\t}\n\t});\nvar $author$project$Ports$setVisited = _Platform_outgoingPort(\n\t'setVisited',\n\tfunction ($) {\n\t\treturn $elm$json$Json$Encode$null;\n\t});\nvar $elm$core$List$singleton = function (value) {\n\treturn _List_fromArray(\n\t\t[value]);\n};\nvar $elm$core$Dict$singleton = F2(\n\tfunction (key, value) {\n\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);\n\t});\nvar $elm$core$Set$singleton = function (key) {\n\treturn $elm$core$Set$Set_elm_builtin(\n\t\tA2($elm$core$Dict$singleton, key, _Utils_Tuple0));\n};\nvar $elm$core$Dict$sizeHelp = F2(\n\tfunction (n, dict) {\n\t\tsizeHelp:\n\t\twhile (true) {\n\t\t\tif (dict.$ === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn n;\n\t\t\t} else {\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$n = A2($elm$core$Dict$sizeHelp, n + 1, right),\n\t\t\t\t\t$temp$dict = left;\n\t\t\t\tn = $temp$n;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue sizeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$size = function (dict) {\n\treturn A2($elm$core$Dict$sizeHelp, 0, dict);\n};\nvar $elm$core$Set$size = function (_v0) {\n\tvar dict = _v0.a;\n\treturn $elm$core$Dict$size(dict);\n};\nvar $author$project$Ports$submitPost = _Platform_outgoingPort('submitPost', $elm$core$Basics$identity);\nvar $author$project$Contracts$Generated$SmokeSignal$tipHashOrBurnIfNoAuthor = F3(\n\tfunction (contractAddress, hash_, donateAmount_) {\n\t\treturn {\n\t\t\tdata: $elm$core$Maybe$Just(\n\t\t\t\tA2(\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$functionCall,\n\t\t\t\t\t'c3d0c8e3',\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$staticBytes(32)(hash_),\n\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Abi$Encode$uint(donateAmount_)\n\t\t\t\t\t\t]))),\n\t\t\tdecoder: $elm$json$Json$Decode$succeed(_Utils_Tuple0),\n\t\t\tfrom: $elm$core$Maybe$Nothing,\n\t\t\tgas: $elm$core$Maybe$Nothing,\n\t\t\tgasPrice: $elm$core$Maybe$Nothing,\n\t\t\tnonce: $elm$core$Maybe$Nothing,\n\t\t\tto: $elm$core$Maybe$Just(contractAddress),\n\t\t\tvalue: $elm$core$Maybe$Nothing\n\t\t};\n\t});\nvar $author$project$Contracts$SmokeSignal$tipForPost = F5(\n\tfunction (wallet, smokeSignalContractAddress, messageHash, amount, donate) {\n\t\treturn function (call) {\n\t\t\treturn _Utils_update(\n\t\t\t\tcall,\n\t\t\t\t{\n\t\t\t\t\tfrom: $elm$core$Maybe$Just(wallet.address)\n\t\t\t\t});\n\t\t}(\n\t\t\tA2(\n\t\t\t\t$author$project$Helpers$Eth$updateCallValue,\n\t\t\t\t$author$project$TokenValue$getEvmValue(amount),\n\t\t\t\tA3(\n\t\t\t\t\t$author$project$Contracts$Generated$SmokeSignal$tipHashOrBurnIfNoAuthor,\n\t\t\t\t\tsmokeSignalContractAddress,\n\t\t\t\t\tmessageHash,\n\t\t\t\t\tdonate ? $author$project$TokenValue$getEvmValue(\n\t\t\t\t\t\tA2($author$project$TokenValue$div, amount, 100)) : $author$project$TokenValue$getEvmValue($author$project$TokenValue$zero))));\n\t});\nvar $cmditch$elm_ethereum$Eth$toSend = function (callData) {\n\treturn {data: callData.data, from: callData.from, gas: callData.gas, gasPrice: callData.gasPrice, nonce: callData.nonce, to: callData.to, value: callData.value};\n};\nvar $author$project$Ports$txOut = _Platform_outgoingPort('txOut', $elm$core$Basics$identity);\nvar $elm$core$Set$remove = F2(\n\tfunction (key, _v0) {\n\t\tvar dict = _v0.a;\n\t\treturn $elm$core$Set$Set_elm_builtin(\n\t\t\tA2($elm$core$Dict$remove, key, dict));\n\t});\nvar $cmditch$elm_ethereum$Eth$Sentry$Event$updateRequests = F3(\n\tfunction (ref, logs, requests) {\n\t\treturn A3(\n\t\t\t$elm$core$Dict$update,\n\t\t\tref,\n\t\t\t$elm$core$Maybe$map(\n\t\t\t\tfunction (requestState) {\n\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\trequestState,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlogCount: $elm$core$List$length(logs) + requestState.logCount\n\t\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\trequests);\n\t});\nvar $cmditch$elm_ethereum$Eth$Sentry$Event$handleLogs = F3(\n\tfunction (_v0, ref, logs) {\n\t\tvar sentry = _v0.a;\n\t\tvar _v1 = A2($elm$core$Dict$get, ref, sentry.requests);\n\t\tif (_v1.$ === 'Nothing') {\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$EventSentry(sentry),\n\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t} else {\n\t\t\tvar requestState = _v1.a;\n\t\t\tvar _v2 = _Utils_Tuple2(\n\t\t\t\trequestState.watchOnce,\n\t\t\t\t$elm$core$List$head(logs));\n\t\t\tif (_v2.b.$ === 'Nothing') {\n\t\t\t\tvar _v3 = _v2.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$EventSentry(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tsentry,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trequests: A3($cmditch$elm_ethereum$Eth$Sentry$Event$updateRequests, ref, logs, sentry.requests)\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t} else {\n\t\t\t\tif (_v2.a) {\n\t\t\t\t\tvar log = _v2.b.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$EventSentry(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tsentry,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trequests: A3($cmditch$elm_ethereum$Eth$Sentry$Event$updateRequests, ref, logs, sentry.requests),\n\t\t\t\t\t\t\t\t\twatching: A2($elm$core$Set$remove, ref, sentry.watching)\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Task$perform,\n\t\t\t\t\t\t\trequestState.tagger,\n\t\t\t\t\t\t\t$elm$core$Task$succeed(log)));\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$EventSentry(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tsentry,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trequests: A3($cmditch$elm_ethereum$Eth$Sentry$Event$updateRequests, ref, logs, sentry.requests)\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$batch(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\tfunction (log) {\n\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$Task$perform,\n\t\t\t\t\t\t\t\t\t\trequestState.tagger,\n\t\t\t\t\t\t\t\t\t\t$elm$core$Task$succeed(log));\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tlogs)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Process$sleep = _Process_sleep;\nvar $cmditch$elm_ethereum$Eth$Sentry$Event$pollBlockNumber = F2(\n\tfunction (ethNode, tagger) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$attempt,\n\t\t\tA2($elm$core$Basics$composeR, $cmditch$elm_ethereum$Eth$Sentry$Event$BlockNumber, tagger),\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v0) {\n\t\t\t\t\treturn $cmditch$elm_ethereum$Eth$getBlockNumber(ethNode);\n\t\t\t\t},\n\t\t\t\t$elm$core$Process$sleep(2000)));\n\t});\nvar $cmditch$elm_ethereum$Eth$Sentry$Event$requestWatchedEvents = F3(\n\tfunction (nodePath, logFilter, _v0) {\n\t\tvar fromBlock = _v0.a;\n\t\tvar toBlock = _v0.b;\n\t\treturn A2(\n\t\t\t$cmditch$elm_ethereum$Eth$getLogs,\n\t\t\tnodePath,\n\t\t\t_Utils_update(\n\t\t\t\tlogFilter,\n\t\t\t\t{\n\t\t\t\t\tfromBlock: $cmditch$elm_ethereum$Eth$Types$BlockNum(fromBlock),\n\t\t\t\t\ttoBlock: $cmditch$elm_ethereum$Eth$Types$BlockNum(toBlock)\n\t\t\t\t}));\n\t});\nvar $elm$core$Set$union = F2(\n\tfunction (_v0, _v1) {\n\t\tvar dict1 = _v0.a;\n\t\tvar dict2 = _v1.a;\n\t\treturn $elm$core$Set$Set_elm_builtin(\n\t\t\tA2($elm$core$Dict$union, dict1, dict2));\n\t});\nvar $elm_community$maybe_extra$Maybe$Extra$cons = F2(\n\tfunction (item, list) {\n\t\tif (item.$ === 'Just') {\n\t\t\tvar v = item.a;\n\t\t\treturn A2($elm$core$List$cons, v, list);\n\t\t} else {\n\t\t\treturn list;\n\t\t}\n\t});\nvar $elm_community$maybe_extra$Maybe$Extra$values = A2($elm$core$List$foldr, $elm_community$maybe_extra$Maybe$Extra$cons, _List_Nil);\nvar $cmditch$elm_ethereum$Eth$Sentry$Event$update = F2(\n\tfunction (msg, sentry_) {\n\t\tvar sentry = sentry_.a;\n\t\tif (msg.$ === 'BlockNumber') {\n\t\t\tif (msg.a.$ === 'Ok') {\n\t\t\t\tvar newBlockNum = msg.a.a;\n\t\t\t\tvar requestHelper = F3(\n\t\t\t\t\tfunction (blockRange, set, toTask) {\n\t\t\t\t\t\treturn $elm$core$Platform$Cmd$batch(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\tfunction (requestState) {\n\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$Task$attempt,\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$GetLogs(requestState.ref),\n\t\t\t\t\t\t\t\t\t\t\tsentry.tagger),\n\t\t\t\t\t\t\t\t\t\tA3(toTask, sentry.nodePath, requestState.logFilter, blockRange));\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$values(\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t\t\tfunction (ref) {\n\t\t\t\t\t\t\t\t\t\t\treturn A2($elm$core$Dict$get, ref, sentry.requests);\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t$elm$core$Set$toList(set)))));\n\t\t\t\t\t});\n\t\t\t\tvar _v1 = sentry.blockNumber;\n\t\t\t\tif (_v1.$ === 'Just') {\n\t\t\t\t\tvar oldBlockNum = _v1.a;\n\t\t\t\t\treturn (!(newBlockNum - oldBlockNum)) ? _Utils_Tuple2(\n\t\t\t\t\t\tsentry_,\n\t\t\t\t\t\tA2($cmditch$elm_ethereum$Eth$Sentry$Event$pollBlockNumber, sentry.nodePath, sentry.tagger)) : _Utils_Tuple2(\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$EventSentry(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tsentry,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tblockNumber: $elm$core$Maybe$Just(newBlockNum)\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$batch(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($cmditch$elm_ethereum$Eth$Sentry$Event$pollBlockNumber, sentry.nodePath, sentry.tagger),\n\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\trequestHelper,\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(oldBlockNum + 1, newBlockNum),\n\t\t\t\t\t\t\t\t\tsentry.watching,\n\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$requestWatchedEvents)\n\t\t\t\t\t\t\t\t])));\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$EventSentry(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tsentry,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tblockNumber: $elm$core$Maybe$Just(newBlockNum),\n\t\t\t\t\t\t\t\t\tpending: $elm$core$Set$empty,\n\t\t\t\t\t\t\t\t\twatching: A2($elm$core$Set$union, sentry.watching, sentry.pending)\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$batch(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($cmditch$elm_ethereum$Eth$Sentry$Event$pollBlockNumber, sentry.nodePath, sentry.tagger),\n\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\trequestHelper,\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(newBlockNum, newBlockNum),\n\t\t\t\t\t\t\t\t\tsentry.pending,\n\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$requestInitialEvents),\n\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\trequestHelper,\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(newBlockNum, newBlockNum),\n\t\t\t\t\t\t\t\t\tsentry.watching,\n\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$requestWatchedEvents)\n\t\t\t\t\t\t\t\t])));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar err = msg.a.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$EventSentry(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tsentry,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\terrors: A2($elm$core$List$cons, err, sentry.errors)\n\t\t\t\t\t\t\t})),\n\t\t\t\t\tA2($cmditch$elm_ethereum$Eth$Sentry$Event$pollBlockNumber, sentry.nodePath, sentry.tagger));\n\t\t\t}\n\t\t} else {\n\t\t\tif (msg.b.$ === 'Ok') {\n\t\t\t\tvar ref = msg.a;\n\t\t\t\tvar logs = msg.b.a;\n\t\t\t\treturn A3($cmditch$elm_ethereum$Eth$Sentry$Event$handleLogs, sentry_, ref, logs);\n\t\t\t} else {\n\t\t\t\tvar err = msg.b.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Sentry$Event$EventSentry(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tsentry,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\terrors: A2($elm$core$List$cons, err, sentry.errors)\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t}\n\t\t}\n\t});\nvar $author$project$Wallet$userInfo = function (walletState) {\n\tif (walletState.$ === 'Active') {\n\t\tvar uInfo = walletState.a;\n\t\treturn $elm$core$Maybe$Just(uInfo);\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $elm$url$Url$Builder$QueryParameter = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'QueryParameter', a: a, b: b};\n\t});\nvar $elm$url$Url$percentEncode = _Url_percentEncode;\nvar $elm$url$Url$Builder$string = F2(\n\tfunction (key, value) {\n\t\treturn A2(\n\t\t\t$elm$url$Url$Builder$QueryParameter,\n\t\t\t$elm$url$Url$percentEncode(key),\n\t\t\t$elm$url$Url$percentEncode(value));\n\t});\nvar $author$project$Routing$encodePostIdQueryParameters = function (postIdInfo) {\n\treturn _List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$url$Url$Builder$string,\n\t\t\t'block',\n\t\t\t$elm$core$String$fromInt(postIdInfo.block)),\n\t\t\tA2(\n\t\t\t$elm$url$Url$Builder$string,\n\t\t\t'hash',\n\t\t\t$cmditch$elm_ethereum$Eth$Utils$hexToString(postIdInfo.messageHash))\n\t\t]);\n};\nvar $author$project$Routing$encodeTopic = $elm$url$Url$percentEncode;\nvar $elm$url$Url$Builder$toQueryPair = function (_v0) {\n\tvar key = _v0.a;\n\tvar value = _v0.b;\n\treturn key + ('=' + value);\n};\nvar $elm$url$Url$Builder$toQuery = function (parameters) {\n\tif (!parameters.b) {\n\t\treturn '';\n\t} else {\n\t\treturn '?' + A2(\n\t\t\t$elm$core$String$join,\n\t\t\t'&',\n\t\t\tA2($elm$core$List$map, $elm$url$Url$Builder$toQueryPair, parameters));\n\t}\n};\nvar $elm$url$Url$Builder$relative = F2(\n\tfunction (pathSegments, parameters) {\n\t\treturn _Utils_ap(\n\t\t\tA2($elm$core$String$join, '/', pathSegments),\n\t\t\t$elm$url$Url$Builder$toQuery(parameters));\n\t});\nvar $author$project$Routing$hashBangPath = F2(\n\tfunction (parts, queryParams) {\n\t\treturn A2(\n\t\t\t$elm$url$Url$Builder$relative,\n\t\t\tA2($elm$core$List$cons, '#!', parts),\n\t\t\tqueryParams);\n\t});\nvar $author$project$Routing$viewToUrlString = function (view) {\n\tswitch (view.$) {\n\t\tcase 'ViewHome':\n\t\t\treturn A2($author$project$Routing$hashBangPath, _List_Nil, _List_Nil);\n\t\tcase 'ViewTopics':\n\t\t\treturn A2(\n\t\t\t\t$author$project$Routing$hashBangPath,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t['topics']),\n\t\t\t\t_List_Nil);\n\t\tcase 'ViewPost':\n\t\t\tvar postId = view.a;\n\t\t\treturn A2(\n\t\t\t\t$author$project$Routing$hashBangPath,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t['post']),\n\t\t\t\t$author$project$Routing$encodePostIdQueryParameters(postId));\n\t\tcase 'ViewTopic':\n\t\t\tvar topic = view.a;\n\t\t\treturn A2(\n\t\t\t\t$author$project$Routing$hashBangPath,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t'topic',\n\t\t\t\t\t\t$author$project$Routing$encodeTopic(topic)\n\t\t\t\t\t]),\n\t\t\t\t_List_Nil);\n\t\tcase 'ViewTxns':\n\t\t\treturn A2(\n\t\t\t\t$author$project$Routing$hashBangPath,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t['transactions']),\n\t\t\t\t_List_Nil);\n\t\tdefault:\n\t\t\treturn A2(\n\t\t\t\t$author$project$Routing$hashBangPath,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t['wallet']),\n\t\t\t\t_List_Nil);\n\t}\n};\nvar $author$project$UserNotice$web3FetchError = function (label) {\n\treturn {\n\t\talign: $author$project$UserNotice$BottomRight,\n\t\tmainParagraphs: _List_fromArray(\n\t\t\t[\n\t\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Failed to fetch \\\"' + (label + '\\\".'))\n\t\t\t\t])\n\t\t\t]),\n\t\tnoticeType: $author$project$UserNotice$Error,\n\t\tuniqueLabel: 'web3FetchError ' + label\n\t};\n};\nvar $author$project$Ports$xDaiImport = _Platform_outgoingPort(\n\t'xDaiImport',\n\tfunction ($) {\n\t\treturn $elm$json$Json$Encode$null;\n\t});\nvar $author$project$Update$update = F2(\n\tfunction (msg, model) {\n\t\tvar ensureUserInfo = function (fn) {\n\t\t\treturn A3(\n\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\tmodel,\n\t\t\t\t\t$author$project$Ports$log('Missing wallet')),\n\t\t\t\tfn,\n\t\t\t\t$author$project$Wallet$userInfo(model.wallet));\n\t\t};\n\t\tswitch (msg.$) {\n\t\t\tcase 'LinkClicked':\n\t\t\t\tvar urlRequest = msg.a;\n\t\t\t\tvar cmd = function () {\n\t\t\t\t\tif (urlRequest.$ === 'Internal') {\n\t\t\t\t\t\tvar url = urlRequest.a;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$elm$browser$Browser$Navigation$pushUrl,\n\t\t\t\t\t\t\tmodel.navKey,\n\t\t\t\t\t\t\t$elm$url$Url$toString(url));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar href = urlRequest.a;\n\t\t\t\t\t\treturn $elm$browser$Browser$Navigation$load(href);\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\treturn _Utils_Tuple2(model, cmd);\n\t\t\tcase 'RouteChanged':\n\t\t\t\tvar route = msg.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$author$project$Update$handleRoute,\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{hasNavigated: true}),\n\t\t\t\t\troute);\n\t\t\tcase 'Tick':\n\t\t\t\tvar newTime = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{now: newTime}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'PreviewSet':\n\t\t\t\tvar val = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcompose: function (r) {\n\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\t{preview: val});\n\t\t\t\t\t\t\t}(model.compose)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'Resize':\n\t\t\t\tvar width = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdProfile: $author$project$Helpers$Element$screenWidthToDisplayProfile(width)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'ShowExpandedTrackedTxs':\n\t\t\t\tvar flag = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{showExpandedTrackedTxs: flag}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'RpcResponse':\n\t\t\t\tvar res = msg.a;\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm_community$result_extra$Result$Extra$unpack,\n\t\t\t\t\tfunction (e) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2($author$project$Update$logHttpError, 'RpcResponse', e));\n\t\t\t\t\t},\n\t\t\t\t\tfunction (info) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpostState: $elm$core$Maybe$Nothing,\n\t\t\t\t\t\t\t\t\twallet: $author$project$Types$Active(info)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t\t},\n\t\t\t\t\tres);\n\t\t\tcase 'PostResponse':\n\t\t\t\tvar res = msg.a;\n\t\t\t\treturn ensureUserInfo(\n\t\t\t\t\tfunction (userInfo) {\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$elm_community$result_extra$Result$Extra$unpack,\n\t\t\t\t\t\t\tfunction (err) {\n\t\t\t\t\t\t\t\tif (err.$ === 'UserRejected') {\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcompose: function (r) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror: $elm$core$Maybe$Just('Your transaction was cancelled.'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinProgress: false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t}(model.compose)\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar e = err.a;\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcompose: function (r) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror: $elm$core$Maybe$Just('There has been a problem.'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinProgress: false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t}(model.compose)\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t$author$project$Ports$log(e));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (txHash) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcompose: function (r) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\t\t\t\t\t{inProgress: false, modal: false});\n\t\t\t\t\t\t\t\t\t\t\t}(model.compose),\n\t\t\t\t\t\t\t\t\t\t\tshowExpandedTrackedTxs: true,\n\t\t\t\t\t\t\t\t\t\t\ttrackedTxs: A3(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$txHashToString(txHash),\n\t\t\t\t\t\t\t\t\t\t\t\t{chain: userInfo.chain, status: $author$project$Types$Mining, txHash: txHash, txInfo: $author$project$Types$PostTx},\n\t\t\t\t\t\t\t\t\t\t\t\tmodel.trackedTxs),\n\t\t\t\t\t\t\t\t\t\t\tuserNotices: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$append,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$UserNotice$notify('Your transaction is mining.')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\tmodel.userNotices)\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tres);\n\t\t\t\t\t});\n\t\t\tcase 'PostTxResponse':\n\t\t\t\tvar res = msg.a;\n\t\t\t\treturn ensureUserInfo(\n\t\t\t\t\tfunction (userInfo) {\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$elm_community$result_extra$Result$Extra$unpack,\n\t\t\t\t\t\t\tfunction (err) {\n\t\t\t\t\t\t\t\tif (err.$ === 'UserRejected') {\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tpostState: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (r) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror: $elm$core$Maybe$Just('Your transaction was cancelled.'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinProgress: false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tmodel.postState)\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar e = err.a;\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tpostState: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (r) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror: $elm$core$Maybe$Just('There has been a problem.'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinProgress: false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tmodel.postState)\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t$author$project$Ports$log(e));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (txHash) {\n\t\t\t\t\t\t\t\tvar trackedTx = A2(\n\t\t\t\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t\t\t\tfunction (state) {\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tchain: userInfo.chain,\n\t\t\t\t\t\t\t\t\t\t\tstatus: $author$project$Types$Mining,\n\t\t\t\t\t\t\t\t\t\t\ttxHash: txHash,\n\t\t\t\t\t\t\t\t\t\t\ttxInfo: function () {\n\t\t\t\t\t\t\t\t\t\t\t\tvar _v4 = state.showInput;\n\t\t\t\t\t\t\t\t\t\t\t\tif (_v4.$ === 'Tip') {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn $author$project$Types$TipTx(state.id);\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn $author$project$Types$TipTx(state.id);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}()\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tmodel.postState);\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tpostState: $elm$core$Maybe$Nothing,\n\t\t\t\t\t\t\t\t\t\t\ttrackedTxs: A3(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Basics$apR,\n\t\t\t\t\t\t\t\t\t\t\t\ttrackedTx,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Basics$identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Dict$insert(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$txHashToString(txHash))),\n\t\t\t\t\t\t\t\t\t\t\t\tmodel.trackedTxs),\n\t\t\t\t\t\t\t\t\t\t\tuserNotices: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$append,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$UserNotice$notify('Your transaction is mining.')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\tmodel.userNotices)\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tres);\n\t\t\t\t\t});\n\t\t\tcase 'CheckTrackedTxsStatus':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tmodel,\n\t\t\t\t\t$elm$core$Platform$Cmd$batch(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\tfunction (tx) {\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$core$Task$attempt,\n\t\t\t\t\t\t\t\t\t$author$project$Types$TrackedTxStatusResult,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$author$project$Misc$getTxReceipt,\n\t\t\t\t\t\t\t\t\t\tA2($author$project$Chain$getProviderUrl, tx.chain, model.config),\n\t\t\t\t\t\t\t\t\t\ttx.txHash));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$filter,\n\t\t\t\t\t\t\t\tfunction (trackedTx) {\n\t\t\t\t\t\t\t\t\treturn _Utils_eq(trackedTx.status, $author$project$Types$Mining);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t$elm$core$Dict$values(model.trackedTxs)))));\n\t\t\tcase 'TrackedTxStatusResult':\n\t\t\t\tvar res = msg.a;\n\t\t\t\tif (res.$ === 'Err') {\n\t\t\t\t\tvar err = res.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tA2($author$project$Update$logHttpError, 'TrackedTxStatusResult', err));\n\t\t\t\t} else {\n\t\t\t\t\tvar data = res.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\t\t\t_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),\n\t\t\t\t\t\tfunction (txReceipt) {\n\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t$author$project$Ports$log('Transaction not found.')),\n\t\t\t\t\t\t\t\tfunction (tx) {\n\t\t\t\t\t\t\t\t\tvar fetchAccounting = A3(\n\t\t\t\t\t\t\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t\t\t\tA2($author$project$Update$fetchPostInfo, model.blockTimes, model.config),\n\t\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\t\tvar _v8 = tx.txInfo;\n\t\t\t\t\t\t\t\t\t\t\tswitch (_v8.$) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'PostTx':\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'TipTx':\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar id = _v8.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn A2($author$project$Misc$getPostOrReply, id, model);\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar id = _v8.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn A2($author$project$Misc$getPostOrReply, id, model);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}());\n\t\t\t\t\t\t\t\t\tvar _v6 = A2($author$project$Update$handleTxReceipt, tx.chain, txReceipt);\n\t\t\t\t\t\t\t\t\tvar newStatus = _v6.a;\n\t\t\t\t\t\t\t\t\tvar maybeUserNotice = _v6.c;\n\t\t\t\t\t\t\t\t\tvar isMined = function () {\n\t\t\t\t\t\t\t\t\t\tif (newStatus.$ === 'Mined') {\n\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttrackedTxs: A3(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Dict$update,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$txHashToString(txReceipt.hash),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (info) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_eq(info.status, $author$project$Types$Mining) ? _Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinfo,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{status: newStatus}) : info;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t\tmodel.trackedTxs),\n\t\t\t\t\t\t\t\t\t\t\t\tuserNotices: _Utils_ap(\n\t\t\t\t\t\t\t\t\t\t\t\t\tmodel.userNotices,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA3($elm_community$maybe_extra$Maybe$Extra$unwrap, _List_Nil, $elm$core$List$singleton, maybeUserNotice))\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\tisMined ? fetchAccounting : $elm$core$Platform$Cmd$none);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$Dict$get,\n\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$txHashToString(txReceipt.hash),\n\t\t\t\t\t\t\t\t\tmodel.trackedTxs));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdata);\n\t\t\t\t}\n\t\t\tcase 'WalletResponse':\n\t\t\t\tvar res = msg.a;\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm_community$result_extra$Result$Extra$unpack,\n\t\t\t\t\tfunction (err) {\n\t\t\t\t\t\tswitch (err.$) {\n\t\t\t\t\t\t\tcase 'WalletInProgress':\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tuserNotices: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$UserNotice$unexpectedError('Please complete the wallet connection process.'),\n\t\t\t\t\t\t\t\t\t\t\t\tmodel.userNotices)\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t\t\t\tcase 'WalletCancel':\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tuserNotices: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$UserNotice$unexpectedError('The wallet connection has been cancelled.'),\n\t\t\t\t\t\t\t\t\t\t\t\tmodel.userNotices),\n\t\t\t\t\t\t\t\t\t\t\twallet: $author$project$Types$NetworkReady\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t\t\t\tcase 'NetworkNotSupported':\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tuserNotices: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$UserNotice$unexpectedError('This network is not supported by SmokeSignal.'),\n\t\t\t\t\t\t\t\t\t\t\t\tmodel.userNotices),\n\t\t\t\t\t\t\t\t\t\t\twallet: $author$project$Types$NetworkReady\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tvar e = err.a;\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t{wallet: $author$project$Types$NetworkReady}),\n\t\t\t\t\t\t\t\t\t$author$project$Ports$log(e));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction (info) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\twallet: $author$project$Types$Active(info)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t\t},\n\t\t\t\t\tres);\n\t\t\tcase 'EventSentryMsg':\n\t\t\t\tvar chain = msg.a;\n\t\t\t\tvar eventMsg = msg.b;\n\t\t\t\tif (chain.$ === 'Eth') {\n\t\t\t\t\tvar _v11 = A2($cmditch$elm_ethereum$Eth$Sentry$Event$update, eventMsg, model.sentries.ethereum);\n\t\t\t\t\tvar newEventSentry = _v11.a;\n\t\t\t\t\tvar cmd = _v11.b;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsentries: function (ss) {\n\t\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\t\tss,\n\t\t\t\t\t\t\t\t\t\t{ethereum: newEventSentry});\n\t\t\t\t\t\t\t\t}(model.sentries)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tcmd);\n\t\t\t\t} else {\n\t\t\t\t\tvar _v12 = A2($cmditch$elm_ethereum$Eth$Sentry$Event$update, eventMsg, model.sentries.xDai);\n\t\t\t\t\tvar newEventSentry = _v12.a;\n\t\t\t\t\tvar cmd = _v12.b;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsentries: function (ss) {\n\t\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\t\tss,\n\t\t\t\t\t\t\t\t\t\t{xDai: newEventSentry});\n\t\t\t\t\t\t\t\t}(model.sentries)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tcmd);\n\t\t\t\t}\n\t\t\tcase 'PostLogReceived':\n\t\t\t\tvar res = msg.a;\n\t\t\t\tvar _v13 = res.returnData;\n\t\t\t\tif (_v13.$ === 'Err') {\n\t\t\t\t\tvar err = _v13.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t$author$project$Ports$log(\n\t\t\t\t\t\t\t'PostLogReceived:\\n' + A2(\n\t\t\t\t\t\t\t\t$elm$core$String$left,\n\t\t\t\t\t\t\t\t200,\n\t\t\t\t\t\t\t\t$elm$json$Json$Decode$errorToString(err))));\n\t\t\t\t} else {\n\t\t\t\t\tvar log = _v13.a;\n\t\t\t\t\tvar core = function () {\n\t\t\t\t\t\tif (log.$ === 'LogReply') {\n\t\t\t\t\t\t\tvar p = log.a;\n\t\t\t\t\t\t\treturn p.core;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar p = log.a;\n\t\t\t\t\t\t\treturn p.core;\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tA2($author$project$Update$addPost, log, model),\n\t\t\t\t\t\tA3($author$project$Update$fetchPostInfo, model.blockTimes, model.config, core));\n\t\t\t\t}\n\t\t\tcase 'PostAccountingFetched':\n\t\t\t\tvar postId = msg.a;\n\t\t\t\tvar res = msg.b;\n\t\t\t\tif (res.$ === 'Ok') {\n\t\t\t\t\tvar accountingData = res.a;\n\t\t\t\t\tvar key = $author$project$Misc$postIdToKey(postId);\n\t\t\t\t\tvar maybeTopic = A2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\treturn $.topic;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2($elm$core$Dict$get, key, model.rootPosts));\n\t\t\t\t\tvar accounting = A3($elm$core$Dict$insert, key, accountingData, model.accounting);\n\t\t\t\t\tvar updateTopics = A3(\n\t\t\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\t\t\t$elm$core$Basics$identity,\n\t\t\t\t\t\tfunction (topic) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$Dict$update,\n\t\t\t\t\t\t\t\ttopic,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tids: $elm$core$Set$singleton(key),\n\t\t\t\t\t\t\t\t\t\t\ttotal: accountingData.totalBurned\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tfunction (data) {\n\t\t\t\t\t\t\t\t\t\t\tvar ids = A2($elm$core$Set$insert, key, data.ids);\n\t\t\t\t\t\t\t\t\t\t\tvar total = _Utils_eq(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Set$size(data.ids),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Set$size(ids)) ? data.total : A3(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$TokenValue$add,\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$TokenValue$zero,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $.totalBurned;\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$filterMap,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (id) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn A2($elm$core$Dict$get, id, accounting);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Set$toList(ids))));\n\t\t\t\t\t\t\t\t\t\t\treturn {ids: ids, total: total};\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmaybeTopic);\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\taccounting: accounting,\n\t\t\t\t\t\t\t\tpages: A4($author$project$Update$calculatePagination, model.blockTimes, accounting, model.now, model.rootPosts),\n\t\t\t\t\t\t\t\ttopics: updateTopics(model.topics)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t} else {\n\t\t\t\t\tvar err = res.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Update$addUserNotice,\n\t\t\t\t\t\t\t$author$project$UserNotice$web3FetchError('accounting data'),\n\t\t\t\t\t\t\tmodel),\n\t\t\t\t\t\tA2($author$project$Update$logHttpError, 'PostAccountingFetched', err));\n\t\t\t\t}\n\t\t\tcase 'BalanceFetched':\n\t\t\t\tvar address = msg.a;\n\t\t\t\tvar res = msg.b;\n\t\t\t\tif (res.$ === 'Ok') {\n\t\t\t\t\tvar balance = res.a;\n\t\t\t\t\tvar _v17 = A2(\n\t\t\t\t\t\t$author$project$GTag$gTagOutOnlyOnLabelOrValueChange,\n\t\t\t\t\t\tmodel.gtagHistory,\n\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$author$project$GTag$GTagData,\n\t\t\t\t\t\t\t'balance fetched',\n\t\t\t\t\t\t\t$elm$core$Maybe$Nothing,\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\tA2($author$project$TokenValue$toFloatString, $elm$core$Maybe$Nothing, balance)),\n\t\t\t\t\t\t\t$elm$core$Maybe$Nothing));\n\t\t\t\t\tvar newGtagHistory = _v17.a;\n\t\t\t\t\tvar gtagCmd = _v17.b;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgtagHistory: newGtagHistory,\n\t\t\t\t\t\t\t\twallet: A3(\n\t\t\t\t\t\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\t\t\t\t\t\tmodel.wallet,\n\t\t\t\t\t\t\t\t\tfunction (userInfo) {\n\t\t\t\t\t\t\t\t\t\treturn $author$project$Types$Active(\n\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\tuserInfo,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tbalance: _Utils_eq(userInfo.address, address) ? balance : userInfo.balance\n\t\t\t\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t$author$project$Wallet$userInfo(model.wallet))\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tgtagCmd);\n\t\t\t\t} else {\n\t\t\t\t\tvar err = res.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tA2($author$project$Update$logHttpError, 'BalanceFetched', err));\n\t\t\t\t}\n\t\t\tcase 'BlockTimeFetched':\n\t\t\t\tvar blocknum = msg.a;\n\t\t\t\tvar timeResult = msg.b;\n\t\t\t\tif (timeResult.$ === 'Err') {\n\t\t\t\t\tvar err = timeResult.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Update$addUserNotice,\n\t\t\t\t\t\t\t$author$project$UserNotice$web3FetchError('block time'),\n\t\t\t\t\t\t\tmodel),\n\t\t\t\t\t\tA2($author$project$Update$logHttpError, 'BlockTimeFetched', err));\n\t\t\t\t} else {\n\t\t\t\t\tvar time = timeResult.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tblockTimes: A3($elm$core$Dict$insert, blocknum, time, model.blockTimes)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t\tcase 'DismissNotice':\n\t\t\t\tvar id = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tuserNotices: A2($elm_community$list_extra$List$Extra$removeAt, id, model.userNotices)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'GotoView':\n\t\t\t\tvar view = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$browser$Browser$Navigation$pushUrl,\n\t\t\t\t\t\tmodel.navKey,\n\t\t\t\t\t\t$author$project$Routing$viewToUrlString(view)));\n\t\t\tcase 'ConnectToWeb3':\n\t\t\t\tvar _v19 = A2(\n\t\t\t\t\t$author$project$GTag$gTagOutOnlyOnceForEvent,\n\t\t\t\t\tmodel.gtagHistory,\n\t\t\t\t\tA4($author$project$GTag$GTagData, 'Web3 Connected', $elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing));\n\t\t\t\tvar newGtagHistory = _v19.a;\n\t\t\t\tvar gtagCmd = _v19.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{gtagHistory: newGtagHistory, wallet: $author$project$Types$Connecting}),\n\t\t\t\t\t$elm$core$Platform$Cmd$batch(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$author$project$Ports$connectToWeb3(_Utils_Tuple0),\n\t\t\t\t\t\t\t\tgtagCmd\n\t\t\t\t\t\t\t])));\n\t\t\tcase 'ShowOrHideAddress':\n\t\t\t\tvar phaceId = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshowAddressId: _Utils_eq(\n\t\t\t\t\t\t\t\tmodel.showAddressId,\n\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(phaceId)) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(phaceId)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'AddUserNotice':\n\t\t\t\tvar userNotice = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2($author$project$Update$addUserNotice, userNotice, model),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'PriceResponse':\n\t\t\t\tvar res = msg.a;\n\t\t\t\treturn ensureUserInfo(\n\t\t\t\t\tfunction (userInfo) {\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$elm_community$result_extra$Result$Extra$unpack,\n\t\t\t\t\t\t\tfunction (_v20) {\n\t\t\t\t\t\t\t\tvar compose = function (r) {\n\t\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\terror: $elm$core$Maybe$Just('There has been a problem.'),\n\t\t\t\t\t\t\t\t\t\t\tinProgress: false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}(model.compose);\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t{compose: compose}),\n\t\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (price) {\n\t\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\t\t$elm_community$result_extra$Result$Extra$unpack,\n\t\t\t\t\t\t\t\t\tfunction (err) {\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tuserNotices: _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$UserNotice$unexpectedError(err)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfunction (postDraft) {\n\t\t\t\t\t\t\t\t\t\tvar config = A2($author$project$Chain$getConfig, userInfo.chain, model.config);\n\t\t\t\t\t\t\t\t\t\tvar txParams = $cmditch$elm_ethereum$Eth$encodeSend(\n\t\t\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$toSend(\n\t\t\t\t\t\t\t\t\t\t\t\tA3($author$project$Contracts$SmokeSignal$burnEncodedPost, userInfo, config.contract, postDraft)));\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Ports$submitPost(txParams));\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$Result$andThen,\n\t\t\t\t\t\t\t\t\t\tfunction (burnAmount) {\n\t\t\t\t\t\t\t\t\t\t\tvar donateAmount = model.compose.donate ? A2($author$project$TokenValue$div, burnAmount, 100) : $author$project$TokenValue$zero;\n\t\t\t\t\t\t\t\t\t\t\tvar lowBalance = !_Utils_eq(\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$TokenValue$compare,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$TokenValue$add, burnAmount, donateAmount),\n\t\t\t\t\t\t\t\t\t\t\t\t\tuserInfo.balance),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Basics$LT);\n\t\t\t\t\t\t\t\t\t\t\tvar context = function () {\n\t\t\t\t\t\t\t\t\t\t\t\tvar _v21 = model.compose.context;\n\t\t\t\t\t\t\t\t\t\t\t\tif (_v21.$ === 'TopLevel') {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar topic = _v21.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn $author$project$Types$TopLevel(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttopic,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Misc$validateTopic(model.topicInput)));\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar ctx = _v21;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn ctx;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\t\t\t\t\tvar metadata = {context: context, maybeDecodeError: $elm$core$Maybe$Nothing, metadataVersion: $author$project$Post$currentMetadataVersion};\n\t\t\t\t\t\t\t\t\t\t\tvar content = {\n\t\t\t\t\t\t\t\t\t\t\t\tbody: model.compose.body,\n\t\t\t\t\t\t\t\t\t\t\t\tdesc: $elm$core$Maybe$Nothing,\n\t\t\t\t\t\t\t\t\t\t\t\ttitle: $elm$core$String$isEmpty(model.compose.title) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(model.compose.title)\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\treturn lowBalance ? $elm$core$Result$Err('Not enough funds.') : $elm$core$Result$Ok(\n\t\t\t\t\t\t\t\t\t\t\t\t{author: userInfo.address, authorBurn: burnAmount, content: content, donateAmount: donateAmount, metadata: metadata});\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tA2($author$project$Update$getPostBurnAmount, price, model.compose.dollar)));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tres);\n\t\t\t\t\t});\n\t\t\tcase 'SubmitDraft':\n\t\t\t\treturn ensureUserInfo(\n\t\t\t\t\tfunction (userInfo) {\n\t\t\t\t\t\tvar compose = function (r) {\n\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t{error: $elm$core$Maybe$Nothing, inProgress: true});\n\t\t\t\t\t\t}(model.compose);\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t{compose: compose}),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$Task$attempt,\n\t\t\t\t\t\t\t\t$author$project$Types$PriceResponse,\n\t\t\t\t\t\t\t\t$author$project$Contracts$SmokeSignal$getEthPriceCmd(\n\t\t\t\t\t\t\t\t\tA2($author$project$Chain$getConfig, userInfo.chain, model.config))));\n\t\t\t\t\t});\n\t\t\tcase 'SubmitPostTx':\n\t\t\t\treturn ensureUserInfo(\n\t\t\t\t\tfunction (userInfo) {\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\t\t\t\t_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),\n\t\t\t\t\t\t\tfunction (state) {\n\t\t\t\t\t\t\t\tvar newState = _Utils_update(\n\t\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t\t{error: $elm$core$Maybe$Nothing, inProgress: true});\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tpostState: $elm$core$Maybe$Just(newState)\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$Task$attempt,\n\t\t\t\t\t\t\t\t\t\t$author$project$Types$PostTxPriceResponse(newState),\n\t\t\t\t\t\t\t\t\t\t$author$project$Contracts$SmokeSignal$getEthPriceCmd(\n\t\t\t\t\t\t\t\t\t\t\tA2($author$project$Chain$getConfig, userInfo.chain, model.config))));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmodel.postState);\n\t\t\t\t\t});\n\t\t\tcase 'PostTxPriceResponse':\n\t\t\t\tvar state = msg.a;\n\t\t\t\tvar res = msg.b;\n\t\t\t\treturn ensureUserInfo(\n\t\t\t\t\tfunction (userInfo) {\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$elm_community$result_extra$Result$Extra$unpack,\n\t\t\t\t\t\t\tfunction (_v22) {\n\t\t\t\t\t\t\t\tvar compose = function (r) {\n\t\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\terror: $elm$core$Maybe$Just('There has been a problem.'),\n\t\t\t\t\t\t\t\t\t\t\tinProgress: false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}(model.compose);\n\t\t\t\t\t\t\t\tvar _v23 = A2(\n\t\t\t\t\t\t\t\t\t$author$project$GTag$gTagOutOnlyOnLabelOrValueChange,\n\t\t\t\t\t\t\t\t\tmodel.gtagHistory,\n\t\t\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t\t\t\t$author$project$GTag$GTagData,\n\t\t\t\t\t\t\t\t\t\t'[Event]',\n\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Nothing,\n\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just('error '),\n\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Nothing));\n\t\t\t\t\t\t\t\tvar newGtagHistory = _v23.a;\n\t\t\t\t\t\t\t\tvar gtagCmd = _v23.b;\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t{compose: compose}),\n\t\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (price) {\n\t\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\t\t$elm_community$result_extra$Result$Extra$unpack,\n\t\t\t\t\t\t\t\t\tfunction (err) {\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tuserNotices: _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$UserNotice$unexpectedError(err)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfunction (amount) {\n\t\t\t\t\t\t\t\t\t\tvar fn = function () {\n\t\t\t\t\t\t\t\t\t\t\tvar _v24 = state.showInput;\n\t\t\t\t\t\t\t\t\t\t\tif (_v24.$ === 'Tip') {\n\t\t\t\t\t\t\t\t\t\t\t\treturn $author$project$Contracts$SmokeSignal$tipForPost;\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\treturn $author$project$Contracts$SmokeSignal$burnForPost;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\t\t\t\tvar config = A2($author$project$Chain$getConfig, userInfo.chain, model.config);\n\t\t\t\t\t\t\t\t\t\tvar txParams = $cmditch$elm_ethereum$Eth$encodeSend(\n\t\t\t\t\t\t\t\t\t\t\t$cmditch$elm_ethereum$Eth$toSend(\n\t\t\t\t\t\t\t\t\t\t\t\tA5(fn, userInfo, config.contract, state.id.messageHash, amount, model.compose.donate)));\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Ports$txOut(txParams));\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$Result$fromMaybe,\n\t\t\t\t\t\t\t\t\t\t'Invalid tip amount',\n\t\t\t\t\t\t\t\t\t\tA2($author$project$Misc$dollarStringToToken, price, state.input)));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tres);\n\t\t\t\t\t});\n\t\t\tcase 'DonationCheckboxSet':\n\t\t\t\tvar flag = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcompose: function (r) {\n\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\t{donate: flag});\n\t\t\t\t\t\t\t}(model.compose)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'SetPage':\n\t\t\t\tvar n = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{currentPage: n}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'SetPostInput':\n\t\t\t\tvar id = msg.a;\n\t\t\t\tvar val = msg.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpostState: $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t{error: $elm$core$Maybe$Nothing, id: id, inProgress: false, input: '', showInput: val})\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'CancelPostInput':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{postState: $elm$core$Maybe$Nothing}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'ChangeDemoPhaceSrc':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($elm$random$Random$generate, $author$project$Types$NewDemoSrc, $author$project$DemoPhaceSrcMutator$addressSrcGenerator));\n\t\t\tcase 'NewDemoSrc':\n\t\t\t\tvar src = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{demoPhaceSrc: src}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'XDaiImport':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tmodel,\n\t\t\t\t\t$author$project$Ports$xDaiImport(_Utils_Tuple0));\n\t\t\tcase 'CookieConsentGranted':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{cookieConsentGranted: true}),\n\t\t\t\t\t$elm$core$Platform$Cmd$batch(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$author$project$Ports$consentToCookies(_Utils_Tuple0),\n\t\t\t\t\t\t\t\t$author$project$GTag$gTagOut(\n\t\t\t\t\t\t\t\tA4($author$project$GTag$GTagData, 'accept cookies', $elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing))\n\t\t\t\t\t\t\t])));\n\t\t\tcase 'ShowNewToSmokeSignalModal':\n\t\t\t\tvar flag = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{newUserModal: flag}),\n\t\t\t\t\t$author$project$Ports$setVisited(_Utils_Tuple0));\n\t\t\tcase 'TopicSubmit':\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuserNotices: _List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$author$project$UserNotice$unexpectedError('Invalid topic')\n\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none),\n\t\t\t\t\tfunction (topic) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$browser$Browser$Navigation$pushUrl,\n\t\t\t\t\t\t\t\tmodel.navKey,\n\t\t\t\t\t\t\t\t$author$project$Routing$viewToUrlString(\n\t\t\t\t\t\t\t\t\t$author$project$Types$ViewTopic(topic))));\n\t\t\t\t\t},\n\t\t\t\t\t$author$project$Misc$validateTopic(\n\t\t\t\t\t\t$elm$core$String$isEmpty(model.topicInput) ? $author$project$Post$defaultTopic : model.topicInput));\n\t\t\tcase 'ComposeOpen':\n\t\t\t\tvar topic = A2(\n\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t$author$project$Post$defaultTopic,\n\t\t\t\t\t$author$project$Misc$validateTopic(model.topicInput));\n\t\t\t\tvar context = function () {\n\t\t\t\t\tvar _v26 = model.view;\n\t\t\t\t\tswitch (_v26.$) {\n\t\t\t\t\t\tcase 'ViewTopic':\n\t\t\t\t\t\t\tvar t = _v26.a;\n\t\t\t\t\t\t\treturn $author$project$Types$TopLevel(t);\n\t\t\t\t\t\tcase 'ViewPost':\n\t\t\t\t\t\t\tvar id = _v26.a;\n\t\t\t\t\t\t\treturn $author$project$Types$Reply(id);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn $author$project$Types$TopLevel(topic);\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\tvar topicInput = function () {\n\t\t\t\t\tif (context.$ === 'Reply') {\n\t\t\t\t\t\treturn model.topicInput;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar t = context.a;\n\t\t\t\t\t\treturn t;\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcompose: _Utils_update(\n\t\t\t\t\t\t\t\t$author$project$Misc$emptyComposeModel,\n\t\t\t\t\t\t\t\t{context: context, modal: true}),\n\t\t\t\t\t\t\ttopicInput: topicInput\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'ComposeClose':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcompose: function (r) {\n\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\t{modal: false});\n\t\t\t\t\t\t\t}(model.compose)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'ComposeBodyChange':\n\t\t\t\tvar str = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcompose: function (r) {\n\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\t{body: str});\n\t\t\t\t\t\t\t}(model.compose)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'ComposeTitleChange':\n\t\t\t\tvar str = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcompose: function (r) {\n\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\t{title: str});\n\t\t\t\t\t\t\t}(model.compose)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'ComposeDollarChange':\n\t\t\t\tvar str = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcompose: function (r) {\n\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\t{dollar: str});\n\t\t\t\t\t\t\t}(model.compose)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'TopicInputChange':\n\t\t\t\tvar str = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{topicInput: str}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'PostInputChange':\n\t\t\t\tvar str = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpostState: A2(\n\t\t\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t\t\tfunction (r) {\n\t\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\t\t{input: str});\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tmodel.postState)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'SanitizeTopic':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttopicInput: A2(\n\t\t\t\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t\t\t\t$author$project$Post$defaultTopic,\n\t\t\t\t\t\t\t\t$author$project$Misc$validateTopic(model.topicInput))\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tmodel,\n\t\t\t\t\tmodel.hasNavigated ? A2($elm$browser$Browser$Navigation$back, model.navKey, 1) : A2(\n\t\t\t\t\t\t$elm$browser$Browser$Navigation$pushUrl,\n\t\t\t\t\t\tmodel.navKey,\n\t\t\t\t\t\t$author$project$Routing$viewToUrlString($author$project$Types$ViewHome)));\n\t\t}\n\t});\nvar $author$project$Misc$getTitle = function (model) {\n\tvar defaultMain = 'SmokeSignal | Uncensorable - Immutable - Unkillable | Real Free Speech - Cemented on the Blockchain';\n\tvar _v0 = model.view;\n\tswitch (_v0.$) {\n\t\tcase 'ViewHome':\n\t\t\treturn defaultMain;\n\t\tcase 'ViewTopics':\n\t\t\treturn defaultMain;\n\t\tcase 'ViewPost':\n\t\t\tvar postId = _v0.a;\n\t\t\treturn A3(\n\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\tdefaultMain,\n\t\t\t\tfunction (contextTitle) {\n\t\t\t\t\treturn contextTitle + ' | SmokeSignal';\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Maybe$andThen,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\treturn $.core;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\treturn $.content;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\treturn $.title;\n\t\t\t\t\t\t\t})),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Dict$get,\n\t\t\t\t\t\t$author$project$Misc$postIdToKey(postId),\n\t\t\t\t\t\tmodel.rootPosts)));\n\t\tcase 'ViewTopic':\n\t\t\tvar topic = _v0.a;\n\t\t\treturn '#' + (topic + ' | SmokeSignal');\n\t\tcase 'ViewWallet':\n\t\t\treturn defaultMain;\n\t\tdefault:\n\t\t\treturn defaultMain;\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$Fill = function (a) {\n\treturn {$: 'Fill', a: a};\n};\nvar $mdgriffith$elm_ui$Element$fill = $mdgriffith$elm_ui$Internal$Model$Fill(1);\nvar $mdgriffith$elm_ui$Internal$Model$FocusStyleOption = function (a) {\n\treturn {$: 'FocusStyleOption', a: a};\n};\nvar $mdgriffith$elm_ui$Element$focusStyle = $mdgriffith$elm_ui$Internal$Model$FocusStyleOption;\nvar $mdgriffith$elm_ui$Internal$Model$Height = function (a) {\n\treturn {$: 'Height', a: a};\n};\nvar $mdgriffith$elm_ui$Element$height = $mdgriffith$elm_ui$Internal$Model$Height;\nvar $mdgriffith$elm_ui$Internal$Model$Attr = function (a) {\n\treturn {$: 'Attr', a: a};\n};\nvar $elm$virtual_dom$VirtualDom$style = _VirtualDom_style;\nvar $mdgriffith$elm_ui$Element$Background$image = function (src) {\n\treturn $mdgriffith$elm_ui$Internal$Model$Attr(\n\t\tA2($elm$virtual_dom$VirtualDom$style, 'background', 'url(\\\"' + (src + '\\\") center / cover no-repeat')));\n};\nvar $mdgriffith$elm_ui$Internal$Model$InFront = {$: 'InFront'};\nvar $mdgriffith$elm_ui$Internal$Model$Nearby = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Nearby', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$NoAttribute = {$: 'NoAttribute'};\nvar $mdgriffith$elm_ui$Element$createNearby = F2(\n\tfunction (loc, element) {\n\t\tif (element.$ === 'Empty') {\n\t\t\treturn $mdgriffith$elm_ui$Internal$Model$NoAttribute;\n\t\t} else {\n\t\t\treturn A2($mdgriffith$elm_ui$Internal$Model$Nearby, loc, element);\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Element$inFront = function (element) {\n\treturn A2($mdgriffith$elm_ui$Element$createNearby, $mdgriffith$elm_ui$Internal$Model$InFront, element);\n};\nvar $mdgriffith$elm_ui$Internal$Style$classes = {above: 'a', active: 'atv', alignBottom: 'ab', alignCenterX: 'cx', alignCenterY: 'cy', alignContainerBottom: 'acb', alignContainerCenterX: 'accx', alignContainerCenterY: 'accy', alignContainerRight: 'acr', alignLeft: 'al', alignRight: 'ar', alignTop: 'at', alignedHorizontally: 'ah', alignedVertically: 'av', any: 's', behind: 'bh', below: 'b', bold: 'w7', borderDashed: 'bd', borderDotted: 'bdt', borderNone: 'bn', borderSolid: 'bs', capturePointerEvents: 'cpe', clip: 'cp', clipX: 'cpx', clipY: 'cpy', column: 'c', container: 'ctr', contentBottom: 'cb', contentCenterX: 'ccx', contentCenterY: 'ccy', contentLeft: 'cl', contentRight: 'cr', contentTop: 'ct', cursorPointer: 'cptr', cursorText: 'ctxt', focus: 'fcs', focusedWithin: 'focus-within', fullSize: 'fs', grid: 'g', hasBehind: 'hbh', heightContent: 'hc', heightExact: 'he', heightFill: 'hf', heightFillPortion: 'hfp', hover: 'hv', imageContainer: 'ic', inFront: 'fr', inputLabel: 'lbl', inputMultiline: 'iml', inputMultilineFiller: 'imlf', inputMultilineParent: 'imlp', inputMultilineWrapper: 'implw', inputText: 'it', italic: 'i', link: 'lnk', nearby: 'nb', noTextSelection: 'notxt', onLeft: 'ol', onRight: 'or', opaque: 'oq', overflowHidden: 'oh', page: 'pg', paragraph: 'p', passPointerEvents: 'ppe', root: 'ui', row: 'r', scrollbars: 'sb', scrollbarsX: 'sbx', scrollbarsY: 'sby', seButton: 'sbt', single: 'e', sizeByCapital: 'cap', spaceEvenly: 'sev', strike: 'sk', text: 't', textCenter: 'tc', textExtraBold: 'w8', textExtraLight: 'w2', textHeavy: 'w9', textJustify: 'tj', textJustifyAll: 'tja', textLeft: 'tl', textLight: 'w3', textMedium: 'w5', textNormalWeight: 'w4', textRight: 'tr', textSemiBold: 'w6', textThin: 'w1', textUnitalicized: 'tun', transition: 'ts', transparent: 'clr', underline: 'u', widthContent: 'wc', widthExact: 'we', widthFill: 'wf', widthFillPortion: 'wfp', wrapped: 'wrp'};\nvar $elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\t$elm$json$Json$Encode$string(string));\n\t});\nvar $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');\nvar $mdgriffith$elm_ui$Internal$Model$htmlClass = function (cls) {\n\treturn $mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t$elm$html$Html$Attributes$class(cls));\n};\nvar $mdgriffith$elm_ui$Internal$Model$OnlyDynamic = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'OnlyDynamic', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$StaticRootAndDynamic = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'StaticRootAndDynamic', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Unkeyed = function (a) {\n\treturn {$: 'Unkeyed', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$AsEl = {$: 'AsEl'};\nvar $mdgriffith$elm_ui$Internal$Model$asEl = $mdgriffith$elm_ui$Internal$Model$AsEl;\nvar $mdgriffith$elm_ui$Internal$Model$Generic = {$: 'Generic'};\nvar $mdgriffith$elm_ui$Internal$Model$div = $mdgriffith$elm_ui$Internal$Model$Generic;\nvar $mdgriffith$elm_ui$Internal$Model$NoNearbyChildren = {$: 'NoNearbyChildren'};\nvar $mdgriffith$elm_ui$Internal$Model$columnClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.column);\nvar $mdgriffith$elm_ui$Internal$Model$gridClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.grid);\nvar $mdgriffith$elm_ui$Internal$Model$pageClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.page);\nvar $mdgriffith$elm_ui$Internal$Model$paragraphClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.paragraph);\nvar $mdgriffith$elm_ui$Internal$Model$rowClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.row);\nvar $mdgriffith$elm_ui$Internal$Model$singleClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.single);\nvar $mdgriffith$elm_ui$Internal$Model$contextClasses = function (context) {\n\tswitch (context.$) {\n\t\tcase 'AsRow':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Model$rowClass;\n\t\tcase 'AsColumn':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Model$columnClass;\n\t\tcase 'AsEl':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Model$singleClass;\n\t\tcase 'AsGrid':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Model$gridClass;\n\t\tcase 'AsParagraph':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Model$paragraphClass;\n\t\tdefault:\n\t\t\treturn $mdgriffith$elm_ui$Internal$Model$pageClass;\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$Keyed = function (a) {\n\treturn {$: 'Keyed', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$NoStyleSheet = {$: 'NoStyleSheet'};\nvar $mdgriffith$elm_ui$Internal$Model$Styled = function (a) {\n\treturn {$: 'Styled', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$Unstyled = function (a) {\n\treturn {$: 'Unstyled', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$addChildren = F2(\n\tfunction (existing, nearbyChildren) {\n\t\tswitch (nearbyChildren.$) {\n\t\t\tcase 'NoNearbyChildren':\n\t\t\t\treturn existing;\n\t\t\tcase 'ChildrenBehind':\n\t\t\t\tvar behind = nearbyChildren.a;\n\t\t\t\treturn _Utils_ap(behind, existing);\n\t\t\tcase 'ChildrenInFront':\n\t\t\t\tvar inFront = nearbyChildren.a;\n\t\t\t\treturn _Utils_ap(existing, inFront);\n\t\t\tdefault:\n\t\t\t\tvar behind = nearbyChildren.a;\n\t\t\t\tvar inFront = nearbyChildren.b;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\tbehind,\n\t\t\t\t\t_Utils_ap(existing, inFront));\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$addKeyedChildren = F3(\n\tfunction (key, existing, nearbyChildren) {\n\t\tswitch (nearbyChildren.$) {\n\t\t\tcase 'NoNearbyChildren':\n\t\t\t\treturn existing;\n\t\t\tcase 'ChildrenBehind':\n\t\t\t\tvar behind = nearbyChildren.a;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\treturn _Utils_Tuple2(key, x);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbehind),\n\t\t\t\t\texisting);\n\t\t\tcase 'ChildrenInFront':\n\t\t\t\tvar inFront = nearbyChildren.a;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\texisting,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\treturn _Utils_Tuple2(key, x);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinFront));\n\t\t\tdefault:\n\t\t\t\tvar behind = nearbyChildren.a;\n\t\t\t\tvar inFront = nearbyChildren.b;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\treturn _Utils_Tuple2(key, x);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbehind),\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\texisting,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(key, x);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tinFront)));\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$AsParagraph = {$: 'AsParagraph'};\nvar $mdgriffith$elm_ui$Internal$Model$asParagraph = $mdgriffith$elm_ui$Internal$Model$AsParagraph;\nvar $mdgriffith$elm_ui$Internal$Flag$Flag = function (a) {\n\treturn {$: 'Flag', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Flag$Second = function (a) {\n\treturn {$: 'Second', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Flag$flag = function (i) {\n\treturn (i > 31) ? $mdgriffith$elm_ui$Internal$Flag$Second(1 << (i - 32)) : $mdgriffith$elm_ui$Internal$Flag$Flag(1 << i);\n};\nvar $mdgriffith$elm_ui$Internal$Flag$alignBottom = $mdgriffith$elm_ui$Internal$Flag$flag(41);\nvar $mdgriffith$elm_ui$Internal$Flag$alignRight = $mdgriffith$elm_ui$Internal$Flag$flag(40);\nvar $mdgriffith$elm_ui$Internal$Flag$centerX = $mdgriffith$elm_ui$Internal$Flag$flag(42);\nvar $mdgriffith$elm_ui$Internal$Flag$centerY = $mdgriffith$elm_ui$Internal$Flag$flag(43);\nvar $elm$html$Html$div = _VirtualDom_node('div');\nvar $mdgriffith$elm_ui$Internal$Model$lengthClassName = function (x) {\n\tswitch (x.$) {\n\t\tcase 'Px':\n\t\t\tvar px = x.a;\n\t\t\treturn $elm$core$String$fromInt(px) + 'px';\n\t\tcase 'Content':\n\t\t\treturn 'auto';\n\t\tcase 'Fill':\n\t\t\tvar i = x.a;\n\t\t\treturn $elm$core$String$fromInt(i) + 'fr';\n\t\tcase 'Min':\n\t\t\tvar min = x.a;\n\t\t\tvar len = x.b;\n\t\t\treturn 'min' + ($elm$core$String$fromInt(min) + $mdgriffith$elm_ui$Internal$Model$lengthClassName(len));\n\t\tdefault:\n\t\t\tvar max = x.a;\n\t\t\tvar len = x.b;\n\t\t\treturn 'max' + ($elm$core$String$fromInt(max) + $mdgriffith$elm_ui$Internal$Model$lengthClassName(len));\n\t}\n};\nvar $elm$core$Basics$round = _Basics_round;\nvar $mdgriffith$elm_ui$Internal$Model$floatClass = function (x) {\n\treturn $elm$core$String$fromInt(\n\t\t$elm$core$Basics$round(x * 255));\n};\nvar $mdgriffith$elm_ui$Internal$Model$transformClass = function (transform) {\n\tswitch (transform.$) {\n\t\tcase 'Untransformed':\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\tcase 'Moved':\n\t\t\tvar _v1 = transform.a;\n\t\t\tvar x = _v1.a;\n\t\t\tvar y = _v1.b;\n\t\t\tvar z = _v1.c;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t'mv-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(x) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(y) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(z))))));\n\t\tdefault:\n\t\t\tvar _v2 = transform.a;\n\t\t\tvar tx = _v2.a;\n\t\t\tvar ty = _v2.b;\n\t\t\tvar tz = _v2.c;\n\t\t\tvar _v3 = transform.b;\n\t\t\tvar sx = _v3.a;\n\t\t\tvar sy = _v3.b;\n\t\t\tvar sz = _v3.c;\n\t\t\tvar _v4 = transform.c;\n\t\t\tvar ox = _v4.a;\n\t\t\tvar oy = _v4.b;\n\t\t\tvar oz = _v4.c;\n\t\t\tvar angle = transform.d;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t'tfrm-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(tx) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(ty) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(tz) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sx) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sy) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sz) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(ox) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(oy) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(oz) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(angle))))))))))))))))))));\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$getStyleName = function (style) {\n\tswitch (style.$) {\n\t\tcase 'Shadows':\n\t\t\tvar name = style.a;\n\t\t\treturn name;\n\t\tcase 'Transparency':\n\t\t\tvar name = style.a;\n\t\t\tvar o = style.b;\n\t\t\treturn name;\n\t\tcase 'Style':\n\t\t\tvar _class = style.a;\n\t\t\treturn _class;\n\t\tcase 'FontFamily':\n\t\t\tvar name = style.a;\n\t\t\treturn name;\n\t\tcase 'FontSize':\n\t\t\tvar i = style.a;\n\t\t\treturn 'font-size-' + $elm$core$String$fromInt(i);\n\t\tcase 'Single':\n\t\t\tvar _class = style.a;\n\t\t\treturn _class;\n\t\tcase 'Colored':\n\t\t\tvar _class = style.a;\n\t\t\treturn _class;\n\t\tcase 'SpacingStyle':\n\t\t\tvar cls = style.a;\n\t\t\tvar x = style.b;\n\t\t\tvar y = style.c;\n\t\t\treturn cls;\n\t\tcase 'PaddingStyle':\n\t\t\tvar cls = style.a;\n\t\t\tvar top = style.b;\n\t\t\tvar right = style.c;\n\t\t\tvar bottom = style.d;\n\t\t\tvar left = style.e;\n\t\t\treturn cls;\n\t\tcase 'BorderWidth':\n\t\t\tvar cls = style.a;\n\t\t\tvar top = style.b;\n\t\t\tvar right = style.c;\n\t\t\tvar bottom = style.d;\n\t\t\tvar left = style.e;\n\t\t\treturn cls;\n\t\tcase 'GridTemplateStyle':\n\t\t\tvar template = style.a;\n\t\t\treturn 'grid-rows-' + (A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t'-',\n\t\t\t\tA2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.rows)) + ('-cols-' + (A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t'-',\n\t\t\t\tA2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.columns)) + ('-space-x-' + ($mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.a) + ('-space-y-' + $mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.b)))))));\n\t\tcase 'GridPosition':\n\t\t\tvar pos = style.a;\n\t\t\treturn 'gp grid-pos-' + ($elm$core$String$fromInt(pos.row) + ('-' + ($elm$core$String$fromInt(pos.col) + ('-' + ($elm$core$String$fromInt(pos.width) + ('-' + $elm$core$String$fromInt(pos.height)))))));\n\t\tcase 'PseudoSelector':\n\t\t\tvar selector = style.a;\n\t\t\tvar subStyle = style.b;\n\t\t\tvar name = function () {\n\t\t\t\tswitch (selector.$) {\n\t\t\t\t\tcase 'Focus':\n\t\t\t\t\t\treturn 'fs';\n\t\t\t\t\tcase 'Hover':\n\t\t\t\t\t\treturn 'hv';\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn 'act';\n\t\t\t\t}\n\t\t\t}();\n\t\t\treturn A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t' ',\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tfunction (sty) {\n\t\t\t\t\t\tvar _v1 = $mdgriffith$elm_ui$Internal$Model$getStyleName(sty);\n\t\t\t\t\t\tif (_v1 === '') {\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar styleName = _v1;\n\t\t\t\t\t\t\treturn styleName + ('-' + name);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tsubStyle));\n\t\tdefault:\n\t\t\tvar x = style.a;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t'',\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$transformClass(x));\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$reduceStyles = F2(\n\tfunction (style, nevermind) {\n\t\tvar cache = nevermind.a;\n\t\tvar existing = nevermind.b;\n\t\tvar styleName = $mdgriffith$elm_ui$Internal$Model$getStyleName(style);\n\t\treturn A2($elm$core$Set$member, styleName, cache) ? nevermind : _Utils_Tuple2(\n\t\t\tA2($elm$core$Set$insert, styleName, cache),\n\t\t\tA2($elm$core$List$cons, style, existing));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Property = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Property', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Style = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Style', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$dot = function (c) {\n\treturn '.' + c;\n};\nvar $mdgriffith$elm_ui$Internal$Model$formatColor = function (_v0) {\n\tvar red = _v0.a;\n\tvar green = _v0.b;\n\tvar blue = _v0.c;\n\tvar alpha = _v0.d;\n\treturn 'rgba(' + ($elm$core$String$fromInt(\n\t\t$elm$core$Basics$round(red * 255)) + ((',' + $elm$core$String$fromInt(\n\t\t$elm$core$Basics$round(green * 255))) + ((',' + $elm$core$String$fromInt(\n\t\t$elm$core$Basics$round(blue * 255))) + (',' + ($elm$core$String$fromFloat(alpha) + ')')))));\n};\nvar $mdgriffith$elm_ui$Internal$Model$formatBoxShadow = function (shadow) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t' ',\n\t\tA2(\n\t\t\t$elm$core$List$filterMap,\n\t\t\t$elm$core$Basics$identity,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tshadow.inset ? $elm$core$Maybe$Just('inset') : $elm$core$Maybe$Nothing,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t$elm$core$String$fromFloat(shadow.offset.a) + 'px'),\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t$elm$core$String$fromFloat(shadow.offset.b) + 'px'),\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t$elm$core$String$fromFloat(shadow.blur) + 'px'),\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t$elm$core$String$fromFloat(shadow.size) + 'px'),\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatColor(shadow.color))\n\t\t\t\t])));\n};\nvar $mdgriffith$elm_ui$Internal$Model$renderFocusStyle = function (focus) {\n\treturn _List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Style,\n\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.focusedWithin) + ':focus-within',\n\t\t\tA2(\n\t\t\t\t$elm$core$List$filterMap,\n\t\t\t\t$elm$core$Basics$identity,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction (color) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t'border-color',\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatColor(color));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfocus.borderColor),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction (color) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t'background-color',\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatColor(color));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfocus.backgroundColor),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction (shadow) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t'box-shadow',\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatBoxShadow(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tblur: shadow.blur,\n\t\t\t\t\t\t\t\t\t\tcolor: shadow.color,\n\t\t\t\t\t\t\t\t\t\tinset: false,\n\t\t\t\t\t\t\t\t\t\toffset: A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$Tuple$mapSecond,\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$Basics$toFloat,\n\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$Tuple$mapFirst, $elm$core$Basics$toFloat, shadow.offset)),\n\t\t\t\t\t\t\t\t\t\tsize: shadow.size\n\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfocus.shadow),\n\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'outline', 'none'))\n\t\t\t\t\t]))),\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Style,\n\t\t\t($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ':focus .focusable, ') + (($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + '.focusable:focus, ') + ('.ui-slide-bar:focus + ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ' .focusable-thumb'))),\n\t\t\tA2(\n\t\t\t\t$elm$core$List$filterMap,\n\t\t\t\t$elm$core$Basics$identity,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction (color) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t'border-color',\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatColor(color));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfocus.borderColor),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction (color) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t'background-color',\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatColor(color));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfocus.backgroundColor),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction (shadow) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t'box-shadow',\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatBoxShadow(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tblur: shadow.blur,\n\t\t\t\t\t\t\t\t\t\tcolor: shadow.color,\n\t\t\t\t\t\t\t\t\t\tinset: false,\n\t\t\t\t\t\t\t\t\t\toffset: A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$Tuple$mapSecond,\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$Basics$toFloat,\n\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$Tuple$mapFirst, $elm$core$Basics$toFloat, shadow.offset)),\n\t\t\t\t\t\t\t\t\t\tsize: shadow.size\n\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfocus.shadow),\n\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'outline', 'none'))\n\t\t\t\t\t])))\n\t\t]);\n};\nvar $elm$virtual_dom$VirtualDom$node = function (tag) {\n\treturn _VirtualDom_node(\n\t\t_VirtualDom_noScript(tag));\n};\nvar $elm$virtual_dom$VirtualDom$property = F2(\n\tfunction (key, value) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\t_VirtualDom_noInnerHtmlOrFormAction(key),\n\t\t\t_VirtualDom_noJavaScriptOrHtmlUri(value));\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$AllChildren = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'AllChildren', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$Batch = function (a) {\n\treturn {$: 'Batch', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Style$Child = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Child', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$Class = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Class', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$Descriptor = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Descriptor', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$Left = {$: 'Left'};\nvar $mdgriffith$elm_ui$Internal$Style$Prop = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Prop', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$Right = {$: 'Right'};\nvar $mdgriffith$elm_ui$Internal$Style$Self = function (a) {\n\treturn {$: 'Self', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Style$Supports = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Supports', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$Content = function (a) {\n\treturn {$: 'Content', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Style$Bottom = {$: 'Bottom'};\nvar $mdgriffith$elm_ui$Internal$Style$CenterX = {$: 'CenterX'};\nvar $mdgriffith$elm_ui$Internal$Style$CenterY = {$: 'CenterY'};\nvar $mdgriffith$elm_ui$Internal$Style$Top = {$: 'Top'};\nvar $mdgriffith$elm_ui$Internal$Style$alignments = _List_fromArray(\n\t[$mdgriffith$elm_ui$Internal$Style$Top, $mdgriffith$elm_ui$Internal$Style$Bottom, $mdgriffith$elm_ui$Internal$Style$Right, $mdgriffith$elm_ui$Internal$Style$Left, $mdgriffith$elm_ui$Internal$Style$CenterX, $mdgriffith$elm_ui$Internal$Style$CenterY]);\nvar $mdgriffith$elm_ui$Internal$Style$contentName = function (desc) {\n\tswitch (desc.a.$) {\n\t\tcase 'Top':\n\t\t\tvar _v1 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentTop);\n\t\tcase 'Bottom':\n\t\t\tvar _v2 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentBottom);\n\t\tcase 'Right':\n\t\t\tvar _v3 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentRight);\n\t\tcase 'Left':\n\t\t\tvar _v4 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentLeft);\n\t\tcase 'CenterX':\n\t\t\tvar _v5 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentCenterX);\n\t\tdefault:\n\t\t\tvar _v6 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY);\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Style$selfName = function (desc) {\n\tswitch (desc.a.$) {\n\t\tcase 'Top':\n\t\t\tvar _v1 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignTop);\n\t\tcase 'Bottom':\n\t\t\tvar _v2 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignBottom);\n\t\tcase 'Right':\n\t\t\tvar _v3 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignRight);\n\t\tcase 'Left':\n\t\t\tvar _v4 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignLeft);\n\t\tcase 'CenterX':\n\t\t\tvar _v5 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterX);\n\t\tdefault:\n\t\t\tvar _v6 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY);\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Style$describeAlignment = function (values) {\n\tvar createDescription = function (alignment) {\n\t\tvar _v0 = values(alignment);\n\t\tvar content = _v0.a;\n\t\tvar indiv = _v0.b;\n\t\treturn _List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$contentName(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Content(alignment)),\n\t\t\t\tcontent),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$selfName(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Self(alignment)),\n\t\t\t\t\t\tindiv)\n\t\t\t\t\t]))\n\t\t\t]);\n\t};\n\treturn $mdgriffith$elm_ui$Internal$Style$Batch(\n\t\tA2($elm$core$List$concatMap, createDescription, $mdgriffith$elm_ui$Internal$Style$alignments));\n};\nvar $mdgriffith$elm_ui$Internal$Style$elDescription = _List_fromArray(\n\t[\n\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),\n\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'column'),\n\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre'),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hasBehind),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '-1')\n\t\t\t\t\t]))\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.seButton),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'auto !important')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightContent),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthContent),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')\n\t\t\t])),\n\t\t$mdgriffith$elm_ui$Internal$Style$describeAlignment(\n\t\tfunction (alignment) {\n\t\t\tswitch (alignment.$) {\n\t\t\t\tcase 'Top':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', '0 !important')\n\t\t\t\t\t\t\t]));\n\t\t\t\tcase 'Bottom':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', '0 !important')\n\t\t\t\t\t\t\t]));\n\t\t\t\tcase 'Right':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')\n\t\t\t\t\t\t\t]));\n\t\t\t\tcase 'Left':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')\n\t\t\t\t\t\t\t]));\n\t\t\t\tcase 'CenterX':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')\n\t\t\t\t\t\t\t]));\n\t\t\t\tdefault:\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto'),\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')\n\t\t\t\t\t\t\t]));\n\t\t\t}\n\t\t})\n\t]);\nvar $mdgriffith$elm_ui$Internal$Style$gridAlignments = function (values) {\n\tvar createDescription = function (alignment) {\n\t\treturn _List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$selfName(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Self(alignment)),\n\t\t\t\t\t\tvalues(alignment))\n\t\t\t\t\t]))\n\t\t\t]);\n\t};\n\treturn $mdgriffith$elm_ui$Internal$Style$Batch(\n\t\tA2($elm$core$List$concatMap, createDescription, $mdgriffith$elm_ui$Internal$Style$alignments));\n};\nvar $mdgriffith$elm_ui$Internal$Style$Above = {$: 'Above'};\nvar $mdgriffith$elm_ui$Internal$Style$Behind = {$: 'Behind'};\nvar $mdgriffith$elm_ui$Internal$Style$Below = {$: 'Below'};\nvar $mdgriffith$elm_ui$Internal$Style$OnLeft = {$: 'OnLeft'};\nvar $mdgriffith$elm_ui$Internal$Style$OnRight = {$: 'OnRight'};\nvar $mdgriffith$elm_ui$Internal$Style$Within = {$: 'Within'};\nvar $mdgriffith$elm_ui$Internal$Style$locations = function () {\n\tvar loc = $mdgriffith$elm_ui$Internal$Style$Above;\n\tvar _v0 = function () {\n\t\tswitch (loc.$) {\n\t\t\tcase 'Above':\n\t\t\t\treturn _Utils_Tuple0;\n\t\t\tcase 'Below':\n\t\t\t\treturn _Utils_Tuple0;\n\t\t\tcase 'OnRight':\n\t\t\t\treturn _Utils_Tuple0;\n\t\t\tcase 'OnLeft':\n\t\t\t\treturn _Utils_Tuple0;\n\t\t\tcase 'Within':\n\t\t\t\treturn _Utils_Tuple0;\n\t\t\tdefault:\n\t\t\t\treturn _Utils_Tuple0;\n\t\t}\n\t}();\n\treturn _List_fromArray(\n\t\t[$mdgriffith$elm_ui$Internal$Style$Above, $mdgriffith$elm_ui$Internal$Style$Below, $mdgriffith$elm_ui$Internal$Style$OnRight, $mdgriffith$elm_ui$Internal$Style$OnLeft, $mdgriffith$elm_ui$Internal$Style$Within, $mdgriffith$elm_ui$Internal$Style$Behind]);\n}();\nvar $mdgriffith$elm_ui$Internal$Style$baseSheet = _List_fromArray(\n\t[\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t'html,body',\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'padding', '0'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0')\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t_Utils_ap(\n\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t_Utils_ap(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.imageContainer))),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t'img',\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'max-height', '100%'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'object-fit', 'cover')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t'img',\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'max-width', '100%'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'object-fit', 'cover')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ':focus',\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'outline', 'none')\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.root),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'min-height', '100%'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t_Utils_ap(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill)),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inFront),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.nearby),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'fixed'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.nearby),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'relative'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border', 'none'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$elDescription),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Batch(\n\t\t\t\tfunction (fn) {\n\t\t\t\t\treturn A2($elm$core$List$map, fn, $mdgriffith$elm_ui$Internal$Style$locations);\n\t\t\t\t}(\n\t\t\t\t\tfunction (loc) {\n\t\t\t\t\t\tswitch (loc.$) {\n\t\t\t\t\t\t\tcase 'Above':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.above),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'bottom', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')\n\t\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t'*',\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\tcase 'Below':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.below),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'bottom', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t'*',\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\tcase 'OnRight':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onRight),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t'*',\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\tcase 'OnLeft':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onLeft),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'right', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t'*',\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\tcase 'Within':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inFront),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t'*',\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t'*',\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}))\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'relative'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border', 'none'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '0'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'resize', 'none'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', 'inherit'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'box-sizing', 'border-box'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'padding', '0'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-width', '0'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'solid'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-size', 'inherit'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'color', 'inherit'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-family', 'inherit'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'line-height', '1'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', 'inherit'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'none'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'inherit'),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.wrapped),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-wrap', 'wrap')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.noTextSelection),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, '-moz-user-select', 'none'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, '-webkit-user-select', 'none'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, '-ms-user-select', 'none'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'user-select', 'none')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.cursorPointer),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'pointer')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.cursorText),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'text')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.passPointerEvents),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none !important')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.capturePointerEvents),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto !important')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.transparent),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.opaque),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.hover, $mdgriffith$elm_ui$Internal$Style$classes.transparent)) + ':hover',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.hover, $mdgriffith$elm_ui$Internal$Style$classes.opaque)) + ':hover',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.focus, $mdgriffith$elm_ui$Internal$Style$classes.transparent)) + ':focus',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.focus, $mdgriffith$elm_ui$Internal$Style$classes.opaque)) + ':focus',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.active, $mdgriffith$elm_ui$Internal$Style$classes.transparent)) + ':active',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.active, $mdgriffith$elm_ui$Internal$Style$classes.opaque)) + ':active',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.transition),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Prop,\n\t\t\t\t\t\t'transition',\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t', ',\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\t\t\treturn x + ' 160ms';\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t['transform', 'opacity', 'filter', 'background-color', 'color', 'font-size']))))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.scrollbars),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow', 'auto'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.scrollbarsX),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-x', 'auto'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.scrollbarsY),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-y', 'auto'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.column),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.clip),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow', 'hidden')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.clipX),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-x', 'hidden')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.clipY),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-y', 'hidden')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthContent),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', 'auto')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderNone),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-width', '0')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderDashed),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'dashed')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderDotted),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'dotted')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderSolid),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'solid')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-block')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputText),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'line-height', '1.05'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'background', 'transparent'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'inherit')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$elDescription),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', '0%'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthExact),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.link),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFillPortion),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.container),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t'u:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerRight,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterX),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-left', 'auto !important')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:last-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterX),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-right', 'auto !important')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:only-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:last-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX + ' ~ u'),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t'u:first-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerRight + (' ~ s.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX)),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$describeAlignment(\n\t\t\t\t\t\tfunction (alignment) {\n\t\t\t\t\t\t\tswitch (alignment.$) {\n\t\t\t\t\t\t\t\tcase 'Top':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'Bottom':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'Right':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil);\n\t\t\t\t\t\t\t\tcase 'Left':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil);\n\t\t\t\t\t\t\t\tcase 'CenterX':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.spaceEvenly),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'space-between')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputLabel),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'baseline')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.column),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'column'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', '0px'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'min-height', 'min-content'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightExact),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthContent),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t'u:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerBottom,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', '0 !important')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:last-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important'),\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', '0 !important')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:only-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:last-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY + ' ~ u'),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t'u:first-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerBottom + (' ~ s.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY)),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$describeAlignment(\n\t\t\t\t\t\tfunction (alignment) {\n\t\t\t\t\t\t\tswitch (alignment.$) {\n\t\t\t\t\t\t\t\tcase 'Top':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'Bottom':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'Right':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'Left':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'CenterX':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.container),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.spaceEvenly),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'space-between')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.grid),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', '-ms-grid'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t'.gp',\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Supports,\n\t\t\t\t\t\t_Utils_Tuple2('display', 'grid'),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t_Utils_Tuple2('display', 'grid')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$gridAlignments(\n\t\t\t\t\t\tfunction (alignment) {\n\t\t\t\t\t\t\tswitch (alignment.$) {\n\t\t\t\t\t\t\t\tcase 'Top':\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\tcase 'Bottom':\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\tcase 'Right':\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\tcase 'Left':\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\tcase 'CenterX':\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')\n\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')\n\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.page),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any + ':first-child'),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.any + ($mdgriffith$elm_ui$Internal$Style$selfName(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Self($mdgriffith$elm_ui$Internal$Style$Left)) + (':first-child + .' + $mdgriffith$elm_ui$Internal$Style$classes.any))),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.any + ($mdgriffith$elm_ui$Internal$Style$selfName(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Self($mdgriffith$elm_ui$Internal$Style$Right)) + (':first-child + .' + $mdgriffith$elm_ui$Internal$Style$classes.any))),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$describeAlignment(\n\t\t\t\t\t\tfunction (alignment) {\n\t\t\t\t\t\t\tswitch (alignment.$) {\n\t\t\t\t\t\t\t\tcase 'Top':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t\tcase 'Bottom':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t\tcase 'Right':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'right'),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t\t\t\t'::after',\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', '\\\"\\\"'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'table'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'clear', 'both')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'Left':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'left'),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t\t\t\t'::after',\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', '\\\"\\\"'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'table'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'clear', 'both')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'CenterX':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultiline),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'background-color', 'transparent')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineWrapper),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineParent),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'text'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineFiller),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'color', 'transparent')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.paragraph),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-wrap', 'break-word'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hasBehind),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '-1')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$AllChildren,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$AllChildren,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.paragraph),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t'::after',\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', 'none')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t'::before',\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', 'none')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$AllChildren,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthExact),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-block')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inFront),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.above),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.below),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onRight),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onLeft),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.column),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-flex')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.grid),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-grid')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$describeAlignment(\n\t\t\t\t\t\tfunction (alignment) {\n\t\t\t\t\t\t\tswitch (alignment.$) {\n\t\t\t\t\t\t\t\tcase 'Top':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t\tcase 'Bottom':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t\tcase 'Right':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'right')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'Left':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'left')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'CenterX':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t'.hidden',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'none')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textThin),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '100')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textExtraLight),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '200')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textLight),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '300')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textNormalWeight),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '400')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textMedium),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '500')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textSemiBold),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '600')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.bold),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '700')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textExtraBold),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '800')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textHeavy),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '900')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.italic),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'italic')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.strike),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'line-through')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.underline),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'underline'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip-ink', 'auto'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip', 'ink')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t_Utils_ap(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.underline),\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.strike)),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'line-through underline'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip-ink', 'auto'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip', 'ink')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textUnitalicized),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'normal')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textJustify),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'justify')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textJustifyAll),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'justify-all')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textCenter),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'center')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textRight),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'right')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textLeft),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'left')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t'.modal',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'fixed'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none')\n\t\t\t\t\t]))\n\t\t\t]))\n\t]);\nvar $mdgriffith$elm_ui$Internal$Style$fontVariant = function (_var) {\n\treturn _List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t\t'.v-' + _var,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', '\\\"' + (_var + '\\\"'))\n\t\t\t\t])),\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t\t'.v-' + (_var + '-off'),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', '\\\"' + (_var + '\\\" 0'))\n\t\t\t\t]))\n\t\t]);\n};\nvar $mdgriffith$elm_ui$Internal$Style$commonValues = $elm$core$List$concat(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (x) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t\t\t\t'.border-' + $elm$core$String$fromInt(x),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Prop,\n\t\t\t\t\t\t\t'border-width',\n\t\t\t\t\t\t\t$elm$core$String$fromInt(x) + 'px')\n\t\t\t\t\t\t]));\n\t\t\t},\n\t\t\tA2($elm$core$List$range, 0, 6)),\n\t\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (i) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t\t\t\t'.font-size-' + $elm$core$String$fromInt(i),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Prop,\n\t\t\t\t\t\t\t'font-size',\n\t\t\t\t\t\t\t$elm$core$String$fromInt(i) + 'px')\n\t\t\t\t\t\t]));\n\t\t\t},\n\t\t\tA2($elm$core$List$range, 8, 32)),\n\t\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (i) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t\t\t\t'.p-' + $elm$core$String$fromInt(i),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Prop,\n\t\t\t\t\t\t\t'padding',\n\t\t\t\t\t\t\t$elm$core$String$fromInt(i) + 'px')\n\t\t\t\t\t\t]));\n\t\t\t},\n\t\t\tA2($elm$core$List$range, 0, 24)),\n\t\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t\t\t'.v-smcp',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-variant', 'small-caps')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t\t\t'.v-smcp-off',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-variant', 'normal')\n\t\t\t\t\t]))\n\t\t\t]),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('zero'),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('onum'),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('liga'),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('dlig'),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('ordn'),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('tnum'),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('afrc'),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('frac')\n\t\t]));\nvar $mdgriffith$elm_ui$Internal$Style$explainer = '\\n.explain {\\n    border: 6px solid rgb(174, 121, 15) !important;\\n}\\n.explain > .' + ($mdgriffith$elm_ui$Internal$Style$classes.any + (' {\\n    border: 4px dashed rgb(0, 151, 167) !important;\\n}\\n\\n.ctr {\\n    border: none !important;\\n}\\n.explain > .ctr > .' + ($mdgriffith$elm_ui$Internal$Style$classes.any + ' {\\n    border: 4px dashed rgb(0, 151, 167) !important;\\n}\\n\\n')));\nvar $mdgriffith$elm_ui$Internal$Style$inputTextReset = '\\ninput[type=\"search\"],\\ninput[type=\"search\"]::-webkit-search-decoration,\\ninput[type=\"search\"]::-webkit-search-cancel-button,\\ninput[type=\"search\"]::-webkit-search-results-button,\\ninput[type=\"search\"]::-webkit-search-results-decoration {\\n  -webkit-appearance:none;\\n}\\n';\nvar $mdgriffith$elm_ui$Internal$Style$sliderReset = '\\ninput[type=range] {\\n  -webkit-appearance: none; \\n  background: transparent;\\n  position:absolute;\\n  left:0;\\n  top:0;\\n  z-index:10;\\n  width: 100%;\\n  outline: dashed 1px;\\n  height: 100%;\\n  opacity: 0;\\n}\\n';\nvar $mdgriffith$elm_ui$Internal$Style$thumbReset = '\\ninput[type=range]::-webkit-slider-thumb {\\n    -webkit-appearance: none;\\n    opacity: 0.5;\\n    width: 80px;\\n    height: 80px;\\n    background-color: black;\\n    border:none;\\n    border-radius: 5px;\\n}\\ninput[type=range]::-moz-range-thumb {\\n    opacity: 0.5;\\n    width: 80px;\\n    height: 80px;\\n    background-color: black;\\n    border:none;\\n    border-radius: 5px;\\n}\\ninput[type=range]::-ms-thumb {\\n    opacity: 0.5;\\n    width: 80px;\\n    height: 80px;\\n    background-color: black;\\n    border:none;\\n    border-radius: 5px;\\n}\\ninput[type=range][orient=vertical]{\\n    writing-mode: bt-lr; /* IE */\\n    -webkit-appearance: slider-vertical;  /* WebKit */\\n}\\n';\nvar $mdgriffith$elm_ui$Internal$Style$trackReset = '\\ninput[type=range]::-moz-range-track {\\n    background: transparent;\\n    cursor: pointer;\\n}\\ninput[type=range]::-ms-track {\\n    background: transparent;\\n    cursor: pointer;\\n}\\ninput[type=range]::-webkit-slider-runnable-track {\\n    background: transparent;\\n    cursor: pointer;\\n}\\n';\nvar $mdgriffith$elm_ui$Internal$Style$overrides = '@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row) + (' > ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + (' { flex-basis: auto !important; } ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row) + (' > ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.container) + (' { flex-basis: auto !important; }}' + ($mdgriffith$elm_ui$Internal$Style$inputTextReset + ($mdgriffith$elm_ui$Internal$Style$sliderReset + ($mdgriffith$elm_ui$Internal$Style$trackReset + ($mdgriffith$elm_ui$Internal$Style$thumbReset + $mdgriffith$elm_ui$Internal$Style$explainer)))))))))))))));\nvar $mdgriffith$elm_ui$Internal$Style$Intermediate = function (a) {\n\treturn {$: 'Intermediate', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Style$emptyIntermediate = F2(\n\tfunction (selector, closing) {\n\t\treturn $mdgriffith$elm_ui$Internal$Style$Intermediate(\n\t\t\t{closing: closing, others: _List_Nil, props: _List_Nil, selector: selector});\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$renderRules = F2(\n\tfunction (_v0, rulesToRender) {\n\t\tvar parent = _v0.a;\n\t\tvar generateIntermediates = F2(\n\t\t\tfunction (rule, rendered) {\n\t\t\t\tswitch (rule.$) {\n\t\t\t\t\tcase 'Prop':\n\t\t\t\t\t\tvar name = rule.a;\n\t\t\t\t\t\tvar val = rule.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tprops: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(name, val),\n\t\t\t\t\t\t\t\t\trendered.props)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'Supports':\n\t\t\t\t\t\tvar _v2 = rule.a;\n\t\t\t\t\t\tvar prop = _v2.a;\n\t\t\t\t\t\tvar value = _v2.b;\n\t\t\t\t\t\tvar props = rule.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tothers: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Intermediate(\n\t\t\t\t\t\t\t\t\t\t{closing: '\\n}', others: _List_Nil, props: props, selector: '@supports (' + (prop + (':' + (value + (') {' + parent.selector))))}),\n\t\t\t\t\t\t\t\t\trendered.others)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'Adjacent':\n\t\t\t\t\t\tvar selector = rule.a;\n\t\t\t\t\t\tvar adjRules = rule.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tothers: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$renderRules,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector + (' + ' + selector), ''),\n\t\t\t\t\t\t\t\t\t\tadjRules),\n\t\t\t\t\t\t\t\t\trendered.others)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'Child':\n\t\t\t\t\t\tvar child = rule.a;\n\t\t\t\t\t\tvar childRules = rule.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tothers: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$renderRules,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector + (' > ' + child), ''),\n\t\t\t\t\t\t\t\t\t\tchildRules),\n\t\t\t\t\t\t\t\t\trendered.others)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'AllChildren':\n\t\t\t\t\t\tvar child = rule.a;\n\t\t\t\t\t\tvar childRules = rule.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tothers: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$renderRules,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector + (' ' + child), ''),\n\t\t\t\t\t\t\t\t\t\tchildRules),\n\t\t\t\t\t\t\t\t\trendered.others)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'Descriptor':\n\t\t\t\t\t\tvar descriptor = rule.a;\n\t\t\t\t\t\tvar descriptorRules = rule.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tothers: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$renderRules,\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$emptyIntermediate,\n\t\t\t\t\t\t\t\t\t\t\t_Utils_ap(parent.selector, descriptor),\n\t\t\t\t\t\t\t\t\t\t\t''),\n\t\t\t\t\t\t\t\t\t\tdescriptorRules),\n\t\t\t\t\t\t\t\t\trendered.others)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar batched = rule.a;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tothers: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$renderRules,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector, ''),\n\t\t\t\t\t\t\t\t\t\tbatched),\n\t\t\t\t\t\t\t\t\trendered.others)\n\t\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\treturn $mdgriffith$elm_ui$Internal$Style$Intermediate(\n\t\t\tA3($elm$core$List$foldr, generateIntermediates, parent, rulesToRender));\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$renderCompact = function (styleClasses) {\n\tvar renderValues = function (values) {\n\t\treturn $elm$core$String$concat(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tfunction (_v3) {\n\t\t\t\t\tvar x = _v3.a;\n\t\t\t\t\tvar y = _v3.b;\n\t\t\t\t\treturn x + (':' + (y + ';'));\n\t\t\t\t},\n\t\t\t\tvalues));\n\t};\n\tvar renderClass = function (rule) {\n\t\tvar _v2 = rule.props;\n\t\tif (!_v2.b) {\n\t\t\treturn '';\n\t\t} else {\n\t\t\treturn rule.selector + ('{' + (renderValues(rule.props) + (rule.closing + '}')));\n\t\t}\n\t};\n\tvar renderIntermediate = function (_v0) {\n\t\tvar rule = _v0.a;\n\t\treturn _Utils_ap(\n\t\t\trenderClass(rule),\n\t\t\t$elm$core$String$concat(\n\t\t\t\tA2($elm$core$List$map, renderIntermediate, rule.others)));\n\t};\n\treturn $elm$core$String$concat(\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\trenderIntermediate,\n\t\t\tA3(\n\t\t\t\t$elm$core$List$foldr,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (_v1, existing) {\n\t\t\t\t\t\tvar name = _v1.a;\n\t\t\t\t\t\tvar styleRules = _v1.b;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$renderRules,\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, name, ''),\n\t\t\t\t\t\t\t\tstyleRules),\n\t\t\t\t\t\t\texisting);\n\t\t\t\t\t}),\n\t\t\t\t_List_Nil,\n\t\t\t\tstyleClasses)));\n};\nvar $mdgriffith$elm_ui$Internal$Style$rules = _Utils_ap(\n\t$mdgriffith$elm_ui$Internal$Style$overrides,\n\t$mdgriffith$elm_ui$Internal$Style$renderCompact(\n\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Style$baseSheet, $mdgriffith$elm_ui$Internal$Style$commonValues)));\nvar $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar $mdgriffith$elm_ui$Internal$Model$staticRoot = function (opts) {\n\tvar _v0 = opts.mode;\n\tswitch (_v0.$) {\n\t\tcase 'Layout':\n\t\t\treturn A3(\n\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t'div',\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\t\t'style',\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$text($mdgriffith$elm_ui$Internal$Style$rules)\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]));\n\t\tcase 'NoStaticStyleSheet':\n\t\t\treturn $elm$virtual_dom$VirtualDom$text('');\n\t\tdefault:\n\t\t\treturn A3(\n\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t'elm-ui-static-rules',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$property,\n\t\t\t\t\t\t'rules',\n\t\t\t\t\t\t$elm$json$Json$Encode$string($mdgriffith$elm_ui$Internal$Style$rules))\n\t\t\t\t\t]),\n\t\t\t\t_List_Nil);\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$fontName = function (font) {\n\tswitch (font.$) {\n\t\tcase 'Serif':\n\t\t\treturn 'serif';\n\t\tcase 'SansSerif':\n\t\t\treturn 'sans-serif';\n\t\tcase 'Monospace':\n\t\t\treturn 'monospace';\n\t\tcase 'Typeface':\n\t\t\tvar name = font.a;\n\t\t\treturn '\\\"' + (name + '\\\"');\n\t\tcase 'ImportFont':\n\t\t\tvar name = font.a;\n\t\t\tvar url = font.b;\n\t\t\treturn '\\\"' + (name + '\\\"');\n\t\tdefault:\n\t\t\tvar name = font.a.name;\n\t\t\treturn '\\\"' + (name + '\\\"');\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$isSmallCaps = function (_var) {\n\tswitch (_var.$) {\n\t\tcase 'VariantActive':\n\t\t\tvar name = _var.a;\n\t\t\treturn name === 'smcp';\n\t\tcase 'VariantOff':\n\t\t\tvar name = _var.a;\n\t\t\treturn false;\n\t\tdefault:\n\t\t\tvar name = _var.a;\n\t\t\tvar index = _var.b;\n\t\t\treturn (name === 'smcp') && (index === 1);\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$hasSmallCaps = function (typeface) {\n\tif (typeface.$ === 'FontWith') {\n\t\tvar font = typeface.a;\n\t\treturn A2($elm$core$List$any, $mdgriffith$elm_ui$Internal$Model$isSmallCaps, font.variants);\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$renderProps = F3(\n\tfunction (force, _v0, existing) {\n\t\tvar key = _v0.a;\n\t\tvar val = _v0.b;\n\t\treturn force ? (existing + ('\\n  ' + (key + (': ' + (val + ' !important;'))))) : (existing + ('\\n  ' + (key + (': ' + (val + ';')))));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$renderStyle = F4(\n\tfunction (options, maybePseudo, selector, props) {\n\t\tif (maybePseudo.$ === 'Nothing') {\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tselector + ('{' + (A3(\n\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderProps(false),\n\t\t\t\t\t'',\n\t\t\t\t\tprops) + '\\n}'))\n\t\t\t\t]);\n\t\t} else {\n\t\t\tvar pseudo = maybePseudo.a;\n\t\t\tswitch (pseudo.$) {\n\t\t\t\tcase 'Hover':\n\t\t\t\t\tvar _v2 = options.hover;\n\t\t\t\t\tswitch (_v2.$) {\n\t\t\t\t\t\tcase 'NoHover':\n\t\t\t\t\t\t\treturn _List_Nil;\n\t\t\t\t\t\tcase 'ForceHover':\n\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tselector + ('-hv {' + (A3(\n\t\t\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderProps(true),\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\tprops) + '\\n}'))\n\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tselector + ('-hv:hover {' + (A3(\n\t\t\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderProps(false),\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\tprops) + '\\n}'))\n\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\tcase 'Focus':\n\t\t\t\t\tvar renderedProps = A3(\n\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderProps(false),\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tprops);\n\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tselector + ('-fs:focus {' + (renderedProps + '\\n}')),\n\t\t\t\t\t\t\t('.' + ($mdgriffith$elm_ui$Internal$Style$classes.any + (':focus ' + (selector + '-fs  {')))) + (renderedProps + '\\n}'),\n\t\t\t\t\t\t\t(selector + '-fs:focus-within {') + (renderedProps + '\\n}'),\n\t\t\t\t\t\t\t('.ui-slide-bar:focus + ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + (' .focusable-thumb' + (selector + '-fs {')))) + (renderedProps + '\\n}')\n\t\t\t\t\t\t]);\n\t\t\t\tdefault:\n\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tselector + ('-act:active {' + (A3(\n\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderProps(false),\n\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\tprops) + '\\n}'))\n\t\t\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$renderVariant = function (_var) {\n\tswitch (_var.$) {\n\t\tcase 'VariantActive':\n\t\t\tvar name = _var.a;\n\t\t\treturn '\\\"' + (name + '\\\"');\n\t\tcase 'VariantOff':\n\t\t\tvar name = _var.a;\n\t\t\treturn '\\\"' + (name + '\\\" 0');\n\t\tdefault:\n\t\t\tvar name = _var.a;\n\t\t\tvar index = _var.b;\n\t\t\treturn '\\\"' + (name + ('\\\" ' + $elm$core$String$fromInt(index)));\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$renderVariants = function (typeface) {\n\tif (typeface.$ === 'FontWith') {\n\t\tvar font = typeface.a;\n\t\treturn $elm$core$Maybe$Just(\n\t\t\tA2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t', ',\n\t\t\t\tA2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$renderVariant, font.variants)));\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$transformValue = function (transform) {\n\tswitch (transform.$) {\n\t\tcase 'Untransformed':\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\tcase 'Moved':\n\t\t\tvar _v1 = transform.a;\n\t\t\tvar x = _v1.a;\n\t\t\tvar y = _v1.b;\n\t\t\tvar z = _v1.c;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t'translate3d(' + ($elm$core$String$fromFloat(x) + ('px, ' + ($elm$core$String$fromFloat(y) + ('px, ' + ($elm$core$String$fromFloat(z) + 'px)'))))));\n\t\tdefault:\n\t\t\tvar _v2 = transform.a;\n\t\t\tvar tx = _v2.a;\n\t\t\tvar ty = _v2.b;\n\t\t\tvar tz = _v2.c;\n\t\t\tvar _v3 = transform.b;\n\t\t\tvar sx = _v3.a;\n\t\t\tvar sy = _v3.b;\n\t\t\tvar sz = _v3.c;\n\t\t\tvar _v4 = transform.c;\n\t\t\tvar ox = _v4.a;\n\t\t\tvar oy = _v4.b;\n\t\t\tvar oz = _v4.c;\n\t\t\tvar angle = transform.d;\n\t\t\tvar translate = 'translate3d(' + ($elm$core$String$fromFloat(tx) + ('px, ' + ($elm$core$String$fromFloat(ty) + ('px, ' + ($elm$core$String$fromFloat(tz) + 'px)')))));\n\t\t\tvar scale = 'scale3d(' + ($elm$core$String$fromFloat(sx) + (', ' + ($elm$core$String$fromFloat(sy) + (', ' + ($elm$core$String$fromFloat(sz) + ')')))));\n\t\t\tvar rotate = 'rotate3d(' + ($elm$core$String$fromFloat(ox) + (', ' + ($elm$core$String$fromFloat(oy) + (', ' + ($elm$core$String$fromFloat(oz) + (', ' + ($elm$core$String$fromFloat(angle) + 'rad)')))))));\n\t\t\treturn $elm$core$Maybe$Just(translate + (' ' + (scale + (' ' + rotate))));\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$renderStyleRule = F3(\n\tfunction (options, rule, maybePseudo) {\n\t\tswitch (rule.$) {\n\t\t\tcase 'Style':\n\t\t\t\tvar selector = rule.a;\n\t\t\t\tvar props = rule.b;\n\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, selector, props);\n\t\t\tcase 'Shadows':\n\t\t\t\tvar name = rule.a;\n\t\t\t\tvar prop = rule.b;\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\toptions,\n\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t'.' + name,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'box-shadow', prop)\n\t\t\t\t\t\t]));\n\t\t\tcase 'Transparency':\n\t\t\t\tvar name = rule.a;\n\t\t\t\tvar transparency = rule.b;\n\t\t\t\tvar opacity = A2(\n\t\t\t\t\t$elm$core$Basics$max,\n\t\t\t\t\t0,\n\t\t\t\t\tA2($elm$core$Basics$min, 1, 1 - transparency));\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\toptions,\n\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t'.' + name,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t'opacity',\n\t\t\t\t\t\t\t$elm$core$String$fromFloat(opacity))\n\t\t\t\t\t\t]));\n\t\t\tcase 'FontSize':\n\t\t\t\tvar i = rule.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\toptions,\n\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t'.font-size-' + $elm$core$String$fromInt(i),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t'font-size',\n\t\t\t\t\t\t\t$elm$core$String$fromInt(i) + 'px')\n\t\t\t\t\t\t]));\n\t\t\tcase 'FontFamily':\n\t\t\t\tvar name = rule.a;\n\t\t\t\tvar typefaces = rule.b;\n\t\t\t\tvar features = A2(\n\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t', ',\n\t\t\t\t\tA2($elm$core$List$filterMap, $mdgriffith$elm_ui$Internal$Model$renderVariants, typefaces));\n\t\t\t\tvar families = _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t'font-family',\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t', ',\n\t\t\t\t\t\t\tA2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$fontName, typefaces))),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'font-feature-settings', features),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t'font-variant',\n\t\t\t\t\t\tA2($elm$core$List$any, $mdgriffith$elm_ui$Internal$Model$hasSmallCaps, typefaces) ? 'small-caps' : 'normal')\n\t\t\t\t\t]);\n\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, '.' + name, families);\n\t\t\tcase 'Single':\n\t\t\t\tvar _class = rule.a;\n\t\t\t\tvar prop = rule.b;\n\t\t\t\tvar val = rule.c;\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\toptions,\n\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t'.' + _class,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, prop, val)\n\t\t\t\t\t\t]));\n\t\t\tcase 'Colored':\n\t\t\t\tvar _class = rule.a;\n\t\t\t\tvar prop = rule.b;\n\t\t\t\tvar color = rule.c;\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\toptions,\n\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t'.' + _class,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\tprop,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatColor(color))\n\t\t\t\t\t\t]));\n\t\t\tcase 'SpacingStyle':\n\t\t\t\tvar cls = rule.a;\n\t\t\t\tvar x = rule.b;\n\t\t\t\tvar y = rule.c;\n\t\t\t\tvar yPx = $elm$core$String$fromInt(y) + 'px';\n\t\t\t\tvar xPx = $elm$core$String$fromInt(x) + 'px';\n\t\t\t\tvar single = '.' + $mdgriffith$elm_ui$Internal$Style$classes.single;\n\t\t\t\tvar row = '.' + $mdgriffith$elm_ui$Internal$Style$classes.row;\n\t\t\t\tvar wrappedRow = '.' + ($mdgriffith$elm_ui$Internal$Style$classes.wrapped + row);\n\t\t\t\tvar right = '.' + $mdgriffith$elm_ui$Internal$Style$classes.alignRight;\n\t\t\t\tvar paragraph = '.' + $mdgriffith$elm_ui$Internal$Style$classes.paragraph;\n\t\t\t\tvar page = '.' + $mdgriffith$elm_ui$Internal$Style$classes.page;\n\t\t\t\tvar left = '.' + $mdgriffith$elm_ui$Internal$Style$classes.alignLeft;\n\t\t\t\tvar halfY = $elm$core$String$fromFloat(y / 2) + 'px';\n\t\t\t\tvar halfX = $elm$core$String$fromFloat(x / 2) + 'px';\n\t\t\t\tvar column = '.' + $mdgriffith$elm_ui$Internal$Style$classes.column;\n\t\t\t\tvar _class = '.' + cls;\n\t\t\t\tvar any = '.' + $mdgriffith$elm_ui$Internal$Style$classes.any;\n\t\t\t\treturn $elm$core$List$concat(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (row + (' > ' + (any + (' + ' + any)))),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (wrappedRow + (' > ' + any)),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin', halfY + (' ' + halfX))\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (column + (' > ' + (any + (' + ' + any)))),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-top', yPx)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (page + (' > ' + (any + (' + ' + any)))),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-top', yPx)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (page + (' > ' + left)),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-right', xPx)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (page + (' > ' + right)),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_Utils_ap(_class, paragraph),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t\t'line-height',\n\t\t\t\t\t\t\t\t\t'calc(1em + ' + ($elm$core$String$fromInt(y) + 'px)'))\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t'textarea' + (any + _class),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t\t'line-height',\n\t\t\t\t\t\t\t\t\t'calc(1em + ' + ($elm$core$String$fromInt(y) + 'px)')),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t\t'height',\n\t\t\t\t\t\t\t\t\t'calc(100% + ' + ($elm$core$String$fromInt(y) + 'px)'))\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (paragraph + (' > ' + left)),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-right', xPx)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (paragraph + (' > ' + right)),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (paragraph + '::after'),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'content', '\\'\\''),\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'display', 'block'),\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'height', '0'),\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'width', '0'),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t\t'margin-top',\n\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt((-1) * ((y / 2) | 0)) + 'px')\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (paragraph + '::before'),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'content', '\\'\\''),\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'display', 'block'),\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'height', '0'),\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'width', '0'),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t\t'margin-bottom',\n\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt((-1) * ((y / 2) | 0)) + 'px')\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t]));\n\t\t\tcase 'PaddingStyle':\n\t\t\t\tvar cls = rule.a;\n\t\t\t\tvar top = rule.b;\n\t\t\t\tvar right = rule.c;\n\t\t\t\tvar bottom = rule.d;\n\t\t\t\tvar left = rule.e;\n\t\t\t\tvar _class = '.' + cls;\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\toptions,\n\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t_class,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t'padding',\n\t\t\t\t\t\t\t$elm$core$String$fromFloat(top) + ('px ' + ($elm$core$String$fromFloat(right) + ('px ' + ($elm$core$String$fromFloat(bottom) + ('px ' + ($elm$core$String$fromFloat(left) + 'px')))))))\n\t\t\t\t\t\t]));\n\t\t\tcase 'BorderWidth':\n\t\t\t\tvar cls = rule.a;\n\t\t\t\tvar top = rule.b;\n\t\t\t\tvar right = rule.c;\n\t\t\t\tvar bottom = rule.d;\n\t\t\t\tvar left = rule.e;\n\t\t\t\tvar _class = '.' + cls;\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\toptions,\n\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t_class,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t'border-width',\n\t\t\t\t\t\t\t$elm$core$String$fromInt(top) + ('px ' + ($elm$core$String$fromInt(right) + ('px ' + ($elm$core$String$fromInt(bottom) + ('px ' + ($elm$core$String$fromInt(left) + 'px')))))))\n\t\t\t\t\t\t]));\n\t\t\tcase 'GridTemplateStyle':\n\t\t\t\tvar template = rule.a;\n\t\t\t\tvar toGridLengthHelper = F3(\n\t\t\t\t\tfunction (minimum, maximum, x) {\n\t\t\t\t\t\ttoGridLengthHelper:\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\tswitch (x.$) {\n\t\t\t\t\t\t\t\tcase 'Px':\n\t\t\t\t\t\t\t\t\tvar px = x.a;\n\t\t\t\t\t\t\t\t\treturn $elm$core$String$fromInt(px) + 'px';\n\t\t\t\t\t\t\t\tcase 'Content':\n\t\t\t\t\t\t\t\t\tvar _v2 = _Utils_Tuple2(minimum, maximum);\n\t\t\t\t\t\t\t\t\tif (_v2.a.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\tif (_v2.b.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\t\tvar _v3 = _v2.a;\n\t\t\t\t\t\t\t\t\t\t\tvar _v4 = _v2.b;\n\t\t\t\t\t\t\t\t\t\t\treturn 'max-content';\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar _v6 = _v2.a;\n\t\t\t\t\t\t\t\t\t\t\tvar maxSize = _v2.b.a;\n\t\t\t\t\t\t\t\t\t\t\treturn 'minmax(max-content, ' + ($elm$core$String$fromInt(maxSize) + 'px)');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tif (_v2.b.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\t\tvar minSize = _v2.a.a;\n\t\t\t\t\t\t\t\t\t\t\tvar _v5 = _v2.b;\n\t\t\t\t\t\t\t\t\t\t\treturn 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + 'max-content)'));\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar minSize = _v2.a.a;\n\t\t\t\t\t\t\t\t\t\t\tvar maxSize = _v2.b.a;\n\t\t\t\t\t\t\t\t\t\t\treturn 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(maxSize) + 'px)')));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'Fill':\n\t\t\t\t\t\t\t\t\tvar i = x.a;\n\t\t\t\t\t\t\t\t\tvar _v7 = _Utils_Tuple2(minimum, maximum);\n\t\t\t\t\t\t\t\t\tif (_v7.a.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\tif (_v7.b.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\t\tvar _v8 = _v7.a;\n\t\t\t\t\t\t\t\t\t\t\tvar _v9 = _v7.b;\n\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$String$fromInt(i) + 'fr';\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar _v11 = _v7.a;\n\t\t\t\t\t\t\t\t\t\t\tvar maxSize = _v7.b.a;\n\t\t\t\t\t\t\t\t\t\t\treturn 'minmax(max-content, ' + ($elm$core$String$fromInt(maxSize) + 'px)');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tif (_v7.b.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\t\tvar minSize = _v7.a.a;\n\t\t\t\t\t\t\t\t\t\t\tvar _v10 = _v7.b;\n\t\t\t\t\t\t\t\t\t\t\treturn 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(i) + ('fr' + 'fr)'))));\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar minSize = _v7.a.a;\n\t\t\t\t\t\t\t\t\t\t\tvar maxSize = _v7.b.a;\n\t\t\t\t\t\t\t\t\t\t\treturn 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(maxSize) + 'px)')));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'Min':\n\t\t\t\t\t\t\t\t\tvar m = x.a;\n\t\t\t\t\t\t\t\t\tvar len = x.b;\n\t\t\t\t\t\t\t\t\tvar $temp$minimum = $elm$core$Maybe$Just(m),\n\t\t\t\t\t\t\t\t\t\t$temp$maximum = maximum,\n\t\t\t\t\t\t\t\t\t\t$temp$x = len;\n\t\t\t\t\t\t\t\t\tminimum = $temp$minimum;\n\t\t\t\t\t\t\t\t\tmaximum = $temp$maximum;\n\t\t\t\t\t\t\t\t\tx = $temp$x;\n\t\t\t\t\t\t\t\t\tcontinue toGridLengthHelper;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tvar m = x.a;\n\t\t\t\t\t\t\t\t\tvar len = x.b;\n\t\t\t\t\t\t\t\t\tvar $temp$minimum = minimum,\n\t\t\t\t\t\t\t\t\t\t$temp$maximum = $elm$core$Maybe$Just(m),\n\t\t\t\t\t\t\t\t\t\t$temp$x = len;\n\t\t\t\t\t\t\t\t\tminimum = $temp$minimum;\n\t\t\t\t\t\t\t\t\tmaximum = $temp$maximum;\n\t\t\t\t\t\t\t\t\tx = $temp$x;\n\t\t\t\t\t\t\t\t\tcontinue toGridLengthHelper;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tvar toGridLength = function (x) {\n\t\t\t\t\treturn A3(toGridLengthHelper, $elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing, x);\n\t\t\t\t};\n\t\t\t\tvar xSpacing = toGridLength(template.spacing.a);\n\t\t\t\tvar ySpacing = toGridLength(template.spacing.b);\n\t\t\t\tvar rows = function (x) {\n\t\t\t\t\treturn 'grid-template-rows: ' + (x + ';');\n\t\t\t\t}(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t' ',\n\t\t\t\t\t\tA2($elm$core$List$map, toGridLength, template.rows)));\n\t\t\t\tvar msRows = function (x) {\n\t\t\t\t\treturn '-ms-grid-rows: ' + (x + ';');\n\t\t\t\t}(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\tySpacing,\n\t\t\t\t\t\tA2($elm$core$List$map, toGridLength, template.columns)));\n\t\t\t\tvar msColumns = function (x) {\n\t\t\t\t\treturn '-ms-grid-columns: ' + (x + ';');\n\t\t\t\t}(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\tySpacing,\n\t\t\t\t\t\tA2($elm$core$List$map, toGridLength, template.columns)));\n\t\t\t\tvar gapY = 'grid-row-gap:' + (toGridLength(template.spacing.b) + ';');\n\t\t\t\tvar gapX = 'grid-column-gap:' + (toGridLength(template.spacing.a) + ';');\n\t\t\t\tvar columns = function (x) {\n\t\t\t\t\treturn 'grid-template-columns: ' + (x + ';');\n\t\t\t\t}(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t' ',\n\t\t\t\t\t\tA2($elm$core$List$map, toGridLength, template.columns)));\n\t\t\t\tvar _class = '.grid-rows-' + (A2(\n\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t'-',\n\t\t\t\t\tA2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.rows)) + ('-cols-' + (A2(\n\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t'-',\n\t\t\t\t\tA2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.columns)) + ('-space-x-' + ($mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.a) + ('-space-y-' + $mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.b)))))));\n\t\t\t\tvar modernGrid = _class + ('{' + (columns + (rows + (gapX + (gapY + '}')))));\n\t\t\t\tvar supports = '@supports (display:grid) {' + (modernGrid + '}');\n\t\t\t\tvar base = _class + ('{' + (msColumns + (msRows + '}')));\n\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t[base, supports]);\n\t\t\tcase 'GridPosition':\n\t\t\t\tvar position = rule.a;\n\t\t\t\tvar msPosition = A2(\n\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t' ',\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'-ms-grid-row: ' + ($elm$core$String$fromInt(position.row) + ';'),\n\t\t\t\t\t\t\t'-ms-grid-row-span: ' + ($elm$core$String$fromInt(position.height) + ';'),\n\t\t\t\t\t\t\t'-ms-grid-column: ' + ($elm$core$String$fromInt(position.col) + ';'),\n\t\t\t\t\t\t\t'-ms-grid-column-span: ' + ($elm$core$String$fromInt(position.width) + ';')\n\t\t\t\t\t\t]));\n\t\t\t\tvar modernPosition = A2(\n\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t' ',\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'grid-row: ' + ($elm$core$String$fromInt(position.row) + (' / ' + ($elm$core$String$fromInt(position.row + position.height) + ';'))),\n\t\t\t\t\t\t\t'grid-column: ' + ($elm$core$String$fromInt(position.col) + (' / ' + ($elm$core$String$fromInt(position.col + position.width) + ';')))\n\t\t\t\t\t\t]));\n\t\t\t\tvar _class = '.grid-pos-' + ($elm$core$String$fromInt(position.row) + ('-' + ($elm$core$String$fromInt(position.col) + ('-' + ($elm$core$String$fromInt(position.width) + ('-' + $elm$core$String$fromInt(position.height)))))));\n\t\t\t\tvar modernGrid = _class + ('{' + (modernPosition + '}'));\n\t\t\t\tvar supports = '@supports (display:grid) {' + (modernGrid + '}');\n\t\t\t\tvar base = _class + ('{' + (msPosition + '}'));\n\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t[base, supports]);\n\t\t\tcase 'PseudoSelector':\n\t\t\t\tvar _class = rule.a;\n\t\t\t\tvar styles = rule.b;\n\t\t\t\tvar renderPseudoRule = function (style) {\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyleRule,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tstyle,\n\t\t\t\t\t\t$elm$core$Maybe$Just(_class));\n\t\t\t\t};\n\t\t\t\treturn A2($elm$core$List$concatMap, renderPseudoRule, styles);\n\t\t\tdefault:\n\t\t\t\tvar transform = rule.a;\n\t\t\t\tvar val = $mdgriffith$elm_ui$Internal$Model$transformValue(transform);\n\t\t\t\tvar _class = $mdgriffith$elm_ui$Internal$Model$transformClass(transform);\n\t\t\t\tvar _v12 = _Utils_Tuple2(_class, val);\n\t\t\t\tif ((_v12.a.$ === 'Just') && (_v12.b.$ === 'Just')) {\n\t\t\t\t\tvar cls = _v12.a.a;\n\t\t\t\t\tvar v = _v12.b.a;\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t'.' + cls,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'transform', v)\n\t\t\t\t\t\t\t]));\n\t\t\t\t} else {\n\t\t\t\t\treturn _List_Nil;\n\t\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$encodeStyles = F2(\n\tfunction (options, stylesheet) {\n\t\treturn $elm$json$Json$Encode$object(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tfunction (style) {\n\t\t\t\t\tvar styled = A3($mdgriffith$elm_ui$Internal$Model$renderStyleRule, options, style, $elm$core$Maybe$Nothing);\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$getStyleName(style),\n\t\t\t\t\t\tA2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, styled));\n\t\t\t\t},\n\t\t\t\tstylesheet));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$bracket = F2(\n\tfunction (selector, rules) {\n\t\tvar renderPair = function (_v0) {\n\t\t\tvar name = _v0.a;\n\t\t\tvar val = _v0.b;\n\t\t\treturn name + (': ' + (val + ';'));\n\t\t};\n\t\treturn selector + (' {' + (A2(\n\t\t\t$elm$core$String$join,\n\t\t\t'',\n\t\t\tA2($elm$core$List$map, renderPair, rules)) + '}'));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$fontRule = F3(\n\tfunction (name, modifier, _v0) {\n\t\tvar parentAdj = _v0.a;\n\t\tvar textAdjustment = _v0.b;\n\t\treturn _List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$bracket, '.' + (name + ('.' + (modifier + (', ' + ('.' + (name + (' .' + modifier))))))), parentAdj),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$bracket, '.' + (name + ('.' + (modifier + ('> .' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (', .' + (name + (' .' + (modifier + (' > .' + $mdgriffith$elm_ui$Internal$Style$classes.text)))))))))), textAdjustment)\n\t\t\t]);\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$renderFontAdjustmentRule = F3(\n\tfunction (fontToAdjust, _v0, otherFontName) {\n\t\tvar full = _v0.a;\n\t\tvar capital = _v0.b;\n\t\tvar name = _Utils_eq(fontToAdjust, otherFontName) ? fontToAdjust : (otherFontName + (' .' + fontToAdjust));\n\t\treturn A2(\n\t\t\t$elm$core$String$join,\n\t\t\t' ',\n\t\t\t_Utils_ap(\n\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$fontRule, name, $mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital, capital),\n\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$fontRule, name, $mdgriffith$elm_ui$Internal$Style$classes.fullSize, full)));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$renderNullAdjustmentRule = F2(\n\tfunction (fontToAdjust, otherFontName) {\n\t\tvar name = _Utils_eq(fontToAdjust, otherFontName) ? fontToAdjust : (otherFontName + (' .' + fontToAdjust));\n\t\treturn A2(\n\t\t\t$elm$core$String$join,\n\t\t\t' ',\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$bracket,\n\t\t\t\t\t'.' + (name + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital + (', ' + ('.' + (name + (' .' + $mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital))))))),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2('line-height', '1')\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$bracket,\n\t\t\t\t\t'.' + (name + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital + ('> .' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (', .' + (name + (' .' + ($mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital + (' > .' + $mdgriffith$elm_ui$Internal$Style$classes.text)))))))))),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2('vertical-align', '0'),\n\t\t\t\t\t\t\t_Utils_Tuple2('line-height', '1')\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$adjust = F3(\n\tfunction (size, height, vertical) {\n\t\treturn {height: height / size, size: size, vertical: vertical};\n\t});\nvar $elm$core$List$maximum = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn $elm$core$Maybe$Just(\n\t\t\tA3($elm$core$List$foldl, $elm$core$Basics$max, x, xs));\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $elm$core$List$minimum = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn $elm$core$Maybe$Just(\n\t\t\tA3($elm$core$List$foldl, $elm$core$Basics$min, x, xs));\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$convertAdjustment = function (adjustment) {\n\tvar lines = _List_fromArray(\n\t\t[adjustment.capital, adjustment.baseline, adjustment.descender, adjustment.lowercase]);\n\tvar lineHeight = 1.5;\n\tvar normalDescender = (lineHeight - 1) / 2;\n\tvar oldMiddle = lineHeight / 2;\n\tvar descender = A2(\n\t\t$elm$core$Maybe$withDefault,\n\t\tadjustment.descender,\n\t\t$elm$core$List$minimum(lines));\n\tvar newBaseline = A2(\n\t\t$elm$core$Maybe$withDefault,\n\t\tadjustment.baseline,\n\t\t$elm$core$List$minimum(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$filter,\n\t\t\t\tfunction (x) {\n\t\t\t\t\treturn !_Utils_eq(x, descender);\n\t\t\t\t},\n\t\t\t\tlines)));\n\tvar base = lineHeight;\n\tvar ascender = A2(\n\t\t$elm$core$Maybe$withDefault,\n\t\tadjustment.capital,\n\t\t$elm$core$List$maximum(lines));\n\tvar capitalSize = 1 / (ascender - newBaseline);\n\tvar capitalVertical = 1 - ascender;\n\tvar fullSize = 1 / (ascender - descender);\n\tvar fullVertical = 1 - ascender;\n\tvar newCapitalMiddle = ((ascender - newBaseline) / 2) + newBaseline;\n\tvar newFullMiddle = ((ascender - descender) / 2) + descender;\n\treturn {\n\t\tcapital: A3($mdgriffith$elm_ui$Internal$Model$adjust, capitalSize, ascender - newBaseline, capitalVertical),\n\t\tfull: A3($mdgriffith$elm_ui$Internal$Model$adjust, fullSize, ascender - descender, fullVertical)\n\t};\n};\nvar $mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules = function (converted) {\n\treturn _Utils_Tuple2(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2('display', 'block')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2('display', 'inline-block'),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'line-height',\n\t\t\t\t$elm$core$String$fromFloat(converted.height)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'vertical-align',\n\t\t\t\t$elm$core$String$fromFloat(converted.vertical) + 'em'),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'font-size',\n\t\t\t\t$elm$core$String$fromFloat(converted.size) + 'em')\n\t\t\t]));\n};\nvar $mdgriffith$elm_ui$Internal$Model$typefaceAdjustment = function (typefaces) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (face, found) {\n\t\t\t\tif (found.$ === 'Nothing') {\n\t\t\t\t\tif (face.$ === 'FontWith') {\n\t\t\t\t\t\tvar _with = face.a;\n\t\t\t\t\t\tvar _v2 = _with.adjustment;\n\t\t\t\t\t\tif (_v2.$ === 'Nothing') {\n\t\t\t\t\t\t\treturn found;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar adjustment = _v2.a;\n\t\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules(\n\t\t\t\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\t\t\t\treturn $.full;\n\t\t\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$convertAdjustment(adjustment))),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules(\n\t\t\t\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\t\t\t\treturn $.capital;\n\t\t\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$convertAdjustment(adjustment)))));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn found;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn found;\n\t\t\t\t}\n\t\t\t}),\n\t\t$elm$core$Maybe$Nothing,\n\t\ttypefaces);\n};\nvar $mdgriffith$elm_ui$Internal$Model$renderTopLevelValues = function (rules) {\n\tvar withImport = function (font) {\n\t\tif (font.$ === 'ImportFont') {\n\t\t\tvar url = font.b;\n\t\t\treturn $elm$core$Maybe$Just('@import url(\\'' + (url + '\\');'));\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t};\n\tvar fontImports = function (_v2) {\n\t\tvar name = _v2.a;\n\t\tvar typefaces = _v2.b;\n\t\tvar imports = A2(\n\t\t\t$elm$core$String$join,\n\t\t\t'\\n',\n\t\t\tA2($elm$core$List$filterMap, withImport, typefaces));\n\t\treturn imports;\n\t};\n\tvar allNames = A2($elm$core$List$map, $elm$core$Tuple$first, rules);\n\tvar fontAdjustments = function (_v1) {\n\t\tvar name = _v1.a;\n\t\tvar typefaces = _v1.b;\n\t\tvar _v0 = $mdgriffith$elm_ui$Internal$Model$typefaceAdjustment(typefaces);\n\t\tif (_v0.$ === 'Nothing') {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t'',\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderNullAdjustmentRule(name),\n\t\t\t\t\tallNames));\n\t\t} else {\n\t\t\tvar adjustment = _v0.a;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t'',\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$renderFontAdjustmentRule, name, adjustment),\n\t\t\t\t\tallNames));\n\t\t}\n\t};\n\treturn _Utils_ap(\n\t\tA2(\n\t\t\t$elm$core$String$join,\n\t\t\t'\\n',\n\t\t\tA2($elm$core$List$map, fontImports, rules)),\n\t\tA2(\n\t\t\t$elm$core$String$join,\n\t\t\t'\\n',\n\t\t\tA2($elm$core$List$map, fontAdjustments, rules)));\n};\nvar $mdgriffith$elm_ui$Internal$Model$topLevelValue = function (rule) {\n\tif (rule.$ === 'FontFamily') {\n\t\tvar name = rule.a;\n\t\tvar typefaces = rule.b;\n\t\treturn $elm$core$Maybe$Just(\n\t\t\t_Utils_Tuple2(name, typefaces));\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$toStyleSheetString = F2(\n\tfunction (options, stylesheet) {\n\t\tvar combine = F2(\n\t\t\tfunction (style, rendered) {\n\t\t\t\treturn {\n\t\t\t\t\trules: _Utils_ap(\n\t\t\t\t\t\trendered.rules,\n\t\t\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$renderStyleRule, options, style, $elm$core$Maybe$Nothing)),\n\t\t\t\t\ttopLevel: function () {\n\t\t\t\t\t\tvar _v1 = $mdgriffith$elm_ui$Internal$Model$topLevelValue(style);\n\t\t\t\t\t\tif (_v1.$ === 'Nothing') {\n\t\t\t\t\t\t\treturn rendered.topLevel;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar topLevel = _v1.a;\n\t\t\t\t\t\t\treturn A2($elm$core$List$cons, topLevel, rendered.topLevel);\n\t\t\t\t\t\t}\n\t\t\t\t\t}()\n\t\t\t\t};\n\t\t\t});\n\t\tvar _v0 = A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tcombine,\n\t\t\t{rules: _List_Nil, topLevel: _List_Nil},\n\t\t\tstylesheet);\n\t\tvar topLevel = _v0.topLevel;\n\t\tvar rules = _v0.rules;\n\t\treturn _Utils_ap(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$renderTopLevelValues(topLevel),\n\t\t\t$elm$core$String$concat(rules));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$toStyleSheet = F2(\n\tfunction (options, styleSheet) {\n\t\tvar _v0 = options.mode;\n\t\tswitch (_v0.$) {\n\t\t\tcase 'Layout':\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\t'div',\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\t\t\t'style',\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$text(\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$toStyleSheetString, options, styleSheet))\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t]));\n\t\t\tcase 'NoStaticStyleSheet':\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\t'div',\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\t\t\t'style',\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$text(\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$toStyleSheetString, options, styleSheet))\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t]));\n\t\t\tdefault:\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\t'elm-ui-rules',\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$property,\n\t\t\t\t\t\t\t'rules',\n\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$encodeStyles, options, styleSheet))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil);\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$embedKeyed = F4(\n\tfunction (_static, opts, styles, children) {\n\t\tvar dynamicStyleSheet = A2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$toStyleSheet,\n\t\t\topts,\n\t\t\tA3(\n\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$reduceStyles,\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t$elm$core$Set$empty,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderFocusStyle(opts.focus)),\n\t\t\t\tstyles).b);\n\t\treturn _static ? A2(\n\t\t\t$elm$core$List$cons,\n\t\t\t_Utils_Tuple2(\n\t\t\t\t'static-stylesheet',\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$staticRoot(opts)),\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t_Utils_Tuple2('dynamic-stylesheet', dynamicStyleSheet),\n\t\t\t\tchildren)) : A2(\n\t\t\t$elm$core$List$cons,\n\t\t\t_Utils_Tuple2('dynamic-stylesheet', dynamicStyleSheet),\n\t\t\tchildren);\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$embedWith = F4(\n\tfunction (_static, opts, styles, children) {\n\t\tvar dynamicStyleSheet = A2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$toStyleSheet,\n\t\t\topts,\n\t\t\tA3(\n\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$reduceStyles,\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t$elm$core$Set$empty,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderFocusStyle(opts.focus)),\n\t\t\t\tstyles).b);\n\t\treturn _static ? A2(\n\t\t\t$elm$core$List$cons,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$staticRoot(opts),\n\t\t\tA2($elm$core$List$cons, dynamicStyleSheet, children)) : A2($elm$core$List$cons, dynamicStyleSheet, children);\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$heightBetween = $mdgriffith$elm_ui$Internal$Flag$flag(45);\nvar $mdgriffith$elm_ui$Internal$Flag$heightFill = $mdgriffith$elm_ui$Internal$Flag$flag(37);\nvar $elm$virtual_dom$VirtualDom$keyedNode = function (tag) {\n\treturn _VirtualDom_keyedNode(\n\t\t_VirtualDom_noScript(tag));\n};\nvar $elm$html$Html$p = _VirtualDom_node('p');\nvar $mdgriffith$elm_ui$Internal$Flag$present = F2(\n\tfunction (myFlag, _v0) {\n\t\tvar fieldOne = _v0.a;\n\t\tvar fieldTwo = _v0.b;\n\t\tif (myFlag.$ === 'Flag') {\n\t\t\tvar first = myFlag.a;\n\t\t\treturn _Utils_eq(first & fieldOne, first);\n\t\t} else {\n\t\t\tvar second = myFlag.a;\n\t\t\treturn _Utils_eq(second & fieldTwo, second);\n\t\t}\n\t});\nvar $elm$html$Html$s = _VirtualDom_node('s');\nvar $elm$html$Html$u = _VirtualDom_node('u');\nvar $mdgriffith$elm_ui$Internal$Flag$widthBetween = $mdgriffith$elm_ui$Internal$Flag$flag(44);\nvar $mdgriffith$elm_ui$Internal$Flag$widthFill = $mdgriffith$elm_ui$Internal$Flag$flag(39);\nvar $mdgriffith$elm_ui$Internal$Model$finalizeNode = F6(\n\tfunction (has, node, attributes, children, embedMode, parentContext) {\n\t\tvar createNode = F2(\n\t\t\tfunction (nodeName, attrs) {\n\t\t\t\tif (children.$ === 'Keyed') {\n\t\t\t\t\tvar keyed = children.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$keyedNode,\n\t\t\t\t\t\tnodeName,\n\t\t\t\t\t\tattrs,\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tswitch (embedMode.$) {\n\t\t\t\t\t\t\t\tcase 'NoStyleSheet':\n\t\t\t\t\t\t\t\t\treturn keyed;\n\t\t\t\t\t\t\t\tcase 'OnlyDynamic':\n\t\t\t\t\t\t\t\t\tvar opts = embedMode.a;\n\t\t\t\t\t\t\t\t\tvar styles = embedMode.b;\n\t\t\t\t\t\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$embedKeyed, false, opts, styles, keyed);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tvar opts = embedMode.a;\n\t\t\t\t\t\t\t\t\tvar styles = embedMode.b;\n\t\t\t\t\t\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$embedKeyed, true, opts, styles, keyed);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}());\n\t\t\t\t} else {\n\t\t\t\t\tvar unkeyed = children.a;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tswitch (nodeName) {\n\t\t\t\t\t\t\t\tcase 'div':\n\t\t\t\t\t\t\t\t\treturn $elm$html$Html$div;\n\t\t\t\t\t\t\t\tcase 'p':\n\t\t\t\t\t\t\t\t\treturn $elm$html$Html$p;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn $elm$virtual_dom$VirtualDom$node(nodeName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}(),\n\t\t\t\t\t\tattrs,\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tswitch (embedMode.$) {\n\t\t\t\t\t\t\t\tcase 'NoStyleSheet':\n\t\t\t\t\t\t\t\t\treturn unkeyed;\n\t\t\t\t\t\t\t\tcase 'OnlyDynamic':\n\t\t\t\t\t\t\t\t\tvar opts = embedMode.a;\n\t\t\t\t\t\t\t\t\tvar styles = embedMode.b;\n\t\t\t\t\t\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$embedWith, false, opts, styles, unkeyed);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tvar opts = embedMode.a;\n\t\t\t\t\t\t\t\t\tvar styles = embedMode.b;\n\t\t\t\t\t\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$embedWith, true, opts, styles, unkeyed);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}());\n\t\t\t\t}\n\t\t\t});\n\t\tvar html = function () {\n\t\t\tswitch (node.$) {\n\t\t\t\tcase 'Generic':\n\t\t\t\t\treturn A2(createNode, 'div', attributes);\n\t\t\t\tcase 'NodeName':\n\t\t\t\t\tvar nodeName = node.a;\n\t\t\t\t\treturn A2(createNode, nodeName, attributes);\n\t\t\t\tdefault:\n\t\t\t\t\tvar nodeName = node.a;\n\t\t\t\t\tvar internal = node.b;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\t\tnodeName,\n\t\t\t\t\t\tattributes,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tcreateNode,\n\t\t\t\t\t\t\t\tinternal,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.single))\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t]));\n\t\t\t}\n\t\t}();\n\t\tswitch (parentContext.$) {\n\t\t\tcase 'AsRow':\n\t\t\t\treturn (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$widthFill, has) && (!A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$widthBetween, has))) ? html : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$alignRight, has) ? A2(\n\t\t\t\t\t$elm$html$Html$u,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.any, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.container, $mdgriffith$elm_ui$Internal$Style$classes.contentCenterY, $mdgriffith$elm_ui$Internal$Style$classes.alignContainerRight])))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[html])) : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$centerX, has) ? A2(\n\t\t\t\t\t$elm$html$Html$s,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.any, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.container, $mdgriffith$elm_ui$Internal$Style$classes.contentCenterY, $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX])))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[html])) : html));\n\t\t\tcase 'AsColumn':\n\t\t\t\treturn (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$heightFill, has) && (!A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$heightBetween, has))) ? html : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$centerY, has) ? A2(\n\t\t\t\t\t$elm$html$Html$s,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.any, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.container, $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY])))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[html])) : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$alignBottom, has) ? A2(\n\t\t\t\t\t$elm$html$Html$u,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.any, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.container, $mdgriffith$elm_ui$Internal$Style$classes.alignContainerBottom])))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[html])) : html));\n\t\t\tdefault:\n\t\t\t\treturn html;\n\t\t}\n\t});\nvar $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;\nvar $mdgriffith$elm_ui$Internal$Model$textElementClasses = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.widthContent + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.heightContent)))));\nvar $mdgriffith$elm_ui$Internal$Model$textElement = function (str) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Model$textElementClasses)\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$text(str)\n\t\t\t]));\n};\nvar $mdgriffith$elm_ui$Internal$Model$textElementFillClasses = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.widthFill + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.heightFill)))));\nvar $mdgriffith$elm_ui$Internal$Model$textElementFill = function (str) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Model$textElementFillClasses)\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$text(str)\n\t\t\t]));\n};\nvar $mdgriffith$elm_ui$Internal$Model$createElement = F3(\n\tfunction (context, children, rendered) {\n\t\tvar gatherKeyed = F2(\n\t\t\tfunction (_v8, _v9) {\n\t\t\t\tvar key = _v8.a;\n\t\t\t\tvar child = _v8.b;\n\t\t\t\tvar htmls = _v9.a;\n\t\t\t\tvar existingStyles = _v9.b;\n\t\t\t\tswitch (child.$) {\n\t\t\t\t\tcase 'Unstyled':\n\t\t\t\t\t\tvar html = child.a;\n\t\t\t\t\t\treturn _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\thtml(context)),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\texistingStyles) : _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\thtml(context)),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\texistingStyles);\n\t\t\t\t\tcase 'Styled':\n\t\t\t\t\t\tvar styled = child.a;\n\t\t\t\t\t\treturn _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\tA2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context)),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\t$elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles)) : _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\tA2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context)),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\t$elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles));\n\t\t\t\t\tcase 'Text':\n\t\t\t\t\t\tvar str = child.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\t_Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asEl) ? $mdgriffith$elm_ui$Internal$Model$textElementFill(str) : $mdgriffith$elm_ui$Internal$Model$textElement(str)),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\texistingStyles);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn _Utils_Tuple2(htmls, existingStyles);\n\t\t\t\t}\n\t\t\t});\n\t\tvar gather = F2(\n\t\t\tfunction (child, _v6) {\n\t\t\t\tvar htmls = _v6.a;\n\t\t\t\tvar existingStyles = _v6.b;\n\t\t\t\tswitch (child.$) {\n\t\t\t\t\tcase 'Unstyled':\n\t\t\t\t\t\tvar html = child.a;\n\t\t\t\t\t\treturn _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\thtml(context),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\texistingStyles) : _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\thtml(context),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\texistingStyles);\n\t\t\t\t\tcase 'Styled':\n\t\t\t\t\t\tvar styled = child.a;\n\t\t\t\t\t\treturn _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\tA2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\t$elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles)) : _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\tA2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\t$elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles));\n\t\t\t\t\tcase 'Text':\n\t\t\t\t\t\tvar str = child.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t_Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asEl) ? $mdgriffith$elm_ui$Internal$Model$textElementFill(str) : $mdgriffith$elm_ui$Internal$Model$textElement(str),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\texistingStyles);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn _Utils_Tuple2(htmls, existingStyles);\n\t\t\t\t}\n\t\t\t});\n\t\tif (children.$ === 'Keyed') {\n\t\t\tvar keyedChildren = children.a;\n\t\t\tvar _v1 = A3(\n\t\t\t\t$elm$core$List$foldr,\n\t\t\t\tgatherKeyed,\n\t\t\t\t_Utils_Tuple2(_List_Nil, _List_Nil),\n\t\t\t\tkeyedChildren);\n\t\t\tvar keyed = _v1.a;\n\t\t\tvar styles = _v1.b;\n\t\t\tvar newStyles = $elm$core$List$isEmpty(styles) ? rendered.styles : _Utils_ap(rendered.styles, styles);\n\t\t\tif (!newStyles.b) {\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Unstyled(\n\t\t\t\t\tA5(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$finalizeNode,\n\t\t\t\t\t\trendered.has,\n\t\t\t\t\t\trendered.node,\n\t\t\t\t\t\trendered.attributes,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Keyed(\n\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$addKeyedChildren, 'nearby-element-pls', keyed, rendered.children)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NoStyleSheet));\n\t\t\t} else {\n\t\t\t\tvar allStyles = newStyles;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Styled(\n\t\t\t\t\t{\n\t\t\t\t\t\thtml: A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$finalizeNode,\n\t\t\t\t\t\t\trendered.has,\n\t\t\t\t\t\t\trendered.node,\n\t\t\t\t\t\t\trendered.attributes,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Keyed(\n\t\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$addKeyedChildren, 'nearby-element-pls', keyed, rendered.children))),\n\t\t\t\t\t\tstyles: allStyles\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tvar unkeyedChildren = children.a;\n\t\t\tvar _v3 = A3(\n\t\t\t\t$elm$core$List$foldr,\n\t\t\t\tgather,\n\t\t\t\t_Utils_Tuple2(_List_Nil, _List_Nil),\n\t\t\t\tunkeyedChildren);\n\t\t\tvar unkeyed = _v3.a;\n\t\t\tvar styles = _v3.b;\n\t\t\tvar newStyles = $elm$core$List$isEmpty(styles) ? rendered.styles : _Utils_ap(rendered.styles, styles);\n\t\t\tif (!newStyles.b) {\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Unstyled(\n\t\t\t\t\tA5(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$finalizeNode,\n\t\t\t\t\t\trendered.has,\n\t\t\t\t\t\trendered.node,\n\t\t\t\t\t\trendered.attributes,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$addChildren, unkeyed, rendered.children)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NoStyleSheet));\n\t\t\t} else {\n\t\t\t\tvar allStyles = newStyles;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Styled(\n\t\t\t\t\t{\n\t\t\t\t\t\thtml: A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$finalizeNode,\n\t\t\t\t\t\t\trendered.has,\n\t\t\t\t\t\t\trendered.node,\n\t\t\t\t\t\t\trendered.attributes,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$addChildren, unkeyed, rendered.children))),\n\t\t\t\t\t\tstyles: allStyles\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Single = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'Single', a: a, b: b, c: c};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Transform = function (a) {\n\treturn {$: 'Transform', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Flag$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Field', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$add = F2(\n\tfunction (myFlag, _v0) {\n\t\tvar one = _v0.a;\n\t\tvar two = _v0.b;\n\t\tif (myFlag.$ === 'Flag') {\n\t\t\tvar first = myFlag.a;\n\t\t\treturn A2($mdgriffith$elm_ui$Internal$Flag$Field, first | one, two);\n\t\t} else {\n\t\t\tvar second = myFlag.a;\n\t\t\treturn A2($mdgriffith$elm_ui$Internal$Flag$Field, one, second | two);\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$ChildrenBehind = function (a) {\n\treturn {$: 'ChildrenBehind', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'ChildrenBehindAndInFront', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$ChildrenInFront = function (a) {\n\treturn {$: 'ChildrenInFront', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$nearbyElement = F2(\n\tfunction (location, elem) {\n\t\treturn A2(\n\t\t\t$elm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tswitch (location.$) {\n\t\t\t\t\t\t\tcase 'Above':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.above]));\n\t\t\t\t\t\t\tcase 'Below':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.below]));\n\t\t\t\t\t\t\tcase 'OnRight':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.onRight]));\n\t\t\t\t\t\t\tcase 'OnLeft':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.onLeft]));\n\t\t\t\t\t\t\tcase 'InFront':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.inFront]));\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.behind]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}())\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tfunction () {\n\t\t\t\t\tswitch (elem.$) {\n\t\t\t\t\t\tcase 'Empty':\n\t\t\t\t\t\t\treturn $elm$virtual_dom$VirtualDom$text('');\n\t\t\t\t\t\tcase 'Text':\n\t\t\t\t\t\t\tvar str = elem.a;\n\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$textElement(str);\n\t\t\t\t\t\tcase 'Unstyled':\n\t\t\t\t\t\t\tvar html = elem.a;\n\t\t\t\t\t\t\treturn html($mdgriffith$elm_ui$Internal$Model$asEl);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tvar styled = elem.a;\n\t\t\t\t\t\t\treturn A2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, $mdgriffith$elm_ui$Internal$Model$asEl);\n\t\t\t\t\t}\n\t\t\t\t}()\n\t\t\t\t]));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$addNearbyElement = F3(\n\tfunction (location, elem, existing) {\n\t\tvar nearby = A2($mdgriffith$elm_ui$Internal$Model$nearbyElement, location, elem);\n\t\tswitch (existing.$) {\n\t\t\tcase 'NoNearbyChildren':\n\t\t\t\tif (location.$ === 'Behind') {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$ChildrenBehind(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[nearby]));\n\t\t\t\t} else {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$ChildrenInFront(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[nearby]));\n\t\t\t\t}\n\t\t\tcase 'ChildrenBehind':\n\t\t\t\tvar existingBehind = existing.a;\n\t\t\t\tif (location.$ === 'Behind') {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$ChildrenBehind(\n\t\t\t\t\t\tA2($elm$core$List$cons, nearby, existingBehind));\n\t\t\t\t} else {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,\n\t\t\t\t\t\texistingBehind,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[nearby]));\n\t\t\t\t}\n\t\t\tcase 'ChildrenInFront':\n\t\t\t\tvar existingInFront = existing.a;\n\t\t\t\tif (location.$ === 'Behind') {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[nearby]),\n\t\t\t\t\t\texistingInFront);\n\t\t\t\t} else {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$ChildrenInFront(\n\t\t\t\t\t\tA2($elm$core$List$cons, nearby, existingInFront));\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tvar existingBehind = existing.a;\n\t\t\t\tvar existingInFront = existing.b;\n\t\t\t\tif (location.$ === 'Behind') {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,\n\t\t\t\t\t\tA2($elm$core$List$cons, nearby, existingBehind),\n\t\t\t\t\t\texistingInFront);\n\t\t\t\t} else {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,\n\t\t\t\t\t\texistingBehind,\n\t\t\t\t\t\tA2($elm$core$List$cons, nearby, existingInFront));\n\t\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Embedded = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Embedded', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$NodeName = function (a) {\n\treturn {$: 'NodeName', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$addNodeName = F2(\n\tfunction (newNode, old) {\n\t\tswitch (old.$) {\n\t\t\tcase 'Generic':\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$NodeName(newNode);\n\t\t\tcase 'NodeName':\n\t\t\t\tvar name = old.a;\n\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Model$Embedded, name, newNode);\n\t\t\tdefault:\n\t\t\t\tvar x = old.a;\n\t\t\t\tvar y = old.b;\n\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Model$Embedded, x, y);\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$alignXName = function (align) {\n\tswitch (align.$) {\n\t\tcase 'Left':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$classes.alignedHorizontally + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignLeft);\n\t\tcase 'Right':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$classes.alignedHorizontally + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignRight);\n\t\tdefault:\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$classes.alignedHorizontally + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignCenterX);\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$alignYName = function (align) {\n\tswitch (align.$) {\n\t\tcase 'Top':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$classes.alignedVertically + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignTop);\n\t\tcase 'Bottom':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$classes.alignedVertically + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignBottom);\n\t\tdefault:\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$classes.alignedVertically + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignCenterY);\n\t}\n};\nvar $elm$virtual_dom$VirtualDom$attribute = F2(\n\tfunction (key, value) {\n\t\treturn A2(\n\t\t\t_VirtualDom_attribute,\n\t\t\t_VirtualDom_noOnOrFormAction(key),\n\t\t\t_VirtualDom_noJavaScriptOrHtmlUri(value));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$FullTransform = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 'FullTransform', a: a, b: b, c: c, d: d};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Moved = function (a) {\n\treturn {$: 'Moved', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$composeTransformation = F2(\n\tfunction (transform, component) {\n\t\tswitch (transform.$) {\n\t\t\tcase 'Untransformed':\n\t\t\t\tswitch (component.$) {\n\t\t\t\t\tcase 'MoveX':\n\t\t\t\t\t\tvar x = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(\n\t\t\t\t\t\t\t_Utils_Tuple3(x, 0, 0));\n\t\t\t\t\tcase 'MoveY':\n\t\t\t\t\t\tvar y = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(\n\t\t\t\t\t\t\t_Utils_Tuple3(0, y, 0));\n\t\t\t\t\tcase 'MoveZ':\n\t\t\t\t\t\tvar z = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(\n\t\t\t\t\t\t\t_Utils_Tuple3(0, 0, z));\n\t\t\t\t\tcase 'MoveXYZ':\n\t\t\t\t\t\tvar xyz = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(xyz);\n\t\t\t\t\tcase 'Rotate':\n\t\t\t\t\t\tvar xyz = component.a;\n\t\t\t\t\t\tvar angle = component.b;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FullTransform,\n\t\t\t\t\t\t\t_Utils_Tuple3(0, 0, 0),\n\t\t\t\t\t\t\t_Utils_Tuple3(1, 1, 1),\n\t\t\t\t\t\t\txyz,\n\t\t\t\t\t\t\tangle);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar xyz = component.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FullTransform,\n\t\t\t\t\t\t\t_Utils_Tuple3(0, 0, 0),\n\t\t\t\t\t\t\txyz,\n\t\t\t\t\t\t\t_Utils_Tuple3(0, 0, 1),\n\t\t\t\t\t\t\t0);\n\t\t\t\t}\n\t\t\tcase 'Moved':\n\t\t\t\tvar moved = transform.a;\n\t\t\t\tvar x = moved.a;\n\t\t\t\tvar y = moved.b;\n\t\t\t\tvar z = moved.c;\n\t\t\t\tswitch (component.$) {\n\t\t\t\t\tcase 'MoveX':\n\t\t\t\t\t\tvar newX = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(\n\t\t\t\t\t\t\t_Utils_Tuple3(newX, y, z));\n\t\t\t\t\tcase 'MoveY':\n\t\t\t\t\t\tvar newY = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(\n\t\t\t\t\t\t\t_Utils_Tuple3(x, newY, z));\n\t\t\t\t\tcase 'MoveZ':\n\t\t\t\t\t\tvar newZ = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(\n\t\t\t\t\t\t\t_Utils_Tuple3(x, y, newZ));\n\t\t\t\t\tcase 'MoveXYZ':\n\t\t\t\t\t\tvar xyz = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(xyz);\n\t\t\t\t\tcase 'Rotate':\n\t\t\t\t\t\tvar xyz = component.a;\n\t\t\t\t\t\tvar angle = component.b;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FullTransform,\n\t\t\t\t\t\t\tmoved,\n\t\t\t\t\t\t\t_Utils_Tuple3(1, 1, 1),\n\t\t\t\t\t\t\txyz,\n\t\t\t\t\t\t\tangle);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar scale = component.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FullTransform,\n\t\t\t\t\t\t\tmoved,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\t_Utils_Tuple3(0, 0, 1),\n\t\t\t\t\t\t\t0);\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tvar moved = transform.a;\n\t\t\t\tvar x = moved.a;\n\t\t\t\tvar y = moved.b;\n\t\t\t\tvar z = moved.c;\n\t\t\t\tvar scaled = transform.b;\n\t\t\t\tvar origin = transform.c;\n\t\t\t\tvar angle = transform.d;\n\t\t\t\tswitch (component.$) {\n\t\t\t\t\tcase 'MoveX':\n\t\t\t\t\t\tvar newX = component.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FullTransform,\n\t\t\t\t\t\t\t_Utils_Tuple3(newX, y, z),\n\t\t\t\t\t\t\tscaled,\n\t\t\t\t\t\t\torigin,\n\t\t\t\t\t\t\tangle);\n\t\t\t\t\tcase 'MoveY':\n\t\t\t\t\t\tvar newY = component.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FullTransform,\n\t\t\t\t\t\t\t_Utils_Tuple3(x, newY, z),\n\t\t\t\t\t\t\tscaled,\n\t\t\t\t\t\t\torigin,\n\t\t\t\t\t\t\tangle);\n\t\t\t\t\tcase 'MoveZ':\n\t\t\t\t\t\tvar newZ = component.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FullTransform,\n\t\t\t\t\t\t\t_Utils_Tuple3(x, y, newZ),\n\t\t\t\t\t\t\tscaled,\n\t\t\t\t\t\t\torigin,\n\t\t\t\t\t\t\tangle);\n\t\t\t\t\tcase 'MoveXYZ':\n\t\t\t\t\t\tvar newMove = component.a;\n\t\t\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$FullTransform, newMove, scaled, origin, angle);\n\t\t\t\t\tcase 'Rotate':\n\t\t\t\t\t\tvar newOrigin = component.a;\n\t\t\t\t\t\tvar newAngle = component.b;\n\t\t\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$FullTransform, moved, scaled, newOrigin, newAngle);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar newScale = component.a;\n\t\t\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$FullTransform, moved, newScale, origin, angle);\n\t\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$height = $mdgriffith$elm_ui$Internal$Flag$flag(7);\nvar $mdgriffith$elm_ui$Internal$Flag$heightContent = $mdgriffith$elm_ui$Internal$Flag$flag(36);\nvar $mdgriffith$elm_ui$Internal$Flag$merge = F2(\n\tfunction (_v0, _v1) {\n\t\tvar one = _v0.a;\n\t\tvar two = _v0.b;\n\t\tvar three = _v1.a;\n\t\tvar four = _v1.b;\n\t\treturn A2($mdgriffith$elm_ui$Internal$Flag$Field, one | three, two | four);\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$none = A2($mdgriffith$elm_ui$Internal$Flag$Field, 0, 0);\nvar $mdgriffith$elm_ui$Internal$Model$renderHeight = function (h) {\n\tswitch (h.$) {\n\t\tcase 'Px':\n\t\t\tvar px = h.a;\n\t\t\tvar val = $elm$core$String$fromInt(px);\n\t\t\tvar name = 'height-px-' + val;\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$none,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.heightExact + (' ' + name),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$Single, name, 'height', val + 'px')\n\t\t\t\t\t]));\n\t\tcase 'Content':\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightContent, $mdgriffith$elm_ui$Internal$Flag$none),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.heightContent,\n\t\t\t\t_List_Nil);\n\t\tcase 'Fill':\n\t\t\tvar portion = h.a;\n\t\t\treturn (portion === 1) ? _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightFill, $mdgriffith$elm_ui$Internal$Flag$none),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.heightFill,\n\t\t\t\t_List_Nil) : _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightFill, $mdgriffith$elm_ui$Internal$Flag$none),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.heightFillPortion + (' height-fill-' + $elm$core$String$fromInt(portion)),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.column + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t\t\t'height-fill-' + $elm$core$String$fromInt(portion))))),\n\t\t\t\t\t\t'flex-grow',\n\t\t\t\t\t\t$elm$core$String$fromInt(portion * 100000))\n\t\t\t\t\t]));\n\t\tcase 'Min':\n\t\t\tvar minSize = h.a;\n\t\t\tvar len = h.b;\n\t\t\tvar cls = 'min-height-' + $elm$core$String$fromInt(minSize);\n\t\t\tvar style = A3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\tcls,\n\t\t\t\t'min-height',\n\t\t\t\t$elm$core$String$fromInt(minSize) + 'px !important');\n\t\t\tvar _v1 = $mdgriffith$elm_ui$Internal$Model$renderHeight(len);\n\t\t\tvar newFlag = _v1.a;\n\t\t\tvar newAttrs = _v1.b;\n\t\t\tvar newStyle = _v1.c;\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightBetween, newFlag),\n\t\t\t\tcls + (' ' + newAttrs),\n\t\t\t\tA2($elm$core$List$cons, style, newStyle));\n\t\tdefault:\n\t\t\tvar maxSize = h.a;\n\t\t\tvar len = h.b;\n\t\t\tvar cls = 'max-height-' + $elm$core$String$fromInt(maxSize);\n\t\t\tvar style = A3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\tcls,\n\t\t\t\t'max-height',\n\t\t\t\t$elm$core$String$fromInt(maxSize) + 'px');\n\t\t\tvar _v2 = $mdgriffith$elm_ui$Internal$Model$renderHeight(len);\n\t\t\tvar newFlag = _v2.a;\n\t\t\tvar newAttrs = _v2.b;\n\t\t\tvar newStyle = _v2.c;\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightBetween, newFlag),\n\t\t\t\tcls + (' ' + newAttrs),\n\t\t\t\tA2($elm$core$List$cons, style, newStyle));\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Flag$widthContent = $mdgriffith$elm_ui$Internal$Flag$flag(38);\nvar $mdgriffith$elm_ui$Internal$Model$renderWidth = function (w) {\n\tswitch (w.$) {\n\t\tcase 'Px':\n\t\t\tvar px = w.a;\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$none,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.widthExact + (' width-px-' + $elm$core$String$fromInt(px)),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\t\t\t'width-px-' + $elm$core$String$fromInt(px),\n\t\t\t\t\t\t'width',\n\t\t\t\t\t\t$elm$core$String$fromInt(px) + 'px')\n\t\t\t\t\t]));\n\t\tcase 'Content':\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthContent, $mdgriffith$elm_ui$Internal$Flag$none),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.widthContent,\n\t\t\t\t_List_Nil);\n\t\tcase 'Fill':\n\t\t\tvar portion = w.a;\n\t\t\treturn (portion === 1) ? _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthFill, $mdgriffith$elm_ui$Internal$Flag$none),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.widthFill,\n\t\t\t\t_List_Nil) : _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthFill, $mdgriffith$elm_ui$Internal$Flag$none),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion + (' width-fill-' + $elm$core$String$fromInt(portion)),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.row + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t\t\t'width-fill-' + $elm$core$String$fromInt(portion))))),\n\t\t\t\t\t\t'flex-grow',\n\t\t\t\t\t\t$elm$core$String$fromInt(portion * 100000))\n\t\t\t\t\t]));\n\t\tcase 'Min':\n\t\t\tvar minSize = w.a;\n\t\t\tvar len = w.b;\n\t\t\tvar cls = 'min-width-' + $elm$core$String$fromInt(minSize);\n\t\t\tvar style = A3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\tcls,\n\t\t\t\t'min-width',\n\t\t\t\t$elm$core$String$fromInt(minSize) + 'px');\n\t\t\tvar _v1 = $mdgriffith$elm_ui$Internal$Model$renderWidth(len);\n\t\t\tvar newFlag = _v1.a;\n\t\t\tvar newAttrs = _v1.b;\n\t\t\tvar newStyle = _v1.c;\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthBetween, newFlag),\n\t\t\t\tcls + (' ' + newAttrs),\n\t\t\t\tA2($elm$core$List$cons, style, newStyle));\n\t\tdefault:\n\t\t\tvar maxSize = w.a;\n\t\t\tvar len = w.b;\n\t\t\tvar cls = 'max-width-' + $elm$core$String$fromInt(maxSize);\n\t\t\tvar style = A3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\tcls,\n\t\t\t\t'max-width',\n\t\t\t\t$elm$core$String$fromInt(maxSize) + 'px');\n\t\t\tvar _v2 = $mdgriffith$elm_ui$Internal$Model$renderWidth(len);\n\t\t\tvar newFlag = _v2.a;\n\t\t\tvar newAttrs = _v2.b;\n\t\t\tvar newStyle = _v2.c;\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthBetween, newFlag),\n\t\t\t\tcls + (' ' + newAttrs),\n\t\t\t\tA2($elm$core$List$cons, style, newStyle));\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Flag$borderWidth = $mdgriffith$elm_ui$Internal$Flag$flag(27);\nvar $mdgriffith$elm_ui$Internal$Model$skippable = F2(\n\tfunction (flag, style) {\n\t\tif (_Utils_eq(flag, $mdgriffith$elm_ui$Internal$Flag$borderWidth)) {\n\t\t\tif (style.$ === 'Single') {\n\t\t\t\tvar val = style.c;\n\t\t\t\tswitch (val) {\n\t\t\t\t\tcase '0px':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase '1px':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase '2px':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase '3px':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase '4px':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase '5px':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase '6px':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (style.$) {\n\t\t\t\tcase 'FontSize':\n\t\t\t\t\tvar i = style.a;\n\t\t\t\t\treturn (i >= 8) && (i <= 32);\n\t\t\t\tcase 'PaddingStyle':\n\t\t\t\t\tvar name = style.a;\n\t\t\t\t\tvar t = style.b;\n\t\t\t\t\tvar r = style.c;\n\t\t\t\t\tvar b = style.d;\n\t\t\t\t\tvar l = style.e;\n\t\t\t\t\treturn _Utils_eq(t, b) && (_Utils_eq(t, r) && (_Utils_eq(t, l) && ((t >= 0) && (t <= 24))));\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$width = $mdgriffith$elm_ui$Internal$Flag$flag(6);\nvar $mdgriffith$elm_ui$Internal$Flag$xAlign = $mdgriffith$elm_ui$Internal$Flag$flag(30);\nvar $mdgriffith$elm_ui$Internal$Flag$yAlign = $mdgriffith$elm_ui$Internal$Flag$flag(29);\nvar $mdgriffith$elm_ui$Internal$Model$gatherAttrRecursive = F8(\n\tfunction (classes, node, has, transform, styles, attrs, children, elementAttrs) {\n\t\tgatherAttrRecursive:\n\t\twhile (true) {\n\t\t\tif (!elementAttrs.b) {\n\t\t\t\tvar _v1 = $mdgriffith$elm_ui$Internal$Model$transformClass(transform);\n\t\t\t\tif (_v1.$ === 'Nothing') {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tattributes: A2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class(classes),\n\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\tchildren: children,\n\t\t\t\t\t\thas: has,\n\t\t\t\t\t\tnode: node,\n\t\t\t\t\t\tstyles: styles\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tvar _class = _v1.a;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tattributes: A2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class(classes + (' ' + _class)),\n\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\tchildren: children,\n\t\t\t\t\t\thas: has,\n\t\t\t\t\t\tnode: node,\n\t\t\t\t\t\tstyles: A2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Transform(transform),\n\t\t\t\t\t\t\tstyles)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar attribute = elementAttrs.a;\n\t\t\t\tvar remaining = elementAttrs.b;\n\t\t\t\tswitch (attribute.$) {\n\t\t\t\t\tcase 'NoAttribute':\n\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\tcase 'Class':\n\t\t\t\t\t\tvar flag = attribute.a;\n\t\t\t\t\t\tvar exactClassName = attribute.b;\n\t\t\t\t\t\tif (A2($mdgriffith$elm_ui$Internal$Flag$present, flag, has)) {\n\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $temp$classes = exactClassName + (' ' + classes),\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'Attr':\n\t\t\t\t\t\tvar actualAttribute = attribute.a;\n\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t$temp$attrs = A2($elm$core$List$cons, actualAttribute, attrs),\n\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\tcase 'StyleClass':\n\t\t\t\t\t\tvar flag = attribute.a;\n\t\t\t\t\t\tvar style = attribute.b;\n\t\t\t\t\t\tif (A2($mdgriffith$elm_ui$Internal$Flag$present, flag, has)) {\n\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (A2($mdgriffith$elm_ui$Internal$Model$skippable, flag, style)) {\n\t\t\t\t\t\t\t\tvar $temp$classes = $mdgriffith$elm_ui$Internal$Model$getStyleName(style) + (' ' + classes),\n\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar $temp$classes = $mdgriffith$elm_ui$Internal$Model$getStyleName(style) + (' ' + classes),\n\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = A2($elm$core$List$cons, style, styles),\n\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'TransformComponent':\n\t\t\t\t\t\tvar flag = attribute.a;\n\t\t\t\t\t\tvar component = attribute.b;\n\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),\n\t\t\t\t\t\t\t$temp$transform = A2($mdgriffith$elm_ui$Internal$Model$composeTransformation, transform, component),\n\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\tcase 'Width':\n\t\t\t\t\t\tvar width = attribute.a;\n\t\t\t\t\t\tif (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$width, has)) {\n\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tswitch (width.$) {\n\t\t\t\t\t\t\t\tcase 'Px':\n\t\t\t\t\t\t\t\t\tvar px = width.a;\n\t\t\t\t\t\t\t\t\tvar $temp$classes = ($mdgriffith$elm_ui$Internal$Style$classes.widthExact + (' width-px-' + $elm$core$String$fromInt(px))) + (' ' + classes),\n\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has),\n\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t$temp$styles = A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\t\t\t\t\t\t\t\t'width-px-' + $elm$core$String$fromInt(px),\n\t\t\t\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(px) + 'px'),\n\t\t\t\t\t\t\t\t\t\tstyles),\n\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\tcase 'Content':\n\t\t\t\t\t\t\t\t\tvar $temp$classes = classes + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.widthContent),\n\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$add,\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$widthContent,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),\n\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\tcase 'Fill':\n\t\t\t\t\t\t\t\t\tvar portion = width.a;\n\t\t\t\t\t\t\t\t\tif (portion === 1) {\n\t\t\t\t\t\t\t\t\t\tvar $temp$classes = classes + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.widthFill),\n\t\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$add,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$widthFill,\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),\n\t\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar $temp$classes = classes + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion + (' width-fill-' + $elm$core$String$fromInt(portion)))),\n\t\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$add,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$widthFill,\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),\n\t\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t\t$temp$styles = A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.row + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'width-fill-' + $elm$core$String$fromInt(portion))))),\n\t\t\t\t\t\t\t\t\t\t\t\t'flex-grow',\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(portion * 100000)),\n\t\t\t\t\t\t\t\t\t\t\tstyles),\n\t\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tvar _v4 = $mdgriffith$elm_ui$Internal$Model$renderWidth(width);\n\t\t\t\t\t\t\t\t\tvar addToFlags = _v4.a;\n\t\t\t\t\t\t\t\t\tvar newClass = _v4.b;\n\t\t\t\t\t\t\t\t\tvar newStyles = _v4.c;\n\t\t\t\t\t\t\t\t\tvar $temp$classes = classes + (' ' + newClass),\n\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$merge,\n\t\t\t\t\t\t\t\t\t\taddToFlags,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),\n\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t$temp$styles = _Utils_ap(newStyles, styles),\n\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'Height':\n\t\t\t\t\t\tvar height = attribute.a;\n\t\t\t\t\t\tif (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$height, has)) {\n\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tswitch (height.$) {\n\t\t\t\t\t\t\t\tcase 'Px':\n\t\t\t\t\t\t\t\t\tvar px = height.a;\n\t\t\t\t\t\t\t\t\tvar val = $elm$core$String$fromInt(px) + 'px';\n\t\t\t\t\t\t\t\t\tvar name = 'height-px-' + val;\n\t\t\t\t\t\t\t\t\tvar $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.heightExact + (' ' + (name + (' ' + classes))),\n\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has),\n\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t$temp$styles = A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$Single, name, 'height ', val),\n\t\t\t\t\t\t\t\t\t\tstyles),\n\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\tcase 'Content':\n\t\t\t\t\t\t\t\t\tvar $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.heightContent + (' ' + classes),\n\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$add,\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$heightContent,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),\n\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\tcase 'Fill':\n\t\t\t\t\t\t\t\t\tvar portion = height.a;\n\t\t\t\t\t\t\t\t\tif (portion === 1) {\n\t\t\t\t\t\t\t\t\t\tvar $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.heightFill + (' ' + classes),\n\t\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$add,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$heightFill,\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),\n\t\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar $temp$classes = classes + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.heightFillPortion + (' height-fill-' + $elm$core$String$fromInt(portion)))),\n\t\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$add,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$heightFill,\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),\n\t\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t\t$temp$styles = A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.column + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'height-fill-' + $elm$core$String$fromInt(portion))))),\n\t\t\t\t\t\t\t\t\t\t\t\t'flex-grow',\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(portion * 100000)),\n\t\t\t\t\t\t\t\t\t\t\tstyles),\n\t\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tvar _v6 = $mdgriffith$elm_ui$Internal$Model$renderHeight(height);\n\t\t\t\t\t\t\t\t\tvar addToFlags = _v6.a;\n\t\t\t\t\t\t\t\t\tvar newClass = _v6.b;\n\t\t\t\t\t\t\t\t\tvar newStyles = _v6.c;\n\t\t\t\t\t\t\t\t\tvar $temp$classes = classes + (' ' + newClass),\n\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$merge,\n\t\t\t\t\t\t\t\t\t\taddToFlags,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),\n\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t$temp$styles = _Utils_ap(newStyles, styles),\n\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'Describe':\n\t\t\t\t\t\tvar description = attribute.a;\n\t\t\t\t\t\tswitch (description.$) {\n\t\t\t\t\t\t\tcase 'Main':\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'main', node),\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tcase 'Navigation':\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'nav', node),\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tcase 'ContentInfo':\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'footer', node),\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tcase 'Complementary':\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'aside', node),\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tcase 'Heading':\n\t\t\t\t\t\t\t\tvar i = description.a;\n\t\t\t\t\t\t\t\tif (i <= 1) {\n\t\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t\t$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'h1', node),\n\t\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (i < 7) {\n\t\t\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t\t\t$temp$node = A2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$addNodeName,\n\t\t\t\t\t\t\t\t\t\t\t'h' + $elm$core$String$fromInt(i),\n\t\t\t\t\t\t\t\t\t\t\tnode),\n\t\t\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t\t\t$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'h6', node),\n\t\t\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'Paragraph':\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tcase 'Button':\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2($elm$virtual_dom$VirtualDom$attribute, 'role', 'button'),\n\t\t\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tcase 'Label':\n\t\t\t\t\t\t\t\tvar label = description.a;\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2($elm$virtual_dom$VirtualDom$attribute, 'aria-label', label),\n\t\t\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tcase 'LivePolite':\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2($elm$virtual_dom$VirtualDom$attribute, 'aria-live', 'polite'),\n\t\t\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2($elm$virtual_dom$VirtualDom$attribute, 'aria-live', 'assertive'),\n\t\t\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'Nearby':\n\t\t\t\t\t\tvar location = attribute.a;\n\t\t\t\t\t\tvar elem = attribute.b;\n\t\t\t\t\t\tvar newStyles = function () {\n\t\t\t\t\t\t\tswitch (elem.$) {\n\t\t\t\t\t\t\t\tcase 'Empty':\n\t\t\t\t\t\t\t\t\treturn styles;\n\t\t\t\t\t\t\t\tcase 'Text':\n\t\t\t\t\t\t\t\t\tvar str = elem.a;\n\t\t\t\t\t\t\t\t\treturn styles;\n\t\t\t\t\t\t\t\tcase 'Unstyled':\n\t\t\t\t\t\t\t\t\tvar html = elem.a;\n\t\t\t\t\t\t\t\t\treturn styles;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tvar styled = elem.a;\n\t\t\t\t\t\t\t\t\treturn _Utils_ap(styles, styled.styles);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t$temp$styles = newStyles,\n\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t$temp$children = A3($mdgriffith$elm_ui$Internal$Model$addNearbyElement, location, elem, children),\n\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\tcase 'AlignX':\n\t\t\t\t\t\tvar x = attribute.a;\n\t\t\t\t\t\tif (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$xAlign, has)) {\n\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $temp$classes = $mdgriffith$elm_ui$Internal$Model$alignXName(x) + (' ' + classes),\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = function (flags) {\n\t\t\t\t\t\t\t\tswitch (x.$) {\n\t\t\t\t\t\t\t\t\tcase 'CenterX':\n\t\t\t\t\t\t\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$centerX, flags);\n\t\t\t\t\t\t\t\t\tcase 'Right':\n\t\t\t\t\t\t\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$alignRight, flags);\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\treturn flags;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$xAlign, has)),\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar y = attribute.a;\n\t\t\t\t\t\tif (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$yAlign, has)) {\n\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $temp$classes = $mdgriffith$elm_ui$Internal$Model$alignYName(y) + (' ' + classes),\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = function (flags) {\n\t\t\t\t\t\t\t\tswitch (y.$) {\n\t\t\t\t\t\t\t\t\tcase 'CenterY':\n\t\t\t\t\t\t\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$centerY, flags);\n\t\t\t\t\t\t\t\t\tcase 'Bottom':\n\t\t\t\t\t\t\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$alignBottom, flags);\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\treturn flags;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$yAlign, has)),\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Untransformed = {$: 'Untransformed'};\nvar $mdgriffith$elm_ui$Internal$Model$untransformed = $mdgriffith$elm_ui$Internal$Model$Untransformed;\nvar $mdgriffith$elm_ui$Internal$Model$element = F4(\n\tfunction (context, node, attributes, children) {\n\t\treturn A3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$createElement,\n\t\t\tcontext,\n\t\t\tchildren,\n\t\t\tA8(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$gatherAttrRecursive,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$contextClasses(context),\n\t\t\t\tnode,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$none,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$untransformed,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_Nil,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NoNearbyChildren,\n\t\t\t\t$elm$core$List$reverse(attributes)));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$AllowHover = {$: 'AllowHover'};\nvar $mdgriffith$elm_ui$Internal$Model$Layout = {$: 'Layout'};\nvar $mdgriffith$elm_ui$Internal$Model$Rgba = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 'Rgba', a: a, b: b, c: c, d: d};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$focusDefaultStyle = {\n\tbackgroundColor: $elm$core$Maybe$Nothing,\n\tborderColor: $elm$core$Maybe$Nothing,\n\tshadow: $elm$core$Maybe$Just(\n\t\t{\n\t\t\tblur: 0,\n\t\t\tcolor: A4($mdgriffith$elm_ui$Internal$Model$Rgba, 155 / 255, 203 / 255, 1, 1),\n\t\t\toffset: _Utils_Tuple2(0, 0),\n\t\t\tsize: 3\n\t\t})\n};\nvar $mdgriffith$elm_ui$Internal$Model$optionsToRecord = function (options) {\n\tvar combine = F2(\n\t\tfunction (opt, record) {\n\t\t\tswitch (opt.$) {\n\t\t\t\tcase 'HoverOption':\n\t\t\t\t\tvar hoverable = opt.a;\n\t\t\t\t\tvar _v4 = record.hover;\n\t\t\t\t\tif (_v4.$ === 'Nothing') {\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trecord,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\thover: $elm$core$Maybe$Just(hoverable)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn record;\n\t\t\t\t\t}\n\t\t\t\tcase 'FocusStyleOption':\n\t\t\t\t\tvar focusStyle = opt.a;\n\t\t\t\t\tvar _v5 = record.focus;\n\t\t\t\t\tif (_v5.$ === 'Nothing') {\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trecord,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfocus: $elm$core$Maybe$Just(focusStyle)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn record;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar renderMode = opt.a;\n\t\t\t\t\tvar _v6 = record.mode;\n\t\t\t\t\tif (_v6.$ === 'Nothing') {\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trecord,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmode: $elm$core$Maybe$Just(renderMode)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn record;\n\t\t\t\t\t}\n\t\t\t}\n\t\t});\n\tvar andFinally = function (record) {\n\t\treturn {\n\t\t\tfocus: function () {\n\t\t\t\tvar _v0 = record.focus;\n\t\t\t\tif (_v0.$ === 'Nothing') {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$focusDefaultStyle;\n\t\t\t\t} else {\n\t\t\t\t\tvar focusable = _v0.a;\n\t\t\t\t\treturn focusable;\n\t\t\t\t}\n\t\t\t}(),\n\t\t\thover: function () {\n\t\t\t\tvar _v1 = record.hover;\n\t\t\t\tif (_v1.$ === 'Nothing') {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$AllowHover;\n\t\t\t\t} else {\n\t\t\t\t\tvar hoverable = _v1.a;\n\t\t\t\t\treturn hoverable;\n\t\t\t\t}\n\t\t\t}(),\n\t\t\tmode: function () {\n\t\t\t\tvar _v2 = record.mode;\n\t\t\t\tif (_v2.$ === 'Nothing') {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Layout;\n\t\t\t\t} else {\n\t\t\t\t\tvar actualMode = _v2.a;\n\t\t\t\t\treturn actualMode;\n\t\t\t\t}\n\t\t\t}()\n\t\t};\n\t};\n\treturn andFinally(\n\t\tA3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tcombine,\n\t\t\t{focus: $elm$core$Maybe$Nothing, hover: $elm$core$Maybe$Nothing, mode: $elm$core$Maybe$Nothing},\n\t\t\toptions));\n};\nvar $mdgriffith$elm_ui$Internal$Model$toHtml = F2(\n\tfunction (mode, el) {\n\t\tswitch (el.$) {\n\t\t\tcase 'Unstyled':\n\t\t\t\tvar html = el.a;\n\t\t\t\treturn html($mdgriffith$elm_ui$Internal$Model$asEl);\n\t\t\tcase 'Styled':\n\t\t\t\tvar styles = el.a.styles;\n\t\t\t\tvar html = el.a.html;\n\t\t\t\treturn A2(\n\t\t\t\t\thtml,\n\t\t\t\t\tmode(styles),\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl);\n\t\t\tcase 'Text':\n\t\t\t\tvar text = el.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$textElement(text);\n\t\t\tdefault:\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$textElement('');\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$renderRoot = F3(\n\tfunction (optionList, attributes, child) {\n\t\tvar options = $mdgriffith$elm_ui$Internal$Model$optionsToRecord(optionList);\n\t\tvar embedStyle = function () {\n\t\t\tvar _v0 = options.mode;\n\t\t\tif (_v0.$ === 'NoStaticStyleSheet') {\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$OnlyDynamic(options);\n\t\t\t} else {\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$StaticRootAndDynamic(options);\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$toHtml,\n\t\t\tembedStyle,\n\t\t\tA4(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\t\tattributes,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[child]))));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Colored = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'Colored', a: a, b: b, c: c};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$FontFamily = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'FontFamily', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$FontSize = function (a) {\n\treturn {$: 'FontSize', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$SansSerif = {$: 'SansSerif'};\nvar $mdgriffith$elm_ui$Internal$Model$StyleClass = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'StyleClass', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Typeface = function (a) {\n\treturn {$: 'Typeface', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Flag$bgColor = $mdgriffith$elm_ui$Internal$Flag$flag(8);\nvar $mdgriffith$elm_ui$Internal$Flag$fontColor = $mdgriffith$elm_ui$Internal$Flag$flag(14);\nvar $mdgriffith$elm_ui$Internal$Flag$fontFamily = $mdgriffith$elm_ui$Internal$Flag$flag(5);\nvar $mdgriffith$elm_ui$Internal$Flag$fontSize = $mdgriffith$elm_ui$Internal$Flag$flag(4);\nvar $mdgriffith$elm_ui$Internal$Model$formatColorClass = function (_v0) {\n\tvar red = _v0.a;\n\tvar green = _v0.b;\n\tvar blue = _v0.c;\n\tvar alpha = _v0.d;\n\treturn $mdgriffith$elm_ui$Internal$Model$floatClass(red) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(green) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(blue) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(alpha))))));\n};\nvar $elm$core$String$words = _String_words;\nvar $mdgriffith$elm_ui$Internal$Model$renderFontClassName = F2(\n\tfunction (font, current) {\n\t\treturn _Utils_ap(\n\t\t\tcurrent,\n\t\t\tfunction () {\n\t\t\t\tswitch (font.$) {\n\t\t\t\t\tcase 'Serif':\n\t\t\t\t\t\treturn 'serif';\n\t\t\t\t\tcase 'SansSerif':\n\t\t\t\t\t\treturn 'sans-serif';\n\t\t\t\t\tcase 'Monospace':\n\t\t\t\t\t\treturn 'monospace';\n\t\t\t\t\tcase 'Typeface':\n\t\t\t\t\t\tvar name = font.a;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t'-',\n\t\t\t\t\t\t\t$elm$core$String$words(\n\t\t\t\t\t\t\t\t$elm$core$String$toLower(name)));\n\t\t\t\t\tcase 'ImportFont':\n\t\t\t\t\t\tvar name = font.a;\n\t\t\t\t\t\tvar url = font.b;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t'-',\n\t\t\t\t\t\t\t$elm$core$String$words(\n\t\t\t\t\t\t\t\t$elm$core$String$toLower(name)));\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar name = font.a.name;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t'-',\n\t\t\t\t\t\t\t$elm$core$String$words(\n\t\t\t\t\t\t\t\t$elm$core$String$toLower(name)));\n\t\t\t\t}\n\t\t\t}());\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$rootStyle = function () {\n\tvar families = _List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Typeface('Open Sans'),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Typeface('Helvetica'),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Typeface('Verdana'),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$SansSerif\n\t\t]);\n\treturn _List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t$mdgriffith$elm_ui$Internal$Flag$bgColor,\n\t\t\tA3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Colored,\n\t\t\t\t'bg-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(\n\t\t\t\t\tA4($mdgriffith$elm_ui$Internal$Model$Rgba, 1, 1, 1, 0)),\n\t\t\t\t'background-color',\n\t\t\t\tA4($mdgriffith$elm_ui$Internal$Model$Rgba, 1, 1, 1, 0))),\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t$mdgriffith$elm_ui$Internal$Flag$fontColor,\n\t\t\tA3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Colored,\n\t\t\t\t'fc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(\n\t\t\t\t\tA4($mdgriffith$elm_ui$Internal$Model$Rgba, 0, 0, 0, 1)),\n\t\t\t\t'color',\n\t\t\t\tA4($mdgriffith$elm_ui$Internal$Model$Rgba, 0, 0, 0, 1))),\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t$mdgriffith$elm_ui$Internal$Flag$fontSize,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$FontSize(20)),\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t$mdgriffith$elm_ui$Internal$Flag$fontFamily,\n\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FontFamily,\n\t\t\t\tA3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderFontClassName, 'font-', families),\n\t\t\t\tfamilies))\n\t\t]);\n}();\nvar $mdgriffith$elm_ui$Element$layoutWith = F3(\n\tfunction (_v0, attrs, child) {\n\t\tvar options = _v0.options;\n\t\treturn A3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$renderRoot,\n\t\t\toptions,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t' ',\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.root, $mdgriffith$elm_ui$Internal$Style$classes.any, $mdgriffith$elm_ui$Internal$Style$classes.single]))),\n\t\t\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Model$rootStyle, attrs)),\n\t\t\tchild);\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$HoverOption = function (a) {\n\treturn {$: 'HoverOption', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$NoHover = {$: 'NoHover'};\nvar $mdgriffith$elm_ui$Element$noHover = $mdgriffith$elm_ui$Internal$Model$HoverOption($mdgriffith$elm_ui$Internal$Model$NoHover);\nvar $mdgriffith$elm_ui$Element$htmlAttribute = $mdgriffith$elm_ui$Internal$Model$Attr;\nvar $elm$html$Html$Attributes$style = $elm$virtual_dom$VirtualDom$style;\nvar $author$project$View$Attrs$style = F2(\n\tfunction (k, v) {\n\t\treturn $mdgriffith$elm_ui$Element$htmlAttribute(\n\t\t\tA2($elm$html$Html$Attributes$style, k, v));\n\t});\nvar $mdgriffith$elm_ui$Element$Font$family = function (families) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$fontFamily,\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$FontFamily,\n\t\t\tA3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderFontClassName, 'ff-', families),\n\t\t\tfamilies));\n};\nvar $mdgriffith$elm_ui$Element$Font$typeface = $mdgriffith$elm_ui$Internal$Model$Typeface;\nvar $author$project$View$Attrs$typeFont = $mdgriffith$elm_ui$Element$Font$family(\n\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$Font$typeface('SmallType')\n\t\t]));\nvar $author$project$UserNotice$TopLeft = {$: 'TopLeft'};\nvar $mdgriffith$elm_ui$Internal$Model$AlignY = function (a) {\n\treturn {$: 'AlignY', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$Bottom = {$: 'Bottom'};\nvar $mdgriffith$elm_ui$Element$alignBottom = $mdgriffith$elm_ui$Internal$Model$AlignY($mdgriffith$elm_ui$Internal$Model$Bottom);\nvar $mdgriffith$elm_ui$Internal$Model$AlignX = function (a) {\n\treturn {$: 'AlignX', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$Left = {$: 'Left'};\nvar $mdgriffith$elm_ui$Element$alignLeft = $mdgriffith$elm_ui$Internal$Model$AlignX($mdgriffith$elm_ui$Internal$Model$Left);\nvar $mdgriffith$elm_ui$Internal$Model$Right = {$: 'Right'};\nvar $mdgriffith$elm_ui$Element$alignRight = $mdgriffith$elm_ui$Internal$Model$AlignX($mdgriffith$elm_ui$Internal$Model$Right);\nvar $mdgriffith$elm_ui$Internal$Model$Top = {$: 'Top'};\nvar $mdgriffith$elm_ui$Element$alignTop = $mdgriffith$elm_ui$Internal$Model$AlignY($mdgriffith$elm_ui$Internal$Model$Top);\nvar $mdgriffith$elm_ui$Internal$Model$AsColumn = {$: 'AsColumn'};\nvar $mdgriffith$elm_ui$Internal$Model$asColumn = $mdgriffith$elm_ui$Internal$Model$AsColumn;\nvar $mdgriffith$elm_ui$Internal$Model$Content = {$: 'Content'};\nvar $mdgriffith$elm_ui$Element$shrink = $mdgriffith$elm_ui$Internal$Model$Content;\nvar $mdgriffith$elm_ui$Internal$Model$Width = function (a) {\n\treturn {$: 'Width', a: a};\n};\nvar $mdgriffith$elm_ui$Element$width = $mdgriffith$elm_ui$Internal$Model$Width;\nvar $mdgriffith$elm_ui$Element$column = F2(\n\tfunction (attrs, children) {\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asColumn,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentTop + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.contentLeft)),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\t\tattrs))),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$MoveY = function (a) {\n\treturn {$: 'MoveY', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$TransformComponent = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'TransformComponent', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$moveY = $mdgriffith$elm_ui$Internal$Flag$flag(26);\nvar $mdgriffith$elm_ui$Element$moveDown = function (y) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$TransformComponent,\n\t\t$mdgriffith$elm_ui$Internal$Flag$moveY,\n\t\t$mdgriffith$elm_ui$Internal$Model$MoveY(y));\n};\nvar $mdgriffith$elm_ui$Internal$Model$MoveX = function (a) {\n\treturn {$: 'MoveX', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Flag$moveX = $mdgriffith$elm_ui$Internal$Flag$flag(25);\nvar $mdgriffith$elm_ui$Element$moveLeft = function (x) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$TransformComponent,\n\t\t$mdgriffith$elm_ui$Internal$Flag$moveX,\n\t\t$mdgriffith$elm_ui$Internal$Model$MoveX(-x));\n};\nvar $mdgriffith$elm_ui$Element$moveRight = function (x) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$TransformComponent,\n\t\t$mdgriffith$elm_ui$Internal$Flag$moveX,\n\t\t$mdgriffith$elm_ui$Internal$Model$MoveX(x));\n};\nvar $mdgriffith$elm_ui$Element$moveUp = function (y) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$TransformComponent,\n\t\t$mdgriffith$elm_ui$Internal$Flag$moveY,\n\t\t$mdgriffith$elm_ui$Internal$Model$MoveY(-y));\n};\nvar $mdgriffith$elm_ui$Internal$Model$Px = function (a) {\n\treturn {$: 'Px', a: a};\n};\nvar $mdgriffith$elm_ui$Element$px = $mdgriffith$elm_ui$Internal$Model$Px;\nvar $author$project$Helpers$Element$responsiveVal = F3(\n\tfunction (dProfile, desktopVal, mobileVal) {\n\t\tif (dProfile.$ === 'Desktop') {\n\t\t\treturn desktopVal;\n\t\t} else {\n\t\t\treturn mobileVal;\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Element$Font$size = function (i) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$fontSize,\n\t\t$mdgriffith$elm_ui$Internal$Model$FontSize(i));\n};\nvar $mdgriffith$elm_ui$Internal$Model$SpacingStyle = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'SpacingStyle', a: a, b: b, c: c};\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$spacing = $mdgriffith$elm_ui$Internal$Flag$flag(3);\nvar $mdgriffith$elm_ui$Internal$Model$spacingName = F2(\n\tfunction (x, y) {\n\t\treturn 'spacing-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y)));\n\t});\nvar $mdgriffith$elm_ui$Element$spacing = function (x) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$spacing,\n\t\tA3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$SpacingStyle,\n\t\t\tA2($mdgriffith$elm_ui$Internal$Model$spacingName, x, x),\n\t\t\tx,\n\t\t\tx));\n};\nvar $author$project$Types$DismissNotice = function (a) {\n\treturn {$: 'DismissNotice', a: a};\n};\nvar $mdgriffith$elm_ui$Element$rgb = F3(\n\tfunction (r, g, b) {\n\t\treturn A4($mdgriffith$elm_ui$Internal$Model$Rgba, r, g, b, 1);\n\t});\nvar $author$project$Helpers$Element$black = A3($mdgriffith$elm_ui$Element$rgb, 0, 0, 0);\nvar $mdgriffith$elm_ui$Internal$Model$Class = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Class', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$fontWeight = $mdgriffith$elm_ui$Internal$Flag$flag(13);\nvar $mdgriffith$elm_ui$Element$Font$bold = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontWeight, $mdgriffith$elm_ui$Internal$Style$classes.bold);\nvar $mdgriffith$elm_ui$Element$Font$color = function (fontColor) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$fontColor,\n\t\tA3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Colored,\n\t\t\t'fc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(fontColor),\n\t\t\t'color',\n\t\t\tfontColor));\n};\nvar $mdgriffith$elm_ui$Element$el = F2(\n\tfunction (attrs, child) {\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\tattrs)),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[child])));\n\t});\nvar $elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 'Normal', a: a};\n};\nvar $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar $elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$elm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar $elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\t$elm$html$Html$Events$on,\n\t\t'click',\n\t\t$elm$json$Json$Decode$succeed(msg));\n};\nvar $mdgriffith$elm_ui$Element$Events$onClick = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onClick);\nvar $mdgriffith$elm_ui$Internal$Flag$cursor = $mdgriffith$elm_ui$Internal$Flag$flag(21);\nvar $mdgriffith$elm_ui$Element$pointer = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$cursor, $mdgriffith$elm_ui$Internal$Style$classes.cursorPointer);\nvar $author$project$Helpers$Element$closeButton = F3(\n\tfunction (attributes, color, msg) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_Utils_ap(\n\t\t\t\tattributes,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Events$onClick(msg),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(22))\n\t\t\t\t\t])),\n\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(30),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(color)\n\t\t\t\t\t]),\n\t\t\t\t$mdgriffith$elm_ui$Element$text('x')));\n\t});\nvar $mdgriffith$elm_ui$Element$Background$color = function (clr) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$bgColor,\n\t\tA3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Colored,\n\t\t\t'bg-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(clr),\n\t\t\t'background-color',\n\t\t\tclr));\n};\nvar $mdgriffith$elm_ui$Internal$Flag$borderColor = $mdgriffith$elm_ui$Internal$Flag$flag(28);\nvar $mdgriffith$elm_ui$Element$Border$color = function (clr) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$borderColor,\n\t\tA3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Colored,\n\t\t\t'bc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(clr),\n\t\t\t'border-color',\n\t\t\tclr));\n};\nvar $mdgriffith$elm_ui$Internal$Model$Empty = {$: 'Empty'};\nvar $elm$virtual_dom$VirtualDom$map = _VirtualDom_map;\nvar $mdgriffith$elm_ui$Internal$Model$map = F2(\n\tfunction (fn, el) {\n\t\tswitch (el.$) {\n\t\t\tcase 'Styled':\n\t\t\t\tvar styled = el.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Styled(\n\t\t\t\t\t{\n\t\t\t\t\t\thtml: F2(\n\t\t\t\t\t\t\tfunction (add, context) {\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$map,\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tA2(styled.html, add, context));\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tstyles: styled.styles\n\t\t\t\t\t});\n\t\t\tcase 'Unstyled':\n\t\t\t\tvar html = el.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Unstyled(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeL,\n\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$map(fn),\n\t\t\t\t\t\thtml));\n\t\t\tcase 'Text':\n\t\t\t\tvar str = el.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Text(str);\n\t\t\tdefault:\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Empty;\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Element$map = $mdgriffith$elm_ui$Internal$Model$map;\nvar $mdgriffith$elm_ui$Internal$Model$PaddingStyle = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: 'PaddingStyle', a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$padding = $mdgriffith$elm_ui$Internal$Flag$flag(2);\nvar $mdgriffith$elm_ui$Element$padding = function (x) {\n\tvar f = x;\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$padding,\n\t\tA5(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$PaddingStyle,\n\t\t\t'p-' + $elm$core$String$fromInt(x),\n\t\t\tf,\n\t\t\tf,\n\t\t\tf,\n\t\t\tf));\n};\nvar $mdgriffith$elm_ui$Internal$Model$Describe = function (a) {\n\treturn {$: 'Describe', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$Paragraph = {$: 'Paragraph'};\nvar $mdgriffith$elm_ui$Element$paragraph = F2(\n\tfunction (attrs, children) {\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asParagraph,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$Paragraph),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t\t\t\tattrs))),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));\n\t});\nvar $mdgriffith$elm_ui$Element$rgb255 = F3(\n\tfunction (red, green, blue) {\n\t\treturn A4($mdgriffith$elm_ui$Internal$Model$Rgba, red / 255, green / 255, blue / 255, 1);\n\t});\nvar $mdgriffith$elm_ui$Element$rgba = $mdgriffith$elm_ui$Internal$Model$Rgba;\nvar $mdgriffith$elm_ui$Internal$Flag$borderRound = $mdgriffith$elm_ui$Internal$Flag$flag(17);\nvar $mdgriffith$elm_ui$Element$Border$rounded = function (radius) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$borderRound,\n\t\tA3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t'br-' + $elm$core$String$fromInt(radius),\n\t\t\t'border-radius',\n\t\t\t$elm$core$String$fromInt(radius) + 'px'));\n};\nvar $mdgriffith$elm_ui$Element$rgba255 = F4(\n\tfunction (red, green, blue, a) {\n\t\treturn A4($mdgriffith$elm_ui$Internal$Model$Rgba, red / 255, green / 255, blue / 255, a);\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$boxShadowClass = function (shadow) {\n\treturn $elm$core$String$concat(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tshadow.inset ? 'box-inset' : 'box-',\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$floatClass(shadow.offset.a) + 'px',\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$floatClass(shadow.offset.b) + 'px',\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$floatClass(shadow.blur) + 'px',\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$floatClass(shadow.size) + 'px',\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatColorClass(shadow.color)\n\t\t\t]));\n};\nvar $mdgriffith$elm_ui$Internal$Flag$shadows = $mdgriffith$elm_ui$Internal$Flag$flag(19);\nvar $mdgriffith$elm_ui$Element$Border$shadow = function (almostShade) {\n\tvar shade = {blur: almostShade.blur, color: almostShade.color, inset: false, offset: almostShade.offset, size: almostShade.size};\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$shadows,\n\t\tA3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$boxShadowClass(shade),\n\t\t\t'box-shadow',\n\t\t\t$mdgriffith$elm_ui$Internal$Model$formatBoxShadow(shade)));\n};\nvar $author$project$Helpers$Element$subtleShadow = $mdgriffith$elm_ui$Element$Border$shadow(\n\t{\n\t\tblur: 20,\n\t\tcolor: A4($mdgriffith$elm_ui$Element$rgba255, 0, 0, 0, 0.04),\n\t\toffset: _Utils_Tuple2(0, 3),\n\t\tsize: 0\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$BorderWidth = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: 'BorderWidth', a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $mdgriffith$elm_ui$Element$Border$width = function (v) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$borderWidth,\n\t\tA5(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$BorderWidth,\n\t\t\t'b-' + $elm$core$String$fromInt(v),\n\t\t\tv,\n\t\t\tv,\n\t\t\tv,\n\t\t\tv));\n};\nvar $author$project$View$userNotice = F2(\n\tfunction (dProfile, _v0) {\n\t\tvar id = _v0.a;\n\t\tvar notice = _v0.b;\n\t\tvar textColor = function () {\n\t\t\tvar _v2 = notice.noticeType;\n\t\t\tif (_v2.$ === 'Error') {\n\t\t\t\treturn A3($mdgriffith$elm_ui$Element$rgb, 1, 1, 1);\n\t\t\t} else {\n\t\t\t\treturn A3($mdgriffith$elm_ui$Element$rgb, 0, 0, 0);\n\t\t\t}\n\t\t}();\n\t\tvar color = function () {\n\t\t\tvar _v1 = notice.noticeType;\n\t\t\tswitch (_v1.$) {\n\t\t\t\tcase 'Update':\n\t\t\t\t\treturn A3($mdgriffith$elm_ui$Element$rgb255, 100, 200, 255);\n\t\t\t\tcase 'Caution':\n\t\t\t\t\treturn A3($mdgriffith$elm_ui$Element$rgb255, 255, 188, 0);\n\t\t\t\tcase 'Error':\n\t\t\t\t\treturn A3($mdgriffith$elm_ui$Element$rgb255, 255, 70, 70);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A3($mdgriffith$elm_ui$Element$rgb255, 200, 200, 200);\n\t\t\t}\n\t\t}();\n\t\tvar closeElement = A3(\n\t\t\t$author$project$Helpers$Element$closeButton,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$alignTop,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$moveUp(2)\n\t\t\t\t]),\n\t\t\t$author$project$Helpers$Element$black,\n\t\t\t$author$project$Types$DismissNotice(id));\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(color),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(\n\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 10, 5)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(\n\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 8, 3)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0.15)),\n\t\t\t\t\t$author$project$Helpers$Element$subtleShadow\n\t\t\t\t]),\n\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(4),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$indexedMap,\n\t\t\t\t\tF2(\n\t\t\t\t\t\tfunction (pNum, paragraphLines) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(textColor),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(1)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t(!pNum) ? A2($elm$core$List$cons, closeElement, paragraphLines) : paragraphLines);\n\t\t\t\t\t\t}),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t$elm$core$List$map(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$map($elm$core$Basics$never)),\n\t\t\t\t\t\tnotice.mainParagraphs))));\n\t});\nvar $author$project$View$viewUserNotices = F2(\n\tfunction (dProfile, notices) {\n\t\treturn _Utils_eq(notices, _List_Nil) ? _List_Nil : _List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$moveLeft(\n\t\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 20, 5)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$moveUp(\n\t\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 20, 5)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(\n\t\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 10, 5)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignBottom,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(\n\t\t\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 300, 150))),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(\n\t\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 15, 10))\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$author$project$View$userNotice(dProfile),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$filter,\n\t\t\t\t\t\tfunction (_v0) {\n\t\t\t\t\t\t\tvar notice = _v0.b;\n\t\t\t\t\t\t\treturn _Utils_eq(notice.align, $author$project$UserNotice$BottomRight);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$indexedMap,\n\t\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\t\tfunction (id, notice) {\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(id, notice);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnotices)))),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$moveRight(\n\t\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 20, 5)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$moveDown(100),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(\n\t\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 10, 5)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignLeft,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignTop,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(\n\t\t\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 300, 150))),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(\n\t\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 15, 10))\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$author$project$View$userNotice(dProfile),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$filter,\n\t\t\t\t\t\tfunction (_v1) {\n\t\t\t\t\t\t\tvar notice = _v1.b;\n\t\t\t\t\t\t\treturn _Utils_eq(notice.align, $author$project$UserNotice$TopLeft);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$indexedMap,\n\t\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\t\tfunction (id, notice) {\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(id, notice);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnotices))))\n\t\t\t]);\n\t});\nvar $author$project$View$render = function (model) {\n\tvar userNotices = A2(\n\t\t$elm$core$List$map,\n\t\t$mdgriffith$elm_ui$Element$inFront,\n\t\tA2($author$project$View$viewUserNotices, model.dProfile, model.userNotices));\n\tvar removeTapColor = A2($author$project$View$Attrs$style, '-webkit-tap-highlight-color', 'transparent');\n\tvar isMobile = _Utils_eq(model.dProfile, $author$project$Helpers$Element$Mobile);\n\tvar disableUserSelect = A2(\n\t\t$elm$core$List$map,\n\t\tfunction (prefix) {\n\t\t\treturn A2($author$project$View$Attrs$style, prefix + 'user-select', 'none');\n\t\t},\n\t\t_List_fromArray(\n\t\t\t['', '-ms-', '-moz-', '-webkit-']));\n\tvar mobileAttrs = isMobile ? A2($elm$core$List$cons, removeTapColor, disableUserSelect) : _List_Nil;\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$layoutWith,\n\t\t{\n\t\t\toptions: (isMobile ? $elm$core$List$cons($mdgriffith$elm_ui$Element$noHover) : $elm$core$Basics$identity)(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$focusStyle(\n\t\t\t\t\t\t{backgroundColor: $elm$core$Maybe$Nothing, borderColor: $elm$core$Maybe$Nothing, shadow: $elm$core$Maybe$Nothing})\n\t\t\t\t\t]))\n\t\t},\n\t\t_Utils_ap(\n\t\t\tuserNotices,\n\t\t\t_Utils_ap(\n\t\t\t\tmobileAttrs,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$author$project$View$Attrs$typeFont,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$image('./img/bg.webp')\n\t\t\t\t\t]))));\n};\nvar $mdgriffith$elm_ui$Internal$Model$Max = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Max', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Element$maximum = F2(\n\tfunction (i, l) {\n\t\treturn A2($mdgriffith$elm_ui$Internal$Model$Max, i, l);\n\t});\nvar $author$project$View$Attrs$cappedWidth = function (n) {\n\treturn $mdgriffith$elm_ui$Element$width(\n\t\tA2($mdgriffith$elm_ui$Element$maximum, n, $mdgriffith$elm_ui$Element$fill));\n};\nvar $mdgriffith$elm_ui$Internal$Model$CenterX = {$: 'CenterX'};\nvar $mdgriffith$elm_ui$Element$centerX = $mdgriffith$elm_ui$Internal$Model$AlignX($mdgriffith$elm_ui$Internal$Model$CenterX);\nvar $author$project$Types$GotoView = function (a) {\n\treturn {$: 'GotoView', a: a};\n};\nvar $author$project$Types$XDaiImport = {$: 'XDaiImport'};\nvar $mdgriffith$elm_ui$Internal$Model$Button = {$: 'Button'};\nvar $elm$html$Html$Attributes$boolProperty = F2(\n\tfunction (key, bool) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\t$elm$json$Json$Encode$bool(bool));\n\t});\nvar $elm$html$Html$Attributes$disabled = $elm$html$Html$Attributes$boolProperty('disabled');\nvar $mdgriffith$elm_ui$Element$Input$enter = 'Enter';\nvar $mdgriffith$elm_ui$Element$Input$hasFocusStyle = function (attr) {\n\tif (((attr.$ === 'StyleClass') && (attr.b.$ === 'PseudoSelector')) && (attr.b.a.$ === 'Focus')) {\n\t\tvar _v1 = attr.b;\n\t\tvar _v2 = _v1.a;\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$focusDefault = function (attrs) {\n\treturn A2($elm$core$List$any, $mdgriffith$elm_ui$Element$Input$hasFocusStyle, attrs) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Internal$Model$htmlClass('focusable');\n};\nvar $elm$virtual_dom$VirtualDom$MayPreventDefault = function (a) {\n\treturn {$: 'MayPreventDefault', a: a};\n};\nvar $elm$html$Html$Events$preventDefaultOn = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$elm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$MayPreventDefault(decoder));\n\t});\nvar $mdgriffith$elm_ui$Element$Input$onKeyLookup = function (lookup) {\n\tvar decode = function (code) {\n\t\tvar _v0 = lookup(code);\n\t\tif (_v0.$ === 'Nothing') {\n\t\t\treturn $elm$json$Json$Decode$fail('No key matched');\n\t\t} else {\n\t\t\tvar msg = _v0.a;\n\t\t\treturn $elm$json$Json$Decode$succeed(msg);\n\t\t}\n\t};\n\tvar isKey = A2(\n\t\t$elm$json$Json$Decode$andThen,\n\t\tdecode,\n\t\tA2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string));\n\treturn $mdgriffith$elm_ui$Internal$Model$Attr(\n\t\tA2(\n\t\t\t$elm$html$Html$Events$preventDefaultOn,\n\t\t\t'keydown',\n\t\t\tA2(\n\t\t\t\t$elm$json$Json$Decode$map,\n\t\t\t\tfunction (fired) {\n\t\t\t\t\treturn _Utils_Tuple2(fired, true);\n\t\t\t\t},\n\t\t\t\tisKey)));\n};\nvar $mdgriffith$elm_ui$Element$Input$space = ' ';\nvar $elm$html$Html$Attributes$tabindex = function (n) {\n\treturn A2(\n\t\t_VirtualDom_attribute,\n\t\t'tabIndex',\n\t\t$elm$core$String$fromInt(n));\n};\nvar $mdgriffith$elm_ui$Element$Input$button = F2(\n\tfunction (attrs, _v0) {\n\t\tvar onPress = _v0.onPress;\n\t\tvar label = _v0.label;\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentCenterX + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.seButton + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.noTextSelection)))))),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$focusDefault(attrs),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$Button),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$tabindex(0)),\n\t\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\t\tif (onPress.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$disabled(true)),\n\t\t\t\t\t\t\t\t\t\t\t\t\tattrs);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tvar msg = onPress.a;\n\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Events$onClick(msg),\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$onKeyLookup(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (code) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_eq(code, $mdgriffith$elm_ui$Element$Input$enter) ? $elm$core$Maybe$Just(msg) : (_Utils_eq(code, $mdgriffith$elm_ui$Element$Input$space) ? $elm$core$Maybe$Just(msg) : $elm$core$Maybe$Nothing);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tattrs));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}()))))))),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[label])));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$CenterY = {$: 'CenterY'};\nvar $mdgriffith$elm_ui$Element$centerY = $mdgriffith$elm_ui$Internal$Model$AlignY($mdgriffith$elm_ui$Internal$Model$CenterY);\nvar $mdgriffith$elm_ui$Internal$Model$Transparency = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Transparency', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$transparency = $mdgriffith$elm_ui$Internal$Flag$flag(0);\nvar $mdgriffith$elm_ui$Element$alpha = function (o) {\n\tvar transparency = function (x) {\n\t\treturn 1 - x;\n\t}(\n\t\tA2(\n\t\t\t$elm$core$Basics$min,\n\t\t\t1.0,\n\t\t\tA2($elm$core$Basics$max, 0.0, o)));\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$transparency,\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Transparency,\n\t\t\t'transparency-' + $mdgriffith$elm_ui$Internal$Model$floatClass(transparency),\n\t\t\ttransparency));\n};\nvar $author$project$View$Attrs$fade = $mdgriffith$elm_ui$Element$alpha(0.7);\nvar $mdgriffith$elm_ui$Internal$Model$Hover = {$: 'Hover'};\nvar $mdgriffith$elm_ui$Internal$Model$PseudoSelector = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'PseudoSelector', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$hover = $mdgriffith$elm_ui$Internal$Flag$flag(33);\nvar $elm$virtual_dom$VirtualDom$mapAttribute = _VirtualDom_mapAttribute;\nvar $mdgriffith$elm_ui$Internal$Model$mapAttrFromStyle = F2(\n\tfunction (fn, attr) {\n\t\tswitch (attr.$) {\n\t\t\tcase 'NoAttribute':\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$NoAttribute;\n\t\t\tcase 'Describe':\n\t\t\t\tvar description = attr.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Describe(description);\n\t\t\tcase 'AlignX':\n\t\t\t\tvar x = attr.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$AlignX(x);\n\t\t\tcase 'AlignY':\n\t\t\t\tvar y = attr.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$AlignY(y);\n\t\t\tcase 'Width':\n\t\t\t\tvar x = attr.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Width(x);\n\t\t\tcase 'Height':\n\t\t\t\tvar x = attr.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Height(x);\n\t\t\tcase 'Class':\n\t\t\t\tvar x = attr.a;\n\t\t\t\tvar y = attr.b;\n\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Model$Class, x, y);\n\t\t\tcase 'StyleClass':\n\t\t\t\tvar flag = attr.a;\n\t\t\t\tvar style = attr.b;\n\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Model$StyleClass, flag, style);\n\t\t\tcase 'Nearby':\n\t\t\t\tvar location = attr.a;\n\t\t\t\tvar elem = attr.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Nearby,\n\t\t\t\t\tlocation,\n\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$map, fn, elem));\n\t\t\tcase 'Attr':\n\t\t\t\tvar htmlAttr = attr.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\tA2($elm$virtual_dom$VirtualDom$mapAttribute, fn, htmlAttr));\n\t\t\tdefault:\n\t\t\t\tvar fl = attr.a;\n\t\t\t\tvar trans = attr.b;\n\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Model$TransformComponent, fl, trans);\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$removeNever = function (style) {\n\treturn A2($mdgriffith$elm_ui$Internal$Model$mapAttrFromStyle, $elm$core$Basics$never, style);\n};\nvar $mdgriffith$elm_ui$Internal$Model$unwrapDecsHelper = F2(\n\tfunction (attr, _v0) {\n\t\tvar styles = _v0.a;\n\t\tvar trans = _v0.b;\n\t\tvar _v1 = $mdgriffith$elm_ui$Internal$Model$removeNever(attr);\n\t\tswitch (_v1.$) {\n\t\t\tcase 'StyleClass':\n\t\t\t\tvar style = _v1.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2($elm$core$List$cons, style, styles),\n\t\t\t\t\ttrans);\n\t\t\tcase 'TransformComponent':\n\t\t\t\tvar flag = _v1.a;\n\t\t\t\tvar component = _v1.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tstyles,\n\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$composeTransformation, trans, component));\n\t\t\tdefault:\n\t\t\t\treturn _Utils_Tuple2(styles, trans);\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$unwrapDecorations = function (attrs) {\n\tvar _v0 = A3(\n\t\t$elm$core$List$foldl,\n\t\t$mdgriffith$elm_ui$Internal$Model$unwrapDecsHelper,\n\t\t_Utils_Tuple2(_List_Nil, $mdgriffith$elm_ui$Internal$Model$Untransformed),\n\t\tattrs);\n\tvar styles = _v0.a;\n\tvar transform = _v0.b;\n\treturn A2(\n\t\t$elm$core$List$cons,\n\t\t$mdgriffith$elm_ui$Internal$Model$Transform(transform),\n\t\tstyles);\n};\nvar $mdgriffith$elm_ui$Element$mouseOver = function (decs) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$hover,\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$PseudoSelector,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Hover,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$unwrapDecorations(decs)));\n};\nvar $author$project$View$Attrs$hover = $mdgriffith$elm_ui$Element$mouseOver(\n\t_List_fromArray(\n\t\t[$author$project$View$Attrs$fade]));\nvar $elm$html$Html$Attributes$alt = $elm$html$Html$Attributes$stringProperty('alt');\nvar $elm$html$Html$Attributes$src = function (url) {\n\treturn A2(\n\t\t$elm$html$Html$Attributes$stringProperty,\n\t\t'src',\n\t\t_VirtualDom_noJavaScriptOrHtmlUri(url));\n};\nvar $mdgriffith$elm_ui$Element$image = F2(\n\tfunction (attrs, _v0) {\n\t\tvar src = _v0.src;\n\t\tvar description = _v0.description;\n\t\tvar imageAttributes = A2(\n\t\t\t$elm$core$List$filter,\n\t\t\tfunction (a) {\n\t\t\t\tswitch (a.$) {\n\t\t\t\t\tcase 'Width':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase 'Height':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tattrs);\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.imageContainer),\n\t\t\t\tattrs),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA4(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NodeName('img'),\n\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$src(src)),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$alt(description))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\timageAttributes),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(_List_Nil))\n\t\t\t\t\t])));\n\t});\nvar $author$project$Types$ShowExpandedTrackedTxs = function (a) {\n\treturn {$: 'ShowExpandedTrackedTxs', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$Below = {$: 'Below'};\nvar $mdgriffith$elm_ui$Element$below = function (element) {\n\treturn A2($mdgriffith$elm_ui$Element$createNearby, $mdgriffith$elm_ui$Internal$Model$Below, element);\n};\nvar $elm$core$Dict$isEmpty = function (dict) {\n\tif (dict.$ === 'RBEmpty_elm_builtin') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm_community$maybe_extra$Maybe$Extra$isNothing = function (m) {\n\tif (m.$ === 'Nothing') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $author$project$Helpers$Tuple$mapEachTuple3 = F4(\n\tfunction (f1, f2, f3, _v0) {\n\t\tvar v1 = _v0.a;\n\t\tvar v2 = _v0.b;\n\t\tvar v3 = _v0.c;\n\t\treturn _Utils_Tuple3(\n\t\t\tf1(v1),\n\t\t\tf2(v2),\n\t\t\tf3(v3));\n\t});\nvar $TSFoster$elm_tuple_extra$Tuple3$mapFirst = F2(\n\tfunction (fn, _v0) {\n\t\tvar a = _v0.a;\n\t\tvar b = _v0.b;\n\t\tvar c = _v0.c;\n\t\treturn _Utils_Tuple3(\n\t\t\tfn(a),\n\t\t\tb,\n\t\t\tc);\n\t});\nvar $TSFoster$elm_tuple_extra$Tuple3$mapSecond = F2(\n\tfunction (fn, _v0) {\n\t\tvar a = _v0.a;\n\t\tvar b = _v0.b;\n\t\tvar c = _v0.c;\n\t\treturn _Utils_Tuple3(\n\t\t\ta,\n\t\t\tfn(b),\n\t\t\tc);\n\t});\nvar $TSFoster$elm_tuple_extra$Tuple3$mapThird = F2(\n\tfunction (fn, _v0) {\n\t\tvar a = _v0.a;\n\t\tvar b = _v0.b;\n\t\tvar c = _v0.c;\n\t\treturn _Utils_Tuple3(\n\t\t\ta,\n\t\t\tb,\n\t\t\tfn(c));\n\t});\nvar $author$project$Helpers$Tuple$mapTuple3 = F2(\n\tfunction (f, _v0) {\n\t\tvar first = _v0.a;\n\t\tvar second = _v0.b;\n\t\tvar third = _v0.c;\n\t\treturn _Utils_Tuple3(\n\t\t\tf(first),\n\t\t\tf(second),\n\t\t\tf(third));\n\t});\nvar $mdgriffith$elm_ui$Element$none = $mdgriffith$elm_ui$Internal$Model$Empty;\nvar $elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {\n\treturn {$: 'MayStopPropagation', a: a};\n};\nvar $elm$html$Html$Events$stopPropagationOn = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$elm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$MayStopPropagation(decoder));\n\t});\nvar $author$project$Helpers$Element$onClickNoPropagation = function (msg) {\n\treturn $mdgriffith$elm_ui$Element$htmlAttribute(\n\t\tA2(\n\t\t\t$elm$html$Html$Events$stopPropagationOn,\n\t\t\t'click',\n\t\t\t$elm$json$Json$Decode$succeed(\n\t\t\t\t_Utils_Tuple2(msg, true))));\n};\nvar $author$project$Theme$darkYellow = A3($mdgriffith$elm_ui$Element$rgb, 0.6, 0.6, 0);\nvar $author$project$Theme$green = A3($mdgriffith$elm_ui$Element$rgb255, 51, 183, 2);\nvar $author$project$Theme$softRed = A3($mdgriffith$elm_ui$Element$rgb255, 255, 0, 110);\nvar $author$project$View$trackedTxStatusToColor = function (txStatus) {\n\tswitch (txStatus.$) {\n\t\tcase 'Mining':\n\t\t\treturn $author$project$Theme$darkYellow;\n\t\tcase 'Mined':\n\t\t\treturn $author$project$Theme$green;\n\t\tdefault:\n\t\t\treturn $author$project$Theme$softRed;\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Border$glow = F2(\n\tfunction (clr, size) {\n\t\treturn $mdgriffith$elm_ui$Element$Border$shadow(\n\t\t\t{\n\t\t\t\tblur: size * 2,\n\t\t\t\tcolor: clr,\n\t\t\t\toffset: _Utils_Tuple2(0, 0),\n\t\t\t\tsize: size\n\t\t\t});\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$overflow = $mdgriffith$elm_ui$Internal$Flag$flag(20);\nvar $mdgriffith$elm_ui$Element$scrollbarY = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.scrollbarsY);\nvar $author$project$Theme$blue = A3($mdgriffith$elm_ui$Element$rgb, 0, 0, 1);\nvar $mdgriffith$elm_ui$Element$Font$italic = $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.italic);\nvar $elm$html$Html$Attributes$href = function (url) {\n\treturn A2(\n\t\t$elm$html$Html$Attributes$stringProperty,\n\t\t'href',\n\t\t_VirtualDom_noJavaScriptUri(url));\n};\nvar $elm$html$Html$Attributes$rel = _VirtualDom_attribute('rel');\nvar $elm$html$Html$Attributes$target = $elm$html$Html$Attributes$stringProperty('target');\nvar $mdgriffith$elm_ui$Element$newTabLink = F2(\n\tfunction (attrs, _v0) {\n\t\tvar url = _v0.url;\n\t\tvar label = _v0.label;\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$NodeName('a'),\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t$elm$html$Html$Attributes$href(url)),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t$elm$html$Html$Attributes$rel('noopener noreferrer')),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$target('_blank')),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentCenterX + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.link)))),\n\t\t\t\t\t\t\t\t\tattrs)))))),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[label])));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$AsRow = {$: 'AsRow'};\nvar $mdgriffith$elm_ui$Internal$Model$asRow = $mdgriffith$elm_ui$Internal$Model$AsRow;\nvar $mdgriffith$elm_ui$Element$row = F2(\n\tfunction (attrs, children) {\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asRow,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentLeft + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.contentCenterY)),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\t\tattrs))),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));\n\t});\nvar $author$project$Helpers$Eth$etherscanTxUrl = function (txHash) {\n\treturn 'https://etherscan.io/tx/' + $cmditch$elm_ethereum$Eth$Utils$txHashToString(txHash);\n};\nvar $author$project$Chain$txUrl = F2(\n\tfunction (chain, hash) {\n\t\tif (chain.$ === 'Eth') {\n\t\t\treturn $author$project$Helpers$Eth$etherscanTxUrl(hash);\n\t\t} else {\n\t\t\treturn 'https://blockscout.com/poa/xdai/tx/' + $cmditch$elm_ethereum$Eth$Utils$txHashToString(hash);\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Element$fromRgb = function (clr) {\n\treturn A4($mdgriffith$elm_ui$Internal$Model$Rgba, clr.red, clr.green, clr.blue, clr.alpha);\n};\nvar $mdgriffith$elm_ui$Element$toRgb = function (_v0) {\n\tvar r = _v0.a;\n\tvar g = _v0.b;\n\tvar b = _v0.c;\n\tvar a = _v0.d;\n\treturn {alpha: a, blue: b, green: g, red: r};\n};\nvar $author$project$Helpers$Element$withAlpha = F2(\n\tfunction (a, color) {\n\t\tvar oldRgba = $mdgriffith$elm_ui$Element$toRgb(color);\n\t\treturn $mdgriffith$elm_ui$Element$fromRgb(\n\t\t\t_Utils_update(\n\t\t\t\toldRgba,\n\t\t\t\t{alpha: a}));\n\t});\nvar $author$project$View$viewTrackedTxRow = function (trackedTx) {\n\tvar linkTextColor = A3($mdgriffith$elm_ui$Element$rgb, 0.5, 0.5, 1);\n\tvar titleEl = function () {\n\t\tvar _v4 = _Utils_Tuple2(trackedTx.txInfo, trackedTx.status);\n\t\tswitch (_v4.a.$) {\n\t\t\tcase 'TipTx':\n\t\t\t\tvar postId = _v4.a.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Tip '),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(linkTextColor),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Events$onClick(\n\t\t\t\t\t\t\t\t\t$author$project$Types$GotoView(\n\t\t\t\t\t\t\t\t\t\t$author$project$Types$ViewPost(postId)))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Post'))\n\t\t\t\t\t\t]));\n\t\t\tcase 'BurnTx':\n\t\t\t\tvar postId = _v4.a.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Burn for '),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(linkTextColor),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Events$onClick(\n\t\t\t\t\t\t\t\t\t$author$project$Types$GotoView(\n\t\t\t\t\t\t\t\t\t\t$author$project$Types$ViewPost(postId)))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Post'))\n\t\t\t\t\t\t]));\n\t\t\tdefault:\n\t\t\t\tif (_v4.b.$ === 'Mined') {\n\t\t\t\t\tvar _v5 = _v4.a;\n\t\t\t\t\treturn $mdgriffith$elm_ui$Element$text('Post');\n\t\t\t\t} else {\n\t\t\t\t\tvar _v6 = _v4.a;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(8)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Post'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(linkTextColor),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('(View Draft)'))\n\t\t\t\t\t\t\t]));\n\t\t\t\t}\n\t\t}\n\t}();\n\tvar etherscanLink = function (label) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$italic,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(linkTextColor)\n\t\t\t\t]),\n\t\t\t{\n\t\t\t\tlabel: $mdgriffith$elm_ui$Element$text(label),\n\t\t\t\turl: A2($author$project$Chain$txUrl, trackedTx.chain, trackedTx.txHash)\n\t\t\t});\n\t};\n\tvar statusEl = function () {\n\t\tvar _v0 = trackedTx.status;\n\t\tswitch (_v0.$) {\n\t\t\tcase 'Mining':\n\t\t\t\treturn etherscanLink('Mining');\n\t\t\tcase 'Failed':\n\t\t\t\tvar failReason = _v0.a;\n\t\t\t\treturn etherscanLink('Failed');\n\t\t\tdefault:\n\t\t\t\tvar maybePostId = _v0.a;\n\t\t\t\tvar _v2 = trackedTx.txInfo;\n\t\t\t\tif (_v2.$ === 'PostTx') {\n\t\t\t\t\tif (maybePostId.$ === 'Just') {\n\t\t\t\t\t\tvar postId = maybePostId.a;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Theme$blue),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Events$onClick(\n\t\t\t\t\t\t\t\t\t$author$project$Types$GotoView(\n\t\t\t\t\t\t\t\t\t\t$author$project$Types$ViewPost(postId)))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Published'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn etherscanLink('Mined');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn etherscanLink('Mined');\n\t\t\t\t}\n\t\t}\n\t}();\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$row,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t$mdgriffith$elm_ui$Element$px(250)),\n\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$Helpers$Element$withAlpha,\n\t\t\t\t\t0.3,\n\t\t\t\t\t$author$project$View$trackedTxStatusToColor(trackedTx.status))),\n\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(2),\n\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0.3)),\n\t\t\t\t$mdgriffith$elm_ui$Element$padding(4),\n\t\t\t\t$mdgriffith$elm_ui$Element$spacing(4),\n\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(20)\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\ttitleEl,\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[$mdgriffith$elm_ui$Element$alignRight]),\n\t\t\t\tstatusEl)\n\t\t\t]));\n};\nvar $author$project$View$trackedTxsColumn = function (trackedTxs) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$column,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\tA3($mdgriffith$elm_ui$Element$rgb, 0, 0, 0)),\n\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\tA3($mdgriffith$elm_ui$Element$rgb, 1, 1, 1)),\n\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(3),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$Border$glow,\n\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0.2),\n\t\t\t\t4),\n\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\tA2($mdgriffith$elm_ui$Element$maximum, 400, $mdgriffith$elm_ui$Element$shrink)),\n\t\t\t\t$mdgriffith$elm_ui$Element$scrollbarY,\n\t\t\t\t$mdgriffith$elm_ui$Element$alignRight\n\t\t\t]),\n\t\tA2($elm$core$List$map, $author$project$View$viewTrackedTxRow, trackedTxs));\n};\nvar $author$project$Helpers$Tuple$tuple3ToList = function (_v0) {\n\tvar a = _v0.a;\n\tvar b = _v0.b;\n\tvar c = _v0.c;\n\treturn _List_fromArray(\n\t\t[a, b, c]);\n};\nvar $author$project$View$maybeTxTracker = F3(\n\tfunction (dProfile, showExpanded, trackedTxs_) {\n\t\tif ($elm$core$Dict$isEmpty(trackedTxs_)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar trackedTxs = $elm$core$Dict$values(trackedTxs_);\n\t\t\tvar tallyFunc = F2(\n\t\t\t\tfunction (trackedTx, totals) {\n\t\t\t\t\tvar _v0 = trackedTx.status;\n\t\t\t\t\tswitch (_v0.$) {\n\t\t\t\t\t\tcase 'Mining':\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$TSFoster$elm_tuple_extra$Tuple3$mapFirst,\n\t\t\t\t\t\t\t\t$elm$core$Basics$add(1),\n\t\t\t\t\t\t\t\ttotals);\n\t\t\t\t\t\tcase 'Mined':\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$TSFoster$elm_tuple_extra$Tuple3$mapSecond,\n\t\t\t\t\t\t\t\t$elm$core$Basics$add(1),\n\t\t\t\t\t\t\t\ttotals);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$TSFoster$elm_tuple_extra$Tuple3$mapThird,\n\t\t\t\t\t\t\t\t$elm$core$Basics$add(1),\n\t\t\t\t\t\t\t\ttotals);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tvar tallies = A3(\n\t\t\t\t$elm$core$List$foldl,\n\t\t\t\ttallyFunc,\n\t\t\t\t_Utils_Tuple3(0, 0, 0),\n\t\t\t\ttrackedTxs);\n\t\t\tvar renderedTallyEls = $author$project$Helpers$Tuple$tuple3ToList(\n\t\t\t\tA4(\n\t\t\t\t\t$author$project$Helpers$Tuple$mapEachTuple3,\n\t\t\t\t\t$elm$core$Maybe$map(\n\t\t\t\t\t\tfunction (n) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(\n\t\t\t\t\t\t\t\t\t\t$author$project$View$trackedTxStatusToColor($author$project$Types$Mining))\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(n) + ' TXs mining'));\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Maybe$map(\n\t\t\t\t\t\tfunction (n) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(\n\t\t\t\t\t\t\t\t\t\t$author$project$View$trackedTxStatusToColor(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Types$Mined($elm$core$Maybe$Nothing)))\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(n) + ' TXs mined'));\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Maybe$map(\n\t\t\t\t\t\tfunction (n) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(\n\t\t\t\t\t\t\t\t\t\t$author$project$View$trackedTxStatusToColor(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Types$Failed($author$project$Types$MinedButExecutionFailed)))\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(n) + ' TXs failed'));\n\t\t\t\t\t\t}),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Helpers$Tuple$mapTuple3,\n\t\t\t\t\t\tfunction (n) {\n\t\t\t\t\t\t\treturn (!n) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(n);\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttallies)));\n\t\t\treturn A2($elm$core$List$all, $elm_community$maybe_extra$Maybe$Extra$isNothing, renderedTallyEls) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(\n\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$below(\n\t\t\t\t\t\t\tshowExpanded ? A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$alignRight, $mdgriffith$elm_ui$Element$alignTop]),\n\t\t\t\t\t\t\t\t$author$project$View$trackedTxsColumn(trackedTxs)) : $mdgriffith$elm_ui$Element$none)\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(5),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Element$rgb, 0.2, 0.2, 0.2)),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(\n\t\t\t\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 10, 5)),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(\n\t\t\t\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 10, 5)),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(\n\t\t\t\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 20, 12)),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t\t\t\t\t$author$project$Helpers$Element$onClickNoPropagation(\n\t\t\t\t\t\t\t\tshowExpanded ? $author$project$Types$ShowExpandedTrackedTxs(false) : $author$project$Types$ShowExpandedTrackedTxs(true))\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t$elm$core$Maybe$withDefault($mdgriffith$elm_ui$Element$none),\n\t\t\t\t\t\t\trenderedTallyEls))));\n\t\t}\n\t});\nvar $author$project$Helpers$Element$moveToFront = $mdgriffith$elm_ui$Element$htmlAttribute(\n\tA2($elm$html$Html$Attributes$style, 'z-index', '1000'));\nvar $author$project$Theme$orange = A3($mdgriffith$elm_ui$Element$rgb255, 247, 155, 48);\nvar $mdgriffith$elm_ui$Element$paddingXY = F2(\n\tfunction (x, y) {\n\t\tif (_Utils_eq(x, y)) {\n\t\t\tvar f = x;\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$padding,\n\t\t\t\tA5(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$PaddingStyle,\n\t\t\t\t\t'p-' + $elm$core$String$fromInt(x),\n\t\t\t\t\tf,\n\t\t\t\t\tf,\n\t\t\t\t\tf,\n\t\t\t\t\tf));\n\t\t} else {\n\t\t\tvar yFloat = y;\n\t\t\tvar xFloat = x;\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$padding,\n\t\t\t\tA5(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$PaddingStyle,\n\t\t\t\t\t'p-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y))),\n\t\t\t\t\tyFloat,\n\t\t\t\t\txFloat,\n\t\t\t\t\tyFloat,\n\t\t\t\t\txFloat));\n\t\t}\n\t});\nvar $author$project$View$Attrs$roundBorder = $mdgriffith$elm_ui$Element$Border$rounded(5);\nvar $author$project$View$Attrs$sansSerifFont = $mdgriffith$elm_ui$Element$Font$family(\n\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$Font$typeface('DDin')\n\t\t]));\nvar $mdgriffith$elm_ui$Element$spaceEvenly = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$spacing, $mdgriffith$elm_ui$Internal$Style$classes.spaceEvenly);\nvar $author$project$View$Common$when = F2(\n\tfunction (b, elem) {\n\t\treturn b ? elem : $mdgriffith$elm_ui$Element$none;\n\t});\nvar $author$project$View$Attrs$whiteGlowAttribute = A2(\n\t$mdgriffith$elm_ui$Element$Border$glow,\n\tA4($mdgriffith$elm_ui$Element$rgba, 1, 1, 1, 0.4),\n\t5);\nvar $author$project$View$header = function (model) {\n\tvar isMobile = _Utils_eq(model.dProfile, $author$project$Helpers$Element$Mobile);\n\tvar sidePadding = isMobile ? A2($mdgriffith$elm_ui$Element$paddingXY, 15, 15) : A2($mdgriffith$elm_ui$Element$paddingXY, 100, 20);\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$el,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\tsidePadding,\n\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black),\n\t\t\t\t$author$project$View$Attrs$whiteGlowAttribute,\n\t\t\t\t$author$project$Helpers$Element$moveToFront\n\t\t\t]),\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Theme$orange),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spaceEvenly,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$centerY\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$author$project$View$Attrs$hover]),\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: A2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$image,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(50))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t{description: 'smokesignal logo', src: './img/smokesignal-logo-horizontal.svg'}),\n\t\t\t\t\t\tonPress: $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t$author$project$Types$GotoView($author$project$Types$ViewHome))\n\t\t\t\t\t}),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(40)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\t\t\t!isMobile,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$none,\n\t\t\t\t\t\t\t\tA3($author$project$View$maybeTxTracker, model.dProfile, model.showExpandedTrackedTxs, model.trackedTxs))),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\t\t\t\t!isMobile,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$black),\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$hover,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$orange),\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$roundBorder,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$sansSerifFont\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$text('Import xDai'),\n\t\t\t\t\t\t\t\t\t\tonPress: $elm$core$Maybe$Just($author$project$Types$XDaiImport)\n\t\t\t\t\t\t\t\t\t}))),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$author$project$View$Attrs$hover]),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$image,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(50))\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t{description: '', src: './img/foundry-icon.svg'}),\n\t\t\t\t\t\t\t\turl: 'https://foundrydao.com/'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]))\n\t\t\t\t])));\n};\nvar $author$project$View$maxContentColWidth = 1200;\nvar $author$project$View$Common$whenAttr = function (bool) {\n\treturn bool ? $elm$core$Basics$identity : $elm$core$Basics$always(\n\t\t$mdgriffith$elm_ui$Element$below($mdgriffith$elm_ui$Element$none));\n};\nvar $author$project$View$Common$whenJust = function (fn) {\n\treturn A2(\n\t\t$elm$core$Basics$composeR,\n\t\t$elm$core$Maybe$map(fn),\n\t\t$elm$core$Maybe$withDefault($mdgriffith$elm_ui$Element$none));\n};\nvar $author$project$Helpers$Element$white = A3($mdgriffith$elm_ui$Element$rgb, 1, 1, 1);\nvar $author$project$View$Mobile$viewNav = F5(\n\tfunction (curr, view, icon, name, dot) {\n\t\tvar active = function () {\n\t\t\tswitch (view.$) {\n\t\t\t\tcase 'ViewHome':\n\t\t\t\t\treturn _Utils_eq(curr, $author$project$Types$ViewHome);\n\t\t\t\tcase 'ViewTopics':\n\t\t\t\t\tswitch (curr.$) {\n\t\t\t\t\t\tcase 'ViewTopics':\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\tcase 'ViewTopic':\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\tcase 'ViewWallet':\n\t\t\t\t\treturn _Utils_eq(curr, $author$project$Types$ViewWallet);\n\t\t\t\tcase 'ViewTxns':\n\t\t\t\t\treturn _Utils_eq(curr, $author$project$Types$ViewTxns);\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}();\n\t\tvar color = active ? $author$project$Theme$orange : $author$project$Helpers$Element$white;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\t{\n\t\t\t\tlabel: A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Common$whenAttr,\n\t\t\t\t\t\t\t!_Utils_eq(dot, $elm$core$Maybe$Nothing),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$inFront(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Common$whenJust,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt,\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el(\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerY, $mdgriffith$elm_ui$Element$centerX])),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(25)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(25)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(17),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$green),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(15)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 15, 0),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignTop,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])))))),\n\t\t\t\t\t\t\t\t\tdot))),\n\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 0, 10)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(20),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(40)),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(40)),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(color),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$inFront(\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$image,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerY,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(30))\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t{description: '', src: './img/icon/' + (icon + '.svg')}))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$none),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(color)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(name))\n\t\t\t\t\t\t])),\n\t\t\t\tonPress: $elm$core$Maybe$Just(\n\t\t\t\t\t$author$project$Types$GotoView(view))\n\t\t\t});\n\t});\nvar $author$project$View$Mobile$navBar = function (model) {\n\tvar txDot = function (n) {\n\t\treturn (!n) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(n);\n\t}(\n\t\t$elm$core$Dict$size(model.trackedTxs));\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$row,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black)\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA5($author$project$View$Mobile$viewNav, model.view, $author$project$Types$ViewHome, 'home', 'Home', $elm$core$Maybe$Nothing),\n\t\t\t\tA5($author$project$View$Mobile$viewNav, model.view, $author$project$Types$ViewTopics, 'label', 'Topics', $elm$core$Maybe$Nothing),\n\t\t\t\tA5($author$project$View$Mobile$viewNav, model.view, $author$project$Types$ViewWallet, 'wallet', 'Wallet', $elm$core$Maybe$Nothing),\n\t\t\t\tA5($author$project$View$Mobile$viewNav, model.view, $author$project$Types$ViewTxns, 'txn', 'Txns', txDot)\n\t\t\t]));\n};\nvar $author$project$Types$ComposeClose = {$: 'ComposeClose'};\nvar $mdgriffith$elm_ui$Internal$Flag$fontAlignment = $mdgriffith$elm_ui$Internal$Flag$flag(12);\nvar $mdgriffith$elm_ui$Element$Font$center = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontAlignment, $mdgriffith$elm_ui$Internal$Style$classes.textCenter);\nvar $author$project$Types$ComposeTitleChange = function (a) {\n\treturn {$: 'ComposeTitleChange', a: a};\n};\nvar $author$project$Types$PreviewSet = function (a) {\n\treturn {$: 'PreviewSet', a: a};\n};\nvar $author$project$Types$SanitizeTopic = {$: 'SanitizeTopic'};\nvar $author$project$Types$SubmitDraft = {$: 'SubmitDraft'};\nvar $author$project$Types$TopicInputChange = function (a) {\n\treturn {$: 'TopicInputChange', a: a};\n};\nvar $mdgriffith$elm_ui$Element$Font$underline = $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.underline);\nvar $author$project$View$Common$cancel = function (msg) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t_List_fromArray(\n\t\t\t[$mdgriffith$elm_ui$Element$Font$underline, $author$project$View$Attrs$hover, $author$project$View$Attrs$sansSerifFont]),\n\t\t{\n\t\t\tlabel: $mdgriffith$elm_ui$Element$text('Cancel'),\n\t\t\tonPress: $elm$core$Maybe$Just(msg)\n\t\t});\n};\nvar $mdgriffith$elm_ui$Internal$Model$LivePolite = {$: 'LivePolite'};\nvar $mdgriffith$elm_ui$Element$Region$announce = $mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$LivePolite);\nvar $mdgriffith$elm_ui$Element$Input$applyLabel = F3(\n\tfunction (attrs, label, input) {\n\t\tif (label.$ === 'HiddenLabel') {\n\t\t\tvar labelText = label.a;\n\t\t\treturn A4(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asColumn,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NodeName('label'),\n\t\t\t\tattrs,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[input])));\n\t\t} else {\n\t\t\tvar position = label.a;\n\t\t\tvar labelAttrs = label.b;\n\t\t\tvar labelChild = label.c;\n\t\t\tvar labelElement = A4(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\t\tlabelAttrs,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[labelChild])));\n\t\t\tswitch (position.$) {\n\t\t\t\tcase 'Above':\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asColumn,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NodeName('label'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputLabel),\n\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[labelElement, input])));\n\t\t\t\tcase 'Below':\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asColumn,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NodeName('label'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputLabel),\n\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[input, labelElement])));\n\t\t\t\tcase 'OnRight':\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asRow,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NodeName('label'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputLabel),\n\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[input, labelElement])));\n\t\t\t\tdefault:\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asRow,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NodeName('label'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputLabel),\n\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[labelElement, input])));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$html$Html$Attributes$attribute = $elm$virtual_dom$VirtualDom$attribute;\nvar $mdgriffith$elm_ui$Internal$Model$Label = function (a) {\n\treturn {$: 'Label', a: a};\n};\nvar $mdgriffith$elm_ui$Element$Input$hiddenLabelAttribute = function (label) {\n\tif (label.$ === 'HiddenLabel') {\n\t\tvar textLabel = label.a;\n\t\treturn $mdgriffith$elm_ui$Internal$Model$Describe(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Label(textLabel));\n\t} else {\n\t\treturn $mdgriffith$elm_ui$Internal$Model$NoAttribute;\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$isHiddenLabel = function (label) {\n\tif (label.$ === 'HiddenLabel') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$tabindex = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Attributes$tabindex);\nvar $mdgriffith$elm_ui$Element$Input$checkbox = F2(\n\tfunction (attrs, _v0) {\n\t\tvar label = _v0.label;\n\t\tvar icon = _v0.icon;\n\t\tvar checked = _v0.checked;\n\t\tvar onChange = _v0.onChange;\n\t\tvar attributes = _Utils_ap(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$isHiddenLabel(label) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Element$spacing(6),\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t$elm$html$Html$Events$onClick(\n\t\t\t\t\t\tonChange(!checked))),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Region$announce,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$onKeyLookup(\n\t\t\t\t\tfunction (code) {\n\t\t\t\t\t\treturn _Utils_eq(code, $mdgriffith$elm_ui$Element$Input$enter) ? $elm$core$Maybe$Just(\n\t\t\t\t\t\t\tonChange(!checked)) : (_Utils_eq(code, $mdgriffith$elm_ui$Element$Input$space) ? $elm$core$Maybe$Just(\n\t\t\t\t\t\t\tonChange(!checked)) : $elm$core$Maybe$Nothing);\n\t\t\t\t\t}),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$tabindex(0),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$alignLeft,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\tattrs);\n\t\treturn A3(\n\t\t\t$mdgriffith$elm_ui$Element$Input$applyLabel,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\tA2($elm$html$Html$Attributes$attribute, 'role', 'checkbox')),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$attribute,\n\t\t\t\t\t\t\t'aria-checked',\n\t\t\t\t\t\t\tchecked ? 'true' : 'false')),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$hiddenLabelAttribute(label),\n\t\t\t\t\t\tattributes))),\n\t\t\tlabel,\n\t\t\tA4(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerY,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink)\n\t\t\t\t\t]),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\ticon(checked)\n\t\t\t\t\t\t]))));\n\t});\nvar $mdgriffith$elm_ui$Element$Input$HiddenLabel = function (a) {\n\treturn {$: 'HiddenLabel', a: a};\n};\nvar $mdgriffith$elm_ui$Element$Input$labelHidden = $mdgriffith$elm_ui$Element$Input$HiddenLabel;\nvar $mdgriffith$elm_ui$Element$Input$Label = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'Label', a: a, b: b, c: c};\n\t});\nvar $mdgriffith$elm_ui$Element$Input$OnLeft = {$: 'OnLeft'};\nvar $mdgriffith$elm_ui$Element$Input$labelLeft = $mdgriffith$elm_ui$Element$Input$Label($mdgriffith$elm_ui$Element$Input$OnLeft);\nvar $elm$html$Html$Events$onBlur = function (msg) {\n\treturn A2(\n\t\t$elm$html$Html$Events$on,\n\t\t'blur',\n\t\t$elm$json$Json$Decode$succeed(msg));\n};\nvar $mdgriffith$elm_ui$Element$Events$onLoseFocus = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onBlur);\nvar $mdgriffith$elm_ui$Element$Input$Placeholder = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Placeholder', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Element$Input$placeholder = $mdgriffith$elm_ui$Element$Input$Placeholder;\nvar $elm$svg$Svg$Attributes$d = _VirtualDom_attribute('d');\nvar $elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');\nvar $elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');\nvar $elm$svg$Svg$g = $elm$svg$Svg$trustedNode('g');\nvar $elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');\nvar $author$project$View$Img$height = A2($elm$core$Basics$composeR, $elm$core$String$fromInt, $elm$svg$Svg$Attributes$height);\nvar $elm$svg$Svg$path = $elm$svg$Svg$trustedNode('path');\nvar $author$project$View$Img$rgb = A2(\n\t$elm$core$Basics$composeR,\n\t$mdgriffith$elm_ui$Element$toRgb,\n\tA2(\n\t\t$elm$core$Basics$composeR,\n\t\tfunction (_v0) {\n\t\t\tvar red = _v0.red;\n\t\t\tvar green = _v0.green;\n\t\t\tvar blue = _v0.blue;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[red, green, blue]);\n\t\t},\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$elm$core$List$map(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t$elm$core$Basics$mul(255),\n\t\t\t\t\tA2($elm$core$Basics$composeR, $elm$core$Basics$round, $elm$core$String$fromInt))),\n\t\t\tA2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t$elm$core$String$join(', '),\n\t\t\t\tfunction (str) {\n\t\t\t\t\treturn 'rgb(' + (str + ')');\n\t\t\t\t}))));\nvar $elm$svg$Svg$Attributes$stroke = _VirtualDom_attribute('stroke');\nvar $elm$svg$Svg$Attributes$strokeLinejoin = _VirtualDom_attribute('stroke-linejoin');\nvar $elm$svg$Svg$Attributes$strokeWidth = _VirtualDom_attribute('stroke-width');\nvar $elm$svg$Svg$svg = $elm$svg$Svg$trustedNode('svg');\nvar $elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');\nvar $elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');\nvar $author$project$View$Img$width = A2($elm$core$Basics$composeR, $elm$core$String$fromInt, $elm$svg$Svg$Attributes$width);\nvar $mdgriffith$elm_ui$Internal$Model$unstyled = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Unstyled, $elm$core$Basics$always);\nvar $mdgriffith$elm_ui$Element$html = $mdgriffith$elm_ui$Internal$Model$unstyled;\nvar $author$project$View$Img$wrap = A2(\n\t$elm$core$Basics$composeR,\n\t$mdgriffith$elm_ui$Element$html,\n\t$mdgriffith$elm_ui$Element$el(_List_Nil));\nvar $author$project$View$Img$replyArrow = F2(\n\tfunction (size, color) {\n\t\treturn $author$project$View$Img$wrap(\n\t\t\tA2(\n\t\t\t\t$elm$svg$Svg$svg,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox('0 0 73 63'),\n\t\t\t\t\t\t$author$project$View$Img$height(size),\n\t\t\t\t\t\t$author$project$View$Img$width(size)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$svg$Svg$g,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('none'),\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$stroke(\n\t\t\t\t\t\t\t\t$author$project$View$Img$rgb(color)),\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$strokeWidth('6.2')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$strokeLinejoin('round'),\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M70 0v23c0 16-12 22-23 23H5')\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M2 48l18-19M2 44l19 17')\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])));\n\t});\nvar $mdgriffith$elm_ui$Element$Border$roundEach = function (_v0) {\n\tvar topLeft = _v0.topLeft;\n\tvar topRight = _v0.topRight;\n\tvar bottomLeft = _v0.bottomLeft;\n\tvar bottomRight = _v0.bottomRight;\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$borderRound,\n\t\tA3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t'br-' + ($elm$core$String$fromInt(topLeft) + ('-' + ($elm$core$String$fromInt(topRight) + ($elm$core$String$fromInt(bottomLeft) + ('-' + $elm$core$String$fromInt(bottomRight)))))),\n\t\t\t'border-radius',\n\t\t\t$elm$core$String$fromInt(topLeft) + ('px ' + ($elm$core$String$fromInt(topRight) + ('px ' + ($elm$core$String$fromInt(bottomRight) + ('px ' + ($elm$core$String$fromInt(bottomLeft) + 'px'))))))));\n};\nvar $author$project$View$Attrs$slightRound = $mdgriffith$elm_ui$Element$Border$rounded(1);\nvar $author$project$View$Attrs$rotate = A2($author$project$View$Attrs$style, 'animation', 'rotation 0.7s infinite linear');\nvar $author$project$View$Img$spinner = F2(\n\tfunction (size, color) {\n\t\treturn $author$project$View$Img$wrap(\n\t\t\tA2(\n\t\t\t\t$elm$svg$Svg$svg,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox('0 0 512 512'),\n\t\t\t\t\t\t$author$project$View$Img$height(size),\n\t\t\t\t\t\t$author$project$View$Img$width(size)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill(\n\t\t\t\t\t\t\t\t$author$project$View$Img$rgb(color)),\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M288 39.056v16.659c0 10.804 7.281 20.159 17.686 23.066C383.204 100.434 440 171.518 440 256c0 101.689-82.295 184-184 184-101.689 0-184-82.295-184-184 0-84.47 56.786-155.564 134.312-177.219C216.719 75.874 224 66.517 224 55.712V39.064c0-15.709-14.834-27.153-30.046-23.234C86.603 43.482 7.394 141.206 8.003 257.332c.72 137.052 111.477 246.956 248.531 246.667C393.255 503.711 504 392.788 504 256c0-115.633-79.14-212.779-186.211-240.236C302.678 11.889 288 23.456 288 39.056z')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t])));\n\t});\nvar $author$project$View$Common$spinner = F2(\n\tfunction (size, color) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_List_fromArray(\n\t\t\t\t[$author$project$View$Attrs$rotate]),\n\t\t\tA2($author$project$View$Img$spinner, size, color));\n\t});\nvar $mdgriffith$elm_ui$Element$Input$TextInputNode = function (a) {\n\treturn {$: 'TextInputNode', a: a};\n};\nvar $mdgriffith$elm_ui$Element$Input$TextArea = {$: 'TextArea'};\nvar $mdgriffith$elm_ui$Element$Input$autofill = A2(\n\t$elm$core$Basics$composeL,\n\t$mdgriffith$elm_ui$Internal$Model$Attr,\n\t$elm$html$Html$Attributes$attribute('autocomplete'));\nvar $mdgriffith$elm_ui$Internal$Model$Behind = {$: 'Behind'};\nvar $mdgriffith$elm_ui$Element$behindContent = function (element) {\n\treturn A2($mdgriffith$elm_ui$Element$createNearby, $mdgriffith$elm_ui$Internal$Model$Behind, element);\n};\nvar $mdgriffith$elm_ui$Element$Input$calcMoveToCompensateForPadding = function (attrs) {\n\tvar gatherSpacing = F2(\n\t\tfunction (attr, found) {\n\t\t\tif ((attr.$ === 'StyleClass') && (attr.b.$ === 'SpacingStyle')) {\n\t\t\t\tvar _v2 = attr.b;\n\t\t\t\tvar x = _v2.b;\n\t\t\t\tvar y = _v2.c;\n\t\t\t\tif (found.$ === 'Nothing') {\n\t\t\t\t\treturn $elm$core$Maybe$Just(y);\n\t\t\t\t} else {\n\t\t\t\t\treturn found;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn found;\n\t\t\t}\n\t\t});\n\tvar _v0 = A3($elm$core$List$foldr, gatherSpacing, $elm$core$Maybe$Nothing, attrs);\n\tif (_v0.$ === 'Nothing') {\n\t\treturn $mdgriffith$elm_ui$Internal$Model$NoAttribute;\n\t} else {\n\t\tvar vSpace = _v0.a;\n\t\treturn $mdgriffith$elm_ui$Element$moveUp(\n\t\t\t$elm$core$Basics$floor(vSpace / 2));\n\t}\n};\nvar $mdgriffith$elm_ui$Element$clip = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.clip);\nvar $mdgriffith$elm_ui$Element$Input$darkGrey = A3($mdgriffith$elm_ui$Element$rgb, 186 / 255, 189 / 255, 182 / 255);\nvar $mdgriffith$elm_ui$Element$Input$defaultTextPadding = A2($mdgriffith$elm_ui$Element$paddingXY, 12, 12);\nvar $mdgriffith$elm_ui$Element$Input$white = A3($mdgriffith$elm_ui$Element$rgb, 1, 1, 1);\nvar $mdgriffith$elm_ui$Element$Input$defaultTextBoxStyle = _List_fromArray(\n\t[\n\t\t$mdgriffith$elm_ui$Element$Input$defaultTextPadding,\n\t\t$mdgriffith$elm_ui$Element$Border$rounded(3),\n\t\t$mdgriffith$elm_ui$Element$Border$color($mdgriffith$elm_ui$Element$Input$darkGrey),\n\t\t$mdgriffith$elm_ui$Element$Background$color($mdgriffith$elm_ui$Element$Input$white),\n\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink)\n\t]);\nvar $mdgriffith$elm_ui$Element$Input$getHeight = function (attr) {\n\tif (attr.$ === 'Height') {\n\t\tvar h = attr.a;\n\t\treturn $elm$core$Maybe$Just(h);\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$isConstrained = function (len) {\n\tisConstrained:\n\twhile (true) {\n\t\tswitch (len.$) {\n\t\t\tcase 'Content':\n\t\t\t\treturn false;\n\t\t\tcase 'Px':\n\t\t\t\treturn true;\n\t\t\tcase 'Fill':\n\t\t\t\treturn true;\n\t\t\tcase 'Min':\n\t\t\t\tvar l = len.b;\n\t\t\t\tvar $temp$len = l;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tcontinue isConstrained;\n\t\t\tdefault:\n\t\t\t\tvar l = len.b;\n\t\t\t\treturn true;\n\t\t}\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$isStacked = function (label) {\n\tif (label.$ === 'Label') {\n\t\tvar loc = label.a;\n\t\tswitch (loc.$) {\n\t\t\tcase 'OnRight':\n\t\t\t\treturn false;\n\t\t\tcase 'OnLeft':\n\t\t\t\treturn false;\n\t\t\tcase 'Above':\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t} else {\n\t\treturn true;\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$negateBox = function (box) {\n\treturn {bottom: -box.bottom, left: -box.left, right: -box.right, top: -box.top};\n};\nvar $elm$html$Html$Events$alwaysStop = function (x) {\n\treturn _Utils_Tuple2(x, true);\n};\nvar $elm$json$Json$Decode$at = F2(\n\tfunction (fields, decoder) {\n\t\treturn A3($elm$core$List$foldr, $elm$json$Json$Decode$field, decoder, fields);\n\t});\nvar $elm$html$Html$Events$targetValue = A2(\n\t$elm$json$Json$Decode$at,\n\t_List_fromArray(\n\t\t['target', 'value']),\n\t$elm$json$Json$Decode$string);\nvar $elm$html$Html$Events$onInput = function (tagger) {\n\treturn A2(\n\t\t$elm$html$Html$Events$stopPropagationOn,\n\t\t'input',\n\t\tA2(\n\t\t\t$elm$json$Json$Decode$map,\n\t\t\t$elm$html$Html$Events$alwaysStop,\n\t\t\tA2($elm$json$Json$Decode$map, tagger, $elm$html$Html$Events$targetValue)));\n};\nvar $mdgriffith$elm_ui$Internal$Model$paddingName = F4(\n\tfunction (top, right, bottom, left) {\n\t\treturn 'pad-' + ($elm$core$String$fromInt(top) + ('-' + ($elm$core$String$fromInt(right) + ('-' + ($elm$core$String$fromInt(bottom) + ('-' + $elm$core$String$fromInt(left)))))));\n\t});\nvar $mdgriffith$elm_ui$Element$paddingEach = function (_v0) {\n\tvar top = _v0.top;\n\tvar right = _v0.right;\n\tvar bottom = _v0.bottom;\n\tvar left = _v0.left;\n\tif (_Utils_eq(top, right) && (_Utils_eq(top, bottom) && _Utils_eq(top, left))) {\n\t\tvar topFloat = top;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t$mdgriffith$elm_ui$Internal$Flag$padding,\n\t\t\tA5(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$PaddingStyle,\n\t\t\t\t'p-' + $elm$core$String$fromInt(top),\n\t\t\t\ttopFloat,\n\t\t\t\ttopFloat,\n\t\t\t\ttopFloat,\n\t\t\t\ttopFloat));\n\t} else {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t$mdgriffith$elm_ui$Internal$Flag$padding,\n\t\t\tA5(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$PaddingStyle,\n\t\t\t\tA4($mdgriffith$elm_ui$Internal$Model$paddingName, top, right, bottom, left),\n\t\t\t\ttop,\n\t\t\t\tright,\n\t\t\t\tbottom,\n\t\t\t\tleft));\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$isFill = function (len) {\n\tisFill:\n\twhile (true) {\n\t\tswitch (len.$) {\n\t\t\tcase 'Fill':\n\t\t\t\treturn true;\n\t\t\tcase 'Content':\n\t\t\t\treturn false;\n\t\t\tcase 'Px':\n\t\t\t\treturn false;\n\t\t\tcase 'Min':\n\t\t\t\tvar l = len.b;\n\t\t\t\tvar $temp$len = l;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tcontinue isFill;\n\t\t\tdefault:\n\t\t\t\tvar l = len.b;\n\t\t\t\tvar $temp$len = l;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tcontinue isFill;\n\t\t}\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$isPixel = function (len) {\n\tisPixel:\n\twhile (true) {\n\t\tswitch (len.$) {\n\t\t\tcase 'Content':\n\t\t\t\treturn false;\n\t\t\tcase 'Px':\n\t\t\t\treturn true;\n\t\t\tcase 'Fill':\n\t\t\t\treturn false;\n\t\t\tcase 'Min':\n\t\t\t\tvar l = len.b;\n\t\t\t\tvar $temp$len = l;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tcontinue isPixel;\n\t\t\tdefault:\n\t\t\t\tvar l = len.b;\n\t\t\t\tvar $temp$len = l;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tcontinue isPixel;\n\t\t}\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$paddingNameFloat = F4(\n\tfunction (top, right, bottom, left) {\n\t\treturn 'pad-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(top) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(right) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(bottom) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(left)))))));\n\t});\nvar $mdgriffith$elm_ui$Element$Input$redistributeOver = F4(\n\tfunction (isMultiline, stacked, attr, els) {\n\t\tswitch (attr.$) {\n\t\t\tcase 'Nearby':\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t});\n\t\t\tcase 'Width':\n\t\t\t\tvar width = attr.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Element$Input$isFill(width) ? _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent),\n\t\t\t\t\t\tinput: A2($elm$core$List$cons, attr, els.input),\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t}) : (stacked ? _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent)\n\t\t\t\t\t}) : _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t}));\n\t\t\tcase 'Height':\n\t\t\t\tvar height = attr.a;\n\t\t\t\treturn (!stacked) ? _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent),\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t}) : ($mdgriffith$elm_ui$Element$Input$isFill(height) ? _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent),\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t}) : ($mdgriffith$elm_ui$Element$Input$isPixel(height) ? _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t}) : _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t})));\n\t\t\tcase 'AlignX':\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent)\n\t\t\t\t\t});\n\t\t\tcase 'AlignY':\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent)\n\t\t\t\t\t});\n\t\t\tcase 'StyleClass':\n\t\t\t\tswitch (attr.b.$) {\n\t\t\t\t\tcase 'SpacingStyle':\n\t\t\t\t\t\tvar _v1 = attr.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent),\n\t\t\t\t\t\t\t\tinput: A2($elm$core$List$cons, attr, els.input),\n\t\t\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent),\n\t\t\t\t\t\t\t\twrapper: A2($elm$core$List$cons, attr, els.wrapper)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'PaddingStyle':\n\t\t\t\t\t\tvar cls = attr.a;\n\t\t\t\t\t\tvar _v2 = attr.b;\n\t\t\t\t\t\tvar pad = _v2.a;\n\t\t\t\t\t\tvar t = _v2.b;\n\t\t\t\t\t\tvar r = _v2.c;\n\t\t\t\t\t\tvar b = _v2.d;\n\t\t\t\t\t\tvar l = _v2.e;\n\t\t\t\t\t\tif (isMultiline) {\n\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcover: A2($elm$core$List$cons, attr, els.cover),\n\t\t\t\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar newTop = t - A2($elm$core$Basics$min, t, b);\n\t\t\t\t\t\t\tvar newLineHeight = $mdgriffith$elm_ui$Element$htmlAttribute(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'line-height',\n\t\t\t\t\t\t\t\t\t'calc(1.0em + ' + ($elm$core$String$fromFloat(\n\t\t\t\t\t\t\t\t\t\t2 * A2($elm$core$Basics$min, t, b)) + 'px)')));\n\t\t\t\t\t\t\tvar newHeight = $mdgriffith$elm_ui$Element$htmlAttribute(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'height',\n\t\t\t\t\t\t\t\t\t'calc(1.0em + ' + ($elm$core$String$fromFloat(\n\t\t\t\t\t\t\t\t\t\t2 * A2($elm$core$Basics$min, t, b)) + 'px)')));\n\t\t\t\t\t\t\tvar newBottom = b - A2($elm$core$Basics$min, t, b);\n\t\t\t\t\t\t\tvar reducedVerticalPadding = A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$padding,\n\t\t\t\t\t\t\t\tA5(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$PaddingStyle,\n\t\t\t\t\t\t\t\t\tA4($mdgriffith$elm_ui$Internal$Model$paddingNameFloat, newTop, r, newBottom, l),\n\t\t\t\t\t\t\t\t\tnewTop,\n\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\tnewBottom,\n\t\t\t\t\t\t\t\t\tl));\n\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcover: A2($elm$core$List$cons, attr, els.cover),\n\t\t\t\t\t\t\t\t\tinput: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\tnewHeight,\n\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, newLineHeight, els.input)),\n\t\t\t\t\t\t\t\t\tparent: A2($elm$core$List$cons, reducedVerticalPadding, els.parent)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'BorderWidth':\n\t\t\t\t\t\tvar _v3 = attr.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcover: A2($elm$core$List$cons, attr, els.cover),\n\t\t\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'Transform':\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcover: A2($elm$core$List$cons, attr, els.cover),\n\t\t\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'FontSize':\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'FontFamily':\n\t\t\t\t\t\tvar _v4 = attr.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar flag = attr.a;\n\t\t\t\t\t\tvar cls = attr.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\tcase 'NoAttribute':\n\t\t\t\treturn els;\n\t\t\tcase 'Attr':\n\t\t\t\tvar a = attr.a;\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tinput: A2($elm$core$List$cons, attr, els.input)\n\t\t\t\t\t});\n\t\t\tcase 'Describe':\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tinput: A2($elm$core$List$cons, attr, els.input)\n\t\t\t\t\t});\n\t\t\tcase 'Class':\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t});\n\t\t\tdefault:\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tinput: A2($elm$core$List$cons, attr, els.input)\n\t\t\t\t\t});\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Element$Input$redistribute = F3(\n\tfunction (isMultiline, stacked, attrs) {\n\t\treturn function (redist) {\n\t\t\treturn {\n\t\t\t\tcover: $elm$core$List$reverse(redist.cover),\n\t\t\t\tfullParent: $elm$core$List$reverse(redist.fullParent),\n\t\t\t\tinput: $elm$core$List$reverse(redist.input),\n\t\t\t\tparent: $elm$core$List$reverse(redist.parent),\n\t\t\t\twrapper: $elm$core$List$reverse(redist.wrapper)\n\t\t\t};\n\t\t}(\n\t\t\tA3(\n\t\t\t\t$elm$core$List$foldl,\n\t\t\t\tA2($mdgriffith$elm_ui$Element$Input$redistributeOver, isMultiline, stacked),\n\t\t\t\t{cover: _List_Nil, fullParent: _List_Nil, input: _List_Nil, parent: _List_Nil, wrapper: _List_Nil},\n\t\t\t\tattrs));\n\t});\nvar $mdgriffith$elm_ui$Element$Input$renderBox = function (_v0) {\n\tvar top = _v0.top;\n\tvar right = _v0.right;\n\tvar bottom = _v0.bottom;\n\tvar left = _v0.left;\n\treturn $elm$core$String$fromInt(top) + ('px ' + ($elm$core$String$fromInt(right) + ('px ' + ($elm$core$String$fromInt(bottom) + ('px ' + ($elm$core$String$fromInt(left) + 'px'))))));\n};\nvar $mdgriffith$elm_ui$Element$Input$charcoal = A3($mdgriffith$elm_ui$Element$rgb, 136 / 255, 138 / 255, 133 / 255);\nvar $mdgriffith$elm_ui$Element$Input$renderPlaceholder = F3(\n\tfunction (_v0, forPlaceholder, on) {\n\t\tvar placeholderAttrs = _v0.a;\n\t\tvar placeholderEl = _v0.b;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_Utils_ap(\n\t\t\t\tforPlaceholder,\n\t\t\t\t_Utils_ap(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($mdgriffith$elm_ui$Element$Input$charcoal),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.noTextSelection + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.passPointerEvents)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$clip,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alpha(\n\t\t\t\t\t\t\ton ? 1 : 0)\n\t\t\t\t\t\t]),\n\t\t\t\t\tplaceholderAttrs)),\n\t\t\tplaceholderEl);\n\t});\nvar $elm$html$Html$span = _VirtualDom_node('span');\nvar $elm$html$Html$Attributes$spellcheck = $elm$html$Html$Attributes$boolProperty('spellcheck');\nvar $mdgriffith$elm_ui$Element$Input$spellcheck = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Attributes$spellcheck);\nvar $elm$html$Html$Attributes$type_ = $elm$html$Html$Attributes$stringProperty('type');\nvar $elm$html$Html$Attributes$value = $elm$html$Html$Attributes$stringProperty('value');\nvar $mdgriffith$elm_ui$Element$Input$value = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Attributes$value);\nvar $mdgriffith$elm_ui$Element$Input$textHelper = F3(\n\tfunction (textInput, attrs, textOptions) {\n\t\tvar withDefaults = _Utils_ap($mdgriffith$elm_ui$Element$Input$defaultTextBoxStyle, attrs);\n\t\tvar redistributed = A3(\n\t\t\t$mdgriffith$elm_ui$Element$Input$redistribute,\n\t\t\t_Utils_eq(textInput.type_, $mdgriffith$elm_ui$Element$Input$TextArea),\n\t\t\t$mdgriffith$elm_ui$Element$Input$isStacked(textOptions.label),\n\t\t\twithDefaults);\n\t\tvar onlySpacing = function (attr) {\n\t\t\tif ((attr.$ === 'StyleClass') && (attr.b.$ === 'SpacingStyle')) {\n\t\t\t\tvar _v9 = attr.b;\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t\tvar heightConstrained = function () {\n\t\t\tvar _v7 = textInput.type_;\n\t\t\tif (_v7.$ === 'TextInputNode') {\n\t\t\t\tvar inputType = _v7.a;\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\tfalse,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$isConstrained,\n\t\t\t\t\t\t$elm$core$List$head(\n\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\tA2($elm$core$List$filterMap, $mdgriffith$elm_ui$Element$Input$getHeight, withDefaults)))));\n\t\t\t}\n\t\t}();\n\t\tvar getPadding = function (attr) {\n\t\t\tif ((attr.$ === 'StyleClass') && (attr.b.$ === 'PaddingStyle')) {\n\t\t\t\tvar cls = attr.a;\n\t\t\t\tvar _v6 = attr.b;\n\t\t\t\tvar pad = _v6.a;\n\t\t\t\tvar t = _v6.b;\n\t\t\t\tvar r = _v6.c;\n\t\t\t\tvar b = _v6.d;\n\t\t\t\tvar l = _v6.e;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t{\n\t\t\t\t\t\tbottom: A2(\n\t\t\t\t\t\t\t$elm$core$Basics$max,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t$elm$core$Basics$floor(b - 3)),\n\t\t\t\t\t\tleft: A2(\n\t\t\t\t\t\t\t$elm$core$Basics$max,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t$elm$core$Basics$floor(l - 3)),\n\t\t\t\t\t\tright: A2(\n\t\t\t\t\t\t\t$elm$core$Basics$max,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t$elm$core$Basics$floor(r - 3)),\n\t\t\t\t\t\ttop: A2(\n\t\t\t\t\t\t\t$elm$core$Basics$max,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t$elm$core$Basics$floor(t - 3))\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t}\n\t\t};\n\t\tvar parentPadding = A2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t{bottom: 0, left: 0, right: 0, top: 0},\n\t\t\t$elm$core$List$head(\n\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\tA2($elm$core$List$filterMap, getPadding, withDefaults))));\n\t\tvar inputElement = A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\tfunction () {\n\t\t\t\tvar _v3 = textInput.type_;\n\t\t\t\tif (_v3.$ === 'TextInputNode') {\n\t\t\t\t\tvar inputType = _v3.a;\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$NodeName('input');\n\t\t\t\t} else {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$NodeName('textarea');\n\t\t\t\t}\n\t\t\t}(),\n\t\t\t_Utils_ap(\n\t\t\t\tfunction () {\n\t\t\t\t\tvar _v4 = textInput.type_;\n\t\t\t\t\tif (_v4.$ === 'TextInputNode') {\n\t\t\t\t\t\tvar inputType = _v4.a;\n\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$type_(inputType)),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputText)\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$clip,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputMultiline),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$calcMoveToCompensateForPadding(withDefaults),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paddingEach(parentPadding),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'margin',\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$renderBox(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$negateBox(parentPadding)))),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\tA2($elm$html$Html$Attributes$style, 'box-sizing', 'content-box'))\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t}(),\n\t\t\t\t_Utils_ap(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$value(textOptions.text),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t$elm$html$Html$Events$onInput(textOptions.onChange)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$hiddenLabelAttribute(textOptions.label),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$spellcheck(textInput.spellchecked),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NoAttribute,\n\t\t\t\t\t\t\tA2($elm$core$Maybe$map, $mdgriffith$elm_ui$Element$Input$autofill, textInput.autofill))\n\t\t\t\t\t\t]),\n\t\t\t\t\tredistributed.input)),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(_List_Nil));\n\t\tvar wrappedInput = function () {\n\t\t\tvar _v0 = textInput.type_;\n\t\t\tif (_v0.$ === 'TextArea') {\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t(heightConstrained ? $elm$core$List$cons($mdgriffith$elm_ui$Element$scrollbarY) : $elm$core$Basics$identity)(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$any, $mdgriffith$elm_ui$Element$Input$hasFocusStyle, withDefaults) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.focusedWithin),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineWrapper)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tredistributed.parent),\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asParagraph,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$inFront(inputElement),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineParent),\n\t\t\t\t\t\t\t\t\t\t\t\tredistributed.wrapper)))),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\tif (textOptions.text === '') {\n\t\t\t\t\t\t\t\t\t\t\tvar _v1 = textOptions.placeholder;\n\t\t\t\t\t\t\t\t\t\t\tif (_v1.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('\\u00A0')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tvar place = _v1.a;\n\t\t\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Element$Input$renderPlaceholder, place, _List_Nil, textOptions.text === '')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$unstyled(\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$span,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineFiller)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text(textOptions.text + '\\u00A0')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])))\n\t\t\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}()))\n\t\t\t\t\t\t\t])));\n\t\t\t} else {\n\t\t\t\tvar inputType = _v0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\tA2($elm$core$List$any, $mdgriffith$elm_ui$Element$Input$hasFocusStyle, withDefaults) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.focusedWithin),\n\t\t\t\t\t\t\t$elm$core$List$concat(\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tredistributed.parent,\n\t\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\tvar _v2 = textOptions.placeholder;\n\t\t\t\t\t\t\t\t\t\tif (_v2.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\t\treturn _List_Nil;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar place = _v2.a;\n\t\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$behindContent(\n\t\t\t\t\t\t\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Element$Input$renderPlaceholder, place, redistributed.cover, textOptions.text === ''))\n\t\t\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}()\n\t\t\t\t\t\t\t\t\t])))),\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[inputElement])));\n\t\t\t}\n\t\t}();\n\t\treturn A3(\n\t\t\t$mdgriffith$elm_ui$Element$Input$applyLabel,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$cursor, $mdgriffith$elm_ui$Internal$Style$classes.cursorText),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$isHiddenLabel(textOptions.label) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t\t\tA2($elm$core$List$cons, $mdgriffith$elm_ui$Element$Region$announce, redistributed.fullParent))),\n\t\t\ttextOptions.label,\n\t\t\twrappedInput);\n\t});\nvar $mdgriffith$elm_ui$Element$Input$text = $mdgriffith$elm_ui$Element$Input$textHelper(\n\t{\n\t\tautofill: $elm$core$Maybe$Nothing,\n\t\tspellchecked: false,\n\t\ttype_: $mdgriffith$elm_ui$Element$Input$TextInputNode('text')\n\t});\nvar $author$project$Types$ComposeDollarChange = function (a) {\n\treturn {$: 'ComposeDollarChange', a: a};\n};\nvar $author$project$Types$DonationCheckboxSet = function (a) {\n\treturn {$: 'DonationCheckboxSet', a: a};\n};\nvar $author$project$View$Img$dollar = F2(\n\tfunction (size, color) {\n\t\treturn $author$project$View$Img$wrap(\n\t\t\tA2(\n\t\t\t\t$elm$svg$Svg$svg,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox('0 0 67.2 97.1'),\n\t\t\t\t\t\t$author$project$View$Img$height(size),\n\t\t\t\t\t\t$author$project$View$Img$width(size)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill(\n\t\t\t\t\t\t\t\t$author$project$View$Img$rgb(color)),\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M31.1 80.6h-.6A20.9 20.9 0 0116.8 76q-5.6-4.6-5.6-10.9a9.2 9.2 0 012-6.1 6.4 6.4 0 015.1-2.3 5.5 5.5 0 014 1.7 5.7 5.7 0 011.8 4.2 6.2 6.2 0 01-2.7 5.1c-1.7 1.4-2.6 2.2-2.6 2.6q0 2.1 3.7 4a18 18 0 008.6 2V48.7q-9.3-2.1-13.7-6.7T13 29.6a16.1 16.1 0 014.9-12.2q5-4.7 13.2-5.4V6.3H36v5.6c5.2.4 9.4 1.9 12.6 4.4s4.8 5.7 4.8 9.3a7.2 7.2 0 01-1.7 5 6 6 0 01-4.7 1.9 5.6 5.6 0 01-4.1-1.6 5.7 5.7 0 01-1.6-4.1 4.8 4.8 0 012.1-4.2c1.4-1 2.2-1.7 2.2-2 0-1-1-2-3-3A14.9 14.9 0 0036 16v24q10.8 2.8 15.4 7.5T56 60a19.3 19.3 0 01-5.4 14q-5.4 5.6-14.7 6.6V93H31zm0-42.1V16a13.7 13.7 0 00-8.7 3.4 10.1 10.1 0 00-3.2 7.8 9.5 9.5 0 003 7.2c2 1.8 5 3.2 9 4zM36 76.3a14.8 14.8 0 009.5-4.2 12.6 12.6 0 003.5-9.2q0-5.3-2.7-8T36 50.1z')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t])));\n\t});\nvar $author$project$View$Attrs$whiteGlowAttributeSmall = A2(\n\t$mdgriffith$elm_ui$Element$Border$glow,\n\tA4($mdgriffith$elm_ui$Element$rgba, 1, 1, 1, 0.4),\n\t2);\nvar $author$project$View$Compose$viewBurnBox = F2(\n\tfunction (donate, txt) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2($author$project$View$Img$dollar, 30, $author$project$Helpers$Element$white),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$text,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(250))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$Input$labelHidden(''),\n\t\t\t\t\t\t\t\tonChange: $author$project$Types$ComposeDollarChange,\n\t\t\t\t\t\t\t\tplaceholder: $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$placeholder,\n\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Burn amount (USD)'))),\n\t\t\t\t\t\t\t\ttext: txt\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(14),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$checkbox,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(30)),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(30)),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$hover\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tchecked: donate,\n\t\t\t\t\t\t\t\ticon: function (checked) {\n\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\t\t\t\t\t\tchecked,\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerY,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(25)\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('✔️')));\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$Input$labelHidden('Donate an extra 1% to Foundry'),\n\t\t\t\t\t\t\t\tonChange: $author$project$Types$DonationCheckboxSet\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Donate an extra 1% to '),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Theme$blue),\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$hover\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$text('Foundry'),\n\t\t\t\t\t\t\t\t\t\turl: 'https://foundrydao.com/'\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(' so we can build more cool stuff!')\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $elm$svg$Svg$Attributes$points = _VirtualDom_attribute('points');\nvar $elm$svg$Svg$polygon = $elm$svg$Svg$trustedNode('polygon');\nvar $author$project$View$Img$eth = function (size) {\n\treturn $author$project$View$Img$wrap(\n\t\tA2(\n\t\t\t$elm$svg$Svg$svg,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox('0 0 67.2 103.67'),\n\t\t\t\t\t$author$project$View$Img$height(size),\n\t\t\t\t\t$author$project$View$Img$width(size)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$polygon,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$points('34.44 76.07 60.29 60.82 34.44 97.13 34.44 76.07')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$polygon,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$points('34.44 40.3 61.44 52.56 34.44 68.53 34.44 40.3')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$polygon,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$points('34.44 38.45 34.44 6.27 61.15 50.58 34.44 38.45')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$polygon,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$points('6.91 60.82 32.76 76.07 32.76 97.13 6.91 60.82')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$polygon,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$points('5.75 52.56 32.76 40.3 32.76 68.53 5.75 52.56')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$polygon,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$points('32.76 6.27 32.76 38.45 6.05 50.58 32.76 6.27')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil)\n\t\t\t\t])));\n};\nvar $author$project$View$Img$xDai = function (size) {\n\treturn $author$project$View$Img$wrap(\n\t\tA2(\n\t\t\t$elm$svg$Svg$svg,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox('0 0 512 512'),\n\t\t\t\t\t$author$project$View$Img$height(size),\n\t\t\t\t\t$author$project$View$Img$width(size)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#fff'),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M0 0v511h512V0H0z')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#48a9a6'),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M40 40v86h172V40H40m258 0v86h172V40H298M40 298v172h172v-86h-86v-86H40m344 0v86h-86v86h172V298h-86z')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M0 511c4.4687 1.875 10.1913 1 15 1h497c-4.469-1.875-10.191-1-15-1H0z')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil)\n\t\t\t\t])));\n};\nvar $author$project$View$Common$viewChain = function (c) {\n\tvar txt = function () {\n\t\tif (c.$ === 'XDai') {\n\t\t\treturn 'xDai';\n\t\t} else {\n\t\t\treturn 'Ethereum';\n\t\t}\n\t}();\n\tvar img = function () {\n\t\tif (c.$ === 'XDai') {\n\t\t\treturn $author$project$View$Img$xDai;\n\t\t} else {\n\t\t\treturn $author$project$View$Img$eth;\n\t\t}\n\t}();\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$row,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t$author$project$View$Attrs$sansSerifFont\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\timg(20),\n\t\t\t\t$mdgriffith$elm_ui$Element$text(txt)\n\t\t\t]));\n};\nvar $author$project$Types$ComposeBodyChange = function (a) {\n\treturn {$: 'ComposeBodyChange', a: a};\n};\nvar $mdgriffith$elm_ui$Element$Input$multiline = F2(\n\tfunction (attrs, multi) {\n\t\treturn A3(\n\t\t\t$mdgriffith$elm_ui$Element$Input$textHelper,\n\t\t\t{autofill: $elm$core$Maybe$Nothing, spellchecked: multi.spellcheck, type_: $mdgriffith$elm_ui$Element$Input$TextArea},\n\t\t\tattrs,\n\t\t\t{label: multi.label, onChange: multi.onChange, placeholder: multi.placeholder, text: multi.text});\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Block$BlockQuote = function (a) {\n\treturn {$: 'BlockQuote', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$Cdata = function (a) {\n\treturn {$: 'Cdata', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$CodeBlock = function (a) {\n\treturn {$: 'CodeBlock', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$CodeBlock = function (a) {\n\treturn {$: 'CodeBlock', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$CodeSpan = function (a) {\n\treturn {$: 'CodeSpan', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$CompletedTask = {$: 'CompletedTask'};\nvar $elm$parser$Parser$Advanced$Done = function (a) {\n\treturn {$: 'Done', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$Emphasis = function (a) {\n\treturn {$: 'Emphasis', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Parser$EmptyBlock = {$: 'EmptyBlock'};\nvar $elm$parser$Parser$Expecting = function (a) {\n\treturn {$: 'Expecting', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$HardLineBreak = {$: 'HardLineBreak'};\nvar $dillonkearns$elm_markdown$Markdown$Block$Heading = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Heading', a: a, b: b};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$Html = function (a) {\n\treturn {$: 'Html', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$HtmlBlock = function (a) {\n\treturn {$: 'HtmlBlock', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$HtmlComment = function (a) {\n\treturn {$: 'HtmlComment', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$HtmlDeclaration = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'HtmlDeclaration', a: a, b: b};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Block$HtmlElement = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'HtmlElement', a: a, b: b, c: c};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Block$HtmlInline = function (a) {\n\treturn {$: 'HtmlInline', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$Image = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'Image', a: a, b: b, c: c};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Block$IncompleteTask = {$: 'IncompleteTask'};\nvar $dillonkearns$elm_markdown$Markdown$Parser$InlineProblem = function (a) {\n\treturn {$: 'InlineProblem', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$Link = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'Link', a: a, b: b, c: c};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Block$ListItem = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'ListItem', a: a, b: b};\n\t});\nvar $elm$parser$Parser$Advanced$Loop = function (a) {\n\treturn {$: 'Loop', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$NoTask = {$: 'NoTask'};\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$OpenBlockOrParagraph = function (a) {\n\treturn {$: 'OpenBlockOrParagraph', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$OrderedList = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'OrderedList', a: a, b: b};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Block$Paragraph = function (a) {\n\treturn {$: 'Paragraph', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Parser$ParsedBlock = function (a) {\n\treturn {$: 'ParsedBlock', a: a};\n};\nvar $elm$parser$Parser$Problem = function (a) {\n\treturn {$: 'Problem', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$ProcessingInstruction = function (a) {\n\treturn {$: 'ProcessingInstruction', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$Strikethrough = function (a) {\n\treturn {$: 'Strikethrough', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$Strong = function (a) {\n\treturn {$: 'Strong', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$Table = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Table', a: a, b: b};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Block$Text = function (a) {\n\treturn {$: 'Text', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$ThematicBreak = {$: 'ThematicBreak'};\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$ThematicBreak = {$: 'ThematicBreak'};\nvar $dillonkearns$elm_markdown$Markdown$Block$UnorderedList = function (a) {\n\treturn {$: 'UnorderedList', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$UnparsedInlines = function (a) {\n\treturn {$: 'UnparsedInlines', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Parser$addReference = F2(\n\tfunction (state, linkRef) {\n\t\treturn {\n\t\t\tlinkReferenceDefinitions: A2($elm$core$List$cons, linkRef, state.linkReferenceDefinitions),\n\t\t\trawBlocks: state.rawBlocks\n\t\t};\n\t});\nvar $elm$parser$Parser$Advanced$Bad = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Bad', a: a, b: b};\n\t});\nvar $elm$parser$Parser$Advanced$Good = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'Good', a: a, b: b, c: c};\n\t});\nvar $elm$parser$Parser$Advanced$Parser = function (a) {\n\treturn {$: 'Parser', a: a};\n};\nvar $elm$parser$Parser$Advanced$andThen = F2(\n\tfunction (callback, _v0) {\n\t\tvar parseA = _v0.a;\n\t\treturn $elm$parser$Parser$Advanced$Parser(\n\t\t\tfunction (s0) {\n\t\t\t\tvar _v1 = parseA(s0);\n\t\t\t\tif (_v1.$ === 'Bad') {\n\t\t\t\t\tvar p = _v1.a;\n\t\t\t\t\tvar x = _v1.b;\n\t\t\t\t\treturn A2($elm$parser$Parser$Advanced$Bad, p, x);\n\t\t\t\t} else {\n\t\t\t\t\tvar p1 = _v1.a;\n\t\t\t\t\tvar a = _v1.b;\n\t\t\t\t\tvar s1 = _v1.c;\n\t\t\t\t\tvar _v2 = callback(a);\n\t\t\t\t\tvar parseB = _v2.a;\n\t\t\t\t\tvar _v3 = parseB(s1);\n\t\t\t\t\tif (_v3.$ === 'Bad') {\n\t\t\t\t\t\tvar p2 = _v3.a;\n\t\t\t\t\t\tvar x = _v3.b;\n\t\t\t\t\t\treturn A2($elm$parser$Parser$Advanced$Bad, p1 || p2, x);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar p2 = _v3.a;\n\t\t\t\t\t\tvar b = _v3.b;\n\t\t\t\t\t\tvar s2 = _v3.c;\n\t\t\t\t\t\treturn A3($elm$parser$Parser$Advanced$Good, p1 || p2, b, s2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t});\nvar $elm$parser$Parser$Advanced$backtrackable = function (_v0) {\n\tvar parse = _v0.a;\n\treturn $elm$parser$Parser$Advanced$Parser(\n\t\tfunction (s0) {\n\t\t\tvar _v1 = parse(s0);\n\t\t\tif (_v1.$ === 'Bad') {\n\t\t\t\tvar x = _v1.b;\n\t\t\t\treturn A2($elm$parser$Parser$Advanced$Bad, false, x);\n\t\t\t} else {\n\t\t\t\tvar a = _v1.b;\n\t\t\t\tvar s1 = _v1.c;\n\t\t\t\treturn A3($elm$parser$Parser$Advanced$Good, false, a, s1);\n\t\t\t}\n\t\t});\n};\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$BlankLine = {$: 'BlankLine'};\nvar $elm$parser$Parser$Advanced$isSubChar = _Parser_isSubChar;\nvar $elm$parser$Parser$Advanced$chompWhileHelp = F5(\n\tfunction (isGood, offset, row, col, s0) {\n\t\tchompWhileHelp:\n\t\twhile (true) {\n\t\t\tvar newOffset = A3($elm$parser$Parser$Advanced$isSubChar, isGood, offset, s0.src);\n\t\t\tif (_Utils_eq(newOffset, -1)) {\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$parser$Parser$Advanced$Good,\n\t\t\t\t\t_Utils_cmp(s0.offset, offset) < 0,\n\t\t\t\t\t_Utils_Tuple0,\n\t\t\t\t\t{col: col, context: s0.context, indent: s0.indent, offset: offset, row: row, src: s0.src});\n\t\t\t} else {\n\t\t\t\tif (_Utils_eq(newOffset, -2)) {\n\t\t\t\t\tvar $temp$isGood = isGood,\n\t\t\t\t\t\t$temp$offset = offset + 1,\n\t\t\t\t\t\t$temp$row = row + 1,\n\t\t\t\t\t\t$temp$col = 1,\n\t\t\t\t\t\t$temp$s0 = s0;\n\t\t\t\t\tisGood = $temp$isGood;\n\t\t\t\t\toffset = $temp$offset;\n\t\t\t\t\trow = $temp$row;\n\t\t\t\t\tcol = $temp$col;\n\t\t\t\t\ts0 = $temp$s0;\n\t\t\t\t\tcontinue chompWhileHelp;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isGood = isGood,\n\t\t\t\t\t\t$temp$offset = newOffset,\n\t\t\t\t\t\t$temp$row = row,\n\t\t\t\t\t\t$temp$col = col + 1,\n\t\t\t\t\t\t$temp$s0 = s0;\n\t\t\t\t\tisGood = $temp$isGood;\n\t\t\t\t\toffset = $temp$offset;\n\t\t\t\t\trow = $temp$row;\n\t\t\t\t\tcol = $temp$col;\n\t\t\t\t\ts0 = $temp$s0;\n\t\t\t\t\tcontinue chompWhileHelp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$parser$Parser$Advanced$chompWhile = function (isGood) {\n\treturn $elm$parser$Parser$Advanced$Parser(\n\t\tfunction (s) {\n\t\t\treturn A5($elm$parser$Parser$Advanced$chompWhileHelp, isGood, s.offset, s.row, s.col, s);\n\t\t});\n};\nvar $elm$parser$Parser$Advanced$map2 = F3(\n\tfunction (func, _v0, _v1) {\n\t\tvar parseA = _v0.a;\n\t\tvar parseB = _v1.a;\n\t\treturn $elm$parser$Parser$Advanced$Parser(\n\t\t\tfunction (s0) {\n\t\t\t\tvar _v2 = parseA(s0);\n\t\t\t\tif (_v2.$ === 'Bad') {\n\t\t\t\t\tvar p = _v2.a;\n\t\t\t\t\tvar x = _v2.b;\n\t\t\t\t\treturn A2($elm$parser$Parser$Advanced$Bad, p, x);\n\t\t\t\t} else {\n\t\t\t\t\tvar p1 = _v2.a;\n\t\t\t\t\tvar a = _v2.b;\n\t\t\t\t\tvar s1 = _v2.c;\n\t\t\t\t\tvar _v3 = parseB(s1);\n\t\t\t\t\tif (_v3.$ === 'Bad') {\n\t\t\t\t\t\tvar p2 = _v3.a;\n\t\t\t\t\t\tvar x = _v3.b;\n\t\t\t\t\t\treturn A2($elm$parser$Parser$Advanced$Bad, p1 || p2, x);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar p2 = _v3.a;\n\t\t\t\t\t\tvar b = _v3.b;\n\t\t\t\t\t\tvar s2 = _v3.c;\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$Good,\n\t\t\t\t\t\t\tp1 || p2,\n\t\t\t\t\t\t\tA2(func, a, b),\n\t\t\t\t\t\t\ts2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t});\nvar $elm$parser$Parser$Advanced$ignorer = F2(\n\tfunction (keepParser, ignoreParser) {\n\t\treturn A3($elm$parser$Parser$Advanced$map2, $elm$core$Basics$always, keepParser, ignoreParser);\n\t});\nvar $dillonkearns$elm_markdown$Whitespace$isSpaceOrTab = function (_char) {\n\tswitch (_char.valueOf()) {\n\t\tcase ' ':\n\t\t\treturn true;\n\t\tcase '\\t':\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\nvar $elm$parser$Parser$Advanced$Token = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Token', a: a, b: b};\n\t});\nvar $dillonkearns$elm_markdown$Parser$Token$carriageReturn = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'\\r',\n\t$elm$parser$Parser$Expecting('a carriage return'));\nvar $dillonkearns$elm_markdown$Parser$Token$newline = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'\\n',\n\t$elm$parser$Parser$Expecting('a newline'));\nvar $elm$parser$Parser$Advanced$Empty = {$: 'Empty'};\nvar $elm$parser$Parser$Advanced$Append = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Append', a: a, b: b};\n\t});\nvar $elm$parser$Parser$Advanced$oneOfHelp = F3(\n\tfunction (s0, bag, parsers) {\n\t\toneOfHelp:\n\t\twhile (true) {\n\t\t\tif (!parsers.b) {\n\t\t\t\treturn A2($elm$parser$Parser$Advanced$Bad, false, bag);\n\t\t\t} else {\n\t\t\t\tvar parse = parsers.a.a;\n\t\t\t\tvar remainingParsers = parsers.b;\n\t\t\t\tvar _v1 = parse(s0);\n\t\t\t\tif (_v1.$ === 'Good') {\n\t\t\t\t\tvar step = _v1;\n\t\t\t\t\treturn step;\n\t\t\t\t} else {\n\t\t\t\t\tvar step = _v1;\n\t\t\t\t\tvar p = step.a;\n\t\t\t\t\tvar x = step.b;\n\t\t\t\t\tif (p) {\n\t\t\t\t\t\treturn step;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$s0 = s0,\n\t\t\t\t\t\t\t$temp$bag = A2($elm$parser$Parser$Advanced$Append, bag, x),\n\t\t\t\t\t\t\t$temp$parsers = remainingParsers;\n\t\t\t\t\t\ts0 = $temp$s0;\n\t\t\t\t\t\tbag = $temp$bag;\n\t\t\t\t\t\tparsers = $temp$parsers;\n\t\t\t\t\t\tcontinue oneOfHelp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$parser$Parser$Advanced$oneOf = function (parsers) {\n\treturn $elm$parser$Parser$Advanced$Parser(\n\t\tfunction (s) {\n\t\t\treturn A3($elm$parser$Parser$Advanced$oneOfHelp, s, $elm$parser$Parser$Advanced$Empty, parsers);\n\t\t});\n};\nvar $elm$parser$Parser$Advanced$succeed = function (a) {\n\treturn $elm$parser$Parser$Advanced$Parser(\n\t\tfunction (s) {\n\t\t\treturn A3($elm$parser$Parser$Advanced$Good, false, a, s);\n\t\t});\n};\nvar $elm$parser$Parser$Advanced$AddRight = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'AddRight', a: a, b: b};\n\t});\nvar $elm$parser$Parser$Advanced$DeadEnd = F4(\n\tfunction (row, col, problem, contextStack) {\n\t\treturn {col: col, contextStack: contextStack, problem: problem, row: row};\n\t});\nvar $elm$parser$Parser$Advanced$fromState = F2(\n\tfunction (s, x) {\n\t\treturn A2(\n\t\t\t$elm$parser$Parser$Advanced$AddRight,\n\t\t\t$elm$parser$Parser$Advanced$Empty,\n\t\t\tA4($elm$parser$Parser$Advanced$DeadEnd, s.row, s.col, x, s.context));\n\t});\nvar $elm$parser$Parser$Advanced$isSubString = _Parser_isSubString;\nvar $elm$parser$Parser$Advanced$token = function (_v0) {\n\tvar str = _v0.a;\n\tvar expecting = _v0.b;\n\tvar progress = !$elm$core$String$isEmpty(str);\n\treturn $elm$parser$Parser$Advanced$Parser(\n\t\tfunction (s) {\n\t\t\tvar _v1 = A5($elm$parser$Parser$Advanced$isSubString, str, s.offset, s.row, s.col, s.src);\n\t\t\tvar newOffset = _v1.a;\n\t\t\tvar newRow = _v1.b;\n\t\t\tvar newCol = _v1.c;\n\t\t\treturn _Utils_eq(newOffset, -1) ? A2(\n\t\t\t\t$elm$parser$Parser$Advanced$Bad,\n\t\t\t\tfalse,\n\t\t\t\tA2($elm$parser$Parser$Advanced$fromState, s, expecting)) : A3(\n\t\t\t\t$elm$parser$Parser$Advanced$Good,\n\t\t\t\tprogress,\n\t\t\t\t_Utils_Tuple0,\n\t\t\t\t{col: newCol, context: s.context, indent: s.indent, offset: newOffset, row: newRow, src: s.src});\n\t\t});\n};\nvar $dillonkearns$elm_markdown$Whitespace$lineEnd = $elm$parser$Parser$Advanced$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\t$elm$parser$Parser$Advanced$token($dillonkearns$elm_markdown$Parser$Token$newline),\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$token($dillonkearns$elm_markdown$Parser$Token$carriageReturn),\n\t\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$token($dillonkearns$elm_markdown$Parser$Token$newline),\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0)\n\t\t\t\t\t])))\n\t\t]));\nvar $elm$parser$Parser$Advanced$map = F2(\n\tfunction (func, _v0) {\n\t\tvar parse = _v0.a;\n\t\treturn $elm$parser$Parser$Advanced$Parser(\n\t\t\tfunction (s0) {\n\t\t\t\tvar _v1 = parse(s0);\n\t\t\t\tif (_v1.$ === 'Good') {\n\t\t\t\t\tvar p = _v1.a;\n\t\t\t\t\tvar a = _v1.b;\n\t\t\t\t\tvar s1 = _v1.c;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$Good,\n\t\t\t\t\t\tp,\n\t\t\t\t\t\tfunc(a),\n\t\t\t\t\t\ts1);\n\t\t\t\t} else {\n\t\t\t\t\tvar p = _v1.a;\n\t\t\t\t\tvar x = _v1.b;\n\t\t\t\t\treturn A2($elm$parser$Parser$Advanced$Bad, p, x);\n\t\t\t\t}\n\t\t\t});\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Parser$blankLine = A2(\n\t$elm$parser$Parser$Advanced$map,\n\tfunction (_v0) {\n\t\treturn $dillonkearns$elm_markdown$Markdown$RawBlock$BlankLine;\n\t},\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t$elm$parser$Parser$Advanced$chompWhile($dillonkearns$elm_markdown$Whitespace$isSpaceOrTab)),\n\t\t$dillonkearns$elm_markdown$Whitespace$lineEnd));\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$BlockQuote = function (a) {\n\treturn {$: 'BlockQuote', a: a};\n};\nvar $dillonkearns$elm_markdown$Parser$Token$space = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t' ',\n\t$elm$parser$Parser$Expecting('a space'));\nvar $elm$parser$Parser$Advanced$symbol = $elm$parser$Parser$Advanced$token;\nvar $dillonkearns$elm_markdown$Markdown$Parser$blockQuoteStarts = _List_fromArray(\n\t[\n\t\t$elm$parser$Parser$Advanced$symbol(\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t'>',\n\t\t\t$elm$parser$Parser$Expecting('>'))),\n\t\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$space)),\n\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$parser$Parser$Advanced$symbol(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t\t\t'>',\n\t\t\t\t\t\t$elm$parser$Parser$Expecting(' >'))),\n\t\t\t\t\t$elm$parser$Parser$Advanced$symbol(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t\t\t' >',\n\t\t\t\t\t\t$elm$parser$Parser$Expecting('  >'))),\n\t\t\t\t\t$elm$parser$Parser$Advanced$symbol(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t\t\t'  >',\n\t\t\t\t\t\t$elm$parser$Parser$Expecting('   >')))\n\t\t\t\t])))\n\t]);\nvar $dillonkearns$elm_markdown$Whitespace$isLineEnd = function (_char) {\n\tswitch (_char.valueOf()) {\n\t\tcase '\\n':\n\t\t\treturn true;\n\t\tcase '\\r':\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\nvar $dillonkearns$elm_markdown$Helpers$chompUntilLineEndOrEnd = $elm$parser$Parser$Advanced$chompWhile(\n\tA2($elm$core$Basics$composeL, $elm$core$Basics$not, $dillonkearns$elm_markdown$Whitespace$isLineEnd));\nvar $elm$parser$Parser$Advanced$mapChompedString = F2(\n\tfunction (func, _v0) {\n\t\tvar parse = _v0.a;\n\t\treturn $elm$parser$Parser$Advanced$Parser(\n\t\t\tfunction (s0) {\n\t\t\t\tvar _v1 = parse(s0);\n\t\t\t\tif (_v1.$ === 'Bad') {\n\t\t\t\t\tvar p = _v1.a;\n\t\t\t\t\tvar x = _v1.b;\n\t\t\t\t\treturn A2($elm$parser$Parser$Advanced$Bad, p, x);\n\t\t\t\t} else {\n\t\t\t\t\tvar p = _v1.a;\n\t\t\t\t\tvar a = _v1.b;\n\t\t\t\t\tvar s1 = _v1.c;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$Good,\n\t\t\t\t\t\tp,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tfunc,\n\t\t\t\t\t\t\tA3($elm$core$String$slice, s0.offset, s1.offset, s0.src),\n\t\t\t\t\t\t\ta),\n\t\t\t\t\t\ts1);\n\t\t\t\t}\n\t\t\t});\n\t});\nvar $elm$parser$Parser$Advanced$getChompedString = function (parser) {\n\treturn A2($elm$parser$Parser$Advanced$mapChompedString, $elm$core$Basics$always, parser);\n};\nvar $elm$parser$Parser$Advanced$keeper = F2(\n\tfunction (parseFunc, parseArg) {\n\t\treturn A3($elm$parser$Parser$Advanced$map2, $elm$core$Basics$apL, parseFunc, parseArg);\n\t});\nvar $elm$parser$Parser$Advanced$end = function (x) {\n\treturn $elm$parser$Parser$Advanced$Parser(\n\t\tfunction (s) {\n\t\t\treturn _Utils_eq(\n\t\t\t\t$elm$core$String$length(s.src),\n\t\t\t\ts.offset) ? A3($elm$parser$Parser$Advanced$Good, false, _Utils_Tuple0, s) : A2(\n\t\t\t\t$elm$parser$Parser$Advanced$Bad,\n\t\t\t\tfalse,\n\t\t\t\tA2($elm$parser$Parser$Advanced$fromState, s, x));\n\t\t});\n};\nvar $dillonkearns$elm_markdown$Helpers$endOfFile = $elm$parser$Parser$Advanced$end(\n\t$elm$parser$Parser$Expecting('the end of the input'));\nvar $dillonkearns$elm_markdown$Helpers$lineEndOrEnd = $elm$parser$Parser$Advanced$oneOf(\n\t_List_fromArray(\n\t\t[$dillonkearns$elm_markdown$Whitespace$lineEnd, $dillonkearns$elm_markdown$Helpers$endOfFile]));\nvar $dillonkearns$elm_markdown$Markdown$Parser$blockQuote = A2(\n\t$elm$parser$Parser$Advanced$keeper,\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Markdown$RawBlock$BlockQuote),\n\t\t\t$elm$parser$Parser$Advanced$oneOf($dillonkearns$elm_markdown$Markdown$Parser$blockQuoteStarts)),\n\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$space),\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0)\n\t\t\t\t]))),\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$getChompedString($dillonkearns$elm_markdown$Helpers$chompUntilLineEndOrEnd),\n\t\t$dillonkearns$elm_markdown$Helpers$lineEndOrEnd));\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$Heading = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Heading', a: a, b: b};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$IndentedCodeBlock = function (a) {\n\treturn {$: 'IndentedCodeBlock', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$Table = function (a) {\n\treturn {$: 'Table', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Table$Table = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Table', a: a, b: b};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Table$TableDelimiterRow = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'TableDelimiterRow', a: a, b: b};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Parser$joinRawStringsWith = F3(\n\tfunction (joinWith, string1, string2) {\n\t\tvar _v0 = _Utils_Tuple2(string1, string2);\n\t\tif (_v0.a === '') {\n\t\t\treturn string2;\n\t\t} else {\n\t\t\tif (_v0.b === '') {\n\t\t\t\treturn string1;\n\t\t\t} else {\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\tstring1,\n\t\t\t\t\t_Utils_ap(joinWith, string2));\n\t\t\t}\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Parser$joinStringsPreserveAll = F2(\n\tfunction (string1, string2) {\n\t\treturn string1 + ('\\n' + string2);\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Table$TableHeader = function (a) {\n\treturn {$: 'TableHeader', a: a};\n};\nvar $elm$parser$Parser$Advanced$loopHelp = F4(\n\tfunction (p, state, callback, s0) {\n\t\tloopHelp:\n\t\twhile (true) {\n\t\t\tvar _v0 = callback(state);\n\t\t\tvar parse = _v0.a;\n\t\t\tvar _v1 = parse(s0);\n\t\t\tif (_v1.$ === 'Good') {\n\t\t\t\tvar p1 = _v1.a;\n\t\t\t\tvar step = _v1.b;\n\t\t\t\tvar s1 = _v1.c;\n\t\t\t\tif (step.$ === 'Loop') {\n\t\t\t\t\tvar newState = step.a;\n\t\t\t\t\tvar $temp$p = p || p1,\n\t\t\t\t\t\t$temp$state = newState,\n\t\t\t\t\t\t$temp$callback = callback,\n\t\t\t\t\t\t$temp$s0 = s1;\n\t\t\t\t\tp = $temp$p;\n\t\t\t\t\tstate = $temp$state;\n\t\t\t\t\tcallback = $temp$callback;\n\t\t\t\t\ts0 = $temp$s0;\n\t\t\t\t\tcontinue loopHelp;\n\t\t\t\t} else {\n\t\t\t\t\tvar result = step.a;\n\t\t\t\t\treturn A3($elm$parser$Parser$Advanced$Good, p || p1, result, s1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar p1 = _v1.a;\n\t\t\t\tvar x = _v1.b;\n\t\t\t\treturn A2($elm$parser$Parser$Advanced$Bad, p || p1, x);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$parser$Parser$Advanced$loop = F2(\n\tfunction (state, callback) {\n\t\treturn $elm$parser$Parser$Advanced$Parser(\n\t\t\tfunction (s) {\n\t\t\t\treturn A4($elm$parser$Parser$Advanced$loopHelp, false, state, callback, s);\n\t\t\t});\n\t});\nvar $elm$parser$Parser$Advanced$chompIf = F2(\n\tfunction (isGood, expecting) {\n\t\treturn $elm$parser$Parser$Advanced$Parser(\n\t\t\tfunction (s) {\n\t\t\t\tvar newOffset = A3($elm$parser$Parser$Advanced$isSubChar, isGood, s.offset, s.src);\n\t\t\t\treturn _Utils_eq(newOffset, -1) ? A2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$Bad,\n\t\t\t\t\tfalse,\n\t\t\t\t\tA2($elm$parser$Parser$Advanced$fromState, s, expecting)) : (_Utils_eq(newOffset, -2) ? A3(\n\t\t\t\t\t$elm$parser$Parser$Advanced$Good,\n\t\t\t\t\ttrue,\n\t\t\t\t\t_Utils_Tuple0,\n\t\t\t\t\t{col: 1, context: s.context, indent: s.indent, offset: s.offset + 1, row: s.row + 1, src: s.src}) : A3(\n\t\t\t\t\t$elm$parser$Parser$Advanced$Good,\n\t\t\t\t\ttrue,\n\t\t\t\t\t_Utils_Tuple0,\n\t\t\t\t\t{col: s.col + 1, context: s.context, indent: s.indent, offset: newOffset, row: s.row, src: s.src}));\n\t\t\t});\n\t});\nvar $dillonkearns$elm_markdown$Parser$Token$parseString = function (str) {\n\treturn $elm$parser$Parser$Advanced$token(\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\tstr,\n\t\t\t$elm$parser$Parser$Expecting(str)));\n};\nvar $dillonkearns$elm_markdown$Markdown$TableParser$parseCellHelper = function (_v0) {\n\tvar curr = _v0.a;\n\tvar acc = _v0.b;\n\tvar _return = A2(\n\t\t$elm$core$Maybe$withDefault,\n\t\t$elm$parser$Parser$Advanced$Done(acc),\n\t\tA2(\n\t\t\t$elm$core$Maybe$map,\n\t\t\tfunction (cell) {\n\t\t\t\treturn $elm$parser$Parser$Advanced$Done(\n\t\t\t\t\tA2($elm$core$List$cons, cell, acc));\n\t\t\t},\n\t\t\tcurr));\n\tvar finishCell = A2(\n\t\t$elm$core$Maybe$withDefault,\n\t\t$elm$parser$Parser$Advanced$Loop(\n\t\t\t_Utils_Tuple2($elm$core$Maybe$Nothing, acc)),\n\t\tA2(\n\t\t\t$elm$core$Maybe$map,\n\t\t\tfunction (cell) {\n\t\t\t\treturn $elm$parser$Parser$Advanced$Loop(\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t$elm$core$Maybe$Nothing,\n\t\t\t\t\t\tA2($elm$core$List$cons, cell, acc)));\n\t\t\t},\n\t\t\tcurr));\n\tvar addToCurrent = function (c) {\n\t\treturn _Utils_ap(\n\t\t\tA2($elm$core$Maybe$withDefault, '', curr),\n\t\t\tc);\n\t};\n\tvar continueCell = function (c) {\n\t\treturn $elm$parser$Parser$Advanced$Loop(\n\t\t\t_Utils_Tuple2(\n\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\taddToCurrent(c)),\n\t\t\t\tacc));\n\t};\n\treturn $elm$parser$Parser$Advanced$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\treturn _return;\n\t\t\t\t},\n\t\t\t\t$dillonkearns$elm_markdown$Parser$Token$parseString('|\\n')),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\tfunction (_v2) {\n\t\t\t\t\treturn _return;\n\t\t\t\t},\n\t\t\t\t$dillonkearns$elm_markdown$Parser$Token$parseString('\\n')),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\tfunction (_v3) {\n\t\t\t\t\treturn _return;\n\t\t\t\t},\n\t\t\t\t$elm$parser$Parser$Advanced$end(\n\t\t\t\t\t$elm$parser$Parser$Expecting('end'))),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\t\tcontinueCell('|'))),\n\t\t\t\t$dillonkearns$elm_markdown$Parser$Token$parseString('\\\\\\\\|')),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\t\tcontinueCell('\\\\'))),\n\t\t\t\t$dillonkearns$elm_markdown$Parser$Token$parseString('\\\\\\\\')),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\t\tcontinueCell('|'))),\n\t\t\t\t$dillonkearns$elm_markdown$Parser$Token$parseString('\\\\|')),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(finishCell)),\n\t\t\t\t$dillonkearns$elm_markdown$Parser$Token$parseString('|')),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$mapChompedString,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (_char, _v4) {\n\t\t\t\t\t\treturn continueCell(_char);\n\t\t\t\t\t}),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$chompIf,\n\t\t\t\t\t$elm$core$Basics$always(true),\n\t\t\t\t\t$elm$parser$Parser$Problem('No character found')))\n\t\t\t]));\n};\nvar $dillonkearns$elm_markdown$Markdown$TableParser$parseCells = A2(\n\t$elm$parser$Parser$Advanced$map,\n\tA2(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (cell, acc) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$elm$core$String$trim(cell),\n\t\t\t\t\tacc);\n\t\t\t}),\n\t\t_List_Nil),\n\tA2(\n\t\t$elm$parser$Parser$Advanced$loop,\n\t\t_Utils_Tuple2($elm$core$Maybe$Nothing, _List_Nil),\n\t\t$dillonkearns$elm_markdown$Markdown$TableParser$parseCellHelper));\nvar $dillonkearns$elm_markdown$Markdown$TableParser$rowParser = A2(\n\t$elm$parser$Parser$Advanced$keeper,\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Basics$identity),\n\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$dillonkearns$elm_markdown$Parser$Token$parseString('|'),\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0)\n\t\t\t\t]))),\n\t$dillonkearns$elm_markdown$Markdown$TableParser$parseCells);\nvar $elm$parser$Parser$Advanced$bagToList = F2(\n\tfunction (bag, list) {\n\t\tbagToList:\n\t\twhile (true) {\n\t\t\tswitch (bag.$) {\n\t\t\t\tcase 'Empty':\n\t\t\t\t\treturn list;\n\t\t\t\tcase 'AddRight':\n\t\t\t\t\tvar bag1 = bag.a;\n\t\t\t\t\tvar x = bag.b;\n\t\t\t\t\tvar $temp$bag = bag1,\n\t\t\t\t\t\t$temp$list = A2($elm$core$List$cons, x, list);\n\t\t\t\t\tbag = $temp$bag;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue bagToList;\n\t\t\t\tdefault:\n\t\t\t\t\tvar bag1 = bag.a;\n\t\t\t\t\tvar bag2 = bag.b;\n\t\t\t\t\tvar $temp$bag = bag1,\n\t\t\t\t\t\t$temp$list = A2($elm$parser$Parser$Advanced$bagToList, bag2, list);\n\t\t\t\t\tbag = $temp$bag;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue bagToList;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$parser$Parser$Advanced$run = F2(\n\tfunction (_v0, src) {\n\t\tvar parse = _v0.a;\n\t\tvar _v1 = parse(\n\t\t\t{col: 1, context: _List_Nil, indent: 1, offset: 0, row: 1, src: src});\n\t\tif (_v1.$ === 'Good') {\n\t\t\tvar value = _v1.b;\n\t\t\treturn $elm$core$Result$Ok(value);\n\t\t} else {\n\t\t\tvar bag = _v1.b;\n\t\t\treturn $elm$core$Result$Err(\n\t\t\t\tA2($elm$parser$Parser$Advanced$bagToList, bag, _List_Nil));\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$TableParser$parseHeader = F2(\n\tfunction (_v0, headersRow) {\n\t\tvar columnAlignments = _v0.b;\n\t\tvar headersWithAlignment = function (headers) {\n\t\t\treturn A3(\n\t\t\t\t$elm$core$List$map2,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (headerCell, alignment) {\n\t\t\t\t\t\treturn {alignment: alignment, label: headerCell};\n\t\t\t\t\t}),\n\t\t\t\theaders,\n\t\t\t\tcolumnAlignments);\n\t\t};\n\t\tvar combineHeaderAndDelimiter = function (headers) {\n\t\t\treturn _Utils_eq(\n\t\t\t\t$elm$core$List$length(headers),\n\t\t\t\t$elm$core$List$length(columnAlignments)) ? $elm$core$Result$Ok(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Table$TableHeader(\n\t\t\t\t\theadersWithAlignment(headers))) : $elm$core$Result$Err(\n\t\t\t\t'Tables must have the same number of header columns (' + ($elm$core$String$fromInt(\n\t\t\t\t\t$elm$core$List$length(headers)) + (') as delimiter columns (' + ($elm$core$String$fromInt(\n\t\t\t\t\t$elm$core$List$length(columnAlignments)) + ')'))));\n\t\t};\n\t\tvar _v1 = A2($elm$parser$Parser$Advanced$run, $dillonkearns$elm_markdown$Markdown$TableParser$rowParser, headersRow);\n\t\tif (_v1.$ === 'Ok') {\n\t\t\tvar headers = _v1.a;\n\t\t\treturn combineHeaderAndDelimiter(headers);\n\t\t} else {\n\t\t\treturn $elm$core$Result$Err('Unable to parse previous line as a table header');\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Parser$completeOrMergeBlocks = F2(\n\tfunction (state, newRawBlock) {\n\t\treturn {\n\t\t\tlinkReferenceDefinitions: state.linkReferenceDefinitions,\n\t\t\trawBlocks: function () {\n\t\t\t\tvar _v0 = _Utils_Tuple2(newRawBlock, state.rawBlocks);\n\t\t\t\t_v0$9:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (_v0.b.b) {\n\t\t\t\t\t\tswitch (_v0.b.a.$) {\n\t\t\t\t\t\t\tcase 'CodeBlock':\n\t\t\t\t\t\t\t\tif (_v0.a.$ === 'CodeBlock') {\n\t\t\t\t\t\t\t\t\tvar block1 = _v0.a.a;\n\t\t\t\t\t\t\t\t\tvar _v1 = _v0.b;\n\t\t\t\t\t\t\t\t\tvar block2 = _v1.a.a;\n\t\t\t\t\t\t\t\t\tvar rest = _v1.b;\n\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$CodeBlock(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tbody: A2($dillonkearns$elm_markdown$Markdown$Parser$joinStringsPreserveAll, block2.body, block1.body),\n\t\t\t\t\t\t\t\t\t\t\t\tlanguage: $elm$core$Maybe$Nothing\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\trest);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbreak _v0$9;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'IndentedCodeBlock':\n\t\t\t\t\t\t\t\tif (_v0.a.$ === 'IndentedCodeBlock') {\n\t\t\t\t\t\t\t\t\tvar block1 = _v0.a.a;\n\t\t\t\t\t\t\t\t\tvar _v2 = _v0.b;\n\t\t\t\t\t\t\t\t\tvar block2 = _v2.a.a;\n\t\t\t\t\t\t\t\t\tvar rest = _v2.b;\n\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$IndentedCodeBlock(\n\t\t\t\t\t\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Parser$joinStringsPreserveAll, block2, block1)),\n\t\t\t\t\t\t\t\t\t\trest);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbreak _v0$9;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'BlockQuote':\n\t\t\t\t\t\t\t\tswitch (_v0.a.$) {\n\t\t\t\t\t\t\t\t\tcase 'OpenBlockOrParagraph':\n\t\t\t\t\t\t\t\t\t\tvar body1 = _v0.a.a.a;\n\t\t\t\t\t\t\t\t\t\tvar _v3 = _v0.b;\n\t\t\t\t\t\t\t\t\t\tvar body2 = _v3.a.a;\n\t\t\t\t\t\t\t\t\t\tvar rest = _v3.b;\n\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$BlockQuote(\n\t\t\t\t\t\t\t\t\t\t\t\tA3($dillonkearns$elm_markdown$Markdown$Parser$joinRawStringsWith, '\\n', body2, body1)),\n\t\t\t\t\t\t\t\t\t\t\trest);\n\t\t\t\t\t\t\t\t\tcase 'BlockQuote':\n\t\t\t\t\t\t\t\t\t\tvar body1 = _v0.a.a;\n\t\t\t\t\t\t\t\t\t\tvar _v4 = _v0.b;\n\t\t\t\t\t\t\t\t\t\tvar body2 = _v4.a.a;\n\t\t\t\t\t\t\t\t\t\tvar rest = _v4.b;\n\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$BlockQuote(\n\t\t\t\t\t\t\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Parser$joinStringsPreserveAll, body2, body1)),\n\t\t\t\t\t\t\t\t\t\t\trest);\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tbreak _v0$9;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'OpenBlockOrParagraph':\n\t\t\t\t\t\t\t\tswitch (_v0.a.$) {\n\t\t\t\t\t\t\t\t\tcase 'OpenBlockOrParagraph':\n\t\t\t\t\t\t\t\t\t\tvar body1 = _v0.a.a.a;\n\t\t\t\t\t\t\t\t\t\tvar _v5 = _v0.b;\n\t\t\t\t\t\t\t\t\t\tvar body2 = _v5.a.a.a;\n\t\t\t\t\t\t\t\t\t\tvar rest = _v5.b;\n\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$OpenBlockOrParagraph(\n\t\t\t\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$UnparsedInlines(\n\t\t\t\t\t\t\t\t\t\t\t\t\tA3($dillonkearns$elm_markdown$Markdown$Parser$joinRawStringsWith, '\\n', body2, body1))),\n\t\t\t\t\t\t\t\t\t\t\trest);\n\t\t\t\t\t\t\t\t\tcase 'SetextLine':\n\t\t\t\t\t\t\t\t\t\tif (_v0.a.a.$ === 'LevelOne') {\n\t\t\t\t\t\t\t\t\t\t\tvar _v6 = _v0.a;\n\t\t\t\t\t\t\t\t\t\t\tvar _v7 = _v6.a;\n\t\t\t\t\t\t\t\t\t\t\tvar _v8 = _v0.b;\n\t\t\t\t\t\t\t\t\t\t\tvar unparsedInlines = _v8.a.a;\n\t\t\t\t\t\t\t\t\t\t\tvar rest = _v8.b;\n\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$RawBlock$Heading, 1, unparsedInlines),\n\t\t\t\t\t\t\t\t\t\t\t\trest);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar _v9 = _v0.a;\n\t\t\t\t\t\t\t\t\t\t\tvar _v10 = _v9.a;\n\t\t\t\t\t\t\t\t\t\t\tvar _v11 = _v0.b;\n\t\t\t\t\t\t\t\t\t\t\tvar unparsedInlines = _v11.a.a;\n\t\t\t\t\t\t\t\t\t\t\tvar rest = _v11.b;\n\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$RawBlock$Heading, 2, unparsedInlines),\n\t\t\t\t\t\t\t\t\t\t\t\trest);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcase 'TableDelimiter':\n\t\t\t\t\t\t\t\t\t\tvar _v12 = _v0.a.a;\n\t\t\t\t\t\t\t\t\t\tvar text = _v12.a;\n\t\t\t\t\t\t\t\t\t\tvar alignments = _v12.b;\n\t\t\t\t\t\t\t\t\t\tvar _v13 = _v0.b;\n\t\t\t\t\t\t\t\t\t\tvar rawHeaders = _v13.a.a.a;\n\t\t\t\t\t\t\t\t\t\tvar rest = _v13.b;\n\t\t\t\t\t\t\t\t\t\tvar _v14 = A2(\n\t\t\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$TableParser$parseHeader,\n\t\t\t\t\t\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Table$TableDelimiterRow, text, alignments),\n\t\t\t\t\t\t\t\t\t\t\trawHeaders);\n\t\t\t\t\t\t\t\t\t\tif (_v14.$ === 'Ok') {\n\t\t\t\t\t\t\t\t\t\t\tvar headers = _v14.a.a;\n\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$Table(\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Table$Table, headers, _List_Nil)),\n\t\t\t\t\t\t\t\t\t\t\t\trest);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$OpenBlockOrParagraph(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$UnparsedInlines(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3($dillonkearns$elm_markdown$Markdown$Parser$joinRawStringsWith, '\\n', rawHeaders, text.raw))),\n\t\t\t\t\t\t\t\t\t\t\t\trest);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tbreak _v0$9;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'Table':\n\t\t\t\t\t\t\t\tif (_v0.a.$ === 'Table') {\n\t\t\t\t\t\t\t\t\tvar updatedTable = _v0.a.a;\n\t\t\t\t\t\t\t\t\tvar _v15 = _v0.b;\n\t\t\t\t\t\t\t\t\tvar rest = _v15.b;\n\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$Table(updatedTable),\n\t\t\t\t\t\t\t\t\t\trest);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbreak _v0$9;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbreak _v0$9;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$9;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn A2($elm$core$List$cons, newRawBlock, state.rawBlocks);\n\t\t\t}()\n\t\t};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Parser$problemToString = function (problem) {\n\tswitch (problem.$) {\n\t\tcase 'Expecting':\n\t\t\tvar string = problem.a;\n\t\t\treturn 'Expecting ' + string;\n\t\tcase 'ExpectingInt':\n\t\t\treturn 'Expecting int';\n\t\tcase 'ExpectingHex':\n\t\t\treturn 'Expecting hex';\n\t\tcase 'ExpectingOctal':\n\t\t\treturn 'Expecting octal';\n\t\tcase 'ExpectingBinary':\n\t\t\treturn 'Expecting binary';\n\t\tcase 'ExpectingFloat':\n\t\t\treturn 'Expecting float';\n\t\tcase 'ExpectingNumber':\n\t\t\treturn 'Expecting number';\n\t\tcase 'ExpectingVariable':\n\t\t\treturn 'Expecting variable';\n\t\tcase 'ExpectingSymbol':\n\t\t\tvar string = problem.a;\n\t\t\treturn 'Expecting symbol ' + string;\n\t\tcase 'ExpectingKeyword':\n\t\t\tvar string = problem.a;\n\t\t\treturn 'Expecting keyword ' + string;\n\t\tcase 'ExpectingEnd':\n\t\t\treturn 'Expecting keyword end';\n\t\tcase 'UnexpectedChar':\n\t\t\treturn 'Unexpected char';\n\t\tcase 'Problem':\n\t\t\tvar problemDescription = problem.a;\n\t\t\treturn problemDescription;\n\t\tdefault:\n\t\t\treturn 'Bad repeat';\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$Parser$deadEndToString = function (deadEnd) {\n\treturn 'Problem at row ' + ($elm$core$String$fromInt(deadEnd.row) + ('\\n' + $dillonkearns$elm_markdown$Markdown$Parser$problemToString(deadEnd.problem)));\n};\nvar $dillonkearns$elm_markdown$Markdown$Parser$deadEndsToString = function (deadEnds) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t'\\n',\n\t\tA2($elm$core$List$map, $dillonkearns$elm_markdown$Markdown$Parser$deadEndToString, deadEnds));\n};\nvar $dillonkearns$elm_markdown$HtmlParser$Cdata = function (a) {\n\treturn {$: 'Cdata', a: a};\n};\nvar $dillonkearns$elm_markdown$HtmlParser$Element = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'Element', a: a, b: b, c: c};\n\t});\nvar $dillonkearns$elm_markdown$HtmlParser$Text = function (a) {\n\treturn {$: 'Text', a: a};\n};\nvar $dillonkearns$elm_markdown$HtmlParser$expectTagNameCharacter = $elm$parser$Parser$Expecting('at least 1 tag name character');\nvar $dillonkearns$elm_markdown$HtmlParser$tagNameCharacter = function (c) {\n\tswitch (c.valueOf()) {\n\t\tcase ' ':\n\t\t\treturn false;\n\t\tcase '\\r':\n\t\t\treturn false;\n\t\tcase '\\n':\n\t\t\treturn false;\n\t\tcase '\\t':\n\t\t\treturn false;\n\t\tcase '/':\n\t\t\treturn false;\n\t\tcase '<':\n\t\t\treturn false;\n\t\tcase '>':\n\t\t\treturn false;\n\t\tcase '\\\"':\n\t\t\treturn false;\n\t\tcase '\\'':\n\t\t\treturn false;\n\t\tcase '=':\n\t\t\treturn false;\n\t\tdefault:\n\t\t\treturn true;\n\t}\n};\nvar $dillonkearns$elm_markdown$HtmlParser$tagName = A2(\n\t$elm$parser$Parser$Advanced$mapChompedString,\n\tF2(\n\t\tfunction (name, _v0) {\n\t\t\treturn $elm$core$String$toLower(name);\n\t\t}),\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\tA2($elm$parser$Parser$Advanced$chompIf, $dillonkearns$elm_markdown$HtmlParser$tagNameCharacter, $dillonkearns$elm_markdown$HtmlParser$expectTagNameCharacter),\n\t\t$elm$parser$Parser$Advanced$chompWhile($dillonkearns$elm_markdown$HtmlParser$tagNameCharacter)));\nvar $dillonkearns$elm_markdown$HtmlParser$attributeName = $dillonkearns$elm_markdown$HtmlParser$tagName;\nvar $elm$parser$Parser$ExpectingSymbol = function (a) {\n\treturn {$: 'ExpectingSymbol', a: a};\n};\nvar $dillonkearns$elm_markdown$HtmlParser$symbol = function (str) {\n\treturn $elm$parser$Parser$Advanced$token(\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\tstr,\n\t\t\t$elm$parser$Parser$ExpectingSymbol(str)));\n};\nvar $dillonkearns$elm_markdown$HtmlParser$entities = $elm$core$Dict$fromList(\n\t_List_fromArray(\n\t\t[\n\t\t\t_Utils_Tuple2(\n\t\t\t'amp',\n\t\t\t_Utils_chr('&')),\n\t\t\t_Utils_Tuple2(\n\t\t\t'lt',\n\t\t\t_Utils_chr('<')),\n\t\t\t_Utils_Tuple2(\n\t\t\t'gt',\n\t\t\t_Utils_chr('>')),\n\t\t\t_Utils_Tuple2(\n\t\t\t'apos',\n\t\t\t_Utils_chr('\\'')),\n\t\t\t_Utils_Tuple2(\n\t\t\t'quot',\n\t\t\t_Utils_chr('\\\"'))\n\t\t]));\nvar $dillonkearns$elm_markdown$HtmlParser$decodeEscape = function (s) {\n\treturn A2($elm$core$String$startsWith, '#x', s) ? A2(\n\t\t$elm$core$Result$mapError,\n\t\t$elm$parser$Parser$Problem,\n\t\tA2(\n\t\t\t$elm$core$Result$map,\n\t\t\t$elm$core$Char$fromCode,\n\t\t\t$rtfeldman$elm_hex$Hex$fromString(\n\t\t\t\tA2($elm$core$String$dropLeft, 2, s)))) : (A2($elm$core$String$startsWith, '#', s) ? A2(\n\t\t$elm$core$Result$fromMaybe,\n\t\t$elm$parser$Parser$Problem('Invalid escaped character: ' + s),\n\t\tA2(\n\t\t\t$elm$core$Maybe$map,\n\t\t\t$elm$core$Char$fromCode,\n\t\t\t$elm$core$String$toInt(\n\t\t\t\tA2($elm$core$String$dropLeft, 1, s)))) : A2(\n\t\t$elm$core$Result$fromMaybe,\n\t\t$elm$parser$Parser$Problem('No entity named \\\"&' + (s + ';\\\" found.')),\n\t\tA2($elm$core$Dict$get, s, $dillonkearns$elm_markdown$HtmlParser$entities)));\n};\nvar $elm$parser$Parser$Advanced$problem = function (x) {\n\treturn $elm$parser$Parser$Advanced$Parser(\n\t\tfunction (s) {\n\t\t\treturn A2(\n\t\t\t\t$elm$parser$Parser$Advanced$Bad,\n\t\t\t\tfalse,\n\t\t\t\tA2($elm$parser$Parser$Advanced$fromState, s, x));\n\t\t});\n};\nvar $dillonkearns$elm_markdown$HtmlParser$escapedChar = function (end_) {\n\tvar process = function (entityStr) {\n\t\tvar _v0 = $dillonkearns$elm_markdown$HtmlParser$decodeEscape(entityStr);\n\t\tif (_v0.$ === 'Ok') {\n\t\t\tvar c = _v0.a;\n\t\t\treturn $elm$parser$Parser$Advanced$succeed(c);\n\t\t} else {\n\t\t\tvar e = _v0.a;\n\t\t\treturn $elm$parser$Parser$Advanced$problem(e);\n\t\t}\n\t};\n\tvar isEntityChar = function (c) {\n\t\treturn (!_Utils_eq(c, end_)) && (!_Utils_eq(\n\t\t\tc,\n\t\t\t_Utils_chr(';')));\n\t};\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$keeper,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Basics$identity),\n\t\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('&')),\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$andThen,\n\t\t\t\tprocess,\n\t\t\t\t$elm$parser$Parser$Advanced$getChompedString(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$chompIf,\n\t\t\t\t\t\t\tisEntityChar,\n\t\t\t\t\t\t\t$elm$parser$Parser$Expecting('an entity character')),\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$chompWhile(isEntityChar)))),\n\t\t\t$dillonkearns$elm_markdown$HtmlParser$symbol(';')));\n};\nvar $dillonkearns$elm_markdown$HtmlParser$textStringStep = F3(\n\tfunction (closingChar, predicate, accum) {\n\t\treturn A2(\n\t\t\t$elm$parser$Parser$Advanced$andThen,\n\t\t\tfunction (soFar) {\n\t\t\t\treturn $elm$parser$Parser$Advanced$oneOf(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\t\t\t\tfunction (escaped) {\n\t\t\t\t\t\t\t\treturn $elm$parser$Parser$Advanced$Loop(\n\t\t\t\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t\t\t\taccum,\n\t\t\t\t\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t\t\t\t\tsoFar,\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromChar(escaped))));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$escapedChar(closingChar)),\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$Done(\n\t\t\t\t\t\t\t\t_Utils_ap(accum, soFar)))\n\t\t\t\t\t\t]));\n\t\t\t},\n\t\t\t$elm$parser$Parser$Advanced$getChompedString(\n\t\t\t\t$elm$parser$Parser$Advanced$chompWhile(predicate)));\n\t});\nvar $dillonkearns$elm_markdown$HtmlParser$textString = function (closingChar) {\n\tvar predicate = function (c) {\n\t\treturn (!_Utils_eq(c, closingChar)) && (!_Utils_eq(\n\t\t\tc,\n\t\t\t_Utils_chr('&')));\n\t};\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$loop,\n\t\t'',\n\t\tA2($dillonkearns$elm_markdown$HtmlParser$textStringStep, closingChar, predicate));\n};\nvar $dillonkearns$elm_markdown$HtmlParser$attributeValue = $elm$parser$Parser$Advanced$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Basics$identity),\n\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('\\\"')),\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$textString(\n\t\t\t\t\t_Utils_chr('\\\"')),\n\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('\\\"'))),\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Basics$identity),\n\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('\\'')),\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$textString(\n\t\t\t\t\t_Utils_chr('\\'')),\n\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('\\'')))\n\t\t]));\nvar $dillonkearns$elm_markdown$HtmlParser$keepOldest = F2(\n\tfunction (_new, mValue) {\n\t\tif (mValue.$ === 'Just') {\n\t\t\tvar v = mValue.a;\n\t\t\treturn $elm$core$Maybe$Just(v);\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Just(_new);\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$HtmlParser$isWhitespace = function (c) {\n\tswitch (c.valueOf()) {\n\t\tcase ' ':\n\t\t\treturn true;\n\t\tcase '\\r':\n\t\t\treturn true;\n\t\tcase '\\n':\n\t\t\treturn true;\n\t\tcase '\\t':\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\nvar $dillonkearns$elm_markdown$HtmlParser$whiteSpace = $elm$parser$Parser$Advanced$chompWhile($dillonkearns$elm_markdown$HtmlParser$isWhitespace);\nvar $dillonkearns$elm_markdown$HtmlParser$attributesStep = function (attrs) {\n\tvar process = F2(\n\t\tfunction (name, value) {\n\t\t\treturn $elm$parser$Parser$Advanced$Loop(\n\t\t\t\tA3(\n\t\t\t\t\t$elm$core$Dict$update,\n\t\t\t\t\t$elm$core$String$toLower(name),\n\t\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$keepOldest(value),\n\t\t\t\t\tattrs));\n\t\t});\n\treturn $elm$parser$Parser$Advanced$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(process),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\t\tA2($elm$parser$Parser$Advanced$ignorer, $dillonkearns$elm_markdown$HtmlParser$attributeName, $dillonkearns$elm_markdown$HtmlParser$whiteSpace),\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('=')),\n\t\t\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$whiteSpace)),\n\t\t\t\tA2($elm$parser$Parser$Advanced$ignorer, $dillonkearns$elm_markdown$HtmlParser$attributeValue, $dillonkearns$elm_markdown$HtmlParser$whiteSpace)),\n\t\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t$elm$parser$Parser$Advanced$Done(attrs))\n\t\t\t]));\n};\nvar $dillonkearns$elm_markdown$HtmlParser$attributes = A2(\n\t$elm$parser$Parser$Advanced$map,\n\tA2(\n\t\t$elm$core$Dict$foldl,\n\t\tF3(\n\t\t\tfunction (key, value, accum) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t{name: key, value: value},\n\t\t\t\t\taccum);\n\t\t\t}),\n\t\t_List_Nil),\n\tA2($elm$parser$Parser$Advanced$loop, $elm$core$Dict$empty, $dillonkearns$elm_markdown$HtmlParser$attributesStep));\nvar $elm$parser$Parser$Advanced$chompUntilEndOr = function (str) {\n\treturn $elm$parser$Parser$Advanced$Parser(\n\t\tfunction (s) {\n\t\t\tvar _v0 = A5(_Parser_findSubString, str, s.offset, s.row, s.col, s.src);\n\t\t\tvar newOffset = _v0.a;\n\t\t\tvar newRow = _v0.b;\n\t\t\tvar newCol = _v0.c;\n\t\t\tvar adjustedOffset = (newOffset < 0) ? $elm$core$String$length(s.src) : newOffset;\n\t\t\treturn A3(\n\t\t\t\t$elm$parser$Parser$Advanced$Good,\n\t\t\t\t_Utils_cmp(s.offset, adjustedOffset) < 0,\n\t\t\t\t_Utils_Tuple0,\n\t\t\t\t{col: newCol, context: s.context, indent: s.indent, offset: adjustedOffset, row: newRow, src: s.src});\n\t\t});\n};\nvar $dillonkearns$elm_markdown$HtmlParser$cdata = A2(\n\t$elm$parser$Parser$Advanced$keeper,\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Basics$identity),\n\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('<![CDATA[')),\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$getChompedString(\n\t\t\t$elm$parser$Parser$Advanced$chompUntilEndOr(']]>')),\n\t\t$dillonkearns$elm_markdown$HtmlParser$symbol(']]>')));\nvar $dillonkearns$elm_markdown$HtmlParser$childrenStep = F2(\n\tfunction (options, accum) {\n\t\treturn A2(\n\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\tfunction (f) {\n\t\t\t\treturn f(accum);\n\t\t\t},\n\t\t\t$elm$parser$Parser$Advanced$oneOf(options));\n\t});\nvar $dillonkearns$elm_markdown$HtmlParser$fail = function (str) {\n\treturn $elm$parser$Parser$Advanced$problem(\n\t\t$elm$parser$Parser$Problem(str));\n};\nvar $dillonkearns$elm_markdown$HtmlParser$closingTag = function (startTagName) {\n\tvar closingTagName = A2(\n\t\t$elm$parser$Parser$Advanced$andThen,\n\t\tfunction (endTagName) {\n\t\t\treturn _Utils_eq(startTagName, endTagName) ? $elm$parser$Parser$Advanced$succeed(_Utils_Tuple0) : $dillonkearns$elm_markdown$HtmlParser$fail('tag name mismatch: ' + (startTagName + (' and ' + endTagName)));\n\t\t},\n\t\t$dillonkearns$elm_markdown$HtmlParser$tagName);\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('</'),\n\t\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$whiteSpace),\n\t\t\t\tclosingTagName),\n\t\t\t$dillonkearns$elm_markdown$HtmlParser$whiteSpace),\n\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('>'));\n};\nvar $dillonkearns$elm_markdown$HtmlParser$Comment = function (a) {\n\treturn {$: 'Comment', a: a};\n};\nvar $dillonkearns$elm_markdown$HtmlParser$toToken = function (str) {\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$Token,\n\t\tstr,\n\t\t$elm$parser$Parser$Expecting(str));\n};\nvar $dillonkearns$elm_markdown$HtmlParser$comment = A2(\n\t$elm$parser$Parser$Advanced$keeper,\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$HtmlParser$Comment),\n\t\t$elm$parser$Parser$Advanced$token(\n\t\t\t$dillonkearns$elm_markdown$HtmlParser$toToken('<!--'))),\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$getChompedString(\n\t\t\t$elm$parser$Parser$Advanced$chompUntilEndOr('-->')),\n\t\t$elm$parser$Parser$Advanced$token(\n\t\t\t$dillonkearns$elm_markdown$HtmlParser$toToken('-->'))));\nvar $dillonkearns$elm_markdown$HtmlParser$Declaration = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Declaration', a: a, b: b};\n\t});\nvar $dillonkearns$elm_markdown$HtmlParser$expectUppercaseCharacter = $elm$parser$Parser$Expecting('at least 1 uppercase character');\nvar $dillonkearns$elm_markdown$HtmlParser$allUppercase = $elm$parser$Parser$Advanced$getChompedString(\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\tA2($elm$parser$Parser$Advanced$chompIf, $elm$core$Char$isUpper, $dillonkearns$elm_markdown$HtmlParser$expectUppercaseCharacter),\n\t\t$elm$parser$Parser$Advanced$chompWhile($elm$core$Char$isUpper)));\nvar $dillonkearns$elm_markdown$HtmlParser$oneOrMoreWhiteSpace = A2(\n\t$elm$parser$Parser$Advanced$ignorer,\n\tA2(\n\t\t$elm$parser$Parser$Advanced$chompIf,\n\t\t$dillonkearns$elm_markdown$HtmlParser$isWhitespace,\n\t\t$elm$parser$Parser$Expecting('at least one whitespace')),\n\t$elm$parser$Parser$Advanced$chompWhile($dillonkearns$elm_markdown$HtmlParser$isWhitespace));\nvar $dillonkearns$elm_markdown$HtmlParser$docType = A2(\n\t$elm$parser$Parser$Advanced$keeper,\n\tA2(\n\t\t$elm$parser$Parser$Advanced$keeper,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$HtmlParser$Declaration),\n\t\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('<!')),\n\t\tA2($elm$parser$Parser$Advanced$ignorer, $dillonkearns$elm_markdown$HtmlParser$allUppercase, $dillonkearns$elm_markdown$HtmlParser$oneOrMoreWhiteSpace)),\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$getChompedString(\n\t\t\t$elm$parser$Parser$Advanced$chompUntilEndOr('>')),\n\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('>')));\nvar $dillonkearns$elm_markdown$HtmlParser$ProcessingInstruction = function (a) {\n\treturn {$: 'ProcessingInstruction', a: a};\n};\nvar $dillonkearns$elm_markdown$HtmlParser$processingInstruction = A2(\n\t$elm$parser$Parser$Advanced$keeper,\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$HtmlParser$ProcessingInstruction),\n\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('<?')),\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$getChompedString(\n\t\t\t$elm$parser$Parser$Advanced$chompUntilEndOr('?>')),\n\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('?>')));\nvar $dillonkearns$elm_markdown$HtmlParser$isNotTextNodeIgnoreChar = function (c) {\n\tswitch (c.valueOf()) {\n\t\tcase '<':\n\t\t\treturn false;\n\t\tcase '&':\n\t\t\treturn false;\n\t\tdefault:\n\t\t\treturn true;\n\t}\n};\nvar $dillonkearns$elm_markdown$HtmlParser$textNodeStringStepOptions = _List_fromArray(\n\t[\n\t\tA2(\n\t\t$elm$parser$Parser$Advanced$map,\n\t\tfunction (_v0) {\n\t\t\treturn $elm$parser$Parser$Advanced$Loop(_Utils_Tuple0);\n\t\t},\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$chompIf,\n\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$isNotTextNodeIgnoreChar,\n\t\t\t\t$elm$parser$Parser$Expecting('is not & or <')),\n\t\t\t$elm$parser$Parser$Advanced$chompWhile($dillonkearns$elm_markdown$HtmlParser$isNotTextNodeIgnoreChar))),\n\t\tA2(\n\t\t$elm$parser$Parser$Advanced$map,\n\t\tfunction (_v1) {\n\t\t\treturn $elm$parser$Parser$Advanced$Loop(_Utils_Tuple0);\n\t\t},\n\t\t$dillonkearns$elm_markdown$HtmlParser$escapedChar(\n\t\t\t_Utils_chr('<'))),\n\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t$elm$parser$Parser$Advanced$Done(_Utils_Tuple0))\n\t]);\nvar $dillonkearns$elm_markdown$HtmlParser$textNodeStringStep = function (_v0) {\n\treturn $elm$parser$Parser$Advanced$oneOf($dillonkearns$elm_markdown$HtmlParser$textNodeStringStepOptions);\n};\nvar $dillonkearns$elm_markdown$HtmlParser$textNodeString = $elm$parser$Parser$Advanced$getChompedString(\n\tA2($elm$parser$Parser$Advanced$loop, _Utils_Tuple0, $dillonkearns$elm_markdown$HtmlParser$textNodeStringStep));\nvar $dillonkearns$elm_markdown$HtmlParser$children = function (startTagName) {\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$loop,\n\t\t_List_Nil,\n\t\t$dillonkearns$elm_markdown$HtmlParser$childrenStep(\n\t\t\t$dillonkearns$elm_markdown$HtmlParser$childrenStepOptions(startTagName)));\n};\nvar $dillonkearns$elm_markdown$HtmlParser$childrenStepOptions = function (startTagName) {\n\treturn _List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\tF2(\n\t\t\t\tfunction (_v1, accum) {\n\t\t\t\t\treturn $elm$parser$Parser$Advanced$Done(\n\t\t\t\t\t\t$elm$core$List$reverse(accum));\n\t\t\t\t}),\n\t\t\t$dillonkearns$elm_markdown$HtmlParser$closingTag(startTagName)),\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$andThen,\n\t\t\tfunction (text) {\n\t\t\t\treturn $elm$core$String$isEmpty(text) ? A2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\t\tF2(\n\t\t\t\t\t\tfunction (_v2, accum) {\n\t\t\t\t\t\t\treturn $elm$parser$Parser$Advanced$Done(\n\t\t\t\t\t\t\t\t$elm$core$List$reverse(accum));\n\t\t\t\t\t\t}),\n\t\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$closingTag(startTagName)) : $elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\tfunction (accum) {\n\t\t\t\t\t\treturn $elm$parser$Parser$Advanced$Loop(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$Text(text),\n\t\t\t\t\t\t\t\taccum));\n\t\t\t\t\t});\n\t\t\t},\n\t\t\t$dillonkearns$elm_markdown$HtmlParser$textNodeString),\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\tF2(\n\t\t\t\tfunction (_new, accum) {\n\t\t\t\t\treturn $elm$parser$Parser$Advanced$Loop(\n\t\t\t\t\t\tA2($elm$core$List$cons, _new, accum));\n\t\t\t\t}),\n\t\t\t$dillonkearns$elm_markdown$HtmlParser$cyclic$html())\n\t\t]);\n};\nvar $dillonkearns$elm_markdown$HtmlParser$elementContinuation = function (startTagName) {\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$keeper,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$Element(startTagName)),\n\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$whiteSpace),\n\t\t\tA2($elm$parser$Parser$Advanced$ignorer, $dillonkearns$elm_markdown$HtmlParser$attributes, $dillonkearns$elm_markdown$HtmlParser$whiteSpace)),\n\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\t\tfunction (_v0) {\n\t\t\t\t\t\treturn _List_Nil;\n\t\t\t\t\t},\n\t\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('/>')),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Basics$identity),\n\t\t\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('>')),\n\t\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$children(startTagName))\n\t\t\t\t])));\n};\nfunction $dillonkearns$elm_markdown$HtmlParser$cyclic$html() {\n\treturn $elm$parser$Parser$Advanced$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($elm$parser$Parser$Advanced$map, $dillonkearns$elm_markdown$HtmlParser$Cdata, $dillonkearns$elm_markdown$HtmlParser$cdata),\n\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$processingInstruction,\n\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$comment,\n\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$docType,\n\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$cyclic$element()\n\t\t\t]));\n}\nfunction $dillonkearns$elm_markdown$HtmlParser$cyclic$element() {\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$keeper,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Basics$identity),\n\t\t\t$dillonkearns$elm_markdown$HtmlParser$symbol('<')),\n\t\tA2($elm$parser$Parser$Advanced$andThen, $dillonkearns$elm_markdown$HtmlParser$elementContinuation, $dillonkearns$elm_markdown$HtmlParser$tagName));\n}\ntry {\n\tvar $dillonkearns$elm_markdown$HtmlParser$html = $dillonkearns$elm_markdown$HtmlParser$cyclic$html();\n\t$dillonkearns$elm_markdown$HtmlParser$cyclic$html = function () {\n\t\treturn $dillonkearns$elm_markdown$HtmlParser$html;\n\t};\n\tvar $dillonkearns$elm_markdown$HtmlParser$element = $dillonkearns$elm_markdown$HtmlParser$cyclic$element();\n\t$dillonkearns$elm_markdown$HtmlParser$cyclic$element = function () {\n\t\treturn $dillonkearns$elm_markdown$HtmlParser$element;\n\t};\n} catch ($) {\n\tthrow 'Some top-level definitions from `HtmlParser` are causing infinite recursion:\\n\\n  ┌─────┐\\n  │    children\\n  │     ↓\\n  │    childrenStepOptions\\n  │     ↓\\n  │    html\\n  │     ↓\\n  │    element\\n  │     ↓\\n  │    elementContinuation\\n  └─────┘\\n\\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}\nvar $dillonkearns$elm_markdown$Parser$Token$tab = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'\\t',\n\t$elm$parser$Parser$Expecting('a tab'));\nvar $dillonkearns$elm_markdown$Markdown$Parser$exactlyFourSpaces = $elm$parser$Parser$Advanced$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$tab),\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$space)),\n\t\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$symbol(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t\t\t\t'   ',\n\t\t\t\t\t\t\t$elm$parser$Parser$ExpectingSymbol('Indentation'))),\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$symbol(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t\t\t\t' \\t',\n\t\t\t\t\t\t\t$elm$parser$Parser$ExpectingSymbol('Indentation'))),\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$symbol(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t\t\t\t'  \\t',\n\t\t\t\t\t\t\t$elm$parser$Parser$ExpectingSymbol('Indentation')))\n\t\t\t\t\t])))\n\t\t]));\nvar $dillonkearns$elm_markdown$Markdown$Parser$indentedCodeBlock = A2(\n\t$elm$parser$Parser$Advanced$keeper,\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Markdown$RawBlock$IndentedCodeBlock),\n\t\t$dillonkearns$elm_markdown$Markdown$Parser$exactlyFourSpaces),\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$getChompedString($dillonkearns$elm_markdown$Helpers$chompUntilLineEndOrEnd),\n\t\t$dillonkearns$elm_markdown$Helpers$lineEndOrEnd));\nvar $dillonkearns$elm_markdown$Markdown$Parser$innerParagraphParser = A2(\n\t$elm$parser$Parser$Advanced$mapChompedString,\n\tF2(\n\t\tfunction (rawLine, _v0) {\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$RawBlock$OpenBlockOrParagraph(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$UnparsedInlines(rawLine));\n\t\t}),\n\t$dillonkearns$elm_markdown$Helpers$chompUntilLineEndOrEnd);\nvar $dillonkearns$elm_markdown$Markdown$Parser$openBlockOrParagraphParser = A2($elm$parser$Parser$Advanced$ignorer, $dillonkearns$elm_markdown$Markdown$Parser$innerParagraphParser, $dillonkearns$elm_markdown$Helpers$lineEndOrEnd);\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$OrderedListBlock = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'OrderedListBlock', a: a, b: b};\n\t});\nvar $dillonkearns$elm_markdown$Parser$Extra$chompOneOrMore = function (condition) {\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$chompIf,\n\t\t\tcondition,\n\t\t\t$elm$parser$Parser$Problem('Expected one or more character')),\n\t\t$elm$parser$Parser$Advanced$chompWhile(condition));\n};\nvar $dillonkearns$elm_markdown$Parser$Token$closingParen = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t')',\n\t$elm$parser$Parser$Expecting('a `)`'));\nvar $dillonkearns$elm_markdown$Parser$Token$dot = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'.',\n\t$elm$parser$Parser$Expecting('a `.`'));\nvar $dillonkearns$elm_markdown$Markdown$OrderedList$itemBody = $elm$parser$Parser$Advanced$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Basics$identity),\n\t\t\t\t$dillonkearns$elm_markdown$Parser$Extra$chompOneOrMore($dillonkearns$elm_markdown$Whitespace$isSpaceOrTab)),\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$elm$parser$Parser$Advanced$getChompedString($dillonkearns$elm_markdown$Helpers$chompUntilLineEndOrEnd),\n\t\t\t\t$dillonkearns$elm_markdown$Helpers$lineEndOrEnd)),\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed(''),\n\t\t\t$dillonkearns$elm_markdown$Helpers$lineEndOrEnd)\n\t\t]));\nvar $dillonkearns$elm_markdown$Parser$Extra$positiveInteger = A2(\n\t$elm$parser$Parser$Advanced$mapChompedString,\n\tF2(\n\t\tfunction (str, _v0) {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t0,\n\t\t\t\t$elm$core$String$toInt(str));\n\t\t}),\n\t$dillonkearns$elm_markdown$Parser$Extra$chompOneOrMore($elm$core$Char$isDigit));\nvar $dillonkearns$elm_markdown$Markdown$OrderedList$singleItemParser = function (listMarker) {\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$keeper,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Basics$identity),\n\t\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t$dillonkearns$elm_markdown$Parser$Extra$positiveInteger,\n\t\t\t\t\t$elm$parser$Parser$Advanced$symbol(listMarker)))),\n\t\t$dillonkearns$elm_markdown$Markdown$OrderedList$itemBody);\n};\nvar $dillonkearns$elm_markdown$Markdown$OrderedList$statementsHelp = F2(\n\tfunction (itemParser, revStmts) {\n\t\treturn $elm$parser$Parser$Advanced$oneOf(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\t\tfunction (stmt) {\n\t\t\t\t\t\treturn $elm$parser$Parser$Advanced$Loop(\n\t\t\t\t\t\t\tA2($elm$core$List$cons, stmt, revStmts));\n\t\t\t\t\t},\n\t\t\t\t\titemParser),\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\t$elm$parser$Parser$Advanced$Done(\n\t\t\t\t\t\t$elm$core$List$reverse(revStmts)))\n\t\t\t\t]));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$OrderedList$parseSubsequentItems = F3(\n\tfunction (startingIndex, listMarker, firstItem) {\n\t\treturn A2(\n\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\tfunction (items) {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tstartingIndex,\n\t\t\t\t\tA2($elm$core$List$cons, firstItem, items));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$loop,\n\t\t\t\t_List_Nil,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$OrderedList$statementsHelp(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$OrderedList$singleItemParser(listMarker))));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$OrderedList$positiveIntegerMaxOf9Digits = A2(\n\t$elm$parser$Parser$Advanced$andThen,\n\tfunction (parsed) {\n\t\treturn (parsed <= 999999999) ? $elm$parser$Parser$Advanced$succeed(parsed) : $elm$parser$Parser$Advanced$problem(\n\t\t\t$elm$parser$Parser$Problem('Starting numbers must be nine digits or less.'));\n\t},\n\t$dillonkearns$elm_markdown$Parser$Extra$positiveInteger);\nvar $dillonkearns$elm_markdown$Markdown$OrderedList$validateStartsWith1 = function (parsed) {\n\tif (parsed === 1) {\n\t\treturn $elm$parser$Parser$Advanced$succeed(parsed);\n\t} else {\n\t\treturn $elm$parser$Parser$Advanced$problem(\n\t\t\t$elm$parser$Parser$Problem('Lists inside a paragraph or after a paragraph without a blank line must start with 1'));\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$OrderedList$parser = function (previousWasBody) {\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$andThen,\n\t\t$elm$core$Basics$identity,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Markdown$OrderedList$parseSubsequentItems),\n\t\t\t\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t\t\t\tpreviousWasBody ? A2($elm$parser$Parser$Advanced$andThen, $dillonkearns$elm_markdown$Markdown$OrderedList$validateStartsWith1, $dillonkearns$elm_markdown$Markdown$OrderedList$positiveIntegerMaxOf9Digits) : $dillonkearns$elm_markdown$Markdown$OrderedList$positiveIntegerMaxOf9Digits)),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Parser$Token$dot),\n\t\t\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$dot)),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Parser$Token$closingParen),\n\t\t\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$closingParen))\n\t\t\t\t\t\t\t\t]))),\n\t\t\t\t\t$dillonkearns$elm_markdown$Parser$Extra$chompOneOrMore($dillonkearns$elm_markdown$Whitespace$isSpaceOrTab))),\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$elm$parser$Parser$Advanced$getChompedString($dillonkearns$elm_markdown$Helpers$chompUntilLineEndOrEnd),\n\t\t\t\t$dillonkearns$elm_markdown$Helpers$lineEndOrEnd)));\n};\nvar $dillonkearns$elm_markdown$Markdown$Parser$orderedListBlock = function (previousWasBody) {\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$map,\n\t\tfunction (_v0) {\n\t\t\tvar startingIndex = _v0.a;\n\t\t\tvar unparsedLines = _v0.b;\n\t\t\treturn A2(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$OrderedListBlock,\n\t\t\t\tstartingIndex,\n\t\t\t\tA2($elm$core$List$map, $dillonkearns$elm_markdown$Markdown$RawBlock$UnparsedInlines, unparsedLines));\n\t\t},\n\t\t$dillonkearns$elm_markdown$Markdown$OrderedList$parser(previousWasBody));\n};\nvar $dillonkearns$elm_markdown$Markdown$Inline$CodeInline = function (a) {\n\treturn {$: 'CodeInline', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Inline$Emphasis = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Emphasis', a: a, b: b};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Inline$HardLineBreak = {$: 'HardLineBreak'};\nvar $dillonkearns$elm_markdown$Markdown$Inline$HtmlInline = function (a) {\n\treturn {$: 'HtmlInline', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Inline$Image = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'Image', a: a, b: b, c: c};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Inline$Link = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'Link', a: a, b: b, c: c};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Inline$Strikethrough = function (a) {\n\treturn {$: 'Strikethrough', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Inline$Text = function (a) {\n\treturn {$: 'Text', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$matchToInline = function (_v0) {\n\tvar match = _v0.a;\n\tvar _v1 = match.type_;\n\tswitch (_v1.$) {\n\t\tcase 'NormalType':\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Inline$Text(match.text);\n\t\tcase 'HardLineBreakType':\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Inline$HardLineBreak;\n\t\tcase 'CodeType':\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Inline$CodeInline(match.text);\n\t\tcase 'AutolinkType':\n\t\t\tvar _v2 = _v1.a;\n\t\t\tvar text = _v2.a;\n\t\t\tvar url = _v2.b;\n\t\t\treturn A3(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Inline$Link,\n\t\t\t\turl,\n\t\t\t\t$elm$core$Maybe$Nothing,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Inline$Text(text)\n\t\t\t\t\t]));\n\t\tcase 'LinkType':\n\t\t\tvar _v3 = _v1.a;\n\t\t\tvar url = _v3.a;\n\t\t\tvar maybeTitle = _v3.b;\n\t\t\treturn A3(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Inline$Link,\n\t\t\t\turl,\n\t\t\t\tmaybeTitle,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$matchesToInlines(match.matches));\n\t\tcase 'ImageType':\n\t\t\tvar _v4 = _v1.a;\n\t\t\tvar url = _v4.a;\n\t\t\tvar maybeTitle = _v4.b;\n\t\t\treturn A3(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Inline$Image,\n\t\t\t\turl,\n\t\t\t\tmaybeTitle,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$matchesToInlines(match.matches));\n\t\tcase 'HtmlType':\n\t\t\tvar model = _v1.a;\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Inline$HtmlInline(model);\n\t\tcase 'EmphasisType':\n\t\t\tvar length = _v1.a;\n\t\t\treturn A2(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Inline$Emphasis,\n\t\t\t\tlength,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$matchesToInlines(match.matches));\n\t\tdefault:\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Inline$Strikethrough(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$matchesToInlines(match.matches));\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$matchesToInlines = function (matches) {\n\treturn A2($elm$core$List$map, $dillonkearns$elm_markdown$Markdown$InlineParser$matchToInline, matches);\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$Match = function (a) {\n\treturn {$: 'Match', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$prepareChildMatch = F2(\n\tfunction (parentMatch, childMatch) {\n\t\treturn $dillonkearns$elm_markdown$Markdown$InlineParser$Match(\n\t\t\t{end: childMatch.end - parentMatch.textStart, matches: childMatch.matches, start: childMatch.start - parentMatch.textStart, text: childMatch.text, textEnd: childMatch.textEnd - parentMatch.textStart, textStart: childMatch.textStart - parentMatch.textStart, type_: childMatch.type_});\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$addChild = F2(\n\tfunction (parentMatch, childMatch) {\n\t\treturn $dillonkearns$elm_markdown$Markdown$InlineParser$Match(\n\t\t\t{\n\t\t\t\tend: parentMatch.end,\n\t\t\t\tmatches: A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$InlineParser$prepareChildMatch, parentMatch, childMatch),\n\t\t\t\t\tparentMatch.matches),\n\t\t\t\tstart: parentMatch.start,\n\t\t\t\ttext: parentMatch.text,\n\t\t\t\ttextEnd: parentMatch.textEnd,\n\t\t\t\ttextStart: parentMatch.textStart,\n\t\t\t\ttype_: parentMatch.type_\n\t\t\t});\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$organizeChildren = function (_v4) {\n\tvar match = _v4.a;\n\treturn $dillonkearns$elm_markdown$Markdown$InlineParser$Match(\n\t\t{\n\t\t\tend: match.end,\n\t\t\tmatches: $dillonkearns$elm_markdown$Markdown$InlineParser$organizeMatches(match.matches),\n\t\t\tstart: match.start,\n\t\t\ttext: match.text,\n\t\t\ttextEnd: match.textEnd,\n\t\t\ttextStart: match.textStart,\n\t\t\ttype_: match.type_\n\t\t});\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$organizeMatches = function (matches) {\n\tvar _v2 = A2(\n\t\t$elm$core$List$sortBy,\n\t\tfunction (_v3) {\n\t\t\tvar match = _v3.a;\n\t\t\treturn match.start;\n\t\t},\n\t\tmatches);\n\tif (!_v2.b) {\n\t\treturn _List_Nil;\n\t} else {\n\t\tvar first = _v2.a;\n\t\tvar rest = _v2.b;\n\t\treturn A3($dillonkearns$elm_markdown$Markdown$InlineParser$organizeMatchesHelp, rest, first, _List_Nil);\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$organizeMatchesHelp = F3(\n\tfunction (remaining, _v0, matchesTail) {\n\t\torganizeMatchesHelp:\n\t\twhile (true) {\n\t\t\tvar prevMatch = _v0.a;\n\t\t\tif (!remaining.b) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$organizeChildren(\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$Match(prevMatch)),\n\t\t\t\t\tmatchesTail);\n\t\t\t} else {\n\t\t\t\tvar match = remaining.a.a;\n\t\t\t\tvar rest = remaining.b;\n\t\t\t\tif (_Utils_cmp(prevMatch.end, match.start) < 1) {\n\t\t\t\t\tvar $temp$remaining = rest,\n\t\t\t\t\t\t$temp$_v0 = $dillonkearns$elm_markdown$Markdown$InlineParser$Match(match),\n\t\t\t\t\t\t$temp$matchesTail = A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$organizeChildren(\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$Match(prevMatch)),\n\t\t\t\t\t\tmatchesTail);\n\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t_v0 = $temp$_v0;\n\t\t\t\t\tmatchesTail = $temp$matchesTail;\n\t\t\t\t\tcontinue organizeMatchesHelp;\n\t\t\t\t} else {\n\t\t\t\t\tif ((_Utils_cmp(prevMatch.start, match.start) < 0) && (_Utils_cmp(prevMatch.end, match.end) > 0)) {\n\t\t\t\t\t\tvar $temp$remaining = rest,\n\t\t\t\t\t\t\t$temp$_v0 = A2($dillonkearns$elm_markdown$Markdown$InlineParser$addChild, prevMatch, match),\n\t\t\t\t\t\t\t$temp$matchesTail = matchesTail;\n\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t_v0 = $temp$_v0;\n\t\t\t\t\t\tmatchesTail = $temp$matchesTail;\n\t\t\t\t\t\tcontinue organizeMatchesHelp;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$remaining = rest,\n\t\t\t\t\t\t\t$temp$_v0 = $dillonkearns$elm_markdown$Markdown$InlineParser$Match(prevMatch),\n\t\t\t\t\t\t\t$temp$matchesTail = matchesTail;\n\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t_v0 = $temp$_v0;\n\t\t\t\t\t\tmatchesTail = $temp$matchesTail;\n\t\t\t\t\t\tcontinue organizeMatchesHelp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$NormalType = {$: 'NormalType'};\nvar $dillonkearns$elm_markdown$Markdown$Helpers$containsAmpersand = function (string) {\n\treturn A2($elm$core$String$contains, '&', string);\n};\nvar $dillonkearns$elm_markdown$Markdown$Entity$decimalRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('&#([0-9]{1,8});'));\nvar $dillonkearns$elm_markdown$Markdown$Entity$isBadEndUnicode = function (_int) {\n\tvar remain_ = A2($elm$core$Basics$modBy, 16, _int);\n\tvar remain = A2($elm$core$Basics$modBy, 131070, _int);\n\treturn (_int >= 131070) && ((((0 <= remain) && (remain <= 15)) || ((65536 <= remain) && (remain <= 65551))) && ((remain_ === 14) || (remain_ === 15)));\n};\nvar $dillonkearns$elm_markdown$Markdown$Entity$isValidUnicode = function (_int) {\n\treturn (_int === 9) || ((_int === 10) || ((_int === 13) || ((_int === 133) || (((32 <= _int) && (_int <= 126)) || (((160 <= _int) && (_int <= 55295)) || (((57344 <= _int) && (_int <= 64975)) || (((65008 <= _int) && (_int <= 65533)) || ((65536 <= _int) && (_int <= 1114109)))))))));\n};\nvar $dillonkearns$elm_markdown$Markdown$Entity$validUnicode = function (_int) {\n\treturn ($dillonkearns$elm_markdown$Markdown$Entity$isValidUnicode(_int) && (!$dillonkearns$elm_markdown$Markdown$Entity$isBadEndUnicode(_int))) ? $elm$core$String$fromChar(\n\t\t$elm$core$Char$fromCode(_int)) : $elm$core$String$fromChar(\n\t\t$elm$core$Char$fromCode(65533));\n};\nvar $dillonkearns$elm_markdown$Markdown$Entity$replaceDecimal = function (match) {\n\tvar _v0 = match.submatches;\n\tif (_v0.b && (_v0.a.$ === 'Just')) {\n\t\tvar first = _v0.a.a;\n\t\tvar _v1 = $elm$core$String$toInt(first);\n\t\tif (_v1.$ === 'Just') {\n\t\t\tvar v = _v1.a;\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Entity$validUnicode(v);\n\t\t} else {\n\t\t\treturn match.match;\n\t\t}\n\t} else {\n\t\treturn match.match;\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$Entity$replaceDecimals = A2($elm$regex$Regex$replace, $dillonkearns$elm_markdown$Markdown$Entity$decimalRegex, $dillonkearns$elm_markdown$Markdown$Entity$replaceDecimal);\nvar $dillonkearns$elm_markdown$Markdown$Entity$entitiesRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('&([0-9a-zA-Z]+);'));\nvar $dillonkearns$elm_markdown$Markdown$Entity$entities = $elm$core$Dict$fromList(\n\t_List_fromArray(\n\t\t[\n\t\t\t_Utils_Tuple2('quot', 34),\n\t\t\t_Utils_Tuple2('amp', 38),\n\t\t\t_Utils_Tuple2('apos', 39),\n\t\t\t_Utils_Tuple2('lt', 60),\n\t\t\t_Utils_Tuple2('gt', 62),\n\t\t\t_Utils_Tuple2('nbsp', 160),\n\t\t\t_Utils_Tuple2('iexcl', 161),\n\t\t\t_Utils_Tuple2('cent', 162),\n\t\t\t_Utils_Tuple2('pound', 163),\n\t\t\t_Utils_Tuple2('curren', 164),\n\t\t\t_Utils_Tuple2('yen', 165),\n\t\t\t_Utils_Tuple2('brvbar', 166),\n\t\t\t_Utils_Tuple2('sect', 167),\n\t\t\t_Utils_Tuple2('uml', 168),\n\t\t\t_Utils_Tuple2('copy', 169),\n\t\t\t_Utils_Tuple2('ordf', 170),\n\t\t\t_Utils_Tuple2('laquo', 171),\n\t\t\t_Utils_Tuple2('not', 172),\n\t\t\t_Utils_Tuple2('shy', 173),\n\t\t\t_Utils_Tuple2('reg', 174),\n\t\t\t_Utils_Tuple2('macr', 175),\n\t\t\t_Utils_Tuple2('deg', 176),\n\t\t\t_Utils_Tuple2('plusmn', 177),\n\t\t\t_Utils_Tuple2('sup2', 178),\n\t\t\t_Utils_Tuple2('sup3', 179),\n\t\t\t_Utils_Tuple2('acute', 180),\n\t\t\t_Utils_Tuple2('micro', 181),\n\t\t\t_Utils_Tuple2('para', 182),\n\t\t\t_Utils_Tuple2('middot', 183),\n\t\t\t_Utils_Tuple2('cedil', 184),\n\t\t\t_Utils_Tuple2('sup1', 185),\n\t\t\t_Utils_Tuple2('ordm', 186),\n\t\t\t_Utils_Tuple2('raquo', 187),\n\t\t\t_Utils_Tuple2('frac14', 188),\n\t\t\t_Utils_Tuple2('frac12', 189),\n\t\t\t_Utils_Tuple2('frac34', 190),\n\t\t\t_Utils_Tuple2('iquest', 191),\n\t\t\t_Utils_Tuple2('Agrave', 192),\n\t\t\t_Utils_Tuple2('Aacute', 193),\n\t\t\t_Utils_Tuple2('Acirc', 194),\n\t\t\t_Utils_Tuple2('Atilde', 195),\n\t\t\t_Utils_Tuple2('Auml', 196),\n\t\t\t_Utils_Tuple2('Aring', 197),\n\t\t\t_Utils_Tuple2('AElig', 198),\n\t\t\t_Utils_Tuple2('Ccedil', 199),\n\t\t\t_Utils_Tuple2('Egrave', 200),\n\t\t\t_Utils_Tuple2('Eacute', 201),\n\t\t\t_Utils_Tuple2('Ecirc', 202),\n\t\t\t_Utils_Tuple2('Euml', 203),\n\t\t\t_Utils_Tuple2('Igrave', 204),\n\t\t\t_Utils_Tuple2('Iacute', 205),\n\t\t\t_Utils_Tuple2('Icirc', 206),\n\t\t\t_Utils_Tuple2('Iuml', 207),\n\t\t\t_Utils_Tuple2('ETH', 208),\n\t\t\t_Utils_Tuple2('Ntilde', 209),\n\t\t\t_Utils_Tuple2('Ograve', 210),\n\t\t\t_Utils_Tuple2('Oacute', 211),\n\t\t\t_Utils_Tuple2('Ocirc', 212),\n\t\t\t_Utils_Tuple2('Otilde', 213),\n\t\t\t_Utils_Tuple2('Ouml', 214),\n\t\t\t_Utils_Tuple2('times', 215),\n\t\t\t_Utils_Tuple2('Oslash', 216),\n\t\t\t_Utils_Tuple2('Ugrave', 217),\n\t\t\t_Utils_Tuple2('Uacute', 218),\n\t\t\t_Utils_Tuple2('Ucirc', 219),\n\t\t\t_Utils_Tuple2('Uuml', 220),\n\t\t\t_Utils_Tuple2('Yacute', 221),\n\t\t\t_Utils_Tuple2('THORN', 222),\n\t\t\t_Utils_Tuple2('szlig', 223),\n\t\t\t_Utils_Tuple2('agrave', 224),\n\t\t\t_Utils_Tuple2('aacute', 225),\n\t\t\t_Utils_Tuple2('acirc', 226),\n\t\t\t_Utils_Tuple2('atilde', 227),\n\t\t\t_Utils_Tuple2('auml', 228),\n\t\t\t_Utils_Tuple2('aring', 229),\n\t\t\t_Utils_Tuple2('aelig', 230),\n\t\t\t_Utils_Tuple2('ccedil', 231),\n\t\t\t_Utils_Tuple2('egrave', 232),\n\t\t\t_Utils_Tuple2('eacute', 233),\n\t\t\t_Utils_Tuple2('ecirc', 234),\n\t\t\t_Utils_Tuple2('euml', 235),\n\t\t\t_Utils_Tuple2('igrave', 236),\n\t\t\t_Utils_Tuple2('iacute', 237),\n\t\t\t_Utils_Tuple2('icirc', 238),\n\t\t\t_Utils_Tuple2('iuml', 239),\n\t\t\t_Utils_Tuple2('eth', 240),\n\t\t\t_Utils_Tuple2('ntilde', 241),\n\t\t\t_Utils_Tuple2('ograve', 242),\n\t\t\t_Utils_Tuple2('oacute', 243),\n\t\t\t_Utils_Tuple2('ocirc', 244),\n\t\t\t_Utils_Tuple2('otilde', 245),\n\t\t\t_Utils_Tuple2('ouml', 246),\n\t\t\t_Utils_Tuple2('divide', 247),\n\t\t\t_Utils_Tuple2('oslash', 248),\n\t\t\t_Utils_Tuple2('ugrave', 249),\n\t\t\t_Utils_Tuple2('uacute', 250),\n\t\t\t_Utils_Tuple2('ucirc', 251),\n\t\t\t_Utils_Tuple2('uuml', 252),\n\t\t\t_Utils_Tuple2('yacute', 253),\n\t\t\t_Utils_Tuple2('thorn', 254),\n\t\t\t_Utils_Tuple2('yuml', 255),\n\t\t\t_Utils_Tuple2('OElig', 338),\n\t\t\t_Utils_Tuple2('oelig', 339),\n\t\t\t_Utils_Tuple2('Scaron', 352),\n\t\t\t_Utils_Tuple2('scaron', 353),\n\t\t\t_Utils_Tuple2('Yuml', 376),\n\t\t\t_Utils_Tuple2('fnof', 402),\n\t\t\t_Utils_Tuple2('circ', 710),\n\t\t\t_Utils_Tuple2('tilde', 732),\n\t\t\t_Utils_Tuple2('Alpha', 913),\n\t\t\t_Utils_Tuple2('Beta', 914),\n\t\t\t_Utils_Tuple2('Gamma', 915),\n\t\t\t_Utils_Tuple2('Delta', 916),\n\t\t\t_Utils_Tuple2('Epsilon', 917),\n\t\t\t_Utils_Tuple2('Zeta', 918),\n\t\t\t_Utils_Tuple2('Eta', 919),\n\t\t\t_Utils_Tuple2('Theta', 920),\n\t\t\t_Utils_Tuple2('Iota', 921),\n\t\t\t_Utils_Tuple2('Kappa', 922),\n\t\t\t_Utils_Tuple2('Lambda', 923),\n\t\t\t_Utils_Tuple2('Mu', 924),\n\t\t\t_Utils_Tuple2('Nu', 925),\n\t\t\t_Utils_Tuple2('Xi', 926),\n\t\t\t_Utils_Tuple2('Omicron', 927),\n\t\t\t_Utils_Tuple2('Pi', 928),\n\t\t\t_Utils_Tuple2('Rho', 929),\n\t\t\t_Utils_Tuple2('Sigma', 931),\n\t\t\t_Utils_Tuple2('Tau', 932),\n\t\t\t_Utils_Tuple2('Upsilon', 933),\n\t\t\t_Utils_Tuple2('Phi', 934),\n\t\t\t_Utils_Tuple2('Chi', 935),\n\t\t\t_Utils_Tuple2('Psi', 936),\n\t\t\t_Utils_Tuple2('Omega', 937),\n\t\t\t_Utils_Tuple2('alpha', 945),\n\t\t\t_Utils_Tuple2('beta', 946),\n\t\t\t_Utils_Tuple2('gamma', 947),\n\t\t\t_Utils_Tuple2('delta', 948),\n\t\t\t_Utils_Tuple2('epsilon', 949),\n\t\t\t_Utils_Tuple2('zeta', 950),\n\t\t\t_Utils_Tuple2('eta', 951),\n\t\t\t_Utils_Tuple2('theta', 952),\n\t\t\t_Utils_Tuple2('iota', 953),\n\t\t\t_Utils_Tuple2('kappa', 954),\n\t\t\t_Utils_Tuple2('lambda', 955),\n\t\t\t_Utils_Tuple2('mu', 956),\n\t\t\t_Utils_Tuple2('nu', 957),\n\t\t\t_Utils_Tuple2('xi', 958),\n\t\t\t_Utils_Tuple2('omicron', 959),\n\t\t\t_Utils_Tuple2('pi', 960),\n\t\t\t_Utils_Tuple2('rho', 961),\n\t\t\t_Utils_Tuple2('sigmaf', 962),\n\t\t\t_Utils_Tuple2('sigma', 963),\n\t\t\t_Utils_Tuple2('tau', 964),\n\t\t\t_Utils_Tuple2('upsilon', 965),\n\t\t\t_Utils_Tuple2('phi', 966),\n\t\t\t_Utils_Tuple2('chi', 967),\n\t\t\t_Utils_Tuple2('psi', 968),\n\t\t\t_Utils_Tuple2('omega', 969),\n\t\t\t_Utils_Tuple2('thetasym', 977),\n\t\t\t_Utils_Tuple2('upsih', 978),\n\t\t\t_Utils_Tuple2('piv', 982),\n\t\t\t_Utils_Tuple2('ensp', 8194),\n\t\t\t_Utils_Tuple2('emsp', 8195),\n\t\t\t_Utils_Tuple2('thinsp', 8201),\n\t\t\t_Utils_Tuple2('zwnj', 8204),\n\t\t\t_Utils_Tuple2('zwj', 8205),\n\t\t\t_Utils_Tuple2('lrm', 8206),\n\t\t\t_Utils_Tuple2('rlm', 8207),\n\t\t\t_Utils_Tuple2('ndash', 8211),\n\t\t\t_Utils_Tuple2('mdash', 8212),\n\t\t\t_Utils_Tuple2('lsquo', 8216),\n\t\t\t_Utils_Tuple2('rsquo', 8217),\n\t\t\t_Utils_Tuple2('sbquo', 8218),\n\t\t\t_Utils_Tuple2('ldquo', 8220),\n\t\t\t_Utils_Tuple2('rdquo', 8221),\n\t\t\t_Utils_Tuple2('bdquo', 8222),\n\t\t\t_Utils_Tuple2('dagger', 8224),\n\t\t\t_Utils_Tuple2('Dagger', 8225),\n\t\t\t_Utils_Tuple2('bull', 8226),\n\t\t\t_Utils_Tuple2('hellip', 8230),\n\t\t\t_Utils_Tuple2('permil', 8240),\n\t\t\t_Utils_Tuple2('prime', 8242),\n\t\t\t_Utils_Tuple2('Prime', 8243),\n\t\t\t_Utils_Tuple2('lsaquo', 8249),\n\t\t\t_Utils_Tuple2('rsaquo', 8250),\n\t\t\t_Utils_Tuple2('oline', 8254),\n\t\t\t_Utils_Tuple2('frasl', 8260),\n\t\t\t_Utils_Tuple2('euro', 8364),\n\t\t\t_Utils_Tuple2('image', 8465),\n\t\t\t_Utils_Tuple2('weierp', 8472),\n\t\t\t_Utils_Tuple2('real', 8476),\n\t\t\t_Utils_Tuple2('trade', 8482),\n\t\t\t_Utils_Tuple2('alefsym', 8501),\n\t\t\t_Utils_Tuple2('larr', 8592),\n\t\t\t_Utils_Tuple2('uarr', 8593),\n\t\t\t_Utils_Tuple2('rarr', 8594),\n\t\t\t_Utils_Tuple2('darr', 8595),\n\t\t\t_Utils_Tuple2('harr', 8596),\n\t\t\t_Utils_Tuple2('crarr', 8629),\n\t\t\t_Utils_Tuple2('lArr', 8656),\n\t\t\t_Utils_Tuple2('uArr', 8657),\n\t\t\t_Utils_Tuple2('rArr', 8658),\n\t\t\t_Utils_Tuple2('dArr', 8659),\n\t\t\t_Utils_Tuple2('hArr', 8660),\n\t\t\t_Utils_Tuple2('forall', 8704),\n\t\t\t_Utils_Tuple2('part', 8706),\n\t\t\t_Utils_Tuple2('exist', 8707),\n\t\t\t_Utils_Tuple2('empty', 8709),\n\t\t\t_Utils_Tuple2('nabla', 8711),\n\t\t\t_Utils_Tuple2('isin', 8712),\n\t\t\t_Utils_Tuple2('notin', 8713),\n\t\t\t_Utils_Tuple2('ni', 8715),\n\t\t\t_Utils_Tuple2('prod', 8719),\n\t\t\t_Utils_Tuple2('sum', 8721),\n\t\t\t_Utils_Tuple2('minus', 8722),\n\t\t\t_Utils_Tuple2('lowast', 8727),\n\t\t\t_Utils_Tuple2('radic', 8730),\n\t\t\t_Utils_Tuple2('prop', 8733),\n\t\t\t_Utils_Tuple2('infin', 8734),\n\t\t\t_Utils_Tuple2('ang', 8736),\n\t\t\t_Utils_Tuple2('and', 8743),\n\t\t\t_Utils_Tuple2('or', 8744),\n\t\t\t_Utils_Tuple2('cap', 8745),\n\t\t\t_Utils_Tuple2('cup', 8746),\n\t\t\t_Utils_Tuple2('int', 8747),\n\t\t\t_Utils_Tuple2('there4', 8756),\n\t\t\t_Utils_Tuple2('sim', 8764),\n\t\t\t_Utils_Tuple2('cong', 8773),\n\t\t\t_Utils_Tuple2('asymp', 8776),\n\t\t\t_Utils_Tuple2('ne', 8800),\n\t\t\t_Utils_Tuple2('equiv', 8801),\n\t\t\t_Utils_Tuple2('le', 8804),\n\t\t\t_Utils_Tuple2('ge', 8805),\n\t\t\t_Utils_Tuple2('sub', 8834),\n\t\t\t_Utils_Tuple2('sup', 8835),\n\t\t\t_Utils_Tuple2('nsub', 8836),\n\t\t\t_Utils_Tuple2('sube', 8838),\n\t\t\t_Utils_Tuple2('supe', 8839),\n\t\t\t_Utils_Tuple2('oplus', 8853),\n\t\t\t_Utils_Tuple2('otimes', 8855),\n\t\t\t_Utils_Tuple2('perp', 8869),\n\t\t\t_Utils_Tuple2('sdot', 8901),\n\t\t\t_Utils_Tuple2('lceil', 8968),\n\t\t\t_Utils_Tuple2('rceil', 8969),\n\t\t\t_Utils_Tuple2('lfloor', 8970),\n\t\t\t_Utils_Tuple2('rfloor', 8971),\n\t\t\t_Utils_Tuple2('lang', 9001),\n\t\t\t_Utils_Tuple2('rang', 9002),\n\t\t\t_Utils_Tuple2('loz', 9674),\n\t\t\t_Utils_Tuple2('spades', 9824),\n\t\t\t_Utils_Tuple2('clubs', 9827),\n\t\t\t_Utils_Tuple2('hearts', 9829),\n\t\t\t_Utils_Tuple2('diams', 9830)\n\t\t]));\nvar $dillonkearns$elm_markdown$Markdown$Entity$replaceEntity = function (match) {\n\tvar _v0 = match.submatches;\n\tif (_v0.b && (_v0.a.$ === 'Just')) {\n\t\tvar first = _v0.a.a;\n\t\tvar _v1 = A2($elm$core$Dict$get, first, $dillonkearns$elm_markdown$Markdown$Entity$entities);\n\t\tif (_v1.$ === 'Just') {\n\t\t\tvar code = _v1.a;\n\t\t\treturn $elm$core$String$fromChar(\n\t\t\t\t$elm$core$Char$fromCode(code));\n\t\t} else {\n\t\t\treturn match.match;\n\t\t}\n\t} else {\n\t\treturn match.match;\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$Entity$replaceEntities = A2($elm$regex$Regex$replace, $dillonkearns$elm_markdown$Markdown$Entity$entitiesRegex, $dillonkearns$elm_markdown$Markdown$Entity$replaceEntity);\nvar $dillonkearns$elm_markdown$Markdown$Helpers$escapableRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('(\\\\\\\\+)([!\\\"#$%&\\\\\\'()*+,./:;<=>?@[\\\\\\\\\\\\]^_`{|}~-])'));\nvar $dillonkearns$elm_markdown$Markdown$Helpers$replaceEscapable = A2(\n\t$elm$regex$Regex$replace,\n\t$dillonkearns$elm_markdown$Markdown$Helpers$escapableRegex,\n\tfunction (regexMatch) {\n\t\tvar _v0 = regexMatch.submatches;\n\t\tif (((_v0.b && (_v0.a.$ === 'Just')) && _v0.b.b) && (_v0.b.a.$ === 'Just')) {\n\t\t\tvar backslashes = _v0.a.a;\n\t\t\tvar _v1 = _v0.b;\n\t\t\tvar escapedStr = _v1.a.a;\n\t\t\treturn _Utils_ap(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$String$repeat,\n\t\t\t\t\t($elm$core$String$length(backslashes) / 2) | 0,\n\t\t\t\t\t'\\\\'),\n\t\t\t\tescapedStr);\n\t\t} else {\n\t\t\treturn regexMatch.match;\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Entity$hexadecimalRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('&#[Xx]([0-9a-fA-F]{1,8});'));\nvar $dillonkearns$elm_markdown$Markdown$Entity$hexToInt = function (string) {\n\tvar folder = F2(\n\t\tfunction (hexDigit, _int) {\n\t\t\treturn ((_int * 16) + A2(\n\t\t\t\t$elm$core$Basics$modBy,\n\t\t\t\t39,\n\t\t\t\t$elm$core$Char$toCode(hexDigit))) - 9;\n\t\t});\n\treturn A3(\n\t\t$elm$core$String$foldl,\n\t\tfolder,\n\t\t0,\n\t\t$elm$core$String$toLower(string));\n};\nvar $dillonkearns$elm_markdown$Markdown$Entity$replaceHexadecimal = function (match) {\n\tvar _v0 = match.submatches;\n\tif (_v0.b && (_v0.a.$ === 'Just')) {\n\t\tvar first = _v0.a.a;\n\t\treturn $dillonkearns$elm_markdown$Markdown$Entity$validUnicode(\n\t\t\t$dillonkearns$elm_markdown$Markdown$Entity$hexToInt(first));\n\t} else {\n\t\treturn match.match;\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$Entity$replaceHexadecimals = A2($elm$regex$Regex$replace, $dillonkearns$elm_markdown$Markdown$Entity$hexadecimalRegex, $dillonkearns$elm_markdown$Markdown$Entity$replaceHexadecimal);\nvar $dillonkearns$elm_markdown$Markdown$Helpers$formatStr = function (str) {\n\tvar withEscapes = $dillonkearns$elm_markdown$Markdown$Helpers$replaceEscapable(str);\n\treturn $dillonkearns$elm_markdown$Markdown$Helpers$containsAmpersand(withEscapes) ? $dillonkearns$elm_markdown$Markdown$Entity$replaceHexadecimals(\n\t\t$dillonkearns$elm_markdown$Markdown$Entity$replaceDecimals(\n\t\t\t$dillonkearns$elm_markdown$Markdown$Entity$replaceEntities(withEscapes))) : withEscapes;\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$normalMatch = function (text) {\n\treturn $dillonkearns$elm_markdown$Markdown$InlineParser$Match(\n\t\t{\n\t\t\tend: 0,\n\t\t\tmatches: _List_Nil,\n\t\t\tstart: 0,\n\t\t\ttext: $dillonkearns$elm_markdown$Markdown$Helpers$formatStr(text),\n\t\t\ttextEnd: 0,\n\t\t\ttextStart: 0,\n\t\t\ttype_: $dillonkearns$elm_markdown$Markdown$InlineParser$NormalType\n\t\t});\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$parseTextMatch = F3(\n\tfunction (rawText, _v2, parsedMatches) {\n\t\tvar matchModel = _v2.a;\n\t\tvar updtMatch = $dillonkearns$elm_markdown$Markdown$InlineParser$Match(\n\t\t\t{\n\t\t\t\tend: matchModel.end,\n\t\t\t\tmatches: A3($dillonkearns$elm_markdown$Markdown$InlineParser$parseTextMatches, matchModel.text, _List_Nil, matchModel.matches),\n\t\t\t\tstart: matchModel.start,\n\t\t\t\ttext: matchModel.text,\n\t\t\t\ttextEnd: matchModel.textEnd,\n\t\t\t\ttextStart: matchModel.textStart,\n\t\t\t\ttype_: matchModel.type_\n\t\t\t});\n\t\tif (!parsedMatches.b) {\n\t\t\tvar finalStr = A2($elm$core$String$dropLeft, matchModel.end, rawText);\n\t\t\treturn $elm$core$String$isEmpty(finalStr) ? _List_fromArray(\n\t\t\t\t[updtMatch]) : _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tupdtMatch,\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$normalMatch(finalStr)\n\t\t\t\t]);\n\t\t} else {\n\t\t\tvar matchHead = parsedMatches.a.a;\n\t\t\tvar matchesTail = parsedMatches.b;\n\t\t\tvar _v4 = matchHead.type_;\n\t\t\tif (_v4.$ === 'NormalType') {\n\t\t\t\treturn A2($elm$core$List$cons, updtMatch, parsedMatches);\n\t\t\t} else {\n\t\t\t\treturn _Utils_eq(matchModel.end, matchHead.start) ? A2($elm$core$List$cons, updtMatch, parsedMatches) : ((_Utils_cmp(matchModel.end, matchHead.start) < 0) ? A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\tupdtMatch,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$normalMatch(\n\t\t\t\t\t\t\tA3($elm$core$String$slice, matchModel.end, matchHead.start, rawText)),\n\t\t\t\t\t\tparsedMatches)) : parsedMatches);\n\t\t\t}\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$parseTextMatches = F3(\n\tfunction (rawText, parsedMatches, matches) {\n\t\tparseTextMatches:\n\t\twhile (true) {\n\t\t\tif (!matches.b) {\n\t\t\t\tif (!parsedMatches.b) {\n\t\t\t\t\treturn $elm$core$String$isEmpty(rawText) ? _List_Nil : _List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$normalMatch(rawText)\n\t\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tvar matchModel = parsedMatches.a.a;\n\t\t\t\t\treturn (matchModel.start > 0) ? A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$normalMatch(\n\t\t\t\t\t\t\tA2($elm$core$String$left, matchModel.start, rawText)),\n\t\t\t\t\t\tparsedMatches) : parsedMatches;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar match = matches.a;\n\t\t\t\tvar matchesTail = matches.b;\n\t\t\t\tvar $temp$rawText = rawText,\n\t\t\t\t\t$temp$parsedMatches = A3($dillonkearns$elm_markdown$Markdown$InlineParser$parseTextMatch, rawText, match, parsedMatches),\n\t\t\t\t\t$temp$matches = matchesTail;\n\t\t\t\trawText = $temp$rawText;\n\t\t\t\tparsedMatches = $temp$parsedMatches;\n\t\t\t\tmatches = $temp$matches;\n\t\t\t\tcontinue parseTextMatches;\n\t\t\t}\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$angleBracketLTokenRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('(\\\\\\\\*)(\\\\<)'));\nvar $elm$regex$Regex$find = _Regex_findAtMost(_Regex_infinity);\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$AngleBracketOpen = {$: 'AngleBracketOpen'};\nvar $dillonkearns$elm_markdown$Markdown$Helpers$isEven = function (_int) {\n\treturn !A2($elm$core$Basics$modBy, 2, _int);\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToAngleBracketLToken = function (regMatch) {\n\tvar _v0 = regMatch.submatches;\n\tif ((_v0.b && _v0.b.b) && (_v0.b.a.$ === 'Just')) {\n\t\tvar maybeBackslashes = _v0.a;\n\t\tvar _v1 = _v0.b;\n\t\tvar delimiter = _v1.a.a;\n\t\tvar backslashesLength = A2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t0,\n\t\t\tA2($elm$core$Maybe$map, $elm$core$String$length, maybeBackslashes));\n\t\treturn $dillonkearns$elm_markdown$Markdown$Helpers$isEven(backslashesLength) ? $elm$core$Maybe$Just(\n\t\t\t{index: regMatch.index + backslashesLength, length: 1, meaning: $dillonkearns$elm_markdown$Markdown$InlineParser$AngleBracketOpen}) : $elm$core$Maybe$Nothing;\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$findAngleBracketLTokens = function (str) {\n\treturn A2(\n\t\t$elm$core$List$filterMap,\n\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToAngleBracketLToken,\n\t\tA2($elm$regex$Regex$find, $dillonkearns$elm_markdown$Markdown$InlineParser$angleBracketLTokenRegex, str));\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$angleBracketRTokenRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('(\\\\\\\\*)(\\\\>)'));\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$AngleBracketClose = function (a) {\n\treturn {$: 'AngleBracketClose', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$Escaped = {$: 'Escaped'};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$NotEscaped = {$: 'NotEscaped'};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToAngleBracketRToken = function (regMatch) {\n\tvar _v0 = regMatch.submatches;\n\tif ((_v0.b && _v0.b.b) && (_v0.b.a.$ === 'Just')) {\n\t\tvar maybeBackslashes = _v0.a;\n\t\tvar _v1 = _v0.b;\n\t\tvar backslashesLength = A2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t0,\n\t\t\tA2($elm$core$Maybe$map, $elm$core$String$length, maybeBackslashes));\n\t\treturn $elm$core$Maybe$Just(\n\t\t\t{\n\t\t\t\tindex: regMatch.index + backslashesLength,\n\t\t\t\tlength: 1,\n\t\t\t\tmeaning: $dillonkearns$elm_markdown$Markdown$Helpers$isEven(backslashesLength) ? $dillonkearns$elm_markdown$Markdown$InlineParser$AngleBracketClose($dillonkearns$elm_markdown$Markdown$InlineParser$NotEscaped) : $dillonkearns$elm_markdown$Markdown$InlineParser$AngleBracketClose($dillonkearns$elm_markdown$Markdown$InlineParser$Escaped)\n\t\t\t});\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$findAngleBracketRTokens = function (str) {\n\treturn A2(\n\t\t$elm$core$List$filterMap,\n\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToAngleBracketRToken,\n\t\tA2($elm$regex$Regex$find, $dillonkearns$elm_markdown$Markdown$InlineParser$angleBracketRTokenRegex, str));\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$asteriskEmphasisTokenRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('(\\\\\\\\*)([^*])?(\\\\*+)([^*])?'));\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$EmphasisToken = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'EmphasisToken', a: a, b: b};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$isPunctuation = function (c) {\n\tswitch (c.valueOf()) {\n\t\tcase '!':\n\t\t\treturn true;\n\t\tcase '\\\"':\n\t\t\treturn true;\n\t\tcase '#':\n\t\t\treturn true;\n\t\tcase '%':\n\t\t\treturn true;\n\t\tcase '&':\n\t\t\treturn true;\n\t\tcase '\\'':\n\t\t\treturn true;\n\t\tcase '(':\n\t\t\treturn true;\n\t\tcase ')':\n\t\t\treturn true;\n\t\tcase '*':\n\t\t\treturn true;\n\t\tcase ',':\n\t\t\treturn true;\n\t\tcase '-':\n\t\t\treturn true;\n\t\tcase '.':\n\t\t\treturn true;\n\t\tcase '/':\n\t\t\treturn true;\n\t\tcase ':':\n\t\t\treturn true;\n\t\tcase ';':\n\t\t\treturn true;\n\t\tcase '?':\n\t\t\treturn true;\n\t\tcase '@':\n\t\t\treturn true;\n\t\tcase '[':\n\t\t\treturn true;\n\t\tcase ']':\n\t\t\treturn true;\n\t\tcase '_':\n\t\t\treturn true;\n\t\tcase '{':\n\t\t\treturn true;\n\t\tcase '}':\n\t\t\treturn true;\n\t\tcase '~':\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$containPunctuation = A2(\n\t$elm$core$String$foldl,\n\tF2(\n\t\tfunction (c, accum) {\n\t\t\treturn accum || $dillonkearns$elm_markdown$Markdown$InlineParser$isPunctuation(c);\n\t\t}),\n\tfalse);\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$isWhitespace = function (c) {\n\tswitch (c.valueOf()) {\n\t\tcase ' ':\n\t\t\treturn true;\n\t\tcase '\\u000C':\n\t\t\treturn true;\n\t\tcase '\\n':\n\t\t\treturn true;\n\t\tcase '\\r':\n\t\t\treturn true;\n\t\tcase '\\t':\n\t\t\treturn true;\n\t\tcase '\\u000B':\n\t\t\treturn true;\n\t\tcase '\\u00A0':\n\t\t\treturn true;\n\t\tcase '\\u2028':\n\t\t\treturn true;\n\t\tcase '\\u2029':\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$containSpace = A2(\n\t$elm$core$String$foldl,\n\tF2(\n\t\tfunction (c, accum) {\n\t\t\treturn accum || $dillonkearns$elm_markdown$Markdown$InlineParser$isWhitespace(c);\n\t\t}),\n\tfalse);\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$getFringeRank = function (mstring) {\n\tif (mstring.$ === 'Just') {\n\t\tvar string = mstring.a;\n\t\treturn ($elm$core$String$isEmpty(string) || $dillonkearns$elm_markdown$Markdown$InlineParser$containSpace(string)) ? 0 : ($dillonkearns$elm_markdown$Markdown$InlineParser$containPunctuation(string) ? 1 : 2);\n\t} else {\n\t\treturn 0;\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToEmphasisToken = F3(\n\tfunction (_char, rawText, regMatch) {\n\t\tvar _v0 = regMatch.submatches;\n\t\tif ((((_v0.b && _v0.b.b) && _v0.b.b.b) && (_v0.b.b.a.$ === 'Just')) && _v0.b.b.b.b) {\n\t\t\tvar maybeBackslashes = _v0.a;\n\t\t\tvar _v1 = _v0.b;\n\t\t\tvar maybeLeftFringe = _v1.a;\n\t\t\tvar _v2 = _v1.b;\n\t\t\tvar delimiter = _v2.a.a;\n\t\t\tvar _v3 = _v2.b;\n\t\t\tvar maybeRightFringe = _v3.a;\n\t\t\tvar rFringeRank = $dillonkearns$elm_markdown$Markdown$InlineParser$getFringeRank(maybeRightFringe);\n\t\t\tvar leftFringeLength = function () {\n\t\t\t\tif (maybeLeftFringe.$ === 'Just') {\n\t\t\t\t\tvar left = maybeLeftFringe.a;\n\t\t\t\t\treturn $elm$core$String$length(left);\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}();\n\t\t\tvar mLeftFringe = ((!(!regMatch.index)) && (!leftFringeLength)) ? $elm$core$Maybe$Just(\n\t\t\t\tA3($elm$core$String$slice, regMatch.index - 1, regMatch.index, rawText)) : maybeLeftFringe;\n\t\t\tvar backslashesLength = function () {\n\t\t\t\tif (maybeBackslashes.$ === 'Just') {\n\t\t\t\t\tvar backslashes = maybeBackslashes.a;\n\t\t\t\t\treturn $elm$core$String$length(backslashes);\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}();\n\t\t\tvar isEscaped = ((!$dillonkearns$elm_markdown$Markdown$Helpers$isEven(backslashesLength)) && (!leftFringeLength)) || function () {\n\t\t\t\tif ((mLeftFringe.$ === 'Just') && (mLeftFringe.a === '\\\\')) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}();\n\t\t\tvar delimiterLength = isEscaped ? ($elm$core$String$length(delimiter) - 1) : $elm$core$String$length(delimiter);\n\t\t\tvar lFringeRank = isEscaped ? 1 : $dillonkearns$elm_markdown$Markdown$InlineParser$getFringeRank(mLeftFringe);\n\t\t\tif ((delimiterLength <= 0) || (_Utils_eq(\n\t\t\t\t_char,\n\t\t\t\t_Utils_chr('_')) && ((lFringeRank === 2) && (rFringeRank === 2)))) {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar index = ((regMatch.index + backslashesLength) + leftFringeLength) + (isEscaped ? 1 : 0);\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t{\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tlength: delimiterLength,\n\t\t\t\t\t\tmeaning: A2(\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$EmphasisToken,\n\t\t\t\t\t\t\t_char,\n\t\t\t\t\t\t\t{leftFringeRank: lFringeRank, rightFringeRank: rFringeRank})\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$findAsteriskEmphasisTokens = function (str) {\n\treturn A2(\n\t\t$elm$core$List$filterMap,\n\t\tA2(\n\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToEmphasisToken,\n\t\t\t_Utils_chr('*'),\n\t\t\tstr),\n\t\tA2($elm$regex$Regex$find, $dillonkearns$elm_markdown$Markdown$InlineParser$asteriskEmphasisTokenRegex, str));\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$codeTokenRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('(\\\\\\\\*)(\\\\`+)'));\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$CodeToken = function (a) {\n\treturn {$: 'CodeToken', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToCodeToken = function (regMatch) {\n\tvar _v0 = regMatch.submatches;\n\tif ((_v0.b && _v0.b.b) && (_v0.b.a.$ === 'Just')) {\n\t\tvar maybeBackslashes = _v0.a;\n\t\tvar _v1 = _v0.b;\n\t\tvar backtick = _v1.a.a;\n\t\tvar backslashesLength = A2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t0,\n\t\t\tA2($elm$core$Maybe$map, $elm$core$String$length, maybeBackslashes));\n\t\treturn $elm$core$Maybe$Just(\n\t\t\t{\n\t\t\t\tindex: regMatch.index + backslashesLength,\n\t\t\t\tlength: $elm$core$String$length(backtick),\n\t\t\t\tmeaning: $dillonkearns$elm_markdown$Markdown$Helpers$isEven(backslashesLength) ? $dillonkearns$elm_markdown$Markdown$InlineParser$CodeToken($dillonkearns$elm_markdown$Markdown$InlineParser$NotEscaped) : $dillonkearns$elm_markdown$Markdown$InlineParser$CodeToken($dillonkearns$elm_markdown$Markdown$InlineParser$Escaped)\n\t\t\t});\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$findCodeTokens = function (str) {\n\treturn A2(\n\t\t$elm$core$List$filterMap,\n\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToCodeToken,\n\t\tA2($elm$regex$Regex$find, $dillonkearns$elm_markdown$Markdown$InlineParser$codeTokenRegex, str));\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$hardBreakTokenRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('(?:(\\\\\\\\+)|( {2,}))\\\\n'));\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$HardLineBreakToken = {$: 'HardLineBreakToken'};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToHardBreakToken = function (regMatch) {\n\tvar _v0 = regMatch.submatches;\n\t_v0$2:\n\twhile (true) {\n\t\tif (_v0.b) {\n\t\t\tif (_v0.a.$ === 'Just') {\n\t\t\t\tvar backslashes = _v0.a.a;\n\t\t\t\tvar backslashesLength = $elm$core$String$length(backslashes);\n\t\t\t\treturn (!$dillonkearns$elm_markdown$Markdown$Helpers$isEven(backslashesLength)) ? $elm$core$Maybe$Just(\n\t\t\t\t\t{index: (regMatch.index + backslashesLength) - 1, length: 2, meaning: $dillonkearns$elm_markdown$Markdown$InlineParser$HardLineBreakToken}) : $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tif (_v0.b.b && (_v0.b.a.$ === 'Just')) {\n\t\t\t\t\tvar _v1 = _v0.b;\n\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tindex: regMatch.index,\n\t\t\t\t\t\t\tlength: $elm$core$String$length(regMatch.match),\n\t\t\t\t\t\t\tmeaning: $dillonkearns$elm_markdown$Markdown$InlineParser$HardLineBreakToken\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tbreak _v0$2;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tbreak _v0$2;\n\t\t}\n\t}\n\treturn $elm$core$Maybe$Nothing;\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToSoftHardBreakToken = function (regMatch) {\n\tvar _v0 = regMatch.submatches;\n\t_v0$2:\n\twhile (true) {\n\t\tif (_v0.b) {\n\t\t\tif (_v0.a.$ === 'Just') {\n\t\t\t\tvar backslashes = _v0.a.a;\n\t\t\t\tvar backslashesLength = $elm$core$String$length(backslashes);\n\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Helpers$isEven(backslashesLength) ? $elm$core$Maybe$Just(\n\t\t\t\t\t{index: regMatch.index + backslashesLength, length: 1, meaning: $dillonkearns$elm_markdown$Markdown$InlineParser$HardLineBreakToken}) : $elm$core$Maybe$Just(\n\t\t\t\t\t{index: (regMatch.index + backslashesLength) - 1, length: 2, meaning: $dillonkearns$elm_markdown$Markdown$InlineParser$HardLineBreakToken});\n\t\t\t} else {\n\t\t\t\tif (_v0.b.b) {\n\t\t\t\t\tvar _v1 = _v0.b;\n\t\t\t\t\tvar maybeSpaces = _v1.a;\n\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tindex: regMatch.index,\n\t\t\t\t\t\t\tlength: $elm$core$String$length(regMatch.match),\n\t\t\t\t\t\t\tmeaning: $dillonkearns$elm_markdown$Markdown$InlineParser$HardLineBreakToken\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tbreak _v0$2;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tbreak _v0$2;\n\t\t}\n\t}\n\treturn $elm$core$Maybe$Nothing;\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$softAsHardLineBreak = false;\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$softAsHardLineBreakTokenRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('(?:(\\\\\\\\+)|( *))\\\\n'));\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$findHardBreakTokens = function (str) {\n\treturn $dillonkearns$elm_markdown$Markdown$InlineParser$softAsHardLineBreak ? A2(\n\t\t$elm$core$List$filterMap,\n\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToSoftHardBreakToken,\n\t\tA2($elm$regex$Regex$find, $dillonkearns$elm_markdown$Markdown$InlineParser$softAsHardLineBreakTokenRegex, str)) : A2(\n\t\t$elm$core$List$filterMap,\n\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToHardBreakToken,\n\t\tA2($elm$regex$Regex$find, $dillonkearns$elm_markdown$Markdown$InlineParser$hardBreakTokenRegex, str));\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$linkImageCloseTokenRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('(\\\\\\\\*)(\\\\])'));\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$SquareBracketClose = {$: 'SquareBracketClose'};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToLinkImageCloseToken = function (regMatch) {\n\tvar _v0 = regMatch.submatches;\n\tif ((_v0.b && _v0.b.b) && (_v0.b.a.$ === 'Just')) {\n\t\tvar maybeBackslashes = _v0.a;\n\t\tvar _v1 = _v0.b;\n\t\tvar backslashesLength = A2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t0,\n\t\t\tA2($elm$core$Maybe$map, $elm$core$String$length, maybeBackslashes));\n\t\treturn $dillonkearns$elm_markdown$Markdown$Helpers$isEven(backslashesLength) ? $elm$core$Maybe$Just(\n\t\t\t{index: regMatch.index + backslashesLength, length: 1, meaning: $dillonkearns$elm_markdown$Markdown$InlineParser$SquareBracketClose}) : $elm$core$Maybe$Nothing;\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$findLinkImageCloseTokens = function (str) {\n\treturn A2(\n\t\t$elm$core$List$filterMap,\n\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToLinkImageCloseToken,\n\t\tA2($elm$regex$Regex$find, $dillonkearns$elm_markdown$Markdown$InlineParser$linkImageCloseTokenRegex, str));\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$linkImageOpenTokenRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('(\\\\\\\\*)(\\\\!)?(\\\\[)'));\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$Active = {$: 'Active'};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$ImageOpenToken = {$: 'ImageOpenToken'};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$LinkOpenToken = function (a) {\n\treturn {$: 'LinkOpenToken', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToLinkImageOpenToken = function (regMatch) {\n\tvar _v0 = regMatch.submatches;\n\tif (((_v0.b && _v0.b.b) && _v0.b.b.b) && (_v0.b.b.a.$ === 'Just')) {\n\t\tvar maybeBackslashes = _v0.a;\n\t\tvar _v1 = _v0.b;\n\t\tvar maybeImageOpen = _v1.a;\n\t\tvar _v2 = _v1.b;\n\t\tvar backslashesLength = A2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t0,\n\t\t\tA2($elm$core$Maybe$map, $elm$core$String$length, maybeBackslashes));\n\t\tvar isEscaped = !$dillonkearns$elm_markdown$Markdown$Helpers$isEven(backslashesLength);\n\t\tvar index = isEscaped ? ((regMatch.index + backslashesLength) + 1) : (regMatch.index + backslashesLength);\n\t\tif (isEscaped) {\n\t\t\tif (maybeImageOpen.$ === 'Just') {\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t{\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tlength: 1,\n\t\t\t\t\t\tmeaning: $dillonkearns$elm_markdown$Markdown$InlineParser$LinkOpenToken($dillonkearns$elm_markdown$Markdown$InlineParser$Active)\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t}\n\t\t} else {\n\t\t\tif (maybeImageOpen.$ === 'Just') {\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t{index: index, length: 2, meaning: $dillonkearns$elm_markdown$Markdown$InlineParser$ImageOpenToken});\n\t\t\t} else {\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t{\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tlength: 1,\n\t\t\t\t\t\tmeaning: $dillonkearns$elm_markdown$Markdown$InlineParser$LinkOpenToken($dillonkearns$elm_markdown$Markdown$InlineParser$Active)\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$findLinkImageOpenTokens = function (str) {\n\treturn A2(\n\t\t$elm$core$List$filterMap,\n\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToLinkImageOpenToken,\n\t\tA2($elm$regex$Regex$find, $dillonkearns$elm_markdown$Markdown$InlineParser$linkImageOpenTokenRegex, str));\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$StrikethroughToken = function (a) {\n\treturn {$: 'StrikethroughToken', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToStrikethroughToken = function (regMatch) {\n\tvar _v0 = regMatch.submatches;\n\tif ((_v0.b && _v0.b.b) && (_v0.b.a.$ === 'Just')) {\n\t\tvar maybeBackslashes = _v0.a;\n\t\tvar _v1 = _v0.b;\n\t\tvar tilde = _v1.a.a;\n\t\tvar backslashesLength = A2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t0,\n\t\t\tA2($elm$core$Maybe$map, $elm$core$String$length, maybeBackslashes));\n\t\tvar _v2 = $dillonkearns$elm_markdown$Markdown$Helpers$isEven(backslashesLength) ? _Utils_Tuple2(\n\t\t\t$elm$core$String$length(tilde),\n\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$StrikethroughToken($dillonkearns$elm_markdown$Markdown$InlineParser$NotEscaped)) : _Utils_Tuple2(\n\t\t\t$elm$core$String$length(tilde),\n\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$StrikethroughToken($dillonkearns$elm_markdown$Markdown$InlineParser$Escaped));\n\t\tvar length = _v2.a;\n\t\tvar meaning = _v2.b;\n\t\treturn $elm$core$Maybe$Just(\n\t\t\t{index: regMatch.index + backslashesLength, length: length, meaning: meaning});\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$strikethroughTokenRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('(\\\\\\\\*)(~{2,})([^~])?'));\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$findStrikethroughTokens = function (str) {\n\treturn A2(\n\t\t$elm$core$List$filterMap,\n\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToStrikethroughToken,\n\t\tA2($elm$regex$Regex$find, $dillonkearns$elm_markdown$Markdown$InlineParser$strikethroughTokenRegex, str));\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$underlineEmphasisTokenRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('(\\\\\\\\*)([^_])?(\\\\_+)([^_])?'));\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$findUnderlineEmphasisTokens = function (str) {\n\treturn A2(\n\t\t$elm$core$List$filterMap,\n\t\tA2(\n\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$regMatchToEmphasisToken,\n\t\t\t_Utils_chr('_'),\n\t\t\tstr),\n\t\tA2($elm$regex$Regex$find, $dillonkearns$elm_markdown$Markdown$InlineParser$underlineEmphasisTokenRegex, str));\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$mergeByIndex = F2(\n\tfunction (left, right) {\n\t\tif (left.b) {\n\t\t\tvar lfirst = left.a;\n\t\t\tvar lrest = left.b;\n\t\t\tif (right.b) {\n\t\t\t\tvar rfirst = right.a;\n\t\t\t\tvar rrest = right.b;\n\t\t\t\treturn (_Utils_cmp(lfirst.index, rfirst.index) < 0) ? A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\tlfirst,\n\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$InlineParser$mergeByIndex, lrest, right)) : A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\trfirst,\n\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$InlineParser$mergeByIndex, left, rrest));\n\t\t\t} else {\n\t\t\t\treturn left;\n\t\t\t}\n\t\t} else {\n\t\t\treturn right;\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$tokenize = function (rawText) {\n\treturn A2(\n\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$mergeByIndex,\n\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$findAngleBracketRTokens(rawText),\n\t\tA2(\n\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$mergeByIndex,\n\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$findAngleBracketLTokens(rawText),\n\t\t\tA2(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$mergeByIndex,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$findHardBreakTokens(rawText),\n\t\t\t\tA2(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$mergeByIndex,\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$findLinkImageCloseTokens(rawText),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$mergeByIndex,\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$findLinkImageOpenTokens(rawText),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$mergeByIndex,\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$findStrikethroughTokens(rawText),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$mergeByIndex,\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$findUnderlineEmphasisTokens(rawText),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$mergeByIndex,\n\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$findAsteriskEmphasisTokens(rawText),\n\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$findCodeTokens(rawText)))))))));\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$CodeType = {$: 'CodeType'};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$EmphasisType = function (a) {\n\treturn {$: 'EmphasisType', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$HtmlType = function (a) {\n\treturn {$: 'HtmlType', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$ImageType = function (a) {\n\treturn {$: 'ImageType', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$Inactive = {$: 'Inactive'};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$LinkType = function (a) {\n\treturn {$: 'LinkType', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$StrikethroughType = {$: 'StrikethroughType'};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$AutolinkType = function (a) {\n\treturn {$: 'AutolinkType', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$decodeUrlRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('%(?:3B|2C|2F|3F|3A|40|26|3D|2B|24|23|25)'));\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$encodeUrl = A2(\n\t$elm$core$Basics$composeR,\n\t$elm$url$Url$percentEncode,\n\tA2(\n\t\t$elm$regex$Regex$replace,\n\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$decodeUrlRegex,\n\t\tfunction (match) {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\tmatch.match,\n\t\t\t\t$elm$url$Url$percentDecode(match.match));\n\t\t}));\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$urlRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('^([A-Za-z][A-Za-z0-9.+\\\\-]{1,31}:[^<>\\\\x00-\\\\x20]*)$'));\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$autolinkToMatch = function (_v0) {\n\tvar match = _v0.a;\n\treturn A2($elm$regex$Regex$contains, $dillonkearns$elm_markdown$Markdown$InlineParser$urlRegex, match.text) ? $elm$core$Result$Ok(\n\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$Match(\n\t\t\t_Utils_update(\n\t\t\t\tmatch,\n\t\t\t\t{\n\t\t\t\t\ttype_: $dillonkearns$elm_markdown$Markdown$InlineParser$AutolinkType(\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\tmatch.text,\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$encodeUrl(match.text)))\n\t\t\t\t}))) : $elm$core$Result$Err(\n\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$Match(match));\n};\nvar $elm$regex$Regex$findAtMost = _Regex_findAtMost;\nvar $dillonkearns$elm_markdown$Markdown$Helpers$insideSquareBracketRegex = '[^\\\\[\\\\]\\\\\\\\]*(?:\\\\\\\\.[^\\\\[\\\\]\\\\\\\\]*)*';\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$refLabelRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('^\\\\[\\\\s*(' + ($dillonkearns$elm_markdown$Markdown$Helpers$insideSquareBracketRegex + ')\\\\s*\\\\]')));\nvar $dillonkearns$elm_markdown$Markdown$Helpers$cleanWhitespaces = function (original) {\n\treturn original;\n};\nvar $dillonkearns$elm_markdown$Markdown$Helpers$prepareRefLabel = A2($elm$core$Basics$composeR, $dillonkearns$elm_markdown$Markdown$Helpers$cleanWhitespaces, $elm$core$String$toLower);\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$prepareUrlAndTitle = F2(\n\tfunction (rawUrl, maybeTitle) {\n\t\treturn _Utils_Tuple2(\n\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$encodeUrl(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Helpers$formatStr(rawUrl)),\n\t\t\tA2($elm$core$Maybe$map, $dillonkearns$elm_markdown$Markdown$Helpers$formatStr, maybeTitle));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$refRegexToMatch = F3(\n\tfunction (matchModel, references, maybeRegexMatch) {\n\t\tvar refLabel = function (str) {\n\t\t\treturn $elm$core$String$isEmpty(str) ? matchModel.text : str;\n\t\t}(\n\t\t\tA2(\n\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\tmatchModel.text,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t$elm$core$Maybe$Nothing,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$andThen,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\treturn $.submatches;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t$elm$core$List$head),\n\t\t\t\t\t\tmaybeRegexMatch))));\n\t\tvar _v0 = A2(\n\t\t\t$elm$core$Dict$get,\n\t\t\t$dillonkearns$elm_markdown$Markdown$Helpers$prepareRefLabel(refLabel),\n\t\t\treferences);\n\t\tif (_v0.$ === 'Nothing') {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar rawUrl = _v1.a;\n\t\t\tvar maybeTitle = _v1.b;\n\t\t\tvar type_ = function () {\n\t\t\t\tvar _v3 = matchModel.type_;\n\t\t\t\tif (_v3.$ === 'ImageType') {\n\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$InlineParser$ImageType(\n\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$InlineParser$prepareUrlAndTitle, rawUrl, maybeTitle));\n\t\t\t\t} else {\n\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$InlineParser$LinkType(\n\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$InlineParser$prepareUrlAndTitle, rawUrl, maybeTitle));\n\t\t\t\t}\n\t\t\t}();\n\t\t\tvar regexMatchLength = function () {\n\t\t\t\tif (maybeRegexMatch.$ === 'Just') {\n\t\t\t\t\tvar match = maybeRegexMatch.a.match;\n\t\t\t\t\treturn $elm$core$String$length(match);\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}();\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$Match(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmatchModel,\n\t\t\t\t\t\t{end: matchModel.end + regexMatchLength, type_: type_})));\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$checkForInlineReferences = F3(\n\tfunction (remainText, _v0, references) {\n\t\tvar tempMatch = _v0.a;\n\t\tvar matches = A3($elm$regex$Regex$findAtMost, 1, $dillonkearns$elm_markdown$Markdown$InlineParser$refLabelRegex, remainText);\n\t\treturn A3(\n\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$refRegexToMatch,\n\t\t\ttempMatch,\n\t\t\treferences,\n\t\t\t$elm$core$List$head(matches));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Helpers$lineEndChars = '\\\\f\\\\v\\\\r\\\\n';\nvar $dillonkearns$elm_markdown$Markdown$Helpers$whiteSpaceChars = ' \\\\t\\\\f\\\\v\\\\r\\\\n';\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$hrefRegex = '(?:<([^<>' + ($dillonkearns$elm_markdown$Markdown$Helpers$lineEndChars + (']*)>|([^' + ($dillonkearns$elm_markdown$Markdown$Helpers$whiteSpaceChars + ('\\\\(\\\\)\\\\\\\\]*(?:\\\\\\\\.[^' + ($dillonkearns$elm_markdown$Markdown$Helpers$whiteSpaceChars + '\\\\(\\\\)\\\\\\\\]*)*))')))));\nvar $dillonkearns$elm_markdown$Markdown$Helpers$titleRegex = '(?:[' + ($dillonkearns$elm_markdown$Markdown$Helpers$whiteSpaceChars + (']+' + ('(?:\\'([^\\'\\\\\\\\]*(?:\\\\\\\\.[^\\'\\\\\\\\]*)*)\\'|' + ('\\\"([^\\\"\\\\\\\\]*(?:\\\\\\\\.[^\\\"\\\\\\\\]*)*)\\\"|' + '\\\\(([^\\\\)\\\\\\\\]*(?:\\\\\\\\.[^\\\\)\\\\\\\\]*)*)\\\\)))?'))));\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$inlineLinkTypeOrImageTypeRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('^\\\\(\\\\s*' + ($dillonkearns$elm_markdown$Markdown$InlineParser$hrefRegex + ($dillonkearns$elm_markdown$Markdown$Helpers$titleRegex + '\\\\s*\\\\)'))));\nvar $dillonkearns$elm_markdown$Markdown$Helpers$returnFirstJust = function (maybes) {\n\tvar process = F2(\n\t\tfunction (a, maybeFound) {\n\t\t\tif (maybeFound.$ === 'Just') {\n\t\t\t\tvar found = maybeFound.a;\n\t\t\t\treturn $elm$core$Maybe$Just(found);\n\t\t\t} else {\n\t\t\t\treturn a;\n\t\t\t}\n\t\t});\n\treturn A3($elm$core$List$foldl, process, $elm$core$Maybe$Nothing, maybes);\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$inlineLinkTypeOrImageTypeRegexToMatch = F2(\n\tfunction (matchModel, regexMatch) {\n\t\tvar _v0 = regexMatch.submatches;\n\t\tif ((((_v0.b && _v0.b.b) && _v0.b.b.b) && _v0.b.b.b.b) && _v0.b.b.b.b.b) {\n\t\t\tvar maybeRawUrlAngleBrackets = _v0.a;\n\t\t\tvar _v1 = _v0.b;\n\t\t\tvar maybeRawUrlWithoutBrackets = _v1.a;\n\t\t\tvar _v2 = _v1.b;\n\t\t\tvar maybeTitleSingleQuotes = _v2.a;\n\t\t\tvar _v3 = _v2.b;\n\t\t\tvar maybeTitleDoubleQuotes = _v3.a;\n\t\t\tvar _v4 = _v3.b;\n\t\t\tvar maybeTitleParenthesis = _v4.a;\n\t\t\tvar maybeTitle = $dillonkearns$elm_markdown$Markdown$Helpers$returnFirstJust(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[maybeTitleSingleQuotes, maybeTitleDoubleQuotes, maybeTitleParenthesis]));\n\t\t\tvar toMatch = function (rawUrl) {\n\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$InlineParser$Match(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmatchModel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tend: matchModel.end + $elm$core$String$length(regexMatch.match),\n\t\t\t\t\t\t\ttype_: function () {\n\t\t\t\t\t\t\t\tvar _v5 = matchModel.type_;\n\t\t\t\t\t\t\t\tif (_v5.$ === 'ImageType') {\n\t\t\t\t\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$InlineParser$ImageType;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$InlineParser$LinkType;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}()(\n\t\t\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$InlineParser$prepareUrlAndTitle, rawUrl, maybeTitle))\n\t\t\t\t\t\t}));\n\t\t\t};\n\t\t\tvar maybeRawUrl = $dillonkearns$elm_markdown$Markdown$Helpers$returnFirstJust(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[maybeRawUrlAngleBrackets, maybeRawUrlWithoutBrackets]));\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\ttoMatch(\n\t\t\t\t\tA2($elm$core$Maybe$withDefault, '', maybeRawUrl)));\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$checkForInlineLinkTypeOrImageType = F3(\n\tfunction (remainText, _v0, refs) {\n\t\tvar tempMatch = _v0.a;\n\t\tvar _v1 = A3($elm$regex$Regex$findAtMost, 1, $dillonkearns$elm_markdown$Markdown$InlineParser$inlineLinkTypeOrImageTypeRegex, remainText);\n\t\tif (_v1.b) {\n\t\t\tvar first = _v1.a;\n\t\t\tvar _v2 = A2($dillonkearns$elm_markdown$Markdown$InlineParser$inlineLinkTypeOrImageTypeRegexToMatch, tempMatch, first);\n\t\t\tif (_v2.$ === 'Just') {\n\t\t\t\tvar match = _v2.a;\n\t\t\t\treturn $elm$core$Maybe$Just(match);\n\t\t\t} else {\n\t\t\t\treturn A3(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$checkForInlineReferences,\n\t\t\t\t\tremainText,\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$Match(tempMatch),\n\t\t\t\t\trefs);\n\t\t\t}\n\t\t} else {\n\t\t\treturn A3(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$checkForInlineReferences,\n\t\t\t\tremainText,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$Match(tempMatch),\n\t\t\t\trefs);\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$checkParsedAheadOverlapping = F2(\n\tfunction (_v0, remainMatches) {\n\t\tvar match = _v0.a;\n\t\tvar overlappingMatches = $elm$core$List$filter(\n\t\t\tfunction (_v1) {\n\t\t\t\tvar testMatch = _v1.a;\n\t\t\t\treturn (_Utils_cmp(match.end, testMatch.start) > 0) && (_Utils_cmp(match.end, testMatch.end) < 0);\n\t\t\t});\n\t\treturn ($elm$core$List$isEmpty(remainMatches) || $elm$core$List$isEmpty(\n\t\t\toverlappingMatches(remainMatches))) ? $elm$core$Maybe$Just(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$Match(match),\n\t\t\t\tremainMatches)) : $elm$core$Maybe$Nothing;\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$emailRegex = A2(\n\t$elm$core$Maybe$withDefault,\n\t$elm$regex$Regex$never,\n\t$elm$regex$Regex$fromString('^([a-zA-Z0-9.!#$%&\\'*+\\\\/=?^_`{|}~\\\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9\\\\-]{0,61}[a-zA-Z0-9])?(?:\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9\\\\-]{0,61}[a-zA-Z0-9])?)*)$'));\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$emailAutolinkTypeToMatch = function (_v0) {\n\tvar match = _v0.a;\n\treturn A2($elm$regex$Regex$contains, $dillonkearns$elm_markdown$Markdown$InlineParser$emailRegex, match.text) ? $elm$core$Result$Ok(\n\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$Match(\n\t\t\t_Utils_update(\n\t\t\t\tmatch,\n\t\t\t\t{\n\t\t\t\t\ttype_: $dillonkearns$elm_markdown$Markdown$InlineParser$AutolinkType(\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\tmatch.text,\n\t\t\t\t\t\t\t'mailto:' + $dillonkearns$elm_markdown$Markdown$InlineParser$encodeUrl(match.text)))\n\t\t\t\t}))) : $elm$core$Result$Err(\n\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$Match(match));\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$findTokenHelp = F3(\n\tfunction (innerTokens, isToken, tokens) {\n\t\tfindTokenHelp:\n\t\twhile (true) {\n\t\t\tif (!tokens.b) {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar nextToken = tokens.a;\n\t\t\t\tvar remainingTokens = tokens.b;\n\t\t\t\tif (isToken(nextToken)) {\n\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\tnextToken,\n\t\t\t\t\t\t\t$elm$core$List$reverse(innerTokens),\n\t\t\t\t\t\t\tremainingTokens));\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$innerTokens = A2($elm$core$List$cons, nextToken, innerTokens),\n\t\t\t\t\t\t$temp$isToken = isToken,\n\t\t\t\t\t\t$temp$tokens = remainingTokens;\n\t\t\t\t\tinnerTokens = $temp$innerTokens;\n\t\t\t\t\tisToken = $temp$isToken;\n\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\tcontinue findTokenHelp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$findToken = F2(\n\tfunction (isToken, tokens) {\n\t\treturn A3($dillonkearns$elm_markdown$Markdown$InlineParser$findTokenHelp, _List_Nil, isToken, tokens);\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$HtmlToken = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'HtmlToken', a: a, b: b};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$NotOpening = {$: 'NotOpening'};\nvar $elm$parser$Parser$Advanced$getOffset = $elm$parser$Parser$Advanced$Parser(\n\tfunction (s) {\n\t\treturn A3($elm$parser$Parser$Advanced$Good, false, s.offset, s);\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$htmlToToken = F2(\n\tfunction (rawText, _v0) {\n\t\tvar match = _v0.a;\n\t\tvar consumedCharacters = A2(\n\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\t\tF3(\n\t\t\t\t\t\t\tfunction (startOffset, htmlTag, endOffset) {\n\t\t\t\t\t\t\t\treturn {htmlTag: htmlTag, length: endOffset - startOffset};\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t$elm$parser$Parser$Advanced$getOffset),\n\t\t\t\t$dillonkearns$elm_markdown$HtmlParser$html),\n\t\t\t$elm$parser$Parser$Advanced$getOffset);\n\t\tvar parsed = A2(\n\t\t\t$elm$parser$Parser$Advanced$run,\n\t\t\tconsumedCharacters,\n\t\t\tA2($elm$core$String$dropLeft, match.start, rawText));\n\t\tif (parsed.$ === 'Ok') {\n\t\t\tvar htmlTag = parsed.a.htmlTag;\n\t\t\tvar length = parsed.a.length;\n\t\t\tvar htmlToken = A2($dillonkearns$elm_markdown$Markdown$InlineParser$HtmlToken, $dillonkearns$elm_markdown$Markdown$InlineParser$NotOpening, htmlTag);\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t{index: match.start, length: length, meaning: htmlToken});\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Helpers$ifError = F2(\n\tfunction (_function, result) {\n\t\tif (result.$ === 'Ok') {\n\t\t\treturn result;\n\t\t} else {\n\t\t\tvar err = result.a;\n\t\t\treturn _function(err);\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$isCloseToken = F2(\n\tfunction (htmlModel, token) {\n\t\treturn false;\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$isCodeTokenPair = F2(\n\tfunction (closeToken, openToken) {\n\t\tvar _v0 = openToken.meaning;\n\t\tif (_v0.$ === 'CodeToken') {\n\t\t\tif (_v0.a.$ === 'Escaped') {\n\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\treturn _Utils_eq(openToken.length - 1, closeToken.length);\n\t\t\t} else {\n\t\t\t\tvar _v2 = _v0.a;\n\t\t\t\treturn _Utils_eq(openToken.length, closeToken.length);\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$isLinkTypeOrImageOpenToken = function (token) {\n\tvar _v0 = token.meaning;\n\tswitch (_v0.$) {\n\t\tcase 'LinkOpenToken':\n\t\t\treturn true;\n\t\tcase 'ImageOpenToken':\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$isOpenEmphasisToken = F2(\n\tfunction (closeToken, openToken) {\n\t\tvar _v0 = openToken.meaning;\n\t\tif (_v0.$ === 'EmphasisToken') {\n\t\t\tvar openChar = _v0.a;\n\t\t\tvar open = _v0.b;\n\t\t\tvar _v1 = closeToken.meaning;\n\t\t\tif (_v1.$ === 'EmphasisToken') {\n\t\t\t\tvar closeChar = _v1.a;\n\t\t\t\tvar close = _v1.b;\n\t\t\t\treturn _Utils_eq(openChar, closeChar) ? ((_Utils_eq(open.leftFringeRank, open.rightFringeRank) || _Utils_eq(close.leftFringeRank, close.rightFringeRank)) ? (!(!A2($elm$core$Basics$modBy, 3, closeToken.length + openToken.length))) : true) : false;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$isStrikethroughTokenPair = F2(\n\tfunction (closeToken, openToken) {\n\t\tvar _v0 = function () {\n\t\t\tvar _v1 = openToken.meaning;\n\t\t\tif (_v1.$ === 'StrikethroughToken') {\n\t\t\t\tif (_v1.a.$ === 'Escaped') {\n\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\treturn _Utils_Tuple2(true, openToken.length - 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar _v3 = _v1.a;\n\t\t\t\t\treturn _Utils_Tuple2(true, openToken.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple2(false, 0);\n\t\t\t}\n\t\t}();\n\t\tvar openTokenIsStrikethrough = _v0.a;\n\t\tvar openTokenLength = _v0.b;\n\t\tvar _v4 = function () {\n\t\t\tvar _v5 = closeToken.meaning;\n\t\t\tif (_v5.$ === 'StrikethroughToken') {\n\t\t\t\tif (_v5.a.$ === 'Escaped') {\n\t\t\t\t\tvar _v6 = _v5.a;\n\t\t\t\t\treturn _Utils_Tuple2(true, closeToken.length - 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar _v7 = _v5.a;\n\t\t\t\t\treturn _Utils_Tuple2(true, closeToken.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple2(false, 0);\n\t\t\t}\n\t\t}();\n\t\tvar closeTokenIsStrikethrough = _v4.a;\n\t\tvar closeTokenLength = _v4.b;\n\t\treturn closeTokenIsStrikethrough && (openTokenIsStrikethrough && _Utils_eq(closeTokenLength, openTokenLength));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$HardLineBreakType = {$: 'HardLineBreakType'};\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$tokenToMatch = F2(\n\tfunction (token, type_) {\n\t\treturn $dillonkearns$elm_markdown$Markdown$InlineParser$Match(\n\t\t\t{end: token.index + token.length, matches: _List_Nil, start: token.index, text: '', textEnd: 0, textStart: 0, type_: type_});\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$lineBreakTTM = F5(\n\tfunction (remaining, tokens, matches, refs, rawText) {\n\t\tlineBreakTTM:\n\t\twhile (true) {\n\t\t\tif (!remaining.b) {\n\t\t\t\treturn matches;\n\t\t\t} else {\n\t\t\t\tvar token = remaining.a;\n\t\t\t\tvar tokensTail = remaining.b;\n\t\t\t\tvar _v1 = token.meaning;\n\t\t\t\tif (_v1.$ === 'HardLineBreakToken') {\n\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t$temp$tokens = tokens,\n\t\t\t\t\t\t$temp$matches = A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$InlineParser$tokenToMatch, token, $dillonkearns$elm_markdown$Markdown$InlineParser$HardLineBreakType),\n\t\t\t\t\t\tmatches),\n\t\t\t\t\t\t$temp$refs = refs,\n\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\trefs = $temp$refs;\n\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\tcontinue lineBreakTTM;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t$temp$tokens = A2($elm$core$List$cons, token, tokens),\n\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t$temp$refs = refs,\n\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\trefs = $temp$refs;\n\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\tcontinue lineBreakTTM;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$removeParsedAheadTokens = F2(\n\tfunction (_v0, tokensTail) {\n\t\tvar match = _v0.a;\n\t\treturn A2(\n\t\t\t$elm$core$List$filter,\n\t\t\tfunction (token) {\n\t\t\t\treturn _Utils_cmp(token.index, match.end) > -1;\n\t\t\t},\n\t\t\ttokensTail);\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$angleBracketsToMatch = F6(\n\tfunction (closeToken, escaped, matches, references, rawText, _v46) {\n\t\tvar openToken = _v46.a;\n\t\tvar remainTokens = _v46.c;\n\t\tvar result = A2(\n\t\t\t$dillonkearns$elm_markdown$Markdown$Helpers$ifError,\n\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$emailAutolinkTypeToMatch,\n\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$autolinkToMatch(\n\t\t\t\tA7(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$tokenPairToMatch,\n\t\t\t\t\treferences,\n\t\t\t\t\trawText,\n\t\t\t\t\tfunction (s) {\n\t\t\t\t\t\treturn s;\n\t\t\t\t\t},\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$CodeType,\n\t\t\t\t\topenToken,\n\t\t\t\t\tcloseToken,\n\t\t\t\t\t_List_Nil)));\n\t\tif (result.$ === 'Err') {\n\t\t\tvar tempMatch = result.a;\n\t\t\tif (escaped.$ === 'NotEscaped') {\n\t\t\t\tvar _v49 = A2($dillonkearns$elm_markdown$Markdown$InlineParser$htmlToToken, rawText, tempMatch);\n\t\t\t\tif (_v49.$ === 'Just') {\n\t\t\t\t\tvar newToken = _v49.a;\n\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\tA2($elm$core$List$cons, newToken, remainTokens),\n\t\t\t\t\t\t\tmatches));\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t}\n\t\t} else {\n\t\t\tvar newMatch = result.a;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\tremainTokens,\n\t\t\t\t\tA2($elm$core$List$cons, newMatch, matches)));\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$codeAutolinkTypeHtmlTagTTM = F5(\n\tfunction (remaining, tokens, matches, references, rawText) {\n\t\tcodeAutolinkTypeHtmlTagTTM:\n\t\twhile (true) {\n\t\t\tif (!remaining.b) {\n\t\t\t\treturn A5(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$htmlElementTTM,\n\t\t\t\t\t$elm$core$List$reverse(tokens),\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\tmatches,\n\t\t\t\t\treferences,\n\t\t\t\t\trawText);\n\t\t\t} else {\n\t\t\t\tvar token = remaining.a;\n\t\t\t\tvar tokensTail = remaining.b;\n\t\t\t\tvar _v38 = token.meaning;\n\t\t\t\tswitch (_v38.$) {\n\t\t\t\t\tcase 'CodeToken':\n\t\t\t\t\t\tvar isEscaped = _v38.a;\n\t\t\t\t\t\tvar _v39 = A2(\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$findToken,\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$isCodeTokenPair(token),\n\t\t\t\t\t\t\ttokens);\n\t\t\t\t\t\tif (_v39.$ === 'Just') {\n\t\t\t\t\t\t\tvar code = _v39.a;\n\t\t\t\t\t\t\tvar _v40 = A5($dillonkearns$elm_markdown$Markdown$InlineParser$codeToMatch, token, matches, references, rawText, code);\n\t\t\t\t\t\t\tvar newTokens = _v40.a;\n\t\t\t\t\t\t\tvar newMatches = _v40.b;\n\t\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t\t$temp$tokens = newTokens,\n\t\t\t\t\t\t\t\t$temp$matches = newMatches,\n\t\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\t\tcontinue codeAutolinkTypeHtmlTagTTM;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t\t$temp$tokens = A2($elm$core$List$cons, token, tokens),\n\t\t\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\t\tcontinue codeAutolinkTypeHtmlTagTTM;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'AngleBracketClose':\n\t\t\t\t\t\tvar isEscaped = _v38.a;\n\t\t\t\t\t\tvar isAngleBracketOpen = function (_v45) {\n\t\t\t\t\t\t\tvar meaning = _v45.meaning;\n\t\t\t\t\t\t\tif (meaning.$ === 'AngleBracketOpen') {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tvar _v41 = A2($dillonkearns$elm_markdown$Markdown$InlineParser$findToken, isAngleBracketOpen, tokens);\n\t\t\t\t\t\tif (_v41.$ === 'Just') {\n\t\t\t\t\t\t\tvar found = _v41.a;\n\t\t\t\t\t\t\tvar _v42 = A6($dillonkearns$elm_markdown$Markdown$InlineParser$angleBracketsToMatch, token, isEscaped, matches, references, rawText, found);\n\t\t\t\t\t\t\tif (_v42.$ === 'Just') {\n\t\t\t\t\t\t\t\tvar _v43 = _v42.a;\n\t\t\t\t\t\t\t\tvar newTokens = _v43.a;\n\t\t\t\t\t\t\t\tvar newMatches = _v43.b;\n\t\t\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t\t\t$temp$tokens = A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$filter,\n\t\t\t\t\t\t\t\t\tA2($elm$core$Basics$composeL, $elm$core$Basics$not, isAngleBracketOpen),\n\t\t\t\t\t\t\t\t\tnewTokens),\n\t\t\t\t\t\t\t\t\t$temp$matches = newMatches,\n\t\t\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\t\t\tcontinue codeAutolinkTypeHtmlTagTTM;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t\t\t$temp$tokens = A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$filter,\n\t\t\t\t\t\t\t\t\tA2($elm$core$Basics$composeL, $elm$core$Basics$not, isAngleBracketOpen),\n\t\t\t\t\t\t\t\t\ttokens),\n\t\t\t\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\t\t\tcontinue codeAutolinkTypeHtmlTagTTM;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t\t$temp$tokens = A2(\n\t\t\t\t\t\t\t\t$elm$core$List$filter,\n\t\t\t\t\t\t\t\tA2($elm$core$Basics$composeL, $elm$core$Basics$not, isAngleBracketOpen),\n\t\t\t\t\t\t\t\ttokens),\n\t\t\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\t\tcontinue codeAutolinkTypeHtmlTagTTM;\n\t\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t$temp$tokens = A2($elm$core$List$cons, token, tokens),\n\t\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\tcontinue codeAutolinkTypeHtmlTagTTM;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$codeToMatch = F5(\n\tfunction (closeToken, matches, references, rawText, _v34) {\n\t\tvar openToken = _v34.a;\n\t\tvar remainTokens = _v34.c;\n\t\tvar updatedOpenToken = function () {\n\t\t\tvar _v35 = openToken.meaning;\n\t\t\tif ((_v35.$ === 'CodeToken') && (_v35.a.$ === 'Escaped')) {\n\t\t\t\tvar _v36 = _v35.a;\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\topenToken,\n\t\t\t\t\t{index: openToken.index + 1, length: openToken.length - 1});\n\t\t\t} else {\n\t\t\t\treturn openToken;\n\t\t\t}\n\t\t}();\n\t\tvar match = A7($dillonkearns$elm_markdown$Markdown$InlineParser$tokenPairToMatch, references, rawText, $dillonkearns$elm_markdown$Markdown$Helpers$cleanWhitespaces, $dillonkearns$elm_markdown$Markdown$InlineParser$CodeType, updatedOpenToken, closeToken, _List_Nil);\n\t\treturn _Utils_Tuple2(\n\t\t\tremainTokens,\n\t\t\tA2($elm$core$List$cons, match, matches));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$emphasisTTM = F5(\n\tfunction (remaining, tokens, matches, references, rawText) {\n\t\temphasisTTM:\n\t\twhile (true) {\n\t\t\tif (!remaining.b) {\n\t\t\t\treturn A5(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$strikethroughTTM,\n\t\t\t\t\t$elm$core$List$reverse(tokens),\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\tmatches,\n\t\t\t\t\treferences,\n\t\t\t\t\trawText);\n\t\t\t} else {\n\t\t\t\tvar token = remaining.a;\n\t\t\t\tvar tokensTail = remaining.b;\n\t\t\t\tvar _v29 = token.meaning;\n\t\t\t\tif (_v29.$ === 'EmphasisToken') {\n\t\t\t\t\tvar _char = _v29.a;\n\t\t\t\t\tvar leftFringeRank = _v29.b.leftFringeRank;\n\t\t\t\t\tvar rightFringeRank = _v29.b.rightFringeRank;\n\t\t\t\t\tif (_Utils_eq(leftFringeRank, rightFringeRank)) {\n\t\t\t\t\t\tif ((!(!rightFringeRank)) && ((!_Utils_eq(\n\t\t\t\t\t\t\t_char,\n\t\t\t\t\t\t\t_Utils_chr('_'))) || (rightFringeRank === 1))) {\n\t\t\t\t\t\t\tvar _v30 = A2(\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$findToken,\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$isOpenEmphasisToken(token),\n\t\t\t\t\t\t\t\ttokens);\n\t\t\t\t\t\t\tif (_v30.$ === 'Just') {\n\t\t\t\t\t\t\t\tvar found = _v30.a;\n\t\t\t\t\t\t\t\tvar _v31 = A5($dillonkearns$elm_markdown$Markdown$InlineParser$emphasisToMatch, references, rawText, token, tokensTail, found);\n\t\t\t\t\t\t\t\tvar newRemaining = _v31.a;\n\t\t\t\t\t\t\t\tvar match = _v31.b;\n\t\t\t\t\t\t\t\tvar newTokens = _v31.c;\n\t\t\t\t\t\t\t\tvar $temp$remaining = newRemaining,\n\t\t\t\t\t\t\t\t\t$temp$tokens = newTokens,\n\t\t\t\t\t\t\t\t\t$temp$matches = A2($elm$core$List$cons, match, matches),\n\t\t\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\t\t\tcontinue emphasisTTM;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t\t\t$temp$tokens = A2($elm$core$List$cons, token, tokens),\n\t\t\t\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\t\t\tcontinue emphasisTTM;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t\t$temp$tokens = tokens,\n\t\t\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\t\tcontinue emphasisTTM;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_Utils_cmp(leftFringeRank, rightFringeRank) < 0) {\n\t\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t\t$temp$tokens = A2($elm$core$List$cons, token, tokens),\n\t\t\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\t\tcontinue emphasisTTM;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _v32 = A2(\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$findToken,\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$isOpenEmphasisToken(token),\n\t\t\t\t\t\t\t\ttokens);\n\t\t\t\t\t\t\tif (_v32.$ === 'Just') {\n\t\t\t\t\t\t\t\tvar found = _v32.a;\n\t\t\t\t\t\t\t\tvar _v33 = A5($dillonkearns$elm_markdown$Markdown$InlineParser$emphasisToMatch, references, rawText, token, tokensTail, found);\n\t\t\t\t\t\t\t\tvar newRemaining = _v33.a;\n\t\t\t\t\t\t\t\tvar match = _v33.b;\n\t\t\t\t\t\t\t\tvar newTokens = _v33.c;\n\t\t\t\t\t\t\t\tvar $temp$remaining = newRemaining,\n\t\t\t\t\t\t\t\t\t$temp$tokens = newTokens,\n\t\t\t\t\t\t\t\t\t$temp$matches = A2($elm$core$List$cons, match, matches),\n\t\t\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\t\t\tcontinue emphasisTTM;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t\t\t$temp$tokens = tokens,\n\t\t\t\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\t\t\tcontinue emphasisTTM;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t$temp$tokens = A2($elm$core$List$cons, token, tokens),\n\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\tcontinue emphasisTTM;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$emphasisToMatch = F5(\n\tfunction (references, rawText, closeToken, tokensTail, _v27) {\n\t\tvar openToken = _v27.a;\n\t\tvar innerTokens = _v27.b;\n\t\tvar remainTokens = _v27.c;\n\t\tvar remainLength = openToken.length - closeToken.length;\n\t\tvar updt = (!remainLength) ? {closeToken: closeToken, openToken: openToken, remainTokens: remainTokens, tokensTail: tokensTail} : ((remainLength > 0) ? {\n\t\t\tcloseToken: closeToken,\n\t\t\topenToken: _Utils_update(\n\t\t\t\topenToken,\n\t\t\t\t{index: openToken.index + remainLength, length: closeToken.length}),\n\t\t\tremainTokens: A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t_Utils_update(\n\t\t\t\t\topenToken,\n\t\t\t\t\t{length: remainLength}),\n\t\t\t\tremainTokens),\n\t\t\ttokensTail: tokensTail\n\t\t} : {\n\t\t\tcloseToken: _Utils_update(\n\t\t\t\tcloseToken,\n\t\t\t\t{length: openToken.length}),\n\t\t\topenToken: openToken,\n\t\t\tremainTokens: remainTokens,\n\t\t\ttokensTail: A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t_Utils_update(\n\t\t\t\t\tcloseToken,\n\t\t\t\t\t{index: closeToken.index + openToken.length, length: -remainLength}),\n\t\t\t\ttokensTail)\n\t\t});\n\t\tvar match = A7(\n\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$tokenPairToMatch,\n\t\t\treferences,\n\t\t\trawText,\n\t\t\tfunction (s) {\n\t\t\t\treturn s;\n\t\t\t},\n\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$EmphasisType(updt.openToken.length),\n\t\t\tupdt.openToken,\n\t\t\tupdt.closeToken,\n\t\t\t$elm$core$List$reverse(innerTokens));\n\t\treturn _Utils_Tuple3(updt.tokensTail, match, updt.remainTokens);\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$htmlElementTTM = F5(\n\tfunction (remaining, tokens, matches, references, rawText) {\n\t\thtmlElementTTM:\n\t\twhile (true) {\n\t\t\tif (!remaining.b) {\n\t\t\t\treturn A5(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$linkImageTypeTTM,\n\t\t\t\t\t$elm$core$List$reverse(tokens),\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\tmatches,\n\t\t\t\t\treferences,\n\t\t\t\t\trawText);\n\t\t\t} else {\n\t\t\t\tvar token = remaining.a;\n\t\t\t\tvar tokensTail = remaining.b;\n\t\t\t\tvar _v23 = token.meaning;\n\t\t\t\tif (_v23.$ === 'HtmlToken') {\n\t\t\t\t\tvar isOpen = _v23.a;\n\t\t\t\t\tvar htmlModel = _v23.b;\n\t\t\t\t\tif (isOpen.$ === 'NotOpening') {\n\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t$temp$tokens = tokens,\n\t\t\t\t\t\t\t$temp$matches = A2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$tokenToMatch,\n\t\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$HtmlType(htmlModel)),\n\t\t\t\t\t\t\tmatches),\n\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\tcontinue htmlElementTTM;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v25 = A2(\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$findToken,\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$isCloseToken(htmlModel),\n\t\t\t\t\t\t\ttokensTail);\n\t\t\t\t\t\tif (_v25.$ === 'Nothing') {\n\t\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t\t$temp$tokens = tokens,\n\t\t\t\t\t\t\t\t$temp$matches = A2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$tokenToMatch,\n\t\t\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$HtmlType(htmlModel)),\n\t\t\t\t\t\t\t\tmatches),\n\t\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\t\tcontinue htmlElementTTM;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _v26 = _v25.a;\n\t\t\t\t\t\t\tvar closeToken = _v26.a;\n\t\t\t\t\t\t\tvar innerTokens = _v26.b;\n\t\t\t\t\t\t\tvar newTail = _v26.c;\n\t\t\t\t\t\t\tvar newMatch = A7(\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$tokenPairToMatch,\n\t\t\t\t\t\t\t\treferences,\n\t\t\t\t\t\t\t\trawText,\n\t\t\t\t\t\t\t\tfunction (s) {\n\t\t\t\t\t\t\t\t\treturn s;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$HtmlType(htmlModel),\n\t\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\t\tcloseToken,\n\t\t\t\t\t\t\t\tinnerTokens);\n\t\t\t\t\t\t\tvar $temp$remaining = newTail,\n\t\t\t\t\t\t\t\t$temp$tokens = tokens,\n\t\t\t\t\t\t\t\t$temp$matches = A2($elm$core$List$cons, newMatch, matches),\n\t\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\t\tcontinue htmlElementTTM;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t$temp$tokens = A2($elm$core$List$cons, token, tokens),\n\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\tcontinue htmlElementTTM;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$linkImageTypeTTM = F5(\n\tfunction (remaining, tokens, matches, references, rawText) {\n\t\tlinkImageTypeTTM:\n\t\twhile (true) {\n\t\t\tif (!remaining.b) {\n\t\t\t\treturn A5(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$emphasisTTM,\n\t\t\t\t\t$elm$core$List$reverse(tokens),\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\tmatches,\n\t\t\t\t\treferences,\n\t\t\t\t\trawText);\n\t\t\t} else {\n\t\t\t\tvar token = remaining.a;\n\t\t\t\tvar tokensTail = remaining.b;\n\t\t\t\tvar _v18 = token.meaning;\n\t\t\t\tif (_v18.$ === 'SquareBracketClose') {\n\t\t\t\t\tvar _v19 = A2($dillonkearns$elm_markdown$Markdown$InlineParser$findToken, $dillonkearns$elm_markdown$Markdown$InlineParser$isLinkTypeOrImageOpenToken, tokens);\n\t\t\t\t\tif (_v19.$ === 'Just') {\n\t\t\t\t\t\tvar found = _v19.a;\n\t\t\t\t\t\tvar _v20 = A6($dillonkearns$elm_markdown$Markdown$InlineParser$linkOrImageTypeToMatch, token, tokensTail, matches, references, rawText, found);\n\t\t\t\t\t\tif (_v20.$ === 'Just') {\n\t\t\t\t\t\t\tvar _v21 = _v20.a;\n\t\t\t\t\t\t\tvar x = _v21.a;\n\t\t\t\t\t\t\tvar newMatches = _v21.b;\n\t\t\t\t\t\t\tvar newTokens = _v21.c;\n\t\t\t\t\t\t\tvar $temp$remaining = x,\n\t\t\t\t\t\t\t\t$temp$tokens = newTokens,\n\t\t\t\t\t\t\t\t$temp$matches = newMatches,\n\t\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\t\tcontinue linkImageTypeTTM;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t\t$temp$tokens = tokens,\n\t\t\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\t\tcontinue linkImageTypeTTM;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t$temp$tokens = tokens,\n\t\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\tcontinue linkImageTypeTTM;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t$temp$tokens = A2($elm$core$List$cons, token, tokens),\n\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\tcontinue linkImageTypeTTM;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$linkOrImageTypeToMatch = F6(\n\tfunction (closeToken, tokensTail, oldMatches, references, rawText, _v8) {\n\t\tvar openToken = _v8.a;\n\t\tvar innerTokens = _v8.b;\n\t\tvar remainTokens = _v8.c;\n\t\tvar removeOpenToken = _Utils_Tuple3(\n\t\t\ttokensTail,\n\t\t\toldMatches,\n\t\t\t_Utils_ap(innerTokens, remainTokens));\n\t\tvar remainText = A2($elm$core$String$dropLeft, closeToken.index + 1, rawText);\n\t\tvar inactivateLinkOpenToken = function (token) {\n\t\t\tvar _v16 = token.meaning;\n\t\t\tif (_v16.$ === 'LinkOpenToken') {\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\ttoken,\n\t\t\t\t\t{\n\t\t\t\t\t\tmeaning: $dillonkearns$elm_markdown$Markdown$InlineParser$LinkOpenToken($dillonkearns$elm_markdown$Markdown$InlineParser$Inactive)\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn token;\n\t\t\t}\n\t\t};\n\t\tvar findTempMatch = function (isLinkType) {\n\t\t\treturn A7(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$tokenPairToMatch,\n\t\t\t\treferences,\n\t\t\t\trawText,\n\t\t\t\tfunction (s) {\n\t\t\t\t\treturn s;\n\t\t\t\t},\n\t\t\t\tisLinkType ? $dillonkearns$elm_markdown$Markdown$InlineParser$LinkType(\n\t\t\t\t\t_Utils_Tuple2('', $elm$core$Maybe$Nothing)) : $dillonkearns$elm_markdown$Markdown$InlineParser$ImageType(\n\t\t\t\t\t_Utils_Tuple2('', $elm$core$Maybe$Nothing)),\n\t\t\t\topenToken,\n\t\t\t\tcloseToken,\n\t\t\t\t$elm$core$List$reverse(innerTokens));\n\t\t};\n\t\tvar _v9 = openToken.meaning;\n\t\tswitch (_v9.$) {\n\t\t\tcase 'ImageOpenToken':\n\t\t\t\tvar tempMatch = findTempMatch(false);\n\t\t\t\tvar _v10 = A3($dillonkearns$elm_markdown$Markdown$InlineParser$checkForInlineLinkTypeOrImageType, remainText, tempMatch, references);\n\t\t\t\tif (_v10.$ === 'Nothing') {\n\t\t\t\t\treturn $elm$core$Maybe$Just(removeOpenToken);\n\t\t\t\t} else {\n\t\t\t\t\tvar match = _v10.a;\n\t\t\t\t\tvar _v11 = A2($dillonkearns$elm_markdown$Markdown$InlineParser$checkParsedAheadOverlapping, match, oldMatches);\n\t\t\t\t\tif (_v11.$ === 'Just') {\n\t\t\t\t\t\tvar matches = _v11.a;\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$InlineParser$removeParsedAheadTokens, match, tokensTail),\n\t\t\t\t\t\t\t\tmatches,\n\t\t\t\t\t\t\t\tremainTokens));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(removeOpenToken);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase 'LinkOpenToken':\n\t\t\t\tif (_v9.a.$ === 'Active') {\n\t\t\t\t\tvar _v12 = _v9.a;\n\t\t\t\t\tvar tempMatch = findTempMatch(true);\n\t\t\t\t\tvar _v13 = A3($dillonkearns$elm_markdown$Markdown$InlineParser$checkForInlineLinkTypeOrImageType, remainText, tempMatch, references);\n\t\t\t\t\tif (_v13.$ === 'Nothing') {\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(removeOpenToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar match = _v13.a;\n\t\t\t\t\t\tvar _v14 = A2($dillonkearns$elm_markdown$Markdown$InlineParser$checkParsedAheadOverlapping, match, oldMatches);\n\t\t\t\t\t\tif (_v14.$ === 'Just') {\n\t\t\t\t\t\t\tvar matches = _v14.a;\n\t\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$InlineParser$removeParsedAheadTokens, match, tokensTail),\n\t\t\t\t\t\t\t\t\tmatches,\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$map, inactivateLinkOpenToken, remainTokens)));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn $elm$core$Maybe$Just(removeOpenToken);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar _v15 = _v9.a;\n\t\t\t\t\treturn $elm$core$Maybe$Just(removeOpenToken);\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$strikethroughTTM = F5(\n\tfunction (remaining, tokens, matches, references, rawText) {\n\t\tstrikethroughTTM:\n\t\twhile (true) {\n\t\t\tif (!remaining.b) {\n\t\t\t\treturn A5(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$lineBreakTTM,\n\t\t\t\t\t$elm$core$List$reverse(tokens),\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\tmatches,\n\t\t\t\t\treferences,\n\t\t\t\t\trawText);\n\t\t\t} else {\n\t\t\t\tvar token = remaining.a;\n\t\t\t\tvar tokensTail = remaining.b;\n\t\t\t\tvar _v5 = token.meaning;\n\t\t\t\tif (_v5.$ === 'StrikethroughToken') {\n\t\t\t\t\tvar isEscaped = _v5.a;\n\t\t\t\t\tvar _v6 = A2(\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$findToken,\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$isStrikethroughTokenPair(token),\n\t\t\t\t\t\ttokens);\n\t\t\t\t\tif (_v6.$ === 'Just') {\n\t\t\t\t\t\tvar content = _v6.a;\n\t\t\t\t\t\tvar _v7 = A5($dillonkearns$elm_markdown$Markdown$InlineParser$strikethroughToMatch, token, matches, references, rawText, content);\n\t\t\t\t\t\tvar newTokens = _v7.a;\n\t\t\t\t\t\tvar newMatches = _v7.b;\n\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t$temp$tokens = newTokens,\n\t\t\t\t\t\t\t$temp$matches = newMatches,\n\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\tcontinue strikethroughTTM;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t\t$temp$tokens = A2($elm$core$List$cons, token, tokens),\n\t\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\t\tcontinue strikethroughTTM;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$remaining = tokensTail,\n\t\t\t\t\t\t$temp$tokens = A2($elm$core$List$cons, token, tokens),\n\t\t\t\t\t\t$temp$matches = matches,\n\t\t\t\t\t\t$temp$references = references,\n\t\t\t\t\t\t$temp$rawText = rawText;\n\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\ttokens = $temp$tokens;\n\t\t\t\t\tmatches = $temp$matches;\n\t\t\t\t\treferences = $temp$references;\n\t\t\t\t\trawText = $temp$rawText;\n\t\t\t\t\tcontinue strikethroughTTM;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$strikethroughToMatch = F5(\n\tfunction (closeToken, matches, references, rawText, _v1) {\n\t\tvar openToken = _v1.a;\n\t\tvar remainTokens = _v1.c;\n\t\tvar updatedOpenToken = function () {\n\t\t\tvar _v2 = openToken.meaning;\n\t\t\tif ((_v2.$ === 'StrikethroughToken') && (_v2.a.$ === 'Escaped')) {\n\t\t\t\tvar _v3 = _v2.a;\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\topenToken,\n\t\t\t\t\t{index: openToken.index + 1, length: openToken.length - 1});\n\t\t\t} else {\n\t\t\t\treturn openToken;\n\t\t\t}\n\t\t}();\n\t\tvar match = A7($dillonkearns$elm_markdown$Markdown$InlineParser$tokenPairToMatch, references, rawText, $dillonkearns$elm_markdown$Markdown$Helpers$cleanWhitespaces, $dillonkearns$elm_markdown$Markdown$InlineParser$StrikethroughType, updatedOpenToken, closeToken, _List_Nil);\n\t\treturn _Utils_Tuple2(\n\t\t\tremainTokens,\n\t\t\tA2($elm$core$List$cons, match, matches));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$tokenPairToMatch = F7(\n\tfunction (references, rawText, processText, type_, openToken, closeToken, innerTokens) {\n\t\tvar textStart = openToken.index + openToken.length;\n\t\tvar textEnd = closeToken.index;\n\t\tvar text = processText(\n\t\t\tA3($elm$core$String$slice, textStart, textEnd, rawText));\n\t\tvar start = openToken.index;\n\t\tvar end = closeToken.index + closeToken.length;\n\t\tvar match = {end: end, matches: _List_Nil, start: start, text: text, textEnd: textEnd, textStart: textStart, type_: type_};\n\t\tvar matches = A2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (_v0) {\n\t\t\t\tvar matchModel = _v0.a;\n\t\t\t\treturn A2($dillonkearns$elm_markdown$Markdown$InlineParser$prepareChildMatch, match, matchModel);\n\t\t\t},\n\t\t\tA4($dillonkearns$elm_markdown$Markdown$InlineParser$tokensToMatches, innerTokens, _List_Nil, references, rawText));\n\t\treturn $dillonkearns$elm_markdown$Markdown$InlineParser$Match(\n\t\t\t{end: end, matches: matches, start: start, text: text, textEnd: textEnd, textStart: textStart, type_: type_});\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$tokensToMatches = F4(\n\tfunction (tokens, matches, references, rawText) {\n\t\treturn A5($dillonkearns$elm_markdown$Markdown$InlineParser$codeAutolinkTypeHtmlTagTTM, tokens, _List_Nil, matches, references, rawText);\n\t});\nvar $dillonkearns$elm_markdown$Markdown$InlineParser$parse = F2(\n\tfunction (refs, rawText_) {\n\t\tvar rawText = $elm$core$String$trim(rawText_);\n\t\tvar tokens = $dillonkearns$elm_markdown$Markdown$InlineParser$tokenize(rawText);\n\t\treturn $dillonkearns$elm_markdown$Markdown$InlineParser$matchesToInlines(\n\t\t\tA3(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$parseTextMatches,\n\t\t\t\trawText,\n\t\t\t\t_List_Nil,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$InlineParser$organizeMatches(\n\t\t\t\t\tA4($dillonkearns$elm_markdown$Markdown$InlineParser$tokensToMatches, tokens, _List_Nil, refs, rawText))));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Parser$thisIsDefinitelyNotAnHtmlTag = $elm$parser$Parser$Advanced$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\t$elm$parser$Parser$Advanced$token(\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t' ',\n\t\t\t\t$elm$parser$Parser$Expecting(' '))),\n\t\t\t$elm$parser$Parser$Advanced$token(\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t'>',\n\t\t\t\t$elm$parser$Parser$Expecting('>'))),\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$chompIf,\n\t\t\t\t\t$elm$core$Char$isAlpha,\n\t\t\t\t\t$elm$parser$Parser$Expecting('Alpha')),\n\t\t\t\t$elm$parser$Parser$Advanced$chompWhile(\n\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\treturn $elm$core$Char$isAlphaNum(c) || _Utils_eq(\n\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t_Utils_chr('-'));\n\t\t\t\t\t})),\n\t\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$token(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t\t\t\t':',\n\t\t\t\t\t\t\t$elm$parser$Parser$Expecting(':'))),\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$token(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t\t\t\t'@',\n\t\t\t\t\t\t\t$elm$parser$Parser$Expecting('@'))),\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$token(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t\t\t\t'\\\\',\n\t\t\t\t\t\t\t$elm$parser$Parser$Expecting('\\\\'))),\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$token(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t\t\t\t'+',\n\t\t\t\t\t\t\t$elm$parser$Parser$Expecting('+'))),\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$token(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t\t\t\t'.',\n\t\t\t\t\t\t\t$elm$parser$Parser$Expecting('.')))\n\t\t\t\t\t])))\n\t\t]));\nvar $dillonkearns$elm_markdown$Markdown$Parser$parseAsParagraphInsteadOfHtmlBlock = $elm$parser$Parser$Advanced$backtrackable(\n\tA2(\n\t\t$elm$parser$Parser$Advanced$mapChompedString,\n\t\tF2(\n\t\t\tfunction (rawLine, _v0) {\n\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$RawBlock$OpenBlockOrParagraph(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$UnparsedInlines(rawLine));\n\t\t\t}),\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t$elm$parser$Parser$Advanced$token(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t\t\t\t'<',\n\t\t\t\t\t\t\t$elm$parser$Parser$Expecting('<'))),\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$thisIsDefinitelyNotAnHtmlTag),\n\t\t\t\t$dillonkearns$elm_markdown$Helpers$chompUntilLineEndOrEnd),\n\t\t\t$dillonkearns$elm_markdown$Helpers$lineEndOrEnd)));\nvar $dillonkearns$elm_markdown$Markdown$CodeBlock$CodeBlock = F2(\n\tfunction (language, body) {\n\t\treturn {body: body, language: language};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$CodeBlock$infoString = function (fenceCharacter) {\n\tvar toInfoString = F2(\n\t\tfunction (str, _v2) {\n\t\t\tvar _v1 = $elm$core$String$trim(str);\n\t\t\tif (_v1 === '') {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar trimmed = _v1;\n\t\t\t\treturn $elm$core$Maybe$Just(trimmed);\n\t\t\t}\n\t\t});\n\tvar _v0 = fenceCharacter.kind;\n\tif (_v0.$ === 'Backtick') {\n\t\treturn A2(\n\t\t\t$elm$parser$Parser$Advanced$mapChompedString,\n\t\t\ttoInfoString,\n\t\t\t$elm$parser$Parser$Advanced$chompWhile(\n\t\t\t\tfunction (c) {\n\t\t\t\t\treturn (!_Utils_eq(\n\t\t\t\t\t\tc,\n\t\t\t\t\t\t_Utils_chr('`'))) && (!$dillonkearns$elm_markdown$Whitespace$isLineEnd(c));\n\t\t\t\t}));\n\t} else {\n\t\treturn A2(\n\t\t\t$elm$parser$Parser$Advanced$mapChompedString,\n\t\t\ttoInfoString,\n\t\t\t$elm$parser$Parser$Advanced$chompWhile(\n\t\t\t\tA2($elm$core$Basics$composeL, $elm$core$Basics$not, $dillonkearns$elm_markdown$Whitespace$isLineEnd)));\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$CodeBlock$Backtick = {$: 'Backtick'};\nvar $dillonkearns$elm_markdown$Parser$Token$backtick = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'`',\n\t$elm$parser$Parser$Expecting('a \\'`\\''));\nvar $dillonkearns$elm_markdown$Markdown$CodeBlock$backtick = {\n\t_char: _Utils_chr('`'),\n\tkind: $dillonkearns$elm_markdown$Markdown$CodeBlock$Backtick,\n\ttoken: $dillonkearns$elm_markdown$Parser$Token$backtick\n};\nvar $dillonkearns$elm_markdown$Markdown$CodeBlock$colToIndentation = function (_int) {\n\tswitch (_int) {\n\t\tcase 1:\n\t\t\treturn $elm$parser$Parser$Advanced$succeed(0);\n\t\tcase 2:\n\t\t\treturn $elm$parser$Parser$Advanced$succeed(1);\n\t\tcase 3:\n\t\t\treturn $elm$parser$Parser$Advanced$succeed(2);\n\t\tcase 4:\n\t\t\treturn $elm$parser$Parser$Advanced$succeed(3);\n\t\tdefault:\n\t\t\treturn $elm$parser$Parser$Advanced$problem(\n\t\t\t\t$elm$parser$Parser$Expecting('Fenced code blocks should be indented no more than 3 spaces'));\n\t}\n};\nvar $elm$core$List$repeatHelp = F3(\n\tfunction (result, n, value) {\n\t\trepeatHelp:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\tvar $temp$result = A2($elm$core$List$cons, value, result),\n\t\t\t\t\t$temp$n = n - 1,\n\t\t\t\t\t$temp$value = value;\n\t\t\t\tresult = $temp$result;\n\t\t\t\tn = $temp$n;\n\t\t\t\tvalue = $temp$value;\n\t\t\t\tcontinue repeatHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$repeat = F2(\n\tfunction (n, value) {\n\t\treturn A3($elm$core$List$repeatHelp, _List_Nil, n, value);\n\t});\nvar $dillonkearns$elm_markdown$Markdown$CodeBlock$fenceOfAtLeast = F2(\n\tfunction (minLength, fenceCharacter) {\n\t\tvar builtTokens = A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (t, p) {\n\t\t\t\t\treturn A2($elm$parser$Parser$Advanced$ignorer, p, t);\n\t\t\t\t}),\n\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0),\n\t\t\tA2(\n\t\t\t\t$elm$core$List$repeat,\n\t\t\t\tminLength,\n\t\t\t\t$elm$parser$Parser$Advanced$token(fenceCharacter.token)));\n\t\treturn A2(\n\t\t\t$elm$parser$Parser$Advanced$mapChompedString,\n\t\t\tF2(\n\t\t\t\tfunction (str, _v0) {\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tfenceCharacter,\n\t\t\t\t\t\t$elm$core$String$length(str));\n\t\t\t\t}),\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\tbuiltTokens,\n\t\t\t\t$elm$parser$Parser$Advanced$chompWhile(\n\t\t\t\t\t$elm$core$Basics$eq(fenceCharacter._char))));\n\t});\nvar $elm$parser$Parser$Advanced$getCol = $elm$parser$Parser$Advanced$Parser(\n\tfunction (s) {\n\t\treturn A3($elm$parser$Parser$Advanced$Good, false, s.col, s);\n\t});\nvar $dillonkearns$elm_markdown$Markdown$CodeBlock$Tilde = {$: 'Tilde'};\nvar $dillonkearns$elm_markdown$Parser$Token$tilde = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'~',\n\t$elm$parser$Parser$Expecting('a `~`'));\nvar $dillonkearns$elm_markdown$Markdown$CodeBlock$tilde = {\n\t_char: _Utils_chr('~'),\n\tkind: $dillonkearns$elm_markdown$Markdown$CodeBlock$Tilde,\n\ttoken: $dillonkearns$elm_markdown$Parser$Token$tilde\n};\nvar $dillonkearns$elm_markdown$Whitespace$space = $elm$parser$Parser$Advanced$token($dillonkearns$elm_markdown$Parser$Token$space);\nvar $dillonkearns$elm_markdown$Whitespace$upToThreeSpaces = $elm$parser$Parser$Advanced$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$dillonkearns$elm_markdown$Whitespace$space,\n\t\t\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Whitespace$space,\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0)\n\t\t\t\t\t\t]))),\n\t\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Whitespace$space,\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0)\n\t\t\t\t\t]))),\n\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0)\n\t\t]));\nvar $dillonkearns$elm_markdown$Markdown$CodeBlock$openingFence = A2(\n\t$elm$parser$Parser$Advanced$keeper,\n\tA2(\n\t\t$elm$parser$Parser$Advanced$keeper,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\tF2(\n\t\t\t\t\tfunction (indent, _v0) {\n\t\t\t\t\t\tvar character = _v0.a;\n\t\t\t\t\t\tvar length = _v0.b;\n\t\t\t\t\t\treturn {character: character, indented: indent, length: length};\n\t\t\t\t\t})),\n\t\t\t$dillonkearns$elm_markdown$Whitespace$upToThreeSpaces),\n\t\tA2($elm$parser$Parser$Advanced$andThen, $dillonkearns$elm_markdown$Markdown$CodeBlock$colToIndentation, $elm$parser$Parser$Advanced$getCol)),\n\t$elm$parser$Parser$Advanced$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$CodeBlock$fenceOfAtLeast, 3, $dillonkearns$elm_markdown$Markdown$CodeBlock$backtick),\n\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$CodeBlock$fenceOfAtLeast, 3, $dillonkearns$elm_markdown$Markdown$CodeBlock$tilde)\n\t\t\t])));\nvar $elm$parser$Parser$ExpectingEnd = {$: 'ExpectingEnd'};\nvar $dillonkearns$elm_markdown$Whitespace$isSpace = $elm$core$Basics$eq(\n\t_Utils_chr(' '));\nvar $dillonkearns$elm_markdown$Markdown$CodeBlock$closingFence = F2(\n\tfunction (minLength, fenceCharacter) {\n\t\treturn A2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0),\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Whitespace$upToThreeSpaces),\n\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$CodeBlock$fenceOfAtLeast, minLength, fenceCharacter)),\n\t\t\t\t$elm$parser$Parser$Advanced$chompWhile($dillonkearns$elm_markdown$Whitespace$isSpace)),\n\t\t\t$dillonkearns$elm_markdown$Helpers$lineEndOrEnd);\n\t});\nvar $dillonkearns$elm_markdown$Parser$Extra$upTo = F2(\n\tfunction (n, parser) {\n\t\tvar _v0 = A2($elm$core$List$repeat, n, parser);\n\t\tif (!_v0.b) {\n\t\t\treturn $elm$parser$Parser$Advanced$succeed(_Utils_Tuple0);\n\t\t} else {\n\t\t\tvar firstParser = _v0.a;\n\t\t\tvar remainingParsers = _v0.b;\n\t\t\treturn A3(\n\t\t\t\t$elm$core$List$foldl,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (p, parsers) {\n\t\t\t\t\t\treturn $elm$parser$Parser$Advanced$oneOf(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($elm$parser$Parser$Advanced$ignorer, p, parsers),\n\t\t\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0)\n\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t}),\n\t\t\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tfirstParser,\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0)\n\t\t\t\t\t\t])),\n\t\t\t\tremainingParsers);\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$CodeBlock$codeBlockLine = function (indented) {\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$keeper,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Basics$identity),\n\t\t\tA2($dillonkearns$elm_markdown$Parser$Extra$upTo, indented, $dillonkearns$elm_markdown$Whitespace$space)),\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\tA2($elm$parser$Parser$Advanced$ignorer, $elm$parser$Parser$Advanced$getOffset, $dillonkearns$elm_markdown$Helpers$chompUntilLineEndOrEnd),\n\t\t\t$dillonkearns$elm_markdown$Helpers$lineEndOrEnd));\n};\nvar $elm$parser$Parser$Advanced$getSource = $elm$parser$Parser$Advanced$Parser(\n\tfunction (s) {\n\t\treturn A3($elm$parser$Parser$Advanced$Good, false, s.src, s);\n\t});\nvar $dillonkearns$elm_markdown$Markdown$CodeBlock$remainingBlockHelp = function (_v0) {\n\tvar fence = _v0.a;\n\tvar body = _v0.b;\n\treturn $elm$parser$Parser$Advanced$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\t$elm$parser$Parser$Advanced$Done(body)),\n\t\t\t\t$elm$parser$Parser$Advanced$end($elm$parser$Parser$ExpectingEnd)),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$mapChompedString,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (lineEnd, _v1) {\n\t\t\t\t\t\treturn $elm$parser$Parser$Advanced$Loop(\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\tfence,\n\t\t\t\t\t\t\t\t_Utils_ap(body, lineEnd)));\n\t\t\t\t\t}),\n\t\t\t\t$dillonkearns$elm_markdown$Whitespace$lineEnd),\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$Done(body)),\n\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$CodeBlock$closingFence, fence.length, fence.character))),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\t\t\tF3(\n\t\t\t\t\t\t\t\tfunction (start, end, source) {\n\t\t\t\t\t\t\t\t\treturn $elm$parser$Parser$Advanced$Loop(\n\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\tfence,\n\t\t\t\t\t\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t\t\t\t\t\tA3($elm$core$String$slice, start, end, source))));\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$CodeBlock$codeBlockLine(fence.indented)),\n\t\t\t\t\t$elm$parser$Parser$Advanced$getOffset),\n\t\t\t\t$elm$parser$Parser$Advanced$getSource)\n\t\t\t]));\n};\nvar $dillonkearns$elm_markdown$Markdown$CodeBlock$remainingBlock = function (fence) {\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$loop,\n\t\t_Utils_Tuple2(fence, ''),\n\t\t$dillonkearns$elm_markdown$Markdown$CodeBlock$remainingBlockHelp);\n};\nvar $dillonkearns$elm_markdown$Markdown$CodeBlock$parser = A2(\n\t$elm$parser$Parser$Advanced$andThen,\n\tfunction (fence) {\n\t\treturn A2(\n\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Markdown$CodeBlock$CodeBlock),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$CodeBlock$infoString(fence.character),\n\t\t\t\t\t$dillonkearns$elm_markdown$Helpers$lineEndOrEnd)),\n\t\t\t$dillonkearns$elm_markdown$Markdown$CodeBlock$remainingBlock(fence));\n\t},\n\t$dillonkearns$elm_markdown$Markdown$CodeBlock$openingFence);\nvar $elm$core$String$trimRight = _String_trimRight;\nvar $dillonkearns$elm_markdown$Markdown$Heading$dropTrailingHashes = function (headingString) {\n\treturn A2($elm$core$String$endsWith, '#', headingString) ? $dillonkearns$elm_markdown$Markdown$Heading$dropTrailingHashes(\n\t\t$elm$core$String$trimRight(\n\t\t\tA2($elm$core$String$dropRight, 1, headingString))) : headingString;\n};\nvar $dillonkearns$elm_markdown$Parser$Token$hash = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'#',\n\t$elm$parser$Parser$Expecting('a `#`'));\nvar $dillonkearns$elm_markdown$Markdown$Heading$isHash = function (c) {\n\tif ('#' === c.valueOf()) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$parser$Parser$Advanced$spaces = $elm$parser$Parser$Advanced$chompWhile(\n\tfunction (c) {\n\t\treturn _Utils_eq(\n\t\t\tc,\n\t\t\t_Utils_chr(' ')) || (_Utils_eq(\n\t\t\tc,\n\t\t\t_Utils_chr('\\n')) || _Utils_eq(\n\t\t\tc,\n\t\t\t_Utils_chr('\\r')));\n\t});\nvar $elm$core$String$trimLeft = _String_trimLeft;\nvar $dillonkearns$elm_markdown$Markdown$Heading$parser = A2(\n\t$elm$parser$Parser$Advanced$keeper,\n\tA2(\n\t\t$elm$parser$Parser$Advanced$keeper,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Markdown$RawBlock$Heading),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$andThen,\n\t\t\t\t\tfunction (startingSpaces) {\n\t\t\t\t\t\tvar startSpace = $elm$core$String$length(startingSpaces);\n\t\t\t\t\t\treturn (startSpace >= 4) ? $elm$parser$Parser$Advanced$problem(\n\t\t\t\t\t\t\t$elm$parser$Parser$Expecting('heading with < 4 spaces in front')) : $elm$parser$Parser$Advanced$succeed(startSpace);\n\t\t\t\t\t},\n\t\t\t\t\t$elm$parser$Parser$Advanced$getChompedString($elm$parser$Parser$Advanced$spaces))),\n\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$hash)),\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$andThen,\n\t\t\tfunction (additionalHashes) {\n\t\t\t\tvar level = $elm$core$String$length(additionalHashes) + 1;\n\t\t\t\treturn (level >= 7) ? $elm$parser$Parser$Advanced$problem(\n\t\t\t\t\t$elm$parser$Parser$Expecting('heading with < 7 #\\'s')) : $elm$parser$Parser$Advanced$succeed(level);\n\t\t\t},\n\t\t\t$elm$parser$Parser$Advanced$getChompedString(\n\t\t\t\t$elm$parser$Parser$Advanced$chompWhile($dillonkearns$elm_markdown$Markdown$Heading$isHash)))),\n\tA2(\n\t\t$elm$parser$Parser$Advanced$mapChompedString,\n\t\tF2(\n\t\t\tfunction (headingText, _v0) {\n\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$RawBlock$UnparsedInlines(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Heading$dropTrailingHashes(\n\t\t\t\t\t\t$elm$core$String$trimLeft(headingText)));\n\t\t\t}),\n\t\t$dillonkearns$elm_markdown$Helpers$chompUntilLineEndOrEnd));\nvar $elm$parser$Parser$Advanced$findSubString = _Parser_findSubString;\nvar $elm$parser$Parser$Advanced$fromInfo = F4(\n\tfunction (row, col, x, context) {\n\t\treturn A2(\n\t\t\t$elm$parser$Parser$Advanced$AddRight,\n\t\t\t$elm$parser$Parser$Advanced$Empty,\n\t\t\tA4($elm$parser$Parser$Advanced$DeadEnd, row, col, x, context));\n\t});\nvar $elm$parser$Parser$Advanced$chompUntil = function (_v0) {\n\tvar str = _v0.a;\n\tvar expecting = _v0.b;\n\treturn $elm$parser$Parser$Advanced$Parser(\n\t\tfunction (s) {\n\t\t\tvar _v1 = A5($elm$parser$Parser$Advanced$findSubString, str, s.offset, s.row, s.col, s.src);\n\t\t\tvar newOffset = _v1.a;\n\t\t\tvar newRow = _v1.b;\n\t\t\tvar newCol = _v1.c;\n\t\t\treturn _Utils_eq(newOffset, -1) ? A2(\n\t\t\t\t$elm$parser$Parser$Advanced$Bad,\n\t\t\t\tfalse,\n\t\t\t\tA4($elm$parser$Parser$Advanced$fromInfo, newRow, newCol, expecting, s.context)) : A3(\n\t\t\t\t$elm$parser$Parser$Advanced$Good,\n\t\t\t\t_Utils_cmp(s.offset, newOffset) < 0,\n\t\t\t\t_Utils_Tuple0,\n\t\t\t\t{col: newCol, context: s.context, indent: s.indent, offset: newOffset, row: newRow, src: s.src});\n\t\t});\n};\nvar $dillonkearns$elm_markdown$Parser$Token$greaterThan = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'>',\n\t$elm$parser$Parser$Expecting('a `>`'));\nvar $elm$parser$Parser$Advanced$Located = F3(\n\tfunction (row, col, context) {\n\t\treturn {col: col, context: context, row: row};\n\t});\nvar $elm$parser$Parser$Advanced$changeContext = F2(\n\tfunction (newContext, s) {\n\t\treturn {col: s.col, context: newContext, indent: s.indent, offset: s.offset, row: s.row, src: s.src};\n\t});\nvar $elm$parser$Parser$Advanced$inContext = F2(\n\tfunction (context, _v0) {\n\t\tvar parse = _v0.a;\n\t\treturn $elm$parser$Parser$Advanced$Parser(\n\t\t\tfunction (s0) {\n\t\t\t\tvar _v1 = parse(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$changeContext,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\tA3($elm$parser$Parser$Advanced$Located, s0.row, s0.col, context),\n\t\t\t\t\t\t\ts0.context),\n\t\t\t\t\t\ts0));\n\t\t\t\tif (_v1.$ === 'Good') {\n\t\t\t\t\tvar p = _v1.a;\n\t\t\t\t\tvar a = _v1.b;\n\t\t\t\t\tvar s1 = _v1.c;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$Good,\n\t\t\t\t\t\tp,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2($elm$parser$Parser$Advanced$changeContext, s0.context, s1));\n\t\t\t\t} else {\n\t\t\t\t\tvar step = _v1;\n\t\t\t\t\treturn step;\n\t\t\t\t}\n\t\t\t});\n\t});\nvar $dillonkearns$elm_markdown$Whitespace$isWhitespace = function (_char) {\n\tswitch (_char.valueOf()) {\n\t\tcase ' ':\n\t\t\treturn true;\n\t\tcase '\\n':\n\t\t\treturn true;\n\t\tcase '\\t':\n\t\t\treturn true;\n\t\tcase '\\u000B':\n\t\t\treturn true;\n\t\tcase '\\u000C':\n\t\t\treturn true;\n\t\tcase '\\r':\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\nvar $dillonkearns$elm_markdown$Parser$Token$lessThan = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'<',\n\t$elm$parser$Parser$Expecting('a `<`'));\nvar $dillonkearns$elm_markdown$Markdown$LinkReferenceDefinition$destinationParser = A2(\n\t$elm$parser$Parser$Advanced$inContext,\n\t'link destination',\n\t$elm$parser$Parser$Advanced$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed($elm$url$Url$percentEncode),\n\t\t\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$lessThan)),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t$elm$parser$Parser$Advanced$getChompedString(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$chompUntil($dillonkearns$elm_markdown$Parser$Token$greaterThan)),\n\t\t\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$greaterThan))),\n\t\t\t\t$elm$parser$Parser$Advanced$getChompedString(\n\t\t\t\t$dillonkearns$elm_markdown$Parser$Extra$chompOneOrMore(\n\t\t\t\t\tA2($elm$core$Basics$composeL, $elm$core$Basics$not, $dillonkearns$elm_markdown$Whitespace$isWhitespace)))\n\t\t\t])));\nvar $dillonkearns$elm_markdown$Parser$Token$closingSquareBracket = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t']',\n\t$elm$parser$Parser$Expecting('a `]`'));\nvar $dillonkearns$elm_markdown$Parser$Token$openingSquareBracket = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'[',\n\t$elm$parser$Parser$Expecting('a `[`'));\nvar $dillonkearns$elm_markdown$Markdown$LinkReferenceDefinition$labelParser = A2(\n\t$elm$parser$Parser$Advanced$keeper,\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Markdown$Helpers$prepareRefLabel),\n\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$openingSquareBracket)),\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$getChompedString(\n\t\t\t$elm$parser$Parser$Advanced$chompUntil($dillonkearns$elm_markdown$Parser$Token$closingSquareBracket)),\n\t\t$elm$parser$Parser$Advanced$symbol(\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t']:',\n\t\t\t\t$elm$parser$Parser$Expecting(']:')))));\nvar $dillonkearns$elm_markdown$Parser$Token$doubleQuote = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'\\\"',\n\t$elm$parser$Parser$Expecting('a double quote'));\nvar $dillonkearns$elm_markdown$Markdown$LinkReferenceDefinition$hasNoBlankLine = function (str) {\n\treturn A2($elm$core$String$contains, '\\n\\n', str) ? $elm$parser$Parser$Advanced$problem(\n\t\t$elm$parser$Parser$Expecting('no blank line')) : $elm$parser$Parser$Advanced$succeed(str);\n};\nvar $dillonkearns$elm_markdown$Markdown$LinkReferenceDefinition$onlyWhitespaceTillNewline = A2(\n\t$elm$parser$Parser$Advanced$ignorer,\n\t$elm$parser$Parser$Advanced$chompWhile(\n\t\tfunction (c) {\n\t\t\treturn (!$dillonkearns$elm_markdown$Whitespace$isLineEnd(c)) && $dillonkearns$elm_markdown$Whitespace$isWhitespace(c);\n\t\t}),\n\t$dillonkearns$elm_markdown$Helpers$lineEndOrEnd);\nvar $dillonkearns$elm_markdown$Whitespace$requiredWhitespace = A2(\n\t$elm$parser$Parser$Advanced$ignorer,\n\tA2(\n\t\t$elm$parser$Parser$Advanced$chompIf,\n\t\t$dillonkearns$elm_markdown$Whitespace$isWhitespace,\n\t\t$elm$parser$Parser$Expecting('Required whitespace')),\n\t$elm$parser$Parser$Advanced$chompWhile($dillonkearns$elm_markdown$Whitespace$isWhitespace));\nvar $dillonkearns$elm_markdown$Parser$Token$singleQuote = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'\\'',\n\t$elm$parser$Parser$Expecting('a single quote'));\nvar $dillonkearns$elm_markdown$Markdown$LinkReferenceDefinition$titleParser = function () {\n\tvar inSingleQuotes = A2(\n\t\t$elm$parser$Parser$Advanced$keeper,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Maybe$Just),\n\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$singleQuote)),\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$andThen,\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$LinkReferenceDefinition$hasNoBlankLine,\n\t\t\t\t\t$elm$parser$Parser$Advanced$getChompedString(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$chompUntil($dillonkearns$elm_markdown$Parser$Token$singleQuote))),\n\t\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$singleQuote)),\n\t\t\t$dillonkearns$elm_markdown$Markdown$LinkReferenceDefinition$onlyWhitespaceTillNewline));\n\tvar inDoubleQuotes = A2(\n\t\t$elm$parser$Parser$Advanced$keeper,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Maybe$Just),\n\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$doubleQuote)),\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$andThen,\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$LinkReferenceDefinition$hasNoBlankLine,\n\t\t\t\t\t$elm$parser$Parser$Advanced$getChompedString(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$chompUntil($dillonkearns$elm_markdown$Parser$Token$doubleQuote))),\n\t\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$doubleQuote)),\n\t\t\t$dillonkearns$elm_markdown$Markdown$LinkReferenceDefinition$onlyWhitespaceTillNewline));\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$inContext,\n\t\t'title',\n\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Basics$identity),\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Whitespace$requiredWhitespace),\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tinDoubleQuotes,\n\t\t\t\t\t\t\t\t\tinSingleQuotes,\n\t\t\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Maybe$Nothing)\n\t\t\t\t\t\t\t\t])))),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Maybe$Nothing),\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$LinkReferenceDefinition$onlyWhitespaceTillNewline)\n\t\t\t\t])));\n}();\nvar $dillonkearns$elm_markdown$Markdown$LinkReferenceDefinition$parser = A2(\n\t$elm$parser$Parser$Advanced$inContext,\n\t'link reference definition',\n\tA2(\n\t\t$elm$parser$Parser$Advanced$keeper,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\t\tF3(\n\t\t\t\t\t\t\tfunction (label, destination, title) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\t\t\t{destination: destination, title: title});\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t$dillonkearns$elm_markdown$Whitespace$upToThreeSpaces),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$LinkReferenceDefinition$labelParser,\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$chompWhile($dillonkearns$elm_markdown$Whitespace$isSpaceOrTab)),\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Whitespace$lineEnd,\n\t\t\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0)\n\t\t\t\t\t\t\t\t]))),\n\t\t\t\t\t$elm$parser$Parser$Advanced$chompWhile($dillonkearns$elm_markdown$Whitespace$isSpaceOrTab))),\n\t\t\t$dillonkearns$elm_markdown$Markdown$LinkReferenceDefinition$destinationParser),\n\t\t$dillonkearns$elm_markdown$Markdown$LinkReferenceDefinition$titleParser));\nvar $dillonkearns$elm_markdown$ThematicBreak$ThematicBreak = {$: 'ThematicBreak'};\nvar $dillonkearns$elm_markdown$ThematicBreak$whitespace = $elm$parser$Parser$Advanced$chompWhile($dillonkearns$elm_markdown$Whitespace$isSpaceOrTab);\nvar $dillonkearns$elm_markdown$ThematicBreak$withChar = function (tchar) {\n\tvar token = $dillonkearns$elm_markdown$Parser$Token$parseString(\n\t\t$elm$core$String$fromChar(tchar));\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$ThematicBreak$ThematicBreak),\n\t\t\t\t\t\t\t\ttoken),\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$ThematicBreak$whitespace),\n\t\t\t\t\t\ttoken),\n\t\t\t\t\t$dillonkearns$elm_markdown$ThematicBreak$whitespace),\n\t\t\t\ttoken),\n\t\t\t$elm$parser$Parser$Advanced$chompWhile(\n\t\t\t\tfunction (c) {\n\t\t\t\t\treturn _Utils_eq(c, tchar) || $dillonkearns$elm_markdown$Whitespace$isSpaceOrTab(c);\n\t\t\t\t})),\n\t\t$dillonkearns$elm_markdown$Helpers$lineEndOrEnd);\n};\nvar $dillonkearns$elm_markdown$ThematicBreak$parseThematicBreak = $elm$parser$Parser$Advanced$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\t$dillonkearns$elm_markdown$ThematicBreak$withChar(\n\t\t\t_Utils_chr('-')),\n\t\t\t$dillonkearns$elm_markdown$ThematicBreak$withChar(\n\t\t\t_Utils_chr('*')),\n\t\t\t$dillonkearns$elm_markdown$ThematicBreak$withChar(\n\t\t\t_Utils_chr('_'))\n\t\t]));\nvar $dillonkearns$elm_markdown$ThematicBreak$parser = $elm$parser$Parser$Advanced$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Basics$identity),\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Whitespace$space),\n\t\t\t\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Whitespace$space,\n\t\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0)\n\t\t\t\t\t\t\t]))),\n\t\t\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Whitespace$space,\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0)\n\t\t\t\t\t\t]))),\n\t\t\t$dillonkearns$elm_markdown$ThematicBreak$parseThematicBreak),\n\t\t\t$dillonkearns$elm_markdown$ThematicBreak$parseThematicBreak\n\t\t]));\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$LevelOne = {$: 'LevelOne'};\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$LevelTwo = {$: 'LevelTwo'};\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$SetextLine = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'SetextLine', a: a, b: b};\n\t});\nvar $dillonkearns$elm_markdown$Parser$Token$equals = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'=',\n\t$elm$parser$Parser$Expecting('a `=`'));\nvar $dillonkearns$elm_markdown$Parser$Token$minus = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'-',\n\t$elm$parser$Parser$Expecting('a `-`'));\nvar $dillonkearns$elm_markdown$Markdown$Parser$setextLineParser = function () {\n\tvar setextLevel = F3(\n\t\tfunction (level, levelToken, levelChar) {\n\t\t\treturn A2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(level),\n\t\t\t\t\t$elm$parser$Parser$Advanced$token(levelToken)),\n\t\t\t\t$elm$parser$Parser$Advanced$chompWhile(\n\t\t\t\t\t$elm$core$Basics$eq(levelChar)));\n\t\t});\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$mapChompedString,\n\t\tF2(\n\t\t\tfunction (raw, level) {\n\t\t\t\treturn A2($dillonkearns$elm_markdown$Markdown$RawBlock$SetextLine, level, raw);\n\t\t\t}),\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Basics$identity),\n\t\t\t\t$dillonkearns$elm_markdown$Whitespace$upToThreeSpaces),\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t$elm$parser$Parser$Advanced$oneOf(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\tsetextLevel,\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$LevelOne,\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Parser$Token$equals,\n\t\t\t\t\t\t\t\t_Utils_chr('=')),\n\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\tsetextLevel,\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$LevelTwo,\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Parser$Token$minus,\n\t\t\t\t\t\t\t\t_Utils_chr('-'))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t$elm$parser$Parser$Advanced$chompWhile($dillonkearns$elm_markdown$Whitespace$isSpaceOrTab)),\n\t\t\t\t$dillonkearns$elm_markdown$Helpers$lineEndOrEnd)));\n}();\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$TableDelimiter = function (a) {\n\treturn {$: 'TableDelimiter', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$TableParser$chompSinglelineWhitespace = $elm$parser$Parser$Advanced$chompWhile($dillonkearns$elm_markdown$Whitespace$isSpaceOrTab);\nvar $dillonkearns$elm_markdown$Parser$Extra$maybeChomp = function (condition) {\n\treturn $elm$parser$Parser$Advanced$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$chompIf,\n\t\t\t\tcondition,\n\t\t\t\t$elm$parser$Parser$Problem('Character not found')),\n\t\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0)\n\t\t\t]));\n};\nvar $dillonkearns$elm_markdown$Markdown$TableParser$requirePipeIfNotFirst = function (columns) {\n\treturn $elm$core$List$isEmpty(columns) ? $elm$parser$Parser$Advanced$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$dillonkearns$elm_markdown$Parser$Token$parseString('|'),\n\t\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0)\n\t\t\t])) : $dillonkearns$elm_markdown$Parser$Token$parseString('|');\n};\nvar $dillonkearns$elm_markdown$Markdown$TableParser$delimiterRowHelp = function (revDelimiterColumns) {\n\treturn $elm$parser$Parser$Advanced$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\t\tfunction (_v0) {\n\t\t\t\t\t\treturn $elm$parser$Parser$Advanced$Done(revDelimiterColumns);\n\t\t\t\t\t},\n\t\t\t\t\t$dillonkearns$elm_markdown$Parser$Token$parseString('|\\n'))),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\treturn $elm$parser$Parser$Advanced$Done(revDelimiterColumns);\n\t\t\t\t},\n\t\t\t\t$dillonkearns$elm_markdown$Parser$Token$parseString('\\n')),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\tfunction (_v2) {\n\t\t\t\t\treturn $elm$parser$Parser$Advanced$Done(revDelimiterColumns);\n\t\t\t\t},\n\t\t\t\t$elm$parser$Parser$Advanced$end(\n\t\t\t\t\t$elm$parser$Parser$Expecting('end'))),\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$Done(revDelimiterColumns)),\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Parser$Token$parseString('|')),\n\t\t\t\t\t$elm$parser$Parser$Advanced$end(\n\t\t\t\t\t\t$elm$parser$Parser$Expecting('end')))),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\t\t\tfunction (column) {\n\t\t\t\t\t\t\t\treturn $elm$parser$Parser$Advanced$Loop(\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, column, revDelimiterColumns));\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$TableParser$requirePipeIfNotFirst(revDelimiterColumns)),\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$TableParser$chompSinglelineWhitespace),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t$elm$parser$Parser$Advanced$getChompedString(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0),\n\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Parser$Extra$maybeChomp(\n\t\t\t\t\t\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\t\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_chr(':'));\n\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Parser$Extra$chompOneOrMore(\n\t\t\t\t\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\t\t\t_Utils_chr('-'));\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Parser$Extra$maybeChomp(\n\t\t\t\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\t\t_Utils_chr(':'));\n\t\t\t\t\t\t\t\t}))),\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$TableParser$chompSinglelineWhitespace))\n\t\t\t]));\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$AlignCenter = {$: 'AlignCenter'};\nvar $dillonkearns$elm_markdown$Markdown$Block$AlignLeft = {$: 'AlignLeft'};\nvar $dillonkearns$elm_markdown$Markdown$Block$AlignRight = {$: 'AlignRight'};\nvar $dillonkearns$elm_markdown$Markdown$TableParser$delimiterToAlignment = function (cell) {\n\tvar _v0 = _Utils_Tuple2(\n\t\tA2($elm$core$String$startsWith, ':', cell),\n\t\tA2($elm$core$String$endsWith, ':', cell));\n\tif (_v0.a) {\n\t\tif (_v0.b) {\n\t\t\treturn $elm$core$Maybe$Just($dillonkearns$elm_markdown$Markdown$Block$AlignCenter);\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Just($dillonkearns$elm_markdown$Markdown$Block$AlignLeft);\n\t\t}\n\t} else {\n\t\tif (_v0.b) {\n\t\t\treturn $elm$core$Maybe$Just($dillonkearns$elm_markdown$Markdown$Block$AlignRight);\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$TableParser$delimiterRowParser = A2(\n\t$elm$parser$Parser$Advanced$andThen,\n\tfunction (delimiterRow) {\n\t\tvar trimmed = delimiterRow.a.trimmed;\n\t\tvar headers = delimiterRow.b;\n\t\treturn $elm$core$List$isEmpty(headers) ? $elm$parser$Parser$Advanced$problem(\n\t\t\t$elm$parser$Parser$Expecting('Must have at least one column in delimiter row.')) : ((($elm$core$List$length(headers) === 1) && (!(A2($elm$core$String$startsWith, '|', trimmed) && A2($elm$core$String$endsWith, '|', trimmed)))) ? $elm$parser$Parser$Advanced$problem(\n\t\t\t$elm$parser$Parser$Problem('Tables with a single column must have pipes at the start and end of the delimiter row to avoid ambiguity.')) : $elm$parser$Parser$Advanced$succeed(delimiterRow));\n\t},\n\tA2(\n\t\t$elm$parser$Parser$Advanced$mapChompedString,\n\t\tF2(\n\t\t\tfunction (delimiterText, revDelimiterColumns) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Table$TableDelimiterRow,\n\t\t\t\t\t{\n\t\t\t\t\t\traw: delimiterText,\n\t\t\t\t\t\ttrimmed: $elm$core$String$trim(delimiterText)\n\t\t\t\t\t},\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$TableParser$delimiterToAlignment,\n\t\t\t\t\t\t$elm$core$List$reverse(revDelimiterColumns)));\n\t\t\t}),\n\t\tA2($elm$parser$Parser$Advanced$loop, _List_Nil, $dillonkearns$elm_markdown$Markdown$TableParser$delimiterRowHelp)));\nvar $dillonkearns$elm_markdown$Markdown$Parser$tableDelimiterInOpenParagraph = A2($elm$parser$Parser$Advanced$map, $dillonkearns$elm_markdown$Markdown$RawBlock$TableDelimiter, $dillonkearns$elm_markdown$Markdown$TableParser$delimiterRowParser);\nvar $dillonkearns$elm_markdown$Markdown$TableParser$standardizeRowLength = F2(\n\tfunction (expectedLength, row) {\n\t\tvar rowLength = $elm$core$List$length(row);\n\t\tvar _v0 = A2($elm$core$Basics$compare, expectedLength, rowLength);\n\t\tswitch (_v0.$) {\n\t\t\tcase 'LT':\n\t\t\t\treturn A2($elm$core$List$take, expectedLength, row);\n\t\t\tcase 'EQ':\n\t\t\t\treturn row;\n\t\t\tdefault:\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\trow,\n\t\t\t\t\tA2($elm$core$List$repeat, expectedLength - rowLength, ''));\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$TableParser$bodyRowParser = function (expectedRowLength) {\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$andThen,\n\t\tfunction (row) {\n\t\t\treturn ($elm$core$List$isEmpty(row) || A2($elm$core$List$all, $elm$core$String$isEmpty, row)) ? $elm$parser$Parser$Advanced$problem(\n\t\t\t\t$elm$parser$Parser$Problem('A line must have at least one column')) : $elm$parser$Parser$Advanced$succeed(\n\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$TableParser$standardizeRowLength, expectedRowLength, row));\n\t\t},\n\t\t$dillonkearns$elm_markdown$Markdown$TableParser$rowParser);\n};\nvar $dillonkearns$elm_markdown$Markdown$Parser$tableRowIfTableStarted = function (_v0) {\n\tvar headers = _v0.a;\n\tvar body = _v0.b;\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$map,\n\t\tfunction (row) {\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$RawBlock$Table(\n\t\t\t\tA2(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Table$Table,\n\t\t\t\t\theaders,\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[row]))));\n\t\t},\n\t\t$dillonkearns$elm_markdown$Markdown$TableParser$bodyRowParser(\n\t\t\t$elm$core$List$length(headers)));\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$H1 = {$: 'H1'};\nvar $dillonkearns$elm_markdown$Markdown$Block$H2 = {$: 'H2'};\nvar $dillonkearns$elm_markdown$Markdown$Block$H3 = {$: 'H3'};\nvar $dillonkearns$elm_markdown$Markdown$Block$H4 = {$: 'H4'};\nvar $dillonkearns$elm_markdown$Markdown$Block$H5 = {$: 'H5'};\nvar $dillonkearns$elm_markdown$Markdown$Block$H6 = {$: 'H6'};\nvar $dillonkearns$elm_markdown$Markdown$Parser$toHeading = function (level) {\n\tswitch (level) {\n\t\tcase 1:\n\t\t\treturn $elm$core$Result$Ok($dillonkearns$elm_markdown$Markdown$Block$H1);\n\t\tcase 2:\n\t\t\treturn $elm$core$Result$Ok($dillonkearns$elm_markdown$Markdown$Block$H2);\n\t\tcase 3:\n\t\t\treturn $elm$core$Result$Ok($dillonkearns$elm_markdown$Markdown$Block$H3);\n\t\tcase 4:\n\t\t\treturn $elm$core$Result$Ok($dillonkearns$elm_markdown$Markdown$Block$H4);\n\t\tcase 5:\n\t\t\treturn $elm$core$Result$Ok($dillonkearns$elm_markdown$Markdown$Block$H5);\n\t\tcase 6:\n\t\t\treturn $elm$core$Result$Ok($dillonkearns$elm_markdown$Markdown$Block$H6);\n\t\tdefault:\n\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t$elm$parser$Parser$Expecting(\n\t\t\t\t\t'A heading with 1 to 6 #\\'s, but found ' + $elm$core$String$fromInt(level)));\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$RawBlock$UnorderedListBlock = function (a) {\n\treturn {$: 'UnorderedListBlock', a: a};\n};\nvar $dillonkearns$elm_markdown$Parser$Token$asterisk = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'*',\n\t$elm$parser$Parser$Expecting('a `*`'));\nvar $dillonkearns$elm_markdown$Parser$Token$plus = A2(\n\t$elm$parser$Parser$Advanced$Token,\n\t'+',\n\t$elm$parser$Parser$Expecting('a `+`'));\nvar $dillonkearns$elm_markdown$Markdown$UnorderedList$listMarkerParser = $elm$parser$Parser$Advanced$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Parser$Token$minus),\n\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$minus)),\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Parser$Token$plus),\n\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$plus)),\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Parser$Token$asterisk),\n\t\t\t$elm$parser$Parser$Advanced$symbol($dillonkearns$elm_markdown$Parser$Token$asterisk))\n\t\t]));\nvar $dillonkearns$elm_markdown$Markdown$ListItem$PlainItem = function (a) {\n\treturn {$: 'PlainItem', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$ListItem$TaskItem = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'TaskItem', a: a, b: b};\n\t});\nvar $dillonkearns$elm_markdown$Markdown$ListItem$Complete = {$: 'Complete'};\nvar $dillonkearns$elm_markdown$Markdown$ListItem$Incomplete = {$: 'Incomplete'};\nvar $dillonkearns$elm_markdown$Markdown$ListItem$taskItemParser = $elm$parser$Parser$Advanced$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Markdown$ListItem$Complete),\n\t\t\t$elm$parser$Parser$Advanced$symbol(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t\t'[x] ',\n\t\t\t\t\t$elm$parser$Parser$ExpectingSymbol('[x] ')))),\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Markdown$ListItem$Complete),\n\t\t\t$elm$parser$Parser$Advanced$symbol(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t\t'[X] ',\n\t\t\t\t\t$elm$parser$Parser$ExpectingSymbol('[X] ')))),\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Markdown$ListItem$Incomplete),\n\t\t\t$elm$parser$Parser$Advanced$symbol(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$Token,\n\t\t\t\t\t'[ ] ',\n\t\t\t\t\t$elm$parser$Parser$ExpectingSymbol('[ ] '))))\n\t\t]));\nvar $dillonkearns$elm_markdown$Markdown$ListItem$parser = A2(\n\t$elm$parser$Parser$Advanced$keeper,\n\t$elm$parser$Parser$Advanced$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Markdown$ListItem$TaskItem),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$ListItem$taskItemParser,\n\t\t\t\t\t$elm$parser$Parser$Advanced$chompWhile($dillonkearns$elm_markdown$Whitespace$isSpaceOrTab))),\n\t\t\t\t$elm$parser$Parser$Advanced$succeed($dillonkearns$elm_markdown$Markdown$ListItem$PlainItem)\n\t\t\t])),\n\tA2(\n\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t$elm$parser$Parser$Advanced$getChompedString($dillonkearns$elm_markdown$Helpers$chompUntilLineEndOrEnd),\n\t\t$dillonkearns$elm_markdown$Helpers$lineEndOrEnd));\nvar $dillonkearns$elm_markdown$Markdown$UnorderedList$itemBody = $elm$parser$Parser$Advanced$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Basics$identity),\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t\t\t$dillonkearns$elm_markdown$Parser$Extra$chompOneOrMore($dillonkearns$elm_markdown$Whitespace$isSpaceOrTab))),\n\t\t\t$dillonkearns$elm_markdown$Markdown$ListItem$parser),\n\t\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$ListItem$PlainItem('')),\n\t\t\t$dillonkearns$elm_markdown$Whitespace$lineEnd)\n\t\t]));\nvar $dillonkearns$elm_markdown$Markdown$UnorderedList$singleItemParser = function (listMarker) {\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$keeper,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$elm$parser$Parser$Advanced$succeed($elm$core$Basics$identity),\n\t\t\t$elm$parser$Parser$Advanced$backtrackable(\n\t\t\t\t$elm$parser$Parser$Advanced$symbol(listMarker))),\n\t\t$dillonkearns$elm_markdown$Markdown$UnorderedList$itemBody);\n};\nvar $dillonkearns$elm_markdown$Markdown$UnorderedList$statementsHelp = F3(\n\tfunction (itemParser, firstItem, revStmts) {\n\t\treturn $elm$parser$Parser$Advanced$oneOf(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\t\tfunction (stmt) {\n\t\t\t\t\t\treturn $elm$parser$Parser$Advanced$Loop(\n\t\t\t\t\t\t\tA2($elm$core$List$cons, stmt, revStmts));\n\t\t\t\t\t},\n\t\t\t\t\titemParser),\n\t\t\t\t\t$elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\t$elm$parser$Parser$Advanced$Done(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\tfirstItem,\n\t\t\t\t\t\t\t$elm$core$List$reverse(revStmts))))\n\t\t\t\t]));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$UnorderedList$parser = function () {\n\tvar parseSubsequentItems = F2(\n\t\tfunction (listMarker, firstItem) {\n\t\t\treturn A2(\n\t\t\t\t$elm$parser$Parser$Advanced$loop,\n\t\t\t\t_List_Nil,\n\t\t\t\tA2(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$UnorderedList$statementsHelp,\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$UnorderedList$singleItemParser(listMarker),\n\t\t\t\t\tfirstItem));\n\t\t});\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$andThen,\n\t\t$elm$core$Basics$identity,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$keeper,\n\t\t\t\t$elm$parser$Parser$Advanced$succeed(parseSubsequentItems),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t\t\t$elm$parser$Parser$Advanced$backtrackable($dillonkearns$elm_markdown$Markdown$UnorderedList$listMarkerParser),\n\t\t\t\t\t$dillonkearns$elm_markdown$Parser$Extra$chompOneOrMore($dillonkearns$elm_markdown$Whitespace$isSpaceOrTab))),\n\t\t\t$dillonkearns$elm_markdown$Markdown$ListItem$parser));\n}();\nvar $dillonkearns$elm_markdown$Markdown$Parser$unorderedListBlock = function () {\n\tvar parseListItem = function (unparsedListItem) {\n\t\tif (unparsedListItem.$ === 'TaskItem') {\n\t\t\tvar completion = unparsedListItem.a;\n\t\t\tvar body = unparsedListItem.b;\n\t\t\treturn {\n\t\t\t\tbody: $dillonkearns$elm_markdown$Markdown$RawBlock$UnparsedInlines(body),\n\t\t\t\ttask: $elm$core$Maybe$Just(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tif (completion.$ === 'Complete') {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}())\n\t\t\t};\n\t\t} else {\n\t\t\tvar body = unparsedListItem.a;\n\t\t\treturn {\n\t\t\t\tbody: $dillonkearns$elm_markdown$Markdown$RawBlock$UnparsedInlines(body),\n\t\t\t\ttask: $elm$core$Maybe$Nothing\n\t\t\t};\n\t\t}\n\t};\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$map,\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$elm$core$List$map(parseListItem),\n\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$UnorderedListBlock),\n\t\t$dillonkearns$elm_markdown$Markdown$UnorderedList$parser);\n}();\nvar $dillonkearns$elm_markdown$Markdown$Parser$childToBlocks = F2(\n\tfunction (node, blocks) {\n\t\tswitch (node.$) {\n\t\t\tcase 'Element':\n\t\t\t\tvar tag = node.a;\n\t\t\t\tvar attributes = node.b;\n\t\t\t\tvar children = node.c;\n\t\t\t\tvar _v28 = $dillonkearns$elm_markdown$Markdown$Parser$nodesToBlocks(children);\n\t\t\t\tif (_v28.$ === 'Ok') {\n\t\t\t\t\tvar childrenAsBlocks = _v28.a;\n\t\t\t\t\tvar block = $dillonkearns$elm_markdown$Markdown$Block$HtmlBlock(\n\t\t\t\t\t\tA3($dillonkearns$elm_markdown$Markdown$Block$HtmlElement, tag, attributes, childrenAsBlocks));\n\t\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\t\tA2($elm$core$List$cons, block, blocks));\n\t\t\t\t} else {\n\t\t\t\t\tvar err = _v28.a;\n\t\t\t\t\treturn $elm$core$Result$Err(err);\n\t\t\t\t}\n\t\t\tcase 'Text':\n\t\t\t\tvar innerText = node.a;\n\t\t\t\tvar _v29 = $dillonkearns$elm_markdown$Markdown$Parser$parse(innerText);\n\t\t\t\tif (_v29.$ === 'Ok') {\n\t\t\t\t\tvar value = _v29.a;\n\t\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t$elm$core$List$reverse(value),\n\t\t\t\t\t\t\tblocks));\n\t\t\t\t} else {\n\t\t\t\t\tvar error = _v29.a;\n\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t$elm$parser$Parser$Expecting(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n',\n\t\t\t\t\t\t\t\tA2($elm$core$List$map, $dillonkearns$elm_markdown$Markdown$Parser$deadEndToString, error))));\n\t\t\t\t}\n\t\t\tcase 'Comment':\n\t\t\t\tvar string = node.a;\n\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$HtmlBlock(\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$HtmlComment(string)),\n\t\t\t\t\t\tblocks));\n\t\t\tcase 'Cdata':\n\t\t\t\tvar string = node.a;\n\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$HtmlBlock(\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$Cdata(string)),\n\t\t\t\t\t\tblocks));\n\t\t\tcase 'ProcessingInstruction':\n\t\t\t\tvar string = node.a;\n\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$HtmlBlock(\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$ProcessingInstruction(string)),\n\t\t\t\t\t\tblocks));\n\t\t\tdefault:\n\t\t\t\tvar declarationType = node.a;\n\t\t\t\tvar content = node.b;\n\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$HtmlBlock(\n\t\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Block$HtmlDeclaration, declarationType, content)),\n\t\t\t\t\t\tblocks));\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Parser$inlineParseHelper = F2(\n\tfunction (referencesDict, _v23) {\n\t\tvar unparsedInlines = _v23.a;\n\t\tvar mappedReferencesDict = $elm$core$Dict$fromList(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\t$elm$core$Tuple$mapSecond(\n\t\t\t\t\tfunction (_v24) {\n\t\t\t\t\t\tvar destination = _v24.destination;\n\t\t\t\t\t\tvar title = _v24.title;\n\t\t\t\t\t\treturn _Utils_Tuple2(destination, title);\n\t\t\t\t\t}),\n\t\t\t\treferencesDict));\n\t\treturn A2(\n\t\t\t$elm$core$List$map,\n\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$mapInline,\n\t\t\tA2($dillonkearns$elm_markdown$Markdown$InlineParser$parse, mappedReferencesDict, unparsedInlines));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Parser$mapInline = function (inline) {\n\tswitch (inline.$) {\n\t\tcase 'Text':\n\t\t\tvar string = inline.a;\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$Text(string);\n\t\tcase 'HardLineBreak':\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$HardLineBreak;\n\t\tcase 'CodeInline':\n\t\t\tvar string = inline.a;\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$CodeSpan(string);\n\t\tcase 'Link':\n\t\t\tvar string = inline.a;\n\t\t\tvar maybeString = inline.b;\n\t\t\tvar inlines = inline.c;\n\t\t\treturn A3(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$Link,\n\t\t\t\tstring,\n\t\t\t\tmaybeString,\n\t\t\t\tA2($elm$core$List$map, $dillonkearns$elm_markdown$Markdown$Parser$mapInline, inlines));\n\t\tcase 'Image':\n\t\t\tvar string = inline.a;\n\t\t\tvar maybeString = inline.b;\n\t\t\tvar inlines = inline.c;\n\t\t\treturn A3(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$Image,\n\t\t\t\tstring,\n\t\t\t\tmaybeString,\n\t\t\t\tA2($elm$core$List$map, $dillonkearns$elm_markdown$Markdown$Parser$mapInline, inlines));\n\t\tcase 'HtmlInline':\n\t\t\tvar node = inline.a;\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$HtmlInline(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$nodeToRawBlock(node));\n\t\tcase 'Emphasis':\n\t\t\tvar level = inline.a;\n\t\t\tvar inlines = inline.b;\n\t\t\tswitch (level) {\n\t\t\t\tcase 1:\n\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$Emphasis(\n\t\t\t\t\t\tA2($elm$core$List$map, $dillonkearns$elm_markdown$Markdown$Parser$mapInline, inlines));\n\t\t\t\tcase 2:\n\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$Strong(\n\t\t\t\t\t\tA2($elm$core$List$map, $dillonkearns$elm_markdown$Markdown$Parser$mapInline, inlines));\n\t\t\t\tdefault:\n\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$Strong(\n\t\t\t\t\t\tA2($elm$core$List$map, $dillonkearns$elm_markdown$Markdown$Parser$mapInline, inlines));\n\t\t\t}\n\t\tdefault:\n\t\t\tvar inlines = inline.a;\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$Strikethrough(\n\t\t\t\tA2($elm$core$List$map, $dillonkearns$elm_markdown$Markdown$Parser$mapInline, inlines));\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$Parser$nodeToRawBlock = function (node) {\n\tswitch (node.$) {\n\t\tcase 'Text':\n\t\t\tvar innerText = node.a;\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$HtmlComment('TODO this never happens, but use types to drop this case.');\n\t\tcase 'Element':\n\t\t\tvar tag = node.a;\n\t\t\tvar attributes = node.b;\n\t\t\tvar children = node.c;\n\t\t\tvar parseChild = function (child) {\n\t\t\t\tif (child.$ === 'Text') {\n\t\t\t\t\tvar text = child.a;\n\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$textNodeToBlocks(text);\n\t\t\t\t} else {\n\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$HtmlBlock(\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$nodeToRawBlock(child))\n\t\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn A3(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$HtmlElement,\n\t\t\t\ttag,\n\t\t\t\tattributes,\n\t\t\t\tA2($elm$core$List$concatMap, parseChild, children));\n\t\tcase 'Comment':\n\t\t\tvar string = node.a;\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$HtmlComment(string);\n\t\tcase 'Cdata':\n\t\t\tvar string = node.a;\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$Cdata(string);\n\t\tcase 'ProcessingInstruction':\n\t\t\tvar string = node.a;\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$ProcessingInstruction(string);\n\t\tdefault:\n\t\t\tvar declarationType = node.a;\n\t\t\tvar content = node.b;\n\t\t\treturn A2($dillonkearns$elm_markdown$Markdown$Block$HtmlDeclaration, declarationType, content);\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$Parser$nodesToBlocks = function (children) {\n\treturn A2($dillonkearns$elm_markdown$Markdown$Parser$nodesToBlocksHelp, children, _List_Nil);\n};\nvar $dillonkearns$elm_markdown$Markdown$Parser$nodesToBlocksHelp = F2(\n\tfunction (remaining, soFar) {\n\t\tnodesToBlocksHelp:\n\t\twhile (true) {\n\t\t\tif (remaining.b) {\n\t\t\t\tvar node = remaining.a;\n\t\t\t\tvar rest = remaining.b;\n\t\t\t\tvar _v18 = A2($dillonkearns$elm_markdown$Markdown$Parser$childToBlocks, node, soFar);\n\t\t\t\tif (_v18.$ === 'Ok') {\n\t\t\t\t\tvar newSoFar = _v18.a;\n\t\t\t\t\tvar $temp$remaining = rest,\n\t\t\t\t\t\t$temp$soFar = newSoFar;\n\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\tsoFar = $temp$soFar;\n\t\t\t\t\tcontinue nodesToBlocksHelp;\n\t\t\t\t} else {\n\t\t\t\t\tvar e = _v18.a;\n\t\t\t\t\treturn $elm$core$Result$Err(e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\t$elm$core$List$reverse(soFar));\n\t\t\t}\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Parser$parse = function (input) {\n\tvar _v14 = A2(\n\t\t$elm$parser$Parser$Advanced$run,\n\t\tA2(\n\t\t\t$elm$parser$Parser$Advanced$ignorer,\n\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$cyclic$rawBlockParser(),\n\t\t\t$dillonkearns$elm_markdown$Helpers$endOfFile),\n\t\tinput);\n\tif (_v14.$ === 'Err') {\n\t\tvar e = _v14.a;\n\t\treturn $elm$core$Result$Err(e);\n\t} else {\n\t\tvar v = _v14.a;\n\t\tvar _v15 = $dillonkearns$elm_markdown$Markdown$Parser$parseAllInlines(v);\n\t\tif (_v15.$ === 'Err') {\n\t\t\tvar e = _v15.a;\n\t\t\treturn A2(\n\t\t\t\t$elm$parser$Parser$Advanced$run,\n\t\t\t\t$elm$parser$Parser$Advanced$problem(e),\n\t\t\t\t'');\n\t\t} else {\n\t\t\tvar blocks = _v15.a;\n\t\t\tvar isNotEmptyParagraph = function (block) {\n\t\t\t\tif ((block.$ === 'Paragraph') && (!block.a.b)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\tA2($elm$core$List$filter, isNotEmptyParagraph, blocks));\n\t\t}\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$Parser$parseAllInlines = function (state) {\n\treturn A3($dillonkearns$elm_markdown$Markdown$Parser$parseAllInlinesHelp, state, state.rawBlocks, _List_Nil);\n};\nvar $dillonkearns$elm_markdown$Markdown$Parser$parseAllInlinesHelp = F3(\n\tfunction (state, rawBlocks, parsedBlocks) {\n\t\tparseAllInlinesHelp:\n\t\twhile (true) {\n\t\t\tif (rawBlocks.b) {\n\t\t\t\tvar rawBlock = rawBlocks.a;\n\t\t\t\tvar rest = rawBlocks.b;\n\t\t\t\tvar _v13 = A2($dillonkearns$elm_markdown$Markdown$Parser$parseInlines, state.linkReferenceDefinitions, rawBlock);\n\t\t\t\tswitch (_v13.$) {\n\t\t\t\t\tcase 'ParsedBlock':\n\t\t\t\t\t\tvar newParsedBlock = _v13.a;\n\t\t\t\t\t\tvar $temp$state = state,\n\t\t\t\t\t\t\t$temp$rawBlocks = rest,\n\t\t\t\t\t\t\t$temp$parsedBlocks = A2($elm$core$List$cons, newParsedBlock, parsedBlocks);\n\t\t\t\t\t\tstate = $temp$state;\n\t\t\t\t\t\trawBlocks = $temp$rawBlocks;\n\t\t\t\t\t\tparsedBlocks = $temp$parsedBlocks;\n\t\t\t\t\t\tcontinue parseAllInlinesHelp;\n\t\t\t\t\tcase 'EmptyBlock':\n\t\t\t\t\t\tvar $temp$state = state,\n\t\t\t\t\t\t\t$temp$rawBlocks = rest,\n\t\t\t\t\t\t\t$temp$parsedBlocks = parsedBlocks;\n\t\t\t\t\t\tstate = $temp$state;\n\t\t\t\t\t\trawBlocks = $temp$rawBlocks;\n\t\t\t\t\t\tparsedBlocks = $temp$parsedBlocks;\n\t\t\t\t\t\tcontinue parseAllInlinesHelp;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar e = _v13.a;\n\t\t\t\t\t\treturn $elm$core$Result$Err(e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn $elm$core$Result$Ok(parsedBlocks);\n\t\t\t}\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Parser$parseHeaderInlines = F2(\n\tfunction (linkReferences, header) {\n\t\treturn A2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (_v11) {\n\t\t\t\tvar label = _v11.label;\n\t\t\t\tvar alignment = _v11.alignment;\n\t\t\t\treturn A3(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$parseRawInline,\n\t\t\t\t\tlinkReferences,\n\t\t\t\t\tfunction (parsedHeaderLabel) {\n\t\t\t\t\t\treturn {alignment: alignment, label: parsedHeaderLabel};\n\t\t\t\t\t},\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$UnparsedInlines(label));\n\t\t\t},\n\t\t\theader);\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Parser$parseInlines = F2(\n\tfunction (linkReferences, rawBlock) {\n\t\tswitch (rawBlock.$) {\n\t\t\tcase 'Heading':\n\t\t\t\tvar level = rawBlock.a;\n\t\t\t\tvar unparsedInlines = rawBlock.b;\n\t\t\t\tvar _v5 = $dillonkearns$elm_markdown$Markdown$Parser$toHeading(level);\n\t\t\t\tif (_v5.$ === 'Ok') {\n\t\t\t\t\tvar parsedLevel = _v5.a;\n\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$ParsedBlock(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$Heading,\n\t\t\t\t\t\t\tparsedLevel,\n\t\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Parser$inlineParseHelper, linkReferences, unparsedInlines)));\n\t\t\t\t} else {\n\t\t\t\t\tvar e = _v5.a;\n\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$InlineProblem(e);\n\t\t\t\t}\n\t\t\tcase 'OpenBlockOrParagraph':\n\t\t\t\tvar unparsedInlines = rawBlock.a;\n\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$ParsedBlock(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$Paragraph(\n\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Parser$inlineParseHelper, linkReferences, unparsedInlines)));\n\t\t\tcase 'Html':\n\t\t\t\tvar html = rawBlock.a;\n\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$ParsedBlock(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$HtmlBlock(html));\n\t\t\tcase 'UnorderedListBlock':\n\t\t\t\tvar unparsedItems = rawBlock.a;\n\t\t\t\tvar parseItem = function (unparsed) {\n\t\t\t\t\tvar task = function () {\n\t\t\t\t\t\tvar _v6 = unparsed.task;\n\t\t\t\t\t\tif (_v6.$ === 'Just') {\n\t\t\t\t\t\t\tif (!_v6.a) {\n\t\t\t\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$IncompleteTask;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$CompletedTask;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$NoTask;\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar parsedInlines = A3($dillonkearns$elm_markdown$Markdown$Parser$parseRawInline, linkReferences, $elm$core$Basics$identity, unparsed.body);\n\t\t\t\t\treturn A2($dillonkearns$elm_markdown$Markdown$Block$ListItem, task, parsedInlines);\n\t\t\t\t};\n\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$ParsedBlock(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$UnorderedList(\n\t\t\t\t\t\tA2($elm$core$List$map, parseItem, unparsedItems)));\n\t\t\tcase 'OrderedListBlock':\n\t\t\t\tvar startingIndex = rawBlock.a;\n\t\t\t\tvar unparsedInlines = rawBlock.b;\n\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$ParsedBlock(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$OrderedList,\n\t\t\t\t\t\tstartingIndex,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Parser$parseRawInline, linkReferences, $elm$core$Basics$identity),\n\t\t\t\t\t\t\tunparsedInlines)));\n\t\t\tcase 'CodeBlock':\n\t\t\t\tvar codeBlock = rawBlock.a;\n\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$ParsedBlock(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$CodeBlock(codeBlock));\n\t\t\tcase 'ThematicBreak':\n\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$ParsedBlock($dillonkearns$elm_markdown$Markdown$Block$ThematicBreak);\n\t\t\tcase 'BlankLine':\n\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$EmptyBlock;\n\t\t\tcase 'BlockQuote':\n\t\t\t\tvar rawBlocks = rawBlock.a;\n\t\t\t\tvar _v7 = A2(\n\t\t\t\t\t$elm$parser$Parser$Advanced$run,\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$cyclic$rawBlockParser(),\n\t\t\t\t\trawBlocks);\n\t\t\t\tif (_v7.$ === 'Ok') {\n\t\t\t\t\tvar value = _v7.a;\n\t\t\t\t\tvar _v8 = $dillonkearns$elm_markdown$Markdown$Parser$parseAllInlines(value);\n\t\t\t\t\tif (_v8.$ === 'Ok') {\n\t\t\t\t\t\tvar parsedBlocks = _v8.a;\n\t\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$ParsedBlock(\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$BlockQuote(parsedBlocks));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar e = _v8.a;\n\t\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$InlineProblem(e);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar error = _v7.a;\n\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$InlineProblem(\n\t\t\t\t\t\t$elm$parser$Parser$Problem(\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$deadEndsToString(error)));\n\t\t\t\t}\n\t\t\tcase 'IndentedCodeBlock':\n\t\t\t\tvar codeBlockBody = rawBlock.a;\n\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$ParsedBlock(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$CodeBlock(\n\t\t\t\t\t\t{body: codeBlockBody, language: $elm$core$Maybe$Nothing}));\n\t\t\tcase 'Table':\n\t\t\t\tvar _v9 = rawBlock.a;\n\t\t\t\tvar header = _v9.a;\n\t\t\t\tvar rows = _v9.b;\n\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$ParsedBlock(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$Table,\n\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Parser$parseHeaderInlines, linkReferences, header),\n\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Parser$parseRowInlines, linkReferences, rows)));\n\t\t\tcase 'TableDelimiter':\n\t\t\t\tvar _v10 = rawBlock.a;\n\t\t\t\tvar text = _v10.a;\n\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$ParsedBlock(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$Paragraph(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$inlineParseHelper,\n\t\t\t\t\t\t\tlinkReferences,\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$UnparsedInlines(text.raw))));\n\t\t\tdefault:\n\t\t\t\tvar raw = rawBlock.b;\n\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$ParsedBlock(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$Paragraph(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$inlineParseHelper,\n\t\t\t\t\t\t\tlinkReferences,\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$UnparsedInlines(raw))));\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Parser$parseRawInline = F3(\n\tfunction (linkReferences, wrap, unparsedInlines) {\n\t\treturn wrap(\n\t\t\tA2($dillonkearns$elm_markdown$Markdown$Parser$inlineParseHelper, linkReferences, unparsedInlines));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Parser$parseRowInlines = F2(\n\tfunction (linkReferences, rows) {\n\t\treturn A2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (row) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tfunction (column) {\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$parseRawInline,\n\t\t\t\t\t\t\tlinkReferences,\n\t\t\t\t\t\t\t$elm$core$Basics$identity,\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$UnparsedInlines(column));\n\t\t\t\t\t},\n\t\t\t\t\trow);\n\t\t\t},\n\t\t\trows);\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Parser$stepRawBlock = function (revStmts) {\n\treturn $elm$parser$Parser$Advanced$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\tfunction (_v2) {\n\t\t\t\t\treturn $elm$parser$Parser$Advanced$Done(revStmts);\n\t\t\t\t},\n\t\t\t\t$dillonkearns$elm_markdown$Helpers$endOfFile),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\tfunction (reference) {\n\t\t\t\t\treturn $elm$parser$Parser$Advanced$Loop(\n\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Parser$addReference, revStmts, reference));\n\t\t\t\t},\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable($dillonkearns$elm_markdown$Markdown$LinkReferenceDefinition$parser)),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\tfunction (block) {\n\t\t\t\t\treturn $elm$parser$Parser$Advanced$Loop(\n\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Parser$completeOrMergeBlocks, revStmts, block));\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tvar _v3 = revStmts.rawBlocks;\n\t\t\t\t\t_v3$2:\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif (_v3.b) {\n\t\t\t\t\t\t\tswitch (_v3.a.$) {\n\t\t\t\t\t\t\t\tcase 'OpenBlockOrParagraph':\n\t\t\t\t\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$cyclic$mergeableBlockAfterOpenBlockOrParagraphParser();\n\t\t\t\t\t\t\t\tcase 'Table':\n\t\t\t\t\t\t\t\t\tvar table = _v3.a.a;\n\t\t\t\t\t\t\t\t\treturn $elm$parser$Parser$Advanced$oneOf(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$cyclic$mergeableBlockNotAfterOpenBlockOrParagraphParser(),\n\t\t\t\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$tableRowIfTableStarted(table)\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbreak _v3$2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak _v3$2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$cyclic$mergeableBlockNotAfterOpenBlockOrParagraphParser();\n\t\t\t\t}()),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\tfunction (block) {\n\t\t\t\t\treturn $elm$parser$Parser$Advanced$Loop(\n\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Parser$completeOrMergeBlocks, revStmts, block));\n\t\t\t\t},\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$openBlockOrParagraphParser)\n\t\t\t]));\n};\nvar $dillonkearns$elm_markdown$Markdown$Parser$textNodeToBlocks = function (textNodeValue) {\n\treturn A2(\n\t\t$elm$core$Result$withDefault,\n\t\t_List_Nil,\n\t\t$dillonkearns$elm_markdown$Markdown$Parser$parse(textNodeValue));\n};\nvar $dillonkearns$elm_markdown$Markdown$Parser$xmlNodeToHtmlNode = function (xmlNode) {\n\tswitch (xmlNode.$) {\n\t\tcase 'Text':\n\t\t\tvar innerText = xmlNode.a;\n\t\t\treturn $elm$parser$Parser$Advanced$succeed(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$OpenBlockOrParagraph(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$UnparsedInlines(innerText)));\n\t\tcase 'Element':\n\t\t\tvar tag = xmlNode.a;\n\t\t\tvar attributes = xmlNode.b;\n\t\t\tvar children = xmlNode.c;\n\t\t\tvar _v1 = $dillonkearns$elm_markdown$Markdown$Parser$nodesToBlocks(children);\n\t\t\tif (_v1.$ === 'Ok') {\n\t\t\t\tvar parsedChildren = _v1.a;\n\t\t\t\treturn $elm$parser$Parser$Advanced$succeed(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$Html(\n\t\t\t\t\t\tA3($dillonkearns$elm_markdown$Markdown$Block$HtmlElement, tag, attributes, parsedChildren)));\n\t\t\t} else {\n\t\t\t\tvar err = _v1.a;\n\t\t\t\treturn $elm$parser$Parser$Advanced$problem(err);\n\t\t\t}\n\t\tcase 'Comment':\n\t\t\tvar string = xmlNode.a;\n\t\t\treturn $elm$parser$Parser$Advanced$succeed(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$Html(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$HtmlComment(string)));\n\t\tcase 'Cdata':\n\t\t\tvar string = xmlNode.a;\n\t\t\treturn $elm$parser$Parser$Advanced$succeed(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$Html(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$Cdata(string)));\n\t\tcase 'ProcessingInstruction':\n\t\t\tvar string = xmlNode.a;\n\t\t\treturn $elm$parser$Parser$Advanced$succeed(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$Html(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$ProcessingInstruction(string)));\n\t\tdefault:\n\t\t\tvar declarationType = xmlNode.a;\n\t\t\tvar content = xmlNode.b;\n\t\t\treturn $elm$parser$Parser$Advanced$succeed(\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$Html(\n\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Block$HtmlDeclaration, declarationType, content)));\n\t}\n};\nfunction $dillonkearns$elm_markdown$Markdown$Parser$cyclic$mergeableBlockNotAfterOpenBlockOrParagraphParser() {\n\treturn $elm$parser$Parser$Advanced$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$parseAsParagraphInsteadOfHtmlBlock,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$blankLine,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$blockQuote,\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$CodeBlock,\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable($dillonkearns$elm_markdown$Markdown$CodeBlock$parser)),\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$indentedCodeBlock,\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\tfunction (_v26) {\n\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$RawBlock$ThematicBreak;\n\t\t\t\t},\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable($dillonkearns$elm_markdown$ThematicBreak$parser)),\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$unorderedListBlock,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$orderedListBlock(false),\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable($dillonkearns$elm_markdown$Markdown$Heading$parser),\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$cyclic$htmlParser()\n\t\t\t]));\n}\nfunction $dillonkearns$elm_markdown$Markdown$Parser$cyclic$mergeableBlockAfterOpenBlockOrParagraphParser() {\n\treturn $elm$parser$Parser$Advanced$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$parseAsParagraphInsteadOfHtmlBlock,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$blankLine,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$blockQuote,\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$RawBlock$CodeBlock,\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable($dillonkearns$elm_markdown$Markdown$CodeBlock$parser)),\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable($dillonkearns$elm_markdown$Markdown$Parser$setextLineParser),\n\t\t\t\tA2(\n\t\t\t\t$elm$parser$Parser$Advanced$map,\n\t\t\t\tfunction (_v25) {\n\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$RawBlock$ThematicBreak;\n\t\t\t\t},\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable($dillonkearns$elm_markdown$ThematicBreak$parser)),\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$unorderedListBlock,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$orderedListBlock(true),\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable($dillonkearns$elm_markdown$Markdown$Heading$parser),\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$cyclic$htmlParser(),\n\t\t\t\t$elm$parser$Parser$Advanced$backtrackable($dillonkearns$elm_markdown$Markdown$Parser$tableDelimiterInOpenParagraph)\n\t\t\t]));\n}\nfunction $dillonkearns$elm_markdown$Markdown$Parser$cyclic$htmlParser() {\n\treturn A2($elm$parser$Parser$Advanced$andThen, $dillonkearns$elm_markdown$Markdown$Parser$xmlNodeToHtmlNode, $dillonkearns$elm_markdown$HtmlParser$html);\n}\nfunction $dillonkearns$elm_markdown$Markdown$Parser$cyclic$rawBlockParser() {\n\treturn A2(\n\t\t$elm$parser$Parser$Advanced$loop,\n\t\t{linkReferenceDefinitions: _List_Nil, rawBlocks: _List_Nil},\n\t\t$dillonkearns$elm_markdown$Markdown$Parser$stepRawBlock);\n}\ntry {\n\tvar $dillonkearns$elm_markdown$Markdown$Parser$mergeableBlockNotAfterOpenBlockOrParagraphParser = $dillonkearns$elm_markdown$Markdown$Parser$cyclic$mergeableBlockNotAfterOpenBlockOrParagraphParser();\n\t$dillonkearns$elm_markdown$Markdown$Parser$cyclic$mergeableBlockNotAfterOpenBlockOrParagraphParser = function () {\n\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$mergeableBlockNotAfterOpenBlockOrParagraphParser;\n\t};\n\tvar $dillonkearns$elm_markdown$Markdown$Parser$mergeableBlockAfterOpenBlockOrParagraphParser = $dillonkearns$elm_markdown$Markdown$Parser$cyclic$mergeableBlockAfterOpenBlockOrParagraphParser();\n\t$dillonkearns$elm_markdown$Markdown$Parser$cyclic$mergeableBlockAfterOpenBlockOrParagraphParser = function () {\n\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$mergeableBlockAfterOpenBlockOrParagraphParser;\n\t};\n\tvar $dillonkearns$elm_markdown$Markdown$Parser$htmlParser = $dillonkearns$elm_markdown$Markdown$Parser$cyclic$htmlParser();\n\t$dillonkearns$elm_markdown$Markdown$Parser$cyclic$htmlParser = function () {\n\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$htmlParser;\n\t};\n\tvar $dillonkearns$elm_markdown$Markdown$Parser$rawBlockParser = $dillonkearns$elm_markdown$Markdown$Parser$cyclic$rawBlockParser();\n\t$dillonkearns$elm_markdown$Markdown$Parser$cyclic$rawBlockParser = function () {\n\t\treturn $dillonkearns$elm_markdown$Markdown$Parser$rawBlockParser;\n\t};\n} catch ($) {\n\tthrow 'Some top-level definitions from `Markdown.Parser` are causing infinite recursion:\\n\\n  ┌─────┐\\n  │    childToBlocks\\n  │     ↓\\n  │    mergeableBlockNotAfterOpenBlockOrParagraphParser\\n  │     ↓\\n  │    mergeableBlockAfterOpenBlockOrParagraphParser\\n  │     ↓\\n  │    htmlParser\\n  │     ↓\\n  │    inlineParseHelper\\n  │     ↓\\n  │    mapInline\\n  │     ↓\\n  │    nodeToRawBlock\\n  │     ↓\\n  │    nodesToBlocks\\n  │     ↓\\n  │    nodesToBlocksHelp\\n  │     ↓\\n  │    parse\\n  │     ↓\\n  │    parseAllInlines\\n  │     ↓\\n  │    parseAllInlinesHelp\\n  │     ↓\\n  │    parseHeaderInlines\\n  │     ↓\\n  │    parseInlines\\n  │     ↓\\n  │    parseRawInline\\n  │     ↓\\n  │    parseRowInlines\\n  │     ↓\\n  │    rawBlockParser\\n  │     ↓\\n  │    stepRawBlock\\n  │     ↓\\n  │    textNodeToBlocks\\n  │     ↓\\n  │    xmlNodeToHtmlNode\\n  └─────┘\\n\\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}\nvar $dillonkearns$elm_markdown$Markdown$Renderer$combineResults = A2(\n\t$elm$core$List$foldr,\n\t$elm$core$Result$map2($elm$core$List$cons),\n\t$elm$core$Result$Ok(_List_Nil));\nvar $dillonkearns$elm_markdown$Markdown$Block$foldl = F3(\n\tfunction (_function, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar block = list.a;\n\t\t\t\tvar remainingBlocks = list.b;\n\t\t\t\tswitch (block.$) {\n\t\t\t\t\tcase 'HtmlBlock':\n\t\t\t\t\t\tvar html = block.a;\n\t\t\t\t\t\tif (html.$ === 'HtmlElement') {\n\t\t\t\t\t\t\tvar children = html.c;\n\t\t\t\t\t\t\tvar $temp$function = _function,\n\t\t\t\t\t\t\t\t$temp$acc = A2(_function, block, acc),\n\t\t\t\t\t\t\t\t$temp$list = _Utils_ap(children, remainingBlocks);\n\t\t\t\t\t\t\t_function = $temp$function;\n\t\t\t\t\t\t\tacc = $temp$acc;\n\t\t\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\t\t\tcontinue foldl;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $temp$function = _function,\n\t\t\t\t\t\t\t\t$temp$acc = A2(_function, block, acc),\n\t\t\t\t\t\t\t\t$temp$list = remainingBlocks;\n\t\t\t\t\t\t\t_function = $temp$function;\n\t\t\t\t\t\t\tacc = $temp$acc;\n\t\t\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\t\t\tcontinue foldl;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'UnorderedList':\n\t\t\t\t\t\tvar listItems = block.a;\n\t\t\t\t\t\tvar $temp$function = _function,\n\t\t\t\t\t\t\t$temp$acc = A2(_function, block, acc),\n\t\t\t\t\t\t\t$temp$list = remainingBlocks;\n\t\t\t\t\t\t_function = $temp$function;\n\t\t\t\t\t\tacc = $temp$acc;\n\t\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\t\tcontinue foldl;\n\t\t\t\t\tcase 'OrderedList':\n\t\t\t\t\t\tvar _int = block.a;\n\t\t\t\t\t\tvar lists = block.b;\n\t\t\t\t\t\tvar $temp$function = _function,\n\t\t\t\t\t\t\t$temp$acc = A2(_function, block, acc),\n\t\t\t\t\t\t\t$temp$list = remainingBlocks;\n\t\t\t\t\t\t_function = $temp$function;\n\t\t\t\t\t\tacc = $temp$acc;\n\t\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\t\tcontinue foldl;\n\t\t\t\t\tcase 'BlockQuote':\n\t\t\t\t\t\tvar blocks = block.a;\n\t\t\t\t\t\tvar $temp$function = _function,\n\t\t\t\t\t\t\t$temp$acc = A2(_function, block, acc),\n\t\t\t\t\t\t\t$temp$list = _Utils_ap(blocks, remainingBlocks);\n\t\t\t\t\t\t_function = $temp$function;\n\t\t\t\t\t\tacc = $temp$acc;\n\t\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\t\tcontinue foldl;\n\t\t\t\t\tcase 'Heading':\n\t\t\t\t\t\tvar $temp$function = _function,\n\t\t\t\t\t\t\t$temp$acc = A2(_function, block, acc),\n\t\t\t\t\t\t\t$temp$list = remainingBlocks;\n\t\t\t\t\t\t_function = $temp$function;\n\t\t\t\t\t\tacc = $temp$acc;\n\t\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\t\tcontinue foldl;\n\t\t\t\t\tcase 'Paragraph':\n\t\t\t\t\t\tvar $temp$function = _function,\n\t\t\t\t\t\t\t$temp$acc = A2(_function, block, acc),\n\t\t\t\t\t\t\t$temp$list = remainingBlocks;\n\t\t\t\t\t\t_function = $temp$function;\n\t\t\t\t\t\tacc = $temp$acc;\n\t\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\t\tcontinue foldl;\n\t\t\t\t\tcase 'Table':\n\t\t\t\t\t\tvar $temp$function = _function,\n\t\t\t\t\t\t\t$temp$acc = A2(_function, block, acc),\n\t\t\t\t\t\t\t$temp$list = remainingBlocks;\n\t\t\t\t\t\t_function = $temp$function;\n\t\t\t\t\t\tacc = $temp$acc;\n\t\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\t\tcontinue foldl;\n\t\t\t\t\tcase 'CodeBlock':\n\t\t\t\t\t\tvar $temp$function = _function,\n\t\t\t\t\t\t\t$temp$acc = A2(_function, block, acc),\n\t\t\t\t\t\t\t$temp$list = remainingBlocks;\n\t\t\t\t\t\t_function = $temp$function;\n\t\t\t\t\t\tacc = $temp$acc;\n\t\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\t\tcontinue foldl;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$function = _function,\n\t\t\t\t\t\t\t$temp$acc = A2(_function, block, acc),\n\t\t\t\t\t\t\t$temp$list = remainingBlocks;\n\t\t\t\t\t\t_function = $temp$function;\n\t\t\t\t\t\tacc = $temp$acc;\n\t\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\t\tcontinue foldl;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Block$extractInlineBlockText = function (block) {\n\tswitch (block.$) {\n\t\tcase 'Paragraph':\n\t\t\tvar inlines = block.a;\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$extractInlineText(inlines);\n\t\tcase 'HtmlBlock':\n\t\t\tvar html = block.a;\n\t\t\tif (html.$ === 'HtmlElement') {\n\t\t\t\tvar blocks = html.c;\n\t\t\t\treturn A3(\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$foldl,\n\t\t\t\t\tF2(\n\t\t\t\t\t\tfunction (nestedBlock, soFar) {\n\t\t\t\t\t\t\treturn _Utils_ap(\n\t\t\t\t\t\t\t\tsoFar,\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$extractInlineBlockText(nestedBlock));\n\t\t\t\t\t\t}),\n\t\t\t\t\t'',\n\t\t\t\t\tblocks);\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\tcase 'UnorderedList':\n\t\t\tvar items = block.a;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t'\\n',\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tfunction (_v4) {\n\t\t\t\t\t\tvar task = _v4.a;\n\t\t\t\t\t\tvar inlines = _v4.b;\n\t\t\t\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$extractInlineText(inlines);\n\t\t\t\t\t},\n\t\t\t\t\titems));\n\t\tcase 'OrderedList':\n\t\t\tvar _int = block.a;\n\t\t\tvar items = block.b;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t'\\n',\n\t\t\t\tA2($elm$core$List$map, $dillonkearns$elm_markdown$Markdown$Block$extractInlineText, items));\n\t\tcase 'BlockQuote':\n\t\t\tvar blocks = block.a;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t'\\n',\n\t\t\t\tA2($elm$core$List$map, $dillonkearns$elm_markdown$Markdown$Block$extractInlineBlockText, blocks));\n\t\tcase 'Heading':\n\t\t\tvar headingLevel = block.a;\n\t\t\tvar inlines = block.b;\n\t\t\treturn $dillonkearns$elm_markdown$Markdown$Block$extractInlineText(inlines);\n\t\tcase 'Table':\n\t\t\tvar header = block.a;\n\t\t\tvar rows = block.b;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t'\\n',\n\t\t\t\t$elm$core$List$concat(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$extractInlineText,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\t\treturn $.label;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\theader)),\n\t\t\t\t\t\t\t$elm$core$List$concat(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t$elm$core$List$map($dillonkearns$elm_markdown$Markdown$Block$extractInlineText),\n\t\t\t\t\t\t\t\trows))\n\t\t\t\t\t\t])));\n\t\tcase 'CodeBlock':\n\t\t\tvar body = block.a.body;\n\t\t\treturn body;\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$extractInlineText = function (inlines) {\n\treturn A3($elm$core$List$foldl, $dillonkearns$elm_markdown$Markdown$Block$extractTextHelp, '', inlines);\n};\nvar $dillonkearns$elm_markdown$Markdown$Block$extractTextHelp = F2(\n\tfunction (inline, text) {\n\t\tswitch (inline.$) {\n\t\t\tcase 'Text':\n\t\t\t\tvar str = inline.a;\n\t\t\t\treturn _Utils_ap(text, str);\n\t\t\tcase 'HardLineBreak':\n\t\t\t\treturn text + ' ';\n\t\t\tcase 'CodeSpan':\n\t\t\t\tvar str = inline.a;\n\t\t\t\treturn _Utils_ap(text, str);\n\t\t\tcase 'Link':\n\t\t\t\tvar inlines = inline.c;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\ttext,\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$extractInlineText(inlines));\n\t\t\tcase 'Image':\n\t\t\t\tvar inlines = inline.c;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\ttext,\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$extractInlineText(inlines));\n\t\t\tcase 'HtmlInline':\n\t\t\t\tvar html = inline.a;\n\t\t\t\tif (html.$ === 'HtmlElement') {\n\t\t\t\t\tvar blocks = html.c;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$foldl,\n\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\tfunction (block, soFar) {\n\t\t\t\t\t\t\t\treturn _Utils_ap(\n\t\t\t\t\t\t\t\t\tsoFar,\n\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$extractInlineBlockText(block));\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\ttext,\n\t\t\t\t\t\tblocks);\n\t\t\t\t} else {\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\t\tcase 'Strong':\n\t\t\t\tvar inlines = inline.a;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\ttext,\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$extractInlineText(inlines));\n\t\t\tcase 'Emphasis':\n\t\t\t\tvar inlines = inline.a;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\ttext,\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$extractInlineText(inlines));\n\t\t\tdefault:\n\t\t\t\tvar inlines = inline.a;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\ttext,\n\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Block$extractInlineText(inlines));\n\t\t}\n\t});\nvar $elm$core$Tuple$pair = F2(\n\tfunction (a, b) {\n\t\treturn _Utils_Tuple2(a, b);\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Renderer$renderHtml = F5(\n\tfunction (tagName, attributes, children, _v0, renderedChildren) {\n\t\tvar htmlRenderer = _v0.a;\n\t\treturn A2(\n\t\t\t$elm$core$Result$andThen,\n\t\t\tfunction (okChildren) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\tfunction (myRenderer) {\n\t\t\t\t\t\treturn myRenderer(okChildren);\n\t\t\t\t\t},\n\t\t\t\t\tA3(htmlRenderer, tagName, attributes, children));\n\t\t\t},\n\t\t\t$dillonkearns$elm_markdown$Markdown$Renderer$combineResults(renderedChildren));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Renderer$foldThing = F3(\n\tfunction (renderer, topLevelInline, soFar) {\n\t\tvar _v7 = A2($dillonkearns$elm_markdown$Markdown$Renderer$renderSingleInline, renderer, topLevelInline);\n\t\tif (_v7.$ === 'Just') {\n\t\t\tvar inline = _v7.a;\n\t\t\treturn A2($elm$core$List$cons, inline, soFar);\n\t\t} else {\n\t\t\treturn soFar;\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Renderer$renderHelper = F2(\n\tfunction (renderer, blocks) {\n\t\treturn A2(\n\t\t\t$elm$core$List$filterMap,\n\t\t\t$dillonkearns$elm_markdown$Markdown$Renderer$renderHelperSingle(renderer),\n\t\t\tblocks);\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Renderer$renderHelperSingle = function (renderer) {\n\treturn function (block) {\n\t\tswitch (block.$) {\n\t\t\tcase 'Heading':\n\t\t\t\tvar level = block.a;\n\t\t\t\tvar content = block.b;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\tfunction (children) {\n\t\t\t\t\t\t\treturn renderer.heading(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tchildren: children,\n\t\t\t\t\t\t\t\t\tlevel: level,\n\t\t\t\t\t\t\t\t\trawText: $dillonkearns$elm_markdown$Markdown$Block$extractInlineText(content)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Renderer$renderStyled, renderer, content)));\n\t\t\tcase 'Paragraph':\n\t\t\t\tvar content = block.a;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\trenderer.paragraph,\n\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Renderer$renderStyled, renderer, content)));\n\t\t\tcase 'HtmlBlock':\n\t\t\t\tvar html = block.a;\n\t\t\t\tif (html.$ === 'HtmlElement') {\n\t\t\t\t\tvar tag = html.a;\n\t\t\t\t\tvar attributes = html.b;\n\t\t\t\t\tvar children = html.c;\n\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\tA4($dillonkearns$elm_markdown$Markdown$Renderer$renderHtmlNode, renderer, tag, attributes, children));\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\tcase 'UnorderedList':\n\t\t\t\tvar items = block.a;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\trenderer.unorderedList,\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Renderer$combineResults(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\tfunction (_v4) {\n\t\t\t\t\t\t\t\t\tvar task = _v4.a;\n\t\t\t\t\t\t\t\t\tvar children = _v4.b;\n\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\t\t\t\t\tfunction (renderedBody) {\n\t\t\t\t\t\t\t\t\t\t\treturn A2($dillonkearns$elm_markdown$Markdown$Block$ListItem, task, renderedBody);\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Renderer$renderStyled, renderer, children));\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\titems))));\n\t\t\tcase 'OrderedList':\n\t\t\t\tvar startingIndex = block.a;\n\t\t\t\tvar items = block.b;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\trenderer.orderedList(startingIndex),\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Renderer$combineResults(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Renderer$renderStyled(renderer),\n\t\t\t\t\t\t\t\titems))));\n\t\t\tcase 'CodeBlock':\n\t\t\t\tvar codeBlock = block.a;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t$elm$core$Result$Ok(\n\t\t\t\t\t\trenderer.codeBlock(codeBlock)));\n\t\t\tcase 'ThematicBreak':\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t$elm$core$Result$Ok(renderer.thematicBreak));\n\t\t\tcase 'BlockQuote':\n\t\t\t\tvar nestedBlocks = block.a;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\trenderer.blockQuote,\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Renderer$combineResults(\n\t\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Renderer$renderHelper, renderer, nestedBlocks))));\n\t\t\tdefault:\n\t\t\t\tvar header = block.a;\n\t\t\t\tvar rows = block.b;\n\t\t\t\tvar renderedHeaderCells = $dillonkearns$elm_markdown$Markdown$Renderer$combineResults(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (_v6) {\n\t\t\t\t\t\t\tvar label = _v6.label;\n\t\t\t\t\t\t\tvar alignment = _v6.alignment;\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\t\t\t$elm$core$Tuple$pair(alignment),\n\t\t\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Renderer$renderStyled, renderer, label));\n\t\t\t\t\t\t},\n\t\t\t\t\t\theader));\n\t\t\t\tvar renderedHeader = A2(\n\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\tfunction (listListView) {\n\t\t\t\t\t\treturn renderer.tableHeader(\n\t\t\t\t\t\t\t$elm$core$List$singleton(\n\t\t\t\t\t\t\t\trenderer.tableRow(\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t\t\tfunction (_v5) {\n\t\t\t\t\t\t\t\t\t\t\tvar maybeAlignment = _v5.a;\n\t\t\t\t\t\t\t\t\t\t\tvar item = _v5.b;\n\t\t\t\t\t\t\t\t\t\t\treturn A2(renderer.tableHeaderCell, maybeAlignment, item);\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tlistListView))));\n\t\t\t\t\t},\n\t\t\t\t\trenderedHeaderCells);\n\t\t\t\tvar renderedBody = function (r) {\n\t\t\t\t\treturn $elm$core$List$isEmpty(r) ? _List_Nil : _List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\trenderer.tableBody(r)\n\t\t\t\t\t\t]);\n\t\t\t\t};\n\t\t\t\tvar alignmentForColumn = function (columnIndex) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Maybe$andThen,\n\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\treturn $.alignment;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t$elm$core$List$head(\n\t\t\t\t\t\t\tA2($elm$core$List$drop, columnIndex, header)));\n\t\t\t\t};\n\t\t\t\tvar renderRow = function (cells) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\trenderer.tableRow,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\t\t$elm$core$List$indexedMap(\n\t\t\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\t\t\tfunction (index, cell) {\n\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\trenderer.tableCell,\n\t\t\t\t\t\t\t\t\t\t\talignmentForColumn(index),\n\t\t\t\t\t\t\t\t\t\t\tcell);\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Renderer$combineResults(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Renderer$renderStyled(renderer),\n\t\t\t\t\t\t\t\t\tcells))));\n\t\t\t\t};\n\t\t\t\tvar renderedRows = $dillonkearns$elm_markdown$Markdown$Renderer$combineResults(\n\t\t\t\t\tA2($elm$core$List$map, renderRow, rows));\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$core$Result$map2,\n\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\tfunction (h, r) {\n\t\t\t\t\t\t\t\treturn renderer.table(\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\th,\n\t\t\t\t\t\t\t\t\t\trenderedBody(r)));\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\trenderedHeader,\n\t\t\t\t\t\trenderedRows));\n\t\t}\n\t};\n};\nvar $dillonkearns$elm_markdown$Markdown$Renderer$renderHtmlNode = F4(\n\tfunction (renderer, tag, attributes, children) {\n\t\treturn A5(\n\t\t\t$dillonkearns$elm_markdown$Markdown$Renderer$renderHtml,\n\t\t\ttag,\n\t\t\tattributes,\n\t\t\tchildren,\n\t\t\trenderer.html,\n\t\t\tA2($dillonkearns$elm_markdown$Markdown$Renderer$renderHelper, renderer, children));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Renderer$renderSingleInline = F2(\n\tfunction (renderer, inline) {\n\t\tswitch (inline.$) {\n\t\t\tcase 'Strong':\n\t\t\t\tvar innerInlines = inline.a;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\trenderer.strong,\n\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Renderer$renderStyled, renderer, innerInlines)));\n\t\t\tcase 'Emphasis':\n\t\t\t\tvar innerInlines = inline.a;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\trenderer.emphasis,\n\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Renderer$renderStyled, renderer, innerInlines)));\n\t\t\tcase 'Strikethrough':\n\t\t\t\tvar innerInlines = inline.a;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\trenderer.strikethrough,\n\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Renderer$renderStyled, renderer, innerInlines)));\n\t\t\tcase 'Image':\n\t\t\t\tvar src = inline.a;\n\t\t\t\tvar title = inline.b;\n\t\t\t\tvar children = inline.c;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t$elm$core$Result$Ok(\n\t\t\t\t\t\trenderer.image(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\talt: $dillonkearns$elm_markdown$Markdown$Block$extractInlineText(children),\n\t\t\t\t\t\t\t\tsrc: src,\n\t\t\t\t\t\t\t\ttitle: title\n\t\t\t\t\t\t\t})));\n\t\t\tcase 'Text':\n\t\t\t\tvar string = inline.a;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t$elm$core$Result$Ok(\n\t\t\t\t\t\trenderer.text(string)));\n\t\t\tcase 'CodeSpan':\n\t\t\t\tvar string = inline.a;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t$elm$core$Result$Ok(\n\t\t\t\t\t\trenderer.codeSpan(string)));\n\t\t\tcase 'Link':\n\t\t\t\tvar destination = inline.a;\n\t\t\t\tvar title = inline.b;\n\t\t\t\tvar inlines = inline.c;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Result$andThen,\n\t\t\t\t\t\tfunction (children) {\n\t\t\t\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\trenderer.link,\n\t\t\t\t\t\t\t\t\t{destination: destination, title: title},\n\t\t\t\t\t\t\t\t\tchildren));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2($dillonkearns$elm_markdown$Markdown$Renderer$renderStyled, renderer, inlines)));\n\t\t\tcase 'HardLineBreak':\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t$elm$core$Result$Ok(renderer.hardLineBreak));\n\t\t\tdefault:\n\t\t\t\tvar html = inline.a;\n\t\t\t\tif (html.$ === 'HtmlElement') {\n\t\t\t\t\tvar tag = html.a;\n\t\t\t\t\tvar attributes = html.b;\n\t\t\t\t\tvar children = html.c;\n\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\tA4($dillonkearns$elm_markdown$Markdown$Renderer$renderHtmlNode, renderer, tag, attributes, children));\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Renderer$renderStyled = F2(\n\tfunction (renderer, styledStrings) {\n\t\treturn $dillonkearns$elm_markdown$Markdown$Renderer$combineResults(\n\t\t\tA3(\n\t\t\t\t$elm$core$List$foldr,\n\t\t\t\t$dillonkearns$elm_markdown$Markdown$Renderer$foldThing(renderer),\n\t\t\t\t_List_Nil,\n\t\t\t\tstyledStrings));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Renderer$render = F2(\n\tfunction (renderer, ast) {\n\t\treturn $dillonkearns$elm_markdown$Markdown$Renderer$combineResults(\n\t\t\tA2($dillonkearns$elm_markdown$Markdown$Renderer$renderHelper, renderer, ast));\n\t});\nvar $elm$html$Html$br = _VirtualDom_node('br');\nvar $mdgriffith$elm_ui$Internal$Model$ImportFont = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'ImportFont', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Element$Font$external = function (_v0) {\n\tvar url = _v0.url;\n\tvar name = _v0.name;\n\treturn A2($mdgriffith$elm_ui$Internal$Model$ImportFont, name, url);\n};\nvar $mdgriffith$elm_ui$Element$scrollbarX = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.scrollbarsX);\nvar $author$project$View$Markdown$code = function (snippet) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$el,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0.04)),\n\t\t\t\t$mdgriffith$elm_ui$Element$scrollbarX,\n\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(2),\n\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 5, 3),\n\t\t\t\t$mdgriffith$elm_ui$Element$Font$family(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$external(\n\t\t\t\t\t\t{name: 'Source Code Pro', url: 'https://fonts.googleapis.com/css?family=Source+Code+Pro'})\n\t\t\t\t\t]))\n\t\t\t]),\n\t\t$mdgriffith$elm_ui$Element$text(snippet));\n};\nvar $author$project$View$Markdown$codeBlock = function (details) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$el,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0.03)),\n\t\t\t\t$mdgriffith$elm_ui$Element$htmlAttribute(\n\t\t\t\tA2($elm$html$Html$Attributes$style, 'white-space', 'pre')),\n\t\t\t\t$mdgriffith$elm_ui$Element$padding(20),\n\t\t\t\t$mdgriffith$elm_ui$Element$Font$family(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$external(\n\t\t\t\t\t\t{name: 'Source Code Pro', url: 'https://fonts.googleapis.com/css?family=Source+Code+Pro'})\n\t\t\t\t\t]))\n\t\t\t]),\n\t\t$mdgriffith$elm_ui$Element$text(details.body));\n};\nvar $elm$core$Basics$pi = _Basics_pi;\nvar $elm$core$Basics$degrees = function (angleInDegrees) {\n\treturn (angleInDegrees * $elm$core$Basics$pi) / 180;\n};\nvar $mdgriffith$elm_ui$Internal$Model$Rotate = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Rotate', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$rotate = $mdgriffith$elm_ui$Internal$Flag$flag(24);\nvar $mdgriffith$elm_ui$Element$rotate = function (angle) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$TransformComponent,\n\t\t$mdgriffith$elm_ui$Internal$Flag$rotate,\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Rotate,\n\t\t\t_Utils_Tuple3(0, 0, 1),\n\t\t\tangle));\n};\nvar $mdgriffith$elm_ui$Element$transparent = function (on) {\n\treturn on ? A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$transparency,\n\t\tA2($mdgriffith$elm_ui$Internal$Model$Transparency, 'transparent', 1.0)) : A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$transparency,\n\t\tA2($mdgriffith$elm_ui$Internal$Model$Transparency, 'visible', 0.0));\n};\nvar $mdgriffith$elm_ui$Element$Border$widthXY = F2(\n\tfunction (x, y) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t$mdgriffith$elm_ui$Internal$Flag$borderWidth,\n\t\t\tA5(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$BorderWidth,\n\t\t\t\t'b-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y))),\n\t\t\t\ty,\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\tx));\n\t});\nvar $mdgriffith$elm_ui$Element$Border$widthEach = function (_v0) {\n\tvar bottom = _v0.bottom;\n\tvar top = _v0.top;\n\tvar left = _v0.left;\n\tvar right = _v0.right;\n\treturn (_Utils_eq(top, bottom) && _Utils_eq(left, right)) ? (_Utils_eq(top, right) ? $mdgriffith$elm_ui$Element$Border$width(top) : A2($mdgriffith$elm_ui$Element$Border$widthXY, left, top)) : A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$borderWidth,\n\t\tA5(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$BorderWidth,\n\t\t\t'b-' + ($elm$core$String$fromInt(top) + ('-' + ($elm$core$String$fromInt(right) + ('-' + ($elm$core$String$fromInt(bottom) + ('-' + $elm$core$String$fromInt(left))))))),\n\t\t\ttop,\n\t\t\tright,\n\t\t\tbottom,\n\t\t\tleft));\n};\nvar $mdgriffith$elm_ui$Element$Input$defaultCheckbox = function (checked) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$el,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass('focusable'),\n\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t$mdgriffith$elm_ui$Element$px(14)),\n\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t$mdgriffith$elm_ui$Element$px(14)),\n\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($mdgriffith$elm_ui$Element$Input$white),\n\t\t\t\t$mdgriffith$elm_ui$Element$centerY,\n\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(9),\n\t\t\t\t$mdgriffith$elm_ui$Element$Font$center,\n\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(3),\n\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\tchecked ? A3($mdgriffith$elm_ui$Element$rgb, 59 / 255, 153 / 255, 252 / 255) : A3($mdgriffith$elm_ui$Element$rgb, 211 / 255, 211 / 255, 211 / 255)),\n\t\t\t\t$mdgriffith$elm_ui$Element$Border$shadow(\n\t\t\t\t{\n\t\t\t\t\tblur: 1,\n\t\t\t\t\tcolor: checked ? A4($mdgriffith$elm_ui$Element$rgba, 238 / 255, 238 / 255, 238 / 255, 0) : A3($mdgriffith$elm_ui$Element$rgb, 238 / 255, 238 / 255, 238 / 255),\n\t\t\t\t\toffset: _Utils_Tuple2(0, 0),\n\t\t\t\t\tsize: 1\n\t\t\t\t}),\n\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\tchecked ? A3($mdgriffith$elm_ui$Element$rgb, 59 / 255, 153 / 255, 252 / 255) : $mdgriffith$elm_ui$Element$Input$white),\n\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(\n\t\t\t\tchecked ? 0 : 1),\n\t\t\t\t$mdgriffith$elm_ui$Element$inFront(\n\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color($mdgriffith$elm_ui$Element$Input$white),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(6)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(9)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$rotate(\n\t\t\t\t\t\t\t$elm$core$Basics$degrees(-45)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerY,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$moveUp(1),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$transparent(!checked),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$widthEach(\n\t\t\t\t\t\t\t{bottom: 2, left: 2, right: 0, top: 0})\n\t\t\t\t\t\t]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$none))\n\t\t\t]),\n\t\t$mdgriffith$elm_ui$Element$none);\n};\nvar $author$project$View$Markdown$heading = F2(\n\tfunction (device, _v0) {\n\t\tvar level = _v0.level;\n\t\tvar rawText = _v0.rawText;\n\t\tvar multiplier = function () {\n\t\t\tswitch (level.$) {\n\t\t\t\tcase 'H1':\n\t\t\t\t\treturn 1.4;\n\t\t\t\tcase 'H2':\n\t\t\t\t\treturn 1.3;\n\t\t\t\tcase 'H3':\n\t\t\t\t\treturn 1.2;\n\t\t\t\tcase 'H4':\n\t\t\t\t\treturn 1;\n\t\t\t\tcase 'H5':\n\t\t\t\t\treturn 1;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 1;\n\t\t\t}\n\t\t}();\n\t\tvar isMobile = _Utils_eq(device, $author$project$Helpers$Element$Mobile);\n\t\tvar fs = $elm$core$Basics$round(\n\t\t\tmultiplier * (isMobile ? 17 : 25));\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(fs),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(rawText)\n\t\t\t\t]));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$HtmlRenderer$HtmlRenderer = function (a) {\n\treturn {$: 'HtmlRenderer', a: a};\n};\nvar $dillonkearns$elm_markdown$Markdown$Html$resultOr = F2(\n\tfunction (ra, rb) {\n\t\tif (ra.$ === 'Err') {\n\t\t\tvar singleError = ra.a;\n\t\t\tif (rb.$ === 'Ok') {\n\t\t\t\tvar okValue = rb.a;\n\t\t\t\treturn $elm$core$Result$Ok(okValue);\n\t\t\t} else {\n\t\t\t\tvar errorsSoFar = rb.a;\n\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\tA2($elm$core$List$cons, singleError, errorsSoFar));\n\t\t\t}\n\t\t} else {\n\t\t\tvar okValue = ra.a;\n\t\t\treturn $elm$core$Result$Ok(okValue);\n\t\t}\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Html$attributesToString = function (attributes) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t' ',\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (_v0) {\n\t\t\t\tvar name = _v0.name;\n\t\t\t\tvar value = _v0.value;\n\t\t\t\treturn name + ('=\\\"' + (value + '\\\"'));\n\t\t\t},\n\t\t\tattributes));\n};\nvar $dillonkearns$elm_markdown$Markdown$Html$tagToString = F2(\n\tfunction (tagName, attributes) {\n\t\treturn $elm$core$List$isEmpty(attributes) ? ('<' + (tagName + '>')) : ('<' + (tagName + (' ' + ($dillonkearns$elm_markdown$Markdown$Html$attributesToString(attributes) + '>'))));\n\t});\nvar $dillonkearns$elm_markdown$Markdown$Html$oneOf = function (decoders) {\n\tvar unwrappedDecoders = A2(\n\t\t$elm$core$List$map,\n\t\tfunction (_v1) {\n\t\t\tvar rawDecoder = _v1.a;\n\t\t\treturn rawDecoder;\n\t\t},\n\t\tdecoders);\n\treturn function (rawDecoder) {\n\t\treturn $dillonkearns$elm_markdown$Markdown$HtmlRenderer$HtmlRenderer(\n\t\t\tF3(\n\t\t\t\tfunction (tagName, attributes, innerBlocks) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Result$mapError,\n\t\t\t\t\t\tfunction (errors) {\n\t\t\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\t\t\treturn 'Ran into a oneOf with no possibilities!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\t\t\tvar singleError = errors.a;\n\t\t\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n' + (A2($dillonkearns$elm_markdown$Markdown$Html$tagToString, tagName, attributes) + ('\\n\\n' + (singleError + '\\n')));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'oneOf failed parsing this value:\\n    ' + (A2($dillonkearns$elm_markdown$Markdown$Html$tagToString, tagName, attributes) + ('\\n\\nParsing failed in the following 2 ways:\\n\\n\\n' + (A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$indexedMap,\n\t\t\t\t\t\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\t\t\t\t\t\tfunction (index, error) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn '(' + ($elm$core$String$fromInt(index + 1) + (') ' + error));\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\terrors)) + '\\n')));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA3(rawDecoder, tagName, attributes, innerBlocks));\n\t\t\t\t}));\n\t}(\n\t\tA3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (decoder, soFar) {\n\t\t\t\t\treturn F3(\n\t\t\t\t\t\tfunction (tagName, attributes, children) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Html$resultOr,\n\t\t\t\t\t\t\t\tA3(decoder, tagName, attributes, children),\n\t\t\t\t\t\t\t\tA3(soFar, tagName, attributes, children));\n\t\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\tF3(\n\t\t\t\tfunction (tagName, attributes, children) {\n\t\t\t\t\treturn $elm$core$Result$Err(_List_Nil);\n\t\t\t\t}),\n\t\t\tunwrappedDecoders));\n};\nvar $mdgriffith$elm_ui$Element$Font$strike = $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.strike);\nvar $author$project$Helpers$Element$thinHRuler = function (color) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$el,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t$mdgriffith$elm_ui$Element$px(1)),\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(color)\n\t\t\t]),\n\t\t$mdgriffith$elm_ui$Element$none);\n};\nvar $author$project$View$Markdown$renderer = function (device) {\n\treturn {\n\t\tblockQuote: function (children) {\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$widthEach(\n\t\t\t\t\t\t{bottom: 0, left: 10, right: 0, top: 0}),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0.2)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 1, 1, 1, 0.4))\n\t\t\t\t\t]),\n\t\t\t\tchildren);\n\t\t},\n\t\tcodeBlock: $author$project$View$Markdown$codeBlock,\n\t\tcodeSpan: $author$project$View$Markdown$code,\n\t\temphasis: function (content) {\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[$mdgriffith$elm_ui$Element$Font$italic]),\n\t\t\t\tcontent);\n\t\t},\n\t\thardLineBreak: $mdgriffith$elm_ui$Element$html(\n\t\t\tA2($elm$html$Html$br, _List_Nil, _List_Nil)),\n\t\theading: $author$project$View$Markdown$heading(device),\n\t\thtml: $dillonkearns$elm_markdown$Markdown$Html$oneOf(_List_Nil),\n\t\timage: function (image) {\n\t\t\tvar _v0 = image.title;\n\t\t\tif (_v0.$ === 'Just') {\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$image,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t]),\n\t\t\t\t\t{description: image.alt, src: image.src});\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$image,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t]),\n\t\t\t\t\t{description: image.alt, src: image.src});\n\t\t\t}\n\t\t},\n\t\tlink: F2(\n\t\t\tfunction (_v1, body) {\n\t\t\t\tvar destination = _v1.destination;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$author$project$View$Attrs$hover,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Theme$orange),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$underline\n\t\t\t\t\t\t]),\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: A2($mdgriffith$elm_ui$Element$paragraph, _List_Nil, body),\n\t\t\t\t\t\turl: destination\n\t\t\t\t\t});\n\t\t\t}),\n\t\torderedList: F2(\n\t\t\tfunction (startingIndex, items) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(15)\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$indexedMap,\n\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\tfunction (index, itemBlocks) {\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5)\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignTop,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(15)\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$alignTop]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(index + startingIndex))),\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$alignTop]),\n\t\t\t\t\t\t\t\t\t\t\t\t\titemBlocks)\n\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\titems));\n\t\t\t}),\n\t\tparagraph: $mdgriffith$elm_ui$Element$paragraph(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(3)\n\t\t\t\t])),\n\t\tstrikethrough: $mdgriffith$elm_ui$Element$paragraph(\n\t\t\t_List_fromArray(\n\t\t\t\t[$mdgriffith$elm_ui$Element$Font$strike])),\n\t\tstrong: function (content) {\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[$mdgriffith$elm_ui$Element$Font$bold]),\n\t\t\t\tcontent);\n\t\t},\n\t\ttable: $mdgriffith$elm_ui$Element$column(_List_Nil),\n\t\ttableBody: $mdgriffith$elm_ui$Element$column(_List_Nil),\n\t\ttableCell: function (_v2) {\n\t\t\treturn $mdgriffith$elm_ui$Element$paragraph(_List_Nil);\n\t\t},\n\t\ttableHeader: $mdgriffith$elm_ui$Element$column(_List_Nil),\n\t\ttableHeaderCell: F2(\n\t\t\tfunction (_v3, children) {\n\t\t\t\treturn A2($mdgriffith$elm_ui$Element$paragraph, _List_Nil, children);\n\t\t\t}),\n\t\ttableRow: $mdgriffith$elm_ui$Element$row(_List_Nil),\n\t\ttext: $mdgriffith$elm_ui$Element$text,\n\t\tthematicBreak: A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 10, 5)\n\t\t\t\t]),\n\t\t\t$author$project$Helpers$Element$thinHRuler(\n\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0.5))),\n\t\tunorderedList: function (items) {\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(15)\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tfunction (_v4) {\n\t\t\t\t\t\tvar task = _v4.a;\n\t\t\t\t\t\tvar children = _v4.b;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignTop,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(15)\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$alignTop]),\n\t\t\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\t\t\tswitch (task.$) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'IncompleteTask':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Element$Input$defaultCheckbox(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'CompletedTask':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Element$Input$defaultCheckbox(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Element$text('•');\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}()),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\tchildren)\n\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t},\n\t\t\t\t\titems));\n\t\t}\n\t};\n};\nvar $author$project$View$Markdown$renderString = F2(\n\tfunction (device, src) {\n\t\tvar isMobile = _Utils_eq(device, $author$project$Helpers$Element$Mobile);\n\t\tvar sp = isMobile ? 10 : 20;\n\t\tvar fs = isMobile ? 17 : 20;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(sp),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(fs)\n\t\t\t\t]),\n\t\t\tA2(\n\t\t\t\t$elm$core$Result$withDefault,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('There has been a problem.')\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Result$andThen,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Renderer$render(\n\t\t\t\t\t\t\t$author$project$View$Markdown$renderer(device)),\n\t\t\t\t\t\t$elm$core$Result$mapError(\n\t\t\t\t\t\t\t$elm$core$Basics$always(_Utils_Tuple0))),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Result$mapError,\n\t\t\t\t\t\t$elm$core$Basics$always(_Utils_Tuple0),\n\t\t\t\t\t\t$dillonkearns$elm_markdown$Markdown$Parser$parse(src)))));\n\t});\nvar $author$project$View$Compose$viewMarkdown = function (model) {\n\tvar isMobile = _Utils_eq(model.dProfile, $author$project$Helpers$Element$Mobile);\n\treturn isMobile ? (model.compose.preview ? A2(\n\t\t$mdgriffith$elm_ui$Element$column,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)\n\t\t\t]),\n\t\t$elm$core$List$singleton(\n\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$scrollbarY,\n\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10)\n\t\t\t\t\t]),\n\t\t\t\tA2($author$project$View$Markdown$renderString, model.dProfile, model.compose.body)))) : A2(\n\t\t$mdgriffith$elm_ui$Element$el,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$htmlAttribute(\n\t\t\t\t$elm$html$Html$Attributes$class('multiline')),\n\t\t\t\t$mdgriffith$elm_ui$Element$scrollbarY,\n\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t]),\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Element$Input$multiline,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tisMobile ? $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill) : $mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$px(500)),\n\t\t\t\t\tisMobile ? $mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill) : $mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$px(500)),\n\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$px(0))\n\t\t\t\t]),\n\t\t\t{\n\t\t\t\tlabel: $mdgriffith$elm_ui$Element$Input$labelHidden(''),\n\t\t\t\tonChange: $author$project$Types$ComposeBodyChange,\n\t\t\t\tplaceholder: $elm$core$Maybe$Just(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$placeholder,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('What do you want to say?'))),\n\t\t\t\tspellcheck: true,\n\t\t\t\ttext: model.compose.body\n\t\t\t}))) : A2(\n\t\t$mdgriffith$elm_ui$Element$row,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$spacing(30)\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$Input$multiline,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(500)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(500)),\n\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white)\n\t\t\t\t\t]),\n\t\t\t\t{\n\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$Input$labelHidden(''),\n\t\t\t\t\tonChange: $author$project$Types$ComposeBodyChange,\n\t\t\t\t\tplaceholder: $elm$core$Maybe$Just(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$placeholder,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('What do you want to say?'))),\n\t\t\t\t\tspellcheck: true,\n\t\t\t\t\ttext: model.compose.body\n\t\t\t\t}),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(500)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$scrollbarY,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(500)),\n\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10)\n\t\t\t\t\t]),\n\t\t\t\tA2($author$project$View$Markdown$renderString, model.dProfile, model.compose.body))\n\t\t\t]));\n};\nvar $author$project$View$Compose$viewBox = F2(\n\tfunction (model, userInfo) {\n\t\tvar validTopic = function () {\n\t\t\tvar _v1 = model.compose.context;\n\t\t\tif (_v1.$ === 'Reply') {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn !_Utils_eq(\n\t\t\t\t\t$elm$core$Maybe$Nothing,\n\t\t\t\t\t$author$project$Misc$validateTopic(model.topicInput));\n\t\t\t}\n\t\t}();\n\t\tvar submitEnabled = (!$elm$core$String$isEmpty(model.compose.body)) && validTopic;\n\t\tvar isMobile = _Utils_eq(model.dProfile, $author$project$Helpers$Element$Mobile);\n\t\tvar whitespace = isMobile ? 10 : 20;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tisMobile ? $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill) : $mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$px(1000)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black),\n\t\t\t\t\tA2($author$project$View$Common$whenAttr, !isMobile, $author$project$View$Attrs$whiteGlowAttributeSmall),\n\t\t\t\t\tA2($author$project$View$Attrs$style, 'z-index', '2000'),\n\t\t\t\t\t$author$project$View$Attrs$sansSerifFont\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$author$project$View$Attrs$sansSerifFont,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t\t$author$project$View$Attrs$slightRound,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$orange),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(20),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$author$project$View$Attrs$sansSerifFont,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Compose'))),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(whitespace),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(whitespace)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$sansSerifFont\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\t\t\t\t\t!isMobile,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$roundBorder,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(5),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Common$viewChain(userInfo.chain))),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$text,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$Input$labelHidden(''),\n\t\t\t\t\t\t\t\t\t\tonChange: $author$project$Types$ComposeTitleChange,\n\t\t\t\t\t\t\t\t\t\tplaceholder: $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$placeholder,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Title (Optional)'))),\n\t\t\t\t\t\t\t\t\t\ttext: model.compose.title\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t(isMobile ? $mdgriffith$elm_ui$Element$column(\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t\t\t\t])) : $mdgriffith$elm_ui$Element$row(\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spaceEvenly\n\t\t\t\t\t\t\t\t\t\t])))(\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\t\tvar _v0 = model.compose.context;\n\t\t\t\t\t\t\t\t\t\t\tif (_v0.$ === 'TopLevel') {\n\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$text,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(250)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$roundEach(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{bottomLeft: 0, bottomRight: 5, topLeft: 0, topRight: 5}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(0),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Events$onLoseFocus($author$project$Types$SanitizeTopic)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$labelLeft,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$orange),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$roundEach(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{bottomLeft: 5, bottomRight: 0, topLeft: 5, topRight: 0}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 10, 0),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$sansSerifFont\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerY]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Topic'))),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange: $author$project$Types$TopicInputChange,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder: $elm$core$Maybe$Nothing,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: model.topicInput\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Img$replyArrow, 25, $author$project$Theme$orange),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Theme$orange)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Reply'))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}(),\n\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Compose$viewBurnBox, model.compose.donate, model.compose.dollar)\n\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t$author$project$View$Compose$viewMarkdown(model),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Common$whenJust,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\t\t$elm$core$List$singleton,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight,\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$slightRound,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$black)\n\t\t\t\t\t\t\t\t\t\t\t])))),\n\t\t\t\t\t\t\tmodel.compose.error),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\t\t\t\t\tisMobile,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5)\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$checkbox,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(30)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(30)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$hover\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked: model.compose.preview,\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon: function (checked) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerY,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(25)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('✔️')));\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$Input$labelHidden('Preview'),\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange: $author$project$Types$PreviewSet\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white)\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Preview'))\n\t\t\t\t\t\t\t\t\t\t\t]))),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white)\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Common$cancel($author$project$Types$ComposeClose)),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$orange),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$roundBorder,\n\t\t\t\t\t\t\t\t\t\t\t\t\tsubmitEnabled ? $author$project$View$Attrs$hover : A2($author$project$View$Attrs$style, 'cursor', 'not-allowed'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$sansSerifFont\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: model.compose.inProgress ? A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Common$spinner, 20, $author$project$Helpers$Element$black)) : $mdgriffith$elm_ui$Element$text('Submit'),\n\t\t\t\t\t\t\t\t\t\t\t\tonPress: submitEnabled ? $elm$core$Maybe$Just($author$project$Types$SubmitDraft) : $elm$core$Maybe$Nothing\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $author$project$View$Common$wrapModal = F2(\n\tfunction (msg, elem) {\n\t\tvar btn = A2(\n\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba255, 0, 0, 0, 0.4))\n\t\t\t\t]),\n\t\t\t{\n\t\t\t\tlabel: $mdgriffith$elm_ui$Element$none,\n\t\t\t\tonPress: $elm$core$Maybe$Just(msg)\n\t\t\t});\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\tA2($author$project$View$Attrs$style, 'z-index', '2000')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tbtn,\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[btn, elem, btn])),\n\t\t\t\t\tbtn\n\t\t\t\t]));\n\t});\nvar $author$project$View$Compose$view = function (model) {\n\treturn (_Utils_eq(model.dProfile, $author$project$Helpers$Element$Mobile) ? $elm$core$Basics$identity : $author$project$View$Common$wrapModal($author$project$Types$ComposeClose))(\n\t\tA3(\n\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(250)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$Font$center, $mdgriffith$elm_ui$Element$centerY]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Please connect your Metamask wallet.')\n\t\t\t\t\t\t]))),\n\t\t\t$author$project$View$Compose$viewBox(model),\n\t\t\t$author$project$Wallet$userInfo(model.wallet)));\n};\nvar $author$project$View$Common$appStatusMessage = F2(\n\tfunction (color, errStr) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerY,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$center,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$italic,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(color),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(36),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Element$maximum, 800, $mdgriffith$elm_ui$Element$fill)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(40)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(errStr)\n\t\t\t\t\t])));\n\t});\nvar $author$project$Theme$darkGray = A3($mdgriffith$elm_ui$Element$rgb255, 150, 150, 150);\nvar $author$project$Types$ShowNewToSmokeSignalModal = function (a) {\n\treturn {$: 'ShowNewToSmokeSignalModal', a: a};\n};\nvar $author$project$Theme$darkRed = A3($mdgriffith$elm_ui$Element$rgb, 0.7, 0, 0);\nvar $author$project$Types$SetPage = function (a) {\n\treturn {$: 'SetPage', a: a};\n};\nvar $elm$core$Array$length = function (_v0) {\n\tvar len = _v0.a;\n\treturn len;\n};\nvar $author$project$View$Home$viewPagination = function (model) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$row,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t$mdgriffith$elm_ui$Element$centerX\n\t\t\t]),\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (n) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\t\t\t_Utils_eq(n, model.currentPage) ? $author$project$Theme$orange : $author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(30)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(30)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(20),\n\t\t\t\t\t\t\t$author$project$View$Attrs$sansSerifFont,\n\t\t\t\t\t\t\t$author$project$View$Attrs$hover\n\t\t\t\t\t\t]),\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: A2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX, $mdgriffith$elm_ui$Element$centerY]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t\t\t\t$elm$core$String$fromInt(n + 1))),\n\t\t\t\t\t\tonPress: $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t$author$project$Types$SetPage(n))\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$List$range,\n\t\t\t\t0,\n\t\t\t\t$elm$core$Array$length(model.pages) - 1)));\n};\nvar $author$project$Types$PhaceForPublishedPost = function (a) {\n\treturn {$: 'PhaceForPublishedPost', a: a};\n};\nvar $author$project$Types$ShowOrHideAddress = function (a) {\n\treturn {$: 'ShowOrHideAddress', a: a};\n};\nvar $author$project$Theme$almostWhite = A3($mdgriffith$elm_ui$Element$rgb, 0.8, 0.8, 0.8);\nvar $author$project$View$Post$linkToPost = F2(\n\tfunction (id, elem) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$author$project$View$Attrs$hover\n\t\t\t\t]),\n\t\t\t{\n\t\t\t\tlabel: elem,\n\t\t\t\tonPress: $elm$core$Maybe$Just(\n\t\t\t\t\t$author$project$Types$GotoView(\n\t\t\t\t\t\t$author$project$Types$ViewPost(id)))\n\t\t\t});\n\t});\nvar $elm$core$Char$toUpper = _Char_toUpper;\nvar $cmditch$elm_ethereum$Eth$Utils$compareCharToHash = F2(\n\tfunction (addrChar, hashInt) {\n\t\treturn (hashInt >= 8) ? $elm$core$Char$toUpper(addrChar) : addrChar;\n\t});\nvar $cmditch$elm_ethereum$Eth$Utils$checksumIt = function (str) {\n\tvar _v0 = $cmditch$elm_ethereum$Eth$Utils$checksumHelper(\n\t\t$cmditch$elm_ethereum$Eth$Utils$remove0x(\n\t\t\t$elm$core$String$toLower(str)));\n\tvar addrChars = _v0.a;\n\tvar hashInts = _v0.b;\n\treturn $elm$core$String$fromList(\n\t\tA3($elm$core$List$map2, $cmditch$elm_ethereum$Eth$Utils$compareCharToHash, addrChars, hashInts));\n};\nvar $cmditch$elm_ethereum$Eth$Utils$addressToChecksumString = function (_v0) {\n\tvar address = _v0.a;\n\treturn A2($elm$core$Basics$composeL, $cmditch$elm_ethereum$Eth$Utils$add0x, $cmditch$elm_ethereum$Eth$Utils$checksumIt)(address);\n};\nvar $coinop_logan$phace$Phace$addressToRelevantString = A2(\n\t$elm$core$Basics$composeR,\n\t$cmditch$elm_ethereum$Eth$Utils$addressToString,\n\t$elm$core$String$dropLeft(2));\nvar $coinop_logan$phace$Phace$errorToString = function (e) {\n\tif (e.$ === 'NotHexString') {\n\t\treturn 'String contains non-hex characters.';\n\t} else {\n\t\treturn 'Source string is too short.';\n\t}\n};\nvar $elm_community$result_extra$Result$Extra$extract = F2(\n\tfunction (f, x) {\n\t\tif (x.$ === 'Ok') {\n\t\t\tvar a = x.a;\n\t\t\treturn a;\n\t\t} else {\n\t\t\tvar e = x.a;\n\t\t\treturn f(e);\n\t\t}\n\t});\nvar $coinop_logan$phace$Phace$NotHexString = {$: 'NotHexString'};\nvar $coinop_logan$phace$Phace$SourceTooSmall = {$: 'SourceTooSmall'};\nvar $elm$svg$Svg$Attributes$transform = _VirtualDom_attribute('transform');\nvar $coinop_logan$phace$Features$flipVertical = function (svgs) {\n\treturn _List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$svg$Svg$g,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$svg$Svg$Attributes$transform('scale(1,-1)')\n\t\t\t\t]),\n\t\t\tsvgs)\n\t\t]);\n};\nvar $coinop_logan$phace$Features$Eye = function (a) {\n\treturn {$: 'Eye', a: a};\n};\nvar $coinop_logan$phace$Features$FaceColor = function (a) {\n\treturn {$: 'FaceColor', a: a};\n};\nvar $coinop_logan$phace$Features$Hair = function (a) {\n\treturn {$: 'Hair', a: a};\n};\nvar $coinop_logan$phace$Features$Mouth = function (a) {\n\treturn {$: 'Mouth', a: a};\n};\nvar $coinop_logan$phace$TupleHelpers$extractTuple3Maybe = function (_v0) {\n\tvar ma = _v0.a;\n\tvar mb = _v0.b;\n\tvar mc = _v0.c;\n\tvar _v1 = _Utils_Tuple3(ma, mb, mc);\n\tif (((_v1.a.$ === 'Just') && (_v1.b.$ === 'Just')) && (_v1.c.$ === 'Just')) {\n\t\tvar a = _v1.a.a;\n\t\tvar b = _v1.b.a;\n\t\tvar c = _v1.c.a;\n\t\treturn $elm$core$Maybe$Just(\n\t\t\t_Utils_Tuple3(a, b, c));\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $elm_community$list_extra$List$Extra$getAt = F2(\n\tfunction (idx, xs) {\n\t\treturn (idx < 0) ? $elm$core$Maybe$Nothing : $elm$core$List$head(\n\t\t\tA2($elm$core$List$drop, idx, xs));\n\t});\nvar $coinop_logan$phace$Features$consumeColor = function (src) {\n\tvar charList = $elm$core$String$toList(src);\n\treturn A2(\n\t\t$elm$core$Maybe$map,\n\t\tfunction (color) {\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tcolor,\n\t\t\t\tA2($elm$core$String$dropLeft, 3, src));\n\t\t},\n\t\t$coinop_logan$phace$TupleHelpers$extractTuple3Maybe(\n\t\t\t_Utils_Tuple3(\n\t\t\t\tA2($elm_community$list_extra$List$Extra$getAt, 0, charList),\n\t\t\t\tA2($elm_community$list_extra$List$Extra$getAt, 1, charList),\n\t\t\t\tA2($elm_community$list_extra$List$Extra$getAt, 2, charList))));\n};\nvar $elm_community$list_extra$List$Extra$groupsOfWithStep = F3(\n\tfunction (size, step, xs) {\n\t\tvar xs_ = A2($elm$core$List$drop, step, xs);\n\t\tvar thisGroup = A2($elm$core$List$take, size, xs);\n\t\tvar okayLength = _Utils_eq(\n\t\t\tsize,\n\t\t\t$elm$core$List$length(thisGroup));\n\t\tvar okayArgs = (size > 0) && (step > 0);\n\t\treturn (okayArgs && okayLength) ? A2(\n\t\t\t$elm$core$List$cons,\n\t\t\tthisGroup,\n\t\t\tA3($elm_community$list_extra$List$Extra$groupsOfWithStep, size, step, xs_)) : _List_Nil;\n\t});\nvar $elm_community$list_extra$List$Extra$groupsOf = F2(\n\tfunction (size, xs) {\n\t\treturn A3($elm_community$list_extra$List$Extra$groupsOfWithStep, size, size, xs);\n\t});\nvar $coinop_logan$phace$Features$groupToTuples = function (l) {\n\treturn $elm_community$maybe_extra$Maybe$Extra$values(\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (listOfMaybe2) {\n\t\t\t\tvar _v0 = _Utils_Tuple2(\n\t\t\t\t\tA2($elm_community$list_extra$List$Extra$getAt, 0, listOfMaybe2),\n\t\t\t\t\tA2($elm_community$list_extra$List$Extra$getAt, 1, listOfMaybe2));\n\t\t\t\tif ((_v0.a.$ === 'Just') && (_v0.b.$ === 'Just')) {\n\t\t\t\t\tvar a = _v0.a.a;\n\t\t\t\t\tvar b = _v0.b.a;\n\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t_Utils_Tuple2(a, b));\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t},\n\t\t\tA2($elm_community$list_extra$List$Extra$groupsOf, 2, l)));\n};\nvar $coinop_logan$phace$Features$hexCharToFloat = function (c) {\n\treturn function (f) {\n\t\treturn f / 15.0;\n\t}(\n\t\tA2(\n\t\t\t$elm$core$Result$withDefault,\n\t\t\t0,\n\t\t\t$rtfeldman$elm_hex$Hex$fromString(\n\t\t\t\t$elm$core$String$fromChar(c))));\n};\nvar $elm_community$list_extra$List$Extra$splitAt = F2(\n\tfunction (n, xs) {\n\t\treturn _Utils_Tuple2(\n\t\t\tA2($elm$core$List$take, n, xs),\n\t\t\tA2($elm$core$List$drop, n, xs));\n\t});\nvar $coinop_logan$phace$Features$consumePoints = F2(\n\tfunction (num, fullSrc) {\n\t\tvar _v0 = A2(\n\t\t\t$elm$core$Tuple$mapSecond,\n\t\t\t$elm$core$String$fromList,\n\t\t\tA2(\n\t\t\t\t$elm_community$list_extra$List$Extra$splitAt,\n\t\t\t\tnum * 2,\n\t\t\t\t$elm$core$String$toList(fullSrc)));\n\t\tvar srcChars = _v0.a;\n\t\tvar remainingStr = _v0.b;\n\t\treturn (!_Utils_eq(\n\t\t\t$elm$core$List$length(srcChars),\n\t\t\tnum * 2)) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(\n\t\t\t_Utils_Tuple2(\n\t\t\t\t$coinop_logan$phace$Features$groupToTuples(\n\t\t\t\t\tA2($elm$core$List$map, $coinop_logan$phace$Features$hexCharToFloat, srcChars)),\n\t\t\t\tremainingStr));\n\t});\nvar $coinop_logan$phace$Features$EyeData = F2(\n\tfunction (color, points) {\n\t\treturn {color: color, points: points};\n\t});\nvar $coinop_logan$phace$Features$getX = $elm$core$Tuple$first;\nvar $coinop_logan$phace$Features$getY = $elm$core$Tuple$second;\nvar $elm$core$Tuple$mapBoth = F3(\n\tfunction (funcA, funcB, _v0) {\n\t\tvar x = _v0.a;\n\t\tvar y = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\tfuncA(x),\n\t\t\tfuncB(y));\n\t});\nvar $coinop_logan$phace$Features$scaleFloatToRange = F2(\n\tfunction (_v0, f) {\n\t\tvar min = _v0.a;\n\t\tvar max = _v0.b;\n\t\treturn ((max - min) * f) + min;\n\t});\nvar $coinop_logan$phace$Features$scalePointToRect = function (_v0) {\n\tvar rectBottomLeft = _v0.a;\n\tvar rectTopRight = _v0.b;\n\treturn A2(\n\t\t$elm$core$Tuple$mapBoth,\n\t\t$coinop_logan$phace$Features$scaleFloatToRange(\n\t\t\t_Utils_Tuple2(\n\t\t\t\t$coinop_logan$phace$Features$getX(rectBottomLeft),\n\t\t\t\t$coinop_logan$phace$Features$getX(rectTopRight))),\n\t\t$coinop_logan$phace$Features$scaleFloatToRange(\n\t\t\t_Utils_Tuple2(\n\t\t\t\t$coinop_logan$phace$Features$getY(rectBottomLeft),\n\t\t\t\t$coinop_logan$phace$Features$getY(rectTopRight))));\n};\nvar $coinop_logan$phace$Features$makeEye = F2(\n\tfunction (color, srcPoints) {\n\t\tvar points = A2(\n\t\t\t$elm$core$List$map,\n\t\t\t$coinop_logan$phace$Features$scalePointToRect(\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t_Utils_Tuple2(25, 10),\n\t\t\t\t\t_Utils_Tuple2(60, 50))),\n\t\t\tsrcPoints);\n\t\treturn A2($coinop_logan$phace$Features$EyeData, color, points);\n\t});\nvar $coinop_logan$phace$Features$consumeEye = function (src) {\n\treturn A2(\n\t\t$elm$core$Maybe$andThen,\n\t\tfunction (_v0) {\n\t\t\tvar color = _v0.a;\n\t\t\tvar src1 = _v0.b;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\tvar srcPoints = _v1.a;\n\t\t\t\t\tvar remaining = _v1.b;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tA2($coinop_logan$phace$Features$makeEye, color, srcPoints),\n\t\t\t\t\t\tremaining);\n\t\t\t\t},\n\t\t\t\tA2($coinop_logan$phace$Features$consumePoints, 3, src1));\n\t\t},\n\t\t$coinop_logan$phace$Features$consumeColor(src));\n};\nvar $coinop_logan$phace$Features$HairData = F2(\n\tfunction (color, points) {\n\t\treturn {color: color, points: points};\n\t});\nvar $coinop_logan$phace$Features$makeHairPoints = function (srcPoints) {\n\treturn A2(\n\t\t$elm$core$List$indexedMap,\n\t\tF2(\n\t\t\tfunction (id, srcPoint) {\n\t\t\t\tvar boundingRect = ((!id) || (id === 4)) ? _Utils_Tuple2(\n\t\t\t\t\t_Utils_Tuple2(-150, -20),\n\t\t\t\t\t_Utils_Tuple2(150, 120)) : _Utils_Tuple2(\n\t\t\t\t\t_Utils_Tuple2(-150, 20),\n\t\t\t\t\t_Utils_Tuple2(150, 120));\n\t\t\t\treturn A2($coinop_logan$phace$Features$scalePointToRect, boundingRect, srcPoint);\n\t\t\t}),\n\t\tA2($elm$core$List$sortBy, $coinop_logan$phace$Features$getX, srcPoints));\n};\nvar $coinop_logan$phace$Features$makeHair = F2(\n\tfunction (color, srcPoints) {\n\t\treturn A2(\n\t\t\t$coinop_logan$phace$Features$HairData,\n\t\t\tcolor,\n\t\t\t$coinop_logan$phace$Features$makeHairPoints(srcPoints));\n\t});\nvar $coinop_logan$phace$Features$consumeHair = function (src) {\n\treturn A2(\n\t\t$elm$core$Maybe$andThen,\n\t\tfunction (_v0) {\n\t\t\tvar color = _v0.a;\n\t\t\tvar src1 = _v0.b;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\tvar srcPoints = _v1.a;\n\t\t\t\t\tvar remaining = _v1.b;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tA2($coinop_logan$phace$Features$makeHair, color, srcPoints),\n\t\t\t\t\t\tremaining);\n\t\t\t\t},\n\t\t\t\tA2($coinop_logan$phace$Features$consumePoints, 5, src1));\n\t\t},\n\t\t$coinop_logan$phace$Features$consumeColor(src));\n};\nvar $coinop_logan$phace$Features$MouthData = F4(\n\tfunction (color, startPoint, bcPoint1, bcPoint2) {\n\t\treturn {bcPoint1: bcPoint1, bcPoint2: bcPoint2, color: color, startPoint: startPoint};\n\t});\nvar $coinop_logan$phace$TupleHelpers$listToTuple3 = function (list) {\n\treturn $coinop_logan$phace$TupleHelpers$extractTuple3Maybe(\n\t\t_Utils_Tuple3(\n\t\t\tA2($elm_community$list_extra$List$Extra$getAt, 0, list),\n\t\t\tA2($elm_community$list_extra$List$Extra$getAt, 1, list),\n\t\t\tA2($elm_community$list_extra$List$Extra$getAt, 2, list)));\n};\nvar $coinop_logan$phace$TupleHelpers$mapTuple2 = function (f) {\n\treturn A2($elm$core$Tuple$mapBoth, f, f);\n};\nvar $coinop_logan$phace$Features$pointToBoundingRect = F2(\n\tfunction (_v0, point) {\n\t\tvar width = _v0.a;\n\t\tvar height = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_Tuple2(\n\t\t\t\t$coinop_logan$phace$Features$getX(point) - width,\n\t\t\t\t$coinop_logan$phace$Features$getY(point) - height),\n\t\t\t_Utils_Tuple2(\n\t\t\t\t$coinop_logan$phace$Features$getX(point) + width,\n\t\t\t\t$coinop_logan$phace$Features$getY(point) + height));\n\t});\nvar $elm$core$Debug$log = _Debug_log;\nvar $coinop_logan$phace$Phace$Types$squashMaybe = F2(\n\tfunction (_default, maybe) {\n\t\tif (maybe.$ === 'Nothing') {\n\t\t\tvar _v1 = A2($elm$core$Debug$log, 'Uh oh! Squashing a maybe!', maybe);\n\t\t\treturn _default;\n\t\t} else {\n\t\t\tvar a = maybe.a;\n\t\t\treturn a;\n\t\t}\n\t});\nvar $TSFoster$elm_tuple_extra$Tuple3$triple = function (a) {\n\treturn _Utils_Tuple3(a, a, a);\n};\nvar $coinop_logan$phace$Features$makeMouth = F2(\n\tfunction (color, srcPoints) {\n\t\tvar _v0 = A2(\n\t\t\t$coinop_logan$phace$Phace$Types$squashMaybe,\n\t\t\t$TSFoster$elm_tuple_extra$Tuple3$triple(\n\t\t\t\t_Utils_Tuple2(0, 0)),\n\t\t\t$coinop_logan$phace$TupleHelpers$listToTuple3(srcPoints));\n\t\tvar startPointSrc = _v0.a;\n\t\tvar bcPoint1Src = _v0.b;\n\t\tvar bcPoint2Src = _v0.c;\n\t\tvar startPoint = A2(\n\t\t\t$coinop_logan$phace$Features$scalePointToRect,\n\t\t\t_Utils_Tuple2(\n\t\t\t\t_Utils_Tuple2(10, -30),\n\t\t\t\t_Utils_Tuple2(70, -80)),\n\t\t\tstartPointSrc);\n\t\tvar bcPoints = A2(\n\t\t\t$coinop_logan$phace$TupleHelpers$mapTuple2,\n\t\t\t$coinop_logan$phace$Features$scalePointToRect(\n\t\t\t\tA2(\n\t\t\t\t\t$coinop_logan$phace$Features$pointToBoundingRect,\n\t\t\t\t\t_Utils_Tuple2(20, 40),\n\t\t\t\t\tstartPoint)),\n\t\t\t_Utils_Tuple2(bcPoint1Src, bcPoint2Src));\n\t\treturn A4($coinop_logan$phace$Features$MouthData, color, startPoint, bcPoints.a, bcPoints.b);\n\t});\nvar $coinop_logan$phace$Features$consumeMouth = function (src) {\n\treturn A2(\n\t\t$elm$core$Maybe$andThen,\n\t\tfunction (_v0) {\n\t\t\tvar color = _v0.a;\n\t\t\tvar src1 = _v0.b;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\tvar srcPoints = _v1.a;\n\t\t\t\t\tvar remaining = _v1.b;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tA2($coinop_logan$phace$Features$makeMouth, color, srcPoints),\n\t\t\t\t\t\tremaining);\n\t\t\t\t},\n\t\t\t\tA2($coinop_logan$phace$Features$consumePoints, 3, src1));\n\t\t},\n\t\t$coinop_logan$phace$Features$consumeColor(src));\n};\nvar $coinop_logan$phace$Features$consumeFeatureFromString = F2(\n\tfunction (featureId, src) {\n\t\tswitch (featureId) {\n\t\t\tcase 0:\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t$elm$core$Tuple$mapFirst($coinop_logan$phace$Features$FaceColor),\n\t\t\t\t\t$coinop_logan$phace$Features$consumeColor(src));\n\t\t\tcase 1:\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t$elm$core$Tuple$mapFirst($coinop_logan$phace$Features$Eye),\n\t\t\t\t\t$coinop_logan$phace$Features$consumeEye(src));\n\t\t\tcase 2:\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t$elm$core$Tuple$mapFirst($coinop_logan$phace$Features$Mouth),\n\t\t\t\t\t$coinop_logan$phace$Features$consumeMouth(src));\n\t\t\tcase 3:\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t$elm$core$Tuple$mapSecond($elm$core$String$reverse),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t$elm$core$Tuple$mapFirst($coinop_logan$phace$Features$Hair),\n\t\t\t\t\t\t$coinop_logan$phace$Features$consumeHair(\n\t\t\t\t\t\t\t$elm$core$String$reverse(src))));\n\t\t\tdefault:\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar $coinop_logan$phace$Features$generateFeaturesFromString = function (fullSrc) {\n\tvar helper = F2(\n\t\tfunction (featureId, maybeAcc) {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Maybe$andThen,\n\t\t\t\tfunction (_v0) {\n\t\t\t\t\tvar src = _v0.a;\n\t\t\t\t\tvar features = _v0.b;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction (_v1) {\n\t\t\t\t\t\t\tvar newFeature = _v1.a;\n\t\t\t\t\t\t\tvar newSrc = _v1.b;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\tnewSrc,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$append,\n\t\t\t\t\t\t\t\t\tfeatures,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[newFeature])));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2($coinop_logan$phace$Features$consumeFeatureFromString, featureId, src));\n\t\t\t\t},\n\t\t\t\tmaybeAcc);\n\t\t});\n\treturn A2(\n\t\t$elm$core$Maybe$map,\n\t\t$elm$core$Tuple$second,\n\t\tA3(\n\t\t\t$elm$core$List$foldl,\n\t\t\thelper,\n\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t_Utils_Tuple2(fullSrc, _List_Nil)),\n\t\t\tA2($elm$core$List$range, 0, 3)));\n};\nvar $coinop_logan$phace$TupleHelpers$tuple3ToList = function (_v0) {\n\tvar a = _v0.a;\n\tvar b = _v0.b;\n\tvar c = _v0.c;\n\treturn _List_fromArray(\n\t\t[a, b, c]);\n};\nvar $coinop_logan$phace$SvgHelpers$colorToStr = function (color) {\n\treturn $elm$core$String$fromList(\n\t\tfunction (l) {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t_Utils_chr('#'),\n\t\t\t\tl);\n\t\t}(\n\t\t\t$coinop_logan$phace$TupleHelpers$tuple3ToList(color)));\n};\nvar $coinop_logan$phace$SvgHelpers$fillColor = A2($elm$core$Basics$composeL, $elm$svg$Svg$Attributes$fill, $coinop_logan$phace$SvgHelpers$colorToStr);\nvar $coinop_logan$phace$Features$mirrorHorizontal = function (svgs) {\n\treturn _List_fromArray(\n\t\t[\n\t\t\tA2($elm$svg$Svg$g, _List_Nil, svgs),\n\t\t\tA2(\n\t\t\t$elm$svg$Svg$g,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$svg$Svg$Attributes$transform('scale(-1,1)')\n\t\t\t\t]),\n\t\t\tsvgs)\n\t\t]);\n};\nvar $coinop_logan$phace$SvgHelpers$toSvgPointsStr = A2(\n\t$elm$core$Basics$composeR,\n\t$elm$core$List$map(\n\t\tA2($elm$core$Tuple$mapBoth, $elm$core$String$fromFloat, $elm$core$String$fromFloat)),\n\tA2(\n\t\t$elm$core$Basics$composeR,\n\t\t$elm$core$List$map(\n\t\t\tfunction (_v0) {\n\t\t\t\tvar xs = _v0.a;\n\t\t\t\tvar ys = _v0.b;\n\t\t\t\treturn xs + (',' + ys);\n\t\t\t}),\n\t\t$elm$core$String$join(' ')));\nvar $coinop_logan$phace$SvgHelpers$points = A2($elm$core$Basics$composeL, $elm$svg$Svg$Attributes$points, $coinop_logan$phace$SvgHelpers$toSvgPointsStr);\nvar $coinop_logan$phace$SvgHelpers$strokeColor = A2($elm$core$Basics$composeL, $elm$svg$Svg$Attributes$stroke, $coinop_logan$phace$SvgHelpers$colorToStr);\nvar $coinop_logan$phace$Features$renderEyes = function (eye) {\n\treturn $coinop_logan$phace$Features$mirrorHorizontal(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$svg$Svg$polygon,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$coinop_logan$phace$SvgHelpers$fillColor(eye.color),\n\t\t\t\t\t\t$coinop_logan$phace$SvgHelpers$strokeColor(eye.color),\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$strokeWidth('6'),\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$strokeLinejoin('round'),\n\t\t\t\t\t\t$coinop_logan$phace$SvgHelpers$points(eye.points)\n\t\t\t\t\t]),\n\t\t\t\t_List_Nil)\n\t\t\t]));\n};\nvar $elm$svg$Svg$rect = $elm$svg$Svg$trustedNode('rect');\nvar $elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');\nvar $elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');\nvar $coinop_logan$phace$Features$renderFaceColor = function (color) {\n\treturn _List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$svg$Svg$rect,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$coinop_logan$phace$SvgHelpers$fillColor(color),\n\t\t\t\t\t$elm$svg$Svg$Attributes$stroke('none'),\n\t\t\t\t\t$elm$svg$Svg$Attributes$width('200'),\n\t\t\t\t\t$elm$svg$Svg$Attributes$height('200'),\n\t\t\t\t\t$elm$svg$Svg$Attributes$y('-100'),\n\t\t\t\t\t$elm$svg$Svg$Attributes$x('-100')\n\t\t\t\t]),\n\t\t\t_List_Nil)\n\t\t]);\n};\nvar $coinop_logan$phace$TupleHelpers$extractTuple2Maybe = function (_v0) {\n\tvar ma = _v0.a;\n\tvar mb = _v0.b;\n\tvar _v1 = _Utils_Tuple2(ma, mb);\n\tif ((_v1.a.$ === 'Just') && (_v1.b.$ === 'Just')) {\n\t\tvar a = _v1.a.a;\n\t\tvar b = _v1.b.a;\n\t\treturn $elm$core$Maybe$Just(\n\t\t\t_Utils_Tuple2(a, b));\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $coinop_logan$phace$Features$renderHair = function (hair) {\n\tvar hairlineTermPoints = function (_v0) {\n\t\tvar hsStart = _v0.a;\n\t\tvar hsEnd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_Tuple2(\n\t\t\t\t-100,\n\t\t\t\t$coinop_logan$phace$Features$getY(hsStart)),\n\t\t\t_Utils_Tuple2(\n\t\t\t\t100,\n\t\t\t\t$coinop_logan$phace$Features$getY(hsEnd)));\n\t}(\n\t\tA2(\n\t\t\t$coinop_logan$phace$Phace$Types$squashMaybe,\n\t\t\t_Utils_Tuple2(\n\t\t\t\t_Utils_Tuple2(0, 0),\n\t\t\t\t_Utils_Tuple2(0, 0)),\n\t\t\t$coinop_logan$phace$TupleHelpers$extractTuple2Maybe(\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\tA2($elm_community$list_extra$List$Extra$getAt, 0, hair.points),\n\t\t\t\t\tA2($elm_community$list_extra$List$Extra$getAt, 4, hair.points)))));\n\tvar hairPolygonPoints = _Utils_ap(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(-100, 100),\n\t\t\t\thairlineTermPoints.a\n\t\t\t]),\n\t\t_Utils_ap(\n\t\t\thair.points,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\thairlineTermPoints.b,\n\t\t\t\t\t_Utils_Tuple2(100, 100)\n\t\t\t\t])));\n\treturn _List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$svg$Svg$polygon,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$coinop_logan$phace$SvgHelpers$fillColor(hair.color),\n\t\t\t\t\t$elm$svg$Svg$Attributes$stroke('none'),\n\t\t\t\t\t$coinop_logan$phace$SvgHelpers$points(hairPolygonPoints)\n\t\t\t\t]),\n\t\t\t_List_Nil)\n\t\t]);\n};\nvar $TSFoster$elm_tuple_extra$Tuple2$uncurry = F2(\n\tfunction (fn, _v0) {\n\t\tvar a = _v0.a;\n\t\tvar b = _v0.b;\n\t\treturn A2(fn, a, b);\n\t});\nvar $coinop_logan$phace$SvgHelpers$pointToPathCommandStr = function (point) {\n\treturn A2(\n\t\t$TSFoster$elm_tuple_extra$Tuple2$uncurry,\n\t\tF2(\n\t\t\tfunction (x, y) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t' ',\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[x, y]));\n\t\t\t}),\n\t\tA3($elm$core$Tuple$mapBoth, $elm$core$String$fromFloat, $elm$core$String$fromFloat, point));\n};\nvar $coinop_logan$phace$SvgHelpers$pointListToPathCommandStr = A2(\n\t$elm$core$Basics$composeR,\n\t$elm$core$List$map($coinop_logan$phace$SvgHelpers$pointToPathCommandStr),\n\t$elm$core$String$join(', '));\nvar $coinop_logan$phace$SvgHelpers$cubicCurveCommand = F3(\n\tfunction (bc1, bc2, end) {\n\t\treturn 'C' + $coinop_logan$phace$SvgHelpers$pointListToPathCommandStr(\n\t\t\t_List_fromArray(\n\t\t\t\t[bc1, bc2, end]));\n\t});\nvar $coinop_logan$phace$SvgHelpers$moveCommand = function (point) {\n\treturn 'M' + ($coinop_logan$phace$SvgHelpers$pointToPathCommandStr(point) + ' ');\n};\nvar $coinop_logan$phace$SvgHelpers$bezierPath = F2(\n\tfunction (start, segments) {\n\t\treturn $elm$svg$Svg$Attributes$d(\n\t\t\t_Utils_ap(\n\t\t\t\t$coinop_logan$phace$SvgHelpers$moveCommand(start),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t' ',\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (_v0) {\n\t\t\t\t\t\t\tvar b1 = _v0.a;\n\t\t\t\t\t\t\tvar b2 = _v0.b;\n\t\t\t\t\t\t\tvar p = _v0.c;\n\t\t\t\t\t\t\treturn A3($coinop_logan$phace$SvgHelpers$cubicCurveCommand, b1, b2, p);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsegments))));\n\t});\nvar $coinop_logan$phace$Features$negateX = $elm$core$Tuple$mapFirst($elm$core$Basics$negate);\nvar $coinop_logan$phace$Features$renderMouth = function (mouth) {\n\treturn _List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$svg$Svg$path,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$coinop_logan$phace$SvgHelpers$fillColor(mouth.color),\n\t\t\t\t\t$coinop_logan$phace$SvgHelpers$strokeColor(mouth.color),\n\t\t\t\t\t$elm$svg$Svg$Attributes$strokeWidth('6'),\n\t\t\t\t\t$elm$svg$Svg$Attributes$strokeLinejoin('round'),\n\t\t\t\t\tA2(\n\t\t\t\t\t$coinop_logan$phace$SvgHelpers$bezierPath,\n\t\t\t\t\tmouth.startPoint,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\tmouth.bcPoint1,\n\t\t\t\t\t\t\t$coinop_logan$phace$Features$negateX(mouth.bcPoint1),\n\t\t\t\t\t\t\t$coinop_logan$phace$Features$negateX(mouth.startPoint)),\n\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\t$coinop_logan$phace$Features$negateX(mouth.bcPoint2),\n\t\t\t\t\t\t\tmouth.bcPoint2,\n\t\t\t\t\t\t\tmouth.startPoint)\n\t\t\t\t\t\t]))\n\t\t\t\t]),\n\t\t\t_List_Nil)\n\t\t]);\n};\nvar $coinop_logan$phace$Features$renderFeature = function (feature) {\n\tswitch (feature.$) {\n\t\tcase 'FaceColor':\n\t\t\tvar color = feature.a;\n\t\t\treturn $coinop_logan$phace$Features$renderFaceColor(color);\n\t\tcase 'Eye':\n\t\t\tvar eye = feature.a;\n\t\t\treturn $coinop_logan$phace$Features$renderEyes(eye);\n\t\tcase 'Mouth':\n\t\t\tvar mouth = feature.a;\n\t\t\treturn $coinop_logan$phace$Features$renderMouth(mouth);\n\t\tdefault:\n\t\t\tvar hair = feature.a;\n\t\t\treturn $coinop_logan$phace$Features$renderHair(hair);\n\t}\n};\nvar $coinop_logan$phace$Features$generatePhaceFromString = function (fullSrc) {\n\treturn A2(\n\t\t$elm$core$Maybe$map,\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$elm$core$List$map($coinop_logan$phace$Features$renderFeature),\n\t\t\tA2($elm$core$Basics$composeR, $elm$core$List$concat, $coinop_logan$phace$Features$flipVertical)),\n\t\t$coinop_logan$phace$Features$generateFeaturesFromString(fullSrc));\n};\nvar $coinop_logan$phace$Phace$fromHexString = F3(\n\tfunction (src, phaceWidth, phaceHeight) {\n\t\tvar stringIsAllHex = A2(\n\t\t\t$elm$core$List$all,\n\t\t\tfunction (f) {\n\t\t\t\treturn f <= 1;\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\t$coinop_logan$phace$Features$hexCharToFloat,\n\t\t\t\t$elm$core$String$toList(src)));\n\t\treturn stringIsAllHex ? A2(\n\t\t\t$elm$core$Result$fromMaybe,\n\t\t\t$coinop_logan$phace$Phace$SourceTooSmall,\n\t\t\tA2(\n\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t$elm$svg$Svg$svg(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$width(\n\t\t\t\t\t\t\t$elm$core$String$fromInt(phaceWidth)),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$height(\n\t\t\t\t\t\t\t$elm$core$String$fromInt(phaceHeight)),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox('-100 -100 200 200')\n\t\t\t\t\t\t])),\n\t\t\t\t$coinop_logan$phace$Features$generatePhaceFromString(src))) : $elm$core$Result$Err($coinop_logan$phace$Phace$NotHexString);\n\t});\nvar $coinop_logan$phace$Phace$fromEthAddress = F3(\n\tfunction (address, width, height) {\n\t\treturn A2(\n\t\t\t$elm_community$result_extra$Result$Extra$extract,\n\t\t\tA2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t$coinop_logan$phace$Phace$errorToString,\n\t\t\t\tfunction (s) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$text('Malformed ETH address: ' + s)\n\t\t\t\t\t\t\t]));\n\t\t\t\t}),\n\t\t\tA3(\n\t\t\t\t$coinop_logan$phace$Phace$fromHexString,\n\t\t\t\t$coinop_logan$phace$Phace$addressToRelevantString(address),\n\t\t\t\twidth,\n\t\t\t\theight));\n\t});\nvar $author$project$View$Common$phaceElement = F4(\n\tfunction (size, fromAddress, showAddress, onClick) {\n\t\tvar addressOutputEl = function (_v0) {\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignBottom,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(12),\n\t\t\t\t\t\t$author$project$Helpers$Element$moveToFront,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(2),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color($author$project$Helpers$Element$black),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$black),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(3),\n\t\t\t\t\t\t$author$project$View$Attrs$typeFont\n\t\t\t\t\t]),\n\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$addressToChecksumString(fromAddress)));\n\t\t};\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\tshowAddress ? _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$inFront(\n\t\t\t\t\taddressOutputEl(_Utils_Tuple0)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$alignTop\n\t\t\t\t]) : _List_fromArray(\n\t\t\t\t[$mdgriffith$elm_ui$Element$alignTop]),\n\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(5),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$clip,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t\t\t$author$project$Helpers$Element$onClickNoPropagation(onClick)\n\t\t\t\t\t]),\n\t\t\t\t$mdgriffith$elm_ui$Element$html(\n\t\t\t\t\tA3($coinop_logan$phace$Phace$fromEthAddress, fromAddress, size, size))));\n\t});\nvar $author$project$View$Img$speechBubble = F2(\n\tfunction (size, color) {\n\t\treturn $author$project$View$Img$wrap(\n\t\t\tA2(\n\t\t\t\t$elm$svg$Svg$svg,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox('0 0 66.32 43.94'),\n\t\t\t\t\t\t$author$project$View$Img$height(size),\n\t\t\t\t\t\t$author$project$View$Img$width(size)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill(\n\t\t\t\t\t\t\t\t$author$project$View$Img$rgb(color)),\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M55.54 0H10.78A10.78 10.78 0 000 10.78V25.7a10.78 10.78 0 0010.78 10.78h2.64l2.33 7.46 3.73-7.46h36.06A10.78 10.78 0 0066.32 25.7V10.78A10.78 10.78 0 0055.54 0z')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t])));\n\t});\nvar $author$project$Theme$darkGreen = A3($mdgriffith$elm_ui$Element$rgb255, 0, 120, 0);\nvar $cuducos$elm_format_number$FormatNumber$Locales$Exact = function (a) {\n\treturn {$: 'Exact', a: a};\n};\nvar $cuducos$elm_format_number$FormatNumber$Parser$FormattedNumber = F5(\n\tfunction (original, integers, decimals, prefix, suffix) {\n\t\treturn {decimals: decimals, integers: integers, original: original, prefix: prefix, suffix: suffix};\n\t});\nvar $cuducos$elm_format_number$FormatNumber$Parser$Negative = {$: 'Negative'};\nvar $cuducos$elm_format_number$FormatNumber$Parser$Positive = {$: 'Positive'};\nvar $cuducos$elm_format_number$FormatNumber$Parser$Zero = {$: 'Zero'};\nvar $cuducos$elm_format_number$FormatNumber$Parser$classify = function (formatted) {\n\tvar onlyZeros = A2(\n\t\t$elm$core$String$all,\n\t\tfunction (_char) {\n\t\t\treturn _Utils_eq(\n\t\t\t\t_char,\n\t\t\t\t_Utils_chr('0'));\n\t\t},\n\t\t$elm$core$String$concat(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$append,\n\t\t\t\tformatted.integers,\n\t\t\t\t$elm$core$List$singleton(formatted.decimals))));\n\treturn onlyZeros ? $cuducos$elm_format_number$FormatNumber$Parser$Zero : ((formatted.original < 0) ? $cuducos$elm_format_number$FormatNumber$Parser$Negative : $cuducos$elm_format_number$FormatNumber$Parser$Positive);\n};\nvar $elm$core$String$filter = _String_filter;\nvar $cuducos$elm_format_number$FormatNumber$Parser$addZerosToFit = F2(\n\tfunction (desiredLength, value) {\n\t\tvar length = $elm$core$String$length(value);\n\t\tvar missing = (_Utils_cmp(length, desiredLength) < 0) ? $elm$core$Basics$abs(desiredLength - length) : 0;\n\t\treturn _Utils_ap(\n\t\t\tvalue,\n\t\t\tA2($elm$core$String$repeat, missing, '0'));\n\t});\nvar $cuducos$elm_format_number$FormatNumber$Parser$removeZeros = function (decimals) {\n\treturn (A2($elm$core$String$right, 1, decimals) !== '0') ? decimals : $cuducos$elm_format_number$FormatNumber$Parser$removeZeros(\n\t\tA2($elm$core$String$dropRight, 1, decimals));\n};\nvar $cuducos$elm_format_number$FormatNumber$Parser$getDecimals = F2(\n\tfunction (locale, digits) {\n\t\tvar _v0 = locale.decimals;\n\t\tswitch (_v0.$) {\n\t\t\tcase 'Max':\n\t\t\t\treturn $cuducos$elm_format_number$FormatNumber$Parser$removeZeros(digits);\n\t\t\tcase 'Exact':\n\t\t\t\treturn digits;\n\t\t\tdefault:\n\t\t\t\tvar min = _v0.a;\n\t\t\t\treturn A2($cuducos$elm_format_number$FormatNumber$Parser$addZerosToFit, min, digits);\n\t\t}\n\t});\nvar $cuducos$elm_format_number$FormatNumber$Parser$splitInParts = F2(\n\tfunction (locale, value) {\n\t\tvar toString = function () {\n\t\t\tvar _v1 = locale.decimals;\n\t\t\tswitch (_v1.$) {\n\t\t\t\tcase 'Max':\n\t\t\t\t\tvar max = _v1.a;\n\t\t\t\t\treturn $myrho$elm_round$Round$round(max);\n\t\t\t\tcase 'Min':\n\t\t\t\t\treturn $elm$core$String$fromFloat;\n\t\t\t\tdefault:\n\t\t\t\t\tvar exact = _v1.a;\n\t\t\t\t\treturn $myrho$elm_round$Round$round(exact);\n\t\t\t}\n\t\t}();\n\t\tvar asList = A2(\n\t\t\t$elm$core$String$split,\n\t\t\t'.',\n\t\t\ttoString(value));\n\t\tvar decimals = function () {\n\t\t\tvar _v0 = $elm$core$List$tail(asList);\n\t\t\tif (_v0.$ === 'Just') {\n\t\t\t\tvar values = _v0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t'',\n\t\t\t\t\t$elm$core$List$head(values));\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}();\n\t\tvar integers = A2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t'',\n\t\t\t$elm$core$List$head(asList));\n\t\treturn _Utils_Tuple2(integers, decimals);\n\t});\nvar $cuducos$elm_format_number$FormatNumber$Parser$splitThousands = function (integers) {\n\tvar reversedSplitThousands = function (value) {\n\t\treturn ($elm$core$String$length(value) > 3) ? A2(\n\t\t\t$elm$core$List$cons,\n\t\t\tA2($elm$core$String$right, 3, value),\n\t\t\treversedSplitThousands(\n\t\t\t\tA2($elm$core$String$dropRight, 3, value))) : _List_fromArray(\n\t\t\t[value]);\n\t};\n\treturn $elm$core$List$reverse(\n\t\treversedSplitThousands(integers));\n};\nvar $cuducos$elm_format_number$FormatNumber$Parser$parse = F2(\n\tfunction (locale, original) {\n\t\tvar parts = A2($cuducos$elm_format_number$FormatNumber$Parser$splitInParts, locale, original);\n\t\tvar integers = $cuducos$elm_format_number$FormatNumber$Parser$splitThousands(\n\t\t\tA2($elm$core$String$filter, $elm$core$Char$isDigit, parts.a));\n\t\tvar decimals = A2($cuducos$elm_format_number$FormatNumber$Parser$getDecimals, locale, parts.b);\n\t\tvar partial = A5($cuducos$elm_format_number$FormatNumber$Parser$FormattedNumber, original, integers, decimals, '', '');\n\t\tvar _v0 = $cuducos$elm_format_number$FormatNumber$Parser$classify(partial);\n\t\tswitch (_v0.$) {\n\t\t\tcase 'Negative':\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tpartial,\n\t\t\t\t\t{prefix: locale.negativePrefix, suffix: locale.negativeSuffix});\n\t\t\tcase 'Positive':\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tpartial,\n\t\t\t\t\t{prefix: locale.positivePrefix, suffix: locale.positiveSuffix});\n\t\t\tdefault:\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tpartial,\n\t\t\t\t\t{prefix: locale.zeroPrefix, suffix: locale.zeroSuffix});\n\t\t}\n\t});\nvar $cuducos$elm_format_number$FormatNumber$Stringfy$formatDecimals = F2(\n\tfunction (locale, decimals) {\n\t\treturn (decimals === '') ? '' : _Utils_ap(locale.decimalSeparator, decimals);\n\t});\nvar $cuducos$elm_format_number$FormatNumber$Stringfy$stringfy = F2(\n\tfunction (locale, formatted) {\n\t\tvar stringfyDecimals = $cuducos$elm_format_number$FormatNumber$Stringfy$formatDecimals(locale);\n\t\tvar integers = A2($elm$core$String$join, locale.thousandSeparator, formatted.integers);\n\t\tvar decimals = stringfyDecimals(formatted.decimals);\n\t\treturn $elm$core$String$concat(\n\t\t\t_List_fromArray(\n\t\t\t\t[formatted.prefix, integers, decimals, formatted.suffix]));\n\t});\nvar $cuducos$elm_format_number$FormatNumber$format = F2(\n\tfunction (locale, number_) {\n\t\treturn A2(\n\t\t\t$cuducos$elm_format_number$FormatNumber$Stringfy$stringfy,\n\t\t\tlocale,\n\t\t\tA2($cuducos$elm_format_number$FormatNumber$Parser$parse, locale, number_));\n\t});\nvar $cuducos$elm_format_number$FormatNumber$Locales$Min = function (a) {\n\treturn {$: 'Min', a: a};\n};\nvar $cuducos$elm_format_number$FormatNumber$Locales$base = {\n\tdecimalSeparator: '.',\n\tdecimals: $cuducos$elm_format_number$FormatNumber$Locales$Min(0),\n\tnegativePrefix: '−',\n\tnegativeSuffix: '',\n\tpositivePrefix: '',\n\tpositiveSuffix: '',\n\tthousandSeparator: '',\n\tzeroPrefix: '',\n\tzeroSuffix: ''\n};\nvar $cuducos$elm_format_number$FormatNumber$Locales$usLocale = _Utils_update(\n\t$cuducos$elm_format_number$FormatNumber$Locales$base,\n\t{\n\t\tdecimals: $cuducos$elm_format_number$FormatNumber$Locales$Exact(2),\n\t\tthousandSeparator: ','\n\t});\nvar $author$project$FormatFloat$formatFloat = function (numDecimals) {\n\treturn $cuducos$elm_format_number$FormatNumber$format(\n\t\t_Utils_update(\n\t\t\t$cuducos$elm_format_number$FormatNumber$Locales$usLocale,\n\t\t\t{\n\t\t\t\tdecimals: $cuducos$elm_format_number$FormatNumber$Locales$Exact(numDecimals)\n\t\t\t}));\n};\nvar $author$project$Misc$formatDollar = A2(\n\t$elm$core$Basics$composeR,\n\t$author$project$TokenValue$toFloatWithWarning,\n\t$author$project$FormatFloat$formatFloat(2));\nvar $author$project$View$Post$viewAmount = F2(\n\tfunction (color, amount) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(3),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(3),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(22),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(color),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($author$project$View$Img$dollar, 22, $author$project$Helpers$Element$white),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t$author$project$Misc$formatDollar(amount))\n\t\t\t\t]));\n\t});\nvar $author$project$View$Post$viewAccounting = F2(\n\tfunction (_v0, accounting) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($author$project$View$Post$viewAmount, $author$project$Theme$darkRed, accounting.totalBurned),\n\t\t\t\t\tA2($author$project$View$Post$viewAmount, $author$project$Theme$darkGreen, accounting.totalTipped)\n\t\t\t\t]));\n\t});\nvar $author$project$Types$PostInputChange = function (a) {\n\treturn {$: 'PostInputChange', a: a};\n};\nvar $author$project$Types$SubmitPostTx = {$: 'SubmitPostTx'};\nvar $author$project$Chain$getName = function (chain) {\n\tif (chain.$ === 'Eth') {\n\t\treturn 'Eth';\n\t} else {\n\t\treturn 'xDai';\n\t}\n};\nvar $author$project$Types$Burn = {$: 'Burn'};\nvar $author$project$Types$SetPostInput = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'SetPostInput', a: a, b: b};\n\t});\nvar $elm$html$Html$Attributes$title = $elm$html$Html$Attributes$stringProperty('title');\nvar $author$project$Helpers$Element$withTitle = function (title) {\n\treturn $mdgriffith$elm_ui$Element$htmlAttribute(\n\t\t$elm$html$Html$Attributes$title(title));\n};\nvar $author$project$View$Post$supportBurnButton = function (postId) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t$mdgriffith$elm_ui$Element$px(40)),\n\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$darkRed),\n\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t$mdgriffith$elm_ui$Element$px(40)),\n\t\t\t\t$author$project$Helpers$Element$withTitle('Burn to increase the visibility of this post.'),\n\t\t\t\t$author$project$View$Attrs$hover\n\t\t\t]),\n\t\t{\n\t\t\tlabel: A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX, $mdgriffith$elm_ui$Element$centerY]),\n\t\t\t\tA2($author$project$View$Img$dollar, 30, $author$project$Helpers$Element$white)),\n\t\t\tonPress: $elm$core$Maybe$Just(\n\t\t\t\tA2($author$project$Types$SetPostInput, postId, $author$project$Types$Burn))\n\t\t});\n};\nvar $author$project$Types$Tip = {$: 'Tip'};\nvar $author$project$View$Post$supportTipButton = function (postId) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t$mdgriffith$elm_ui$Element$px(40)),\n\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$darkGreen),\n\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t$mdgriffith$elm_ui$Element$px(40)),\n\t\t\t\t$author$project$Helpers$Element$withTitle('Tip for this post, rewarding the author.'),\n\t\t\t\t$author$project$View$Attrs$hover\n\t\t\t]),\n\t\t{\n\t\t\tlabel: A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX, $mdgriffith$elm_ui$Element$centerY]),\n\t\t\t\tA2($author$project$View$Img$dollar, 30, $author$project$Helpers$Element$white)),\n\t\t\tonPress: $elm$core$Maybe$Just(\n\t\t\t\tA2($author$project$Types$SetPostInput, postId, $author$project$Types$Tip))\n\t\t});\n};\nvar $author$project$View$Post$viewActions = function (post) {\n\treturn A2(\n\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$View$Post$supportBurnButton(post.id),\n\t\t\t\t\t$author$project$View$Post$supportTipButton(post.id)\n\t\t\t\t])),\n\t\tfunction (state) {\n\t\t\tvar name = $author$project$Chain$getName(post.chain);\n\t\t\tvar title = function () {\n\t\t\t\tvar _v0 = state.showInput;\n\t\t\t\tif (_v0.$ === 'Tip') {\n\t\t\t\t\treturn 'Tip ' + (name + ' for this post, rewarding the author.');\n\t\t\t\t} else {\n\t\t\t\t\treturn 'Burn ' + (name + ' to increase the visibility of this post.');\n\t\t\t\t}\n\t\t\t}();\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t$author$project$View$Attrs$sansSerifFont\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(title)\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($author$project$View$Img$dollar, 30, $author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$text,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$black)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$Input$labelHidden(''),\n\t\t\t\t\t\t\t\t\tonChange: $author$project$Types$PostInputChange,\n\t\t\t\t\t\t\t\t\tplaceholder: $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$placeholder,\n\t\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('00.00'))),\n\t\t\t\t\t\t\t\t\ttext: state.input\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Common$whenJust,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\t$elm$core$List$singleton,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph(\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$slightRound,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$black)\n\t\t\t\t\t\t\t\t\t\t])))),\n\t\t\t\t\t\tstate.error),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(20)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$author$project$View$Common$cancel($author$project$Types$CancelPostInput),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$orange),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$roundBorder,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$hover,\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$black)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: state.inProgress ? A2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Common$spinner, 20, $author$project$Helpers$Element$black)) : $mdgriffith$elm_ui$Element$text('Submit'),\n\t\t\t\t\t\t\t\t\tonPress: state.inProgress ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just($author$project$Types$SubmitPostTx)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]));\n\t\t});\n};\nvar $author$project$Theme$ethereum = A3($mdgriffith$elm_ui$Element$rgb255, 37, 57, 249);\nvar $author$project$Theme$xDai = A3($mdgriffith$elm_ui$Element$rgb255, 7, 132, 112);\nvar $author$project$Chain$getColor = function (chain) {\n\tif (chain.$ === 'XDai') {\n\t\treturn $author$project$Theme$xDai;\n\t} else {\n\t\treturn $author$project$Theme$ethereum;\n\t}\n};\nvar $author$project$View$Common$viewCard = function (post) {\n\tvar col = $author$project$Chain$getColor(post.chain);\n\tvar block = $mdgriffith$elm_ui$Element$text(\n\t\t'@' + $elm$core$String$fromInt(post.id.block));\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$author$project$View$Attrs$hover,\n\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(col),\n\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t$author$project$View$Attrs$roundBorder,\n\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 25, 10),\n\t\t\t\t$author$project$View$Attrs$sansSerifFont\n\t\t\t]),\n\t\t{\n\t\t\tlabel: A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(17),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(20)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$Font$bold]),\n\t\t\t\t\t\t\t\t$author$project$View$Common$viewChain(post.chain)),\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\turl: A2($author$project$Chain$txUrl, post.chain, post.txHash)\n\t\t});\n};\nvar $author$project$View$Common$verticalRule = function (col) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$el,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t$mdgriffith$elm_ui$Element$px(1)),\n\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(col)\n\t\t\t]),\n\t\t$mdgriffith$elm_ui$Element$none);\n};\nvar $author$project$Helpers$Time$monthToInt = function (m) {\n\tswitch (m.$) {\n\t\tcase 'Jan':\n\t\t\treturn 1;\n\t\tcase 'Feb':\n\t\t\treturn 2;\n\t\tcase 'Mar':\n\t\t\treturn 3;\n\t\tcase 'Apr':\n\t\t\treturn 4;\n\t\tcase 'May':\n\t\t\treturn 5;\n\t\tcase 'Jun':\n\t\t\treturn 6;\n\t\tcase 'Jul':\n\t\t\treturn 7;\n\t\tcase 'Aug':\n\t\t\treturn 8;\n\t\tcase 'Sep':\n\t\t\treturn 9;\n\t\tcase 'Oct':\n\t\t\treturn 10;\n\t\tcase 'Nov':\n\t\t\treturn 11;\n\t\tdefault:\n\t\t\treturn 12;\n\t}\n};\nvar $elm$time$Time$flooredDiv = F2(\n\tfunction (numerator, denominator) {\n\t\treturn $elm$core$Basics$floor(numerator / denominator);\n\t});\nvar $elm$time$Time$toAdjustedMinutesHelp = F3(\n\tfunction (defaultOffset, posixMinutes, eras) {\n\t\ttoAdjustedMinutesHelp:\n\t\twhile (true) {\n\t\t\tif (!eras.b) {\n\t\t\t\treturn posixMinutes + defaultOffset;\n\t\t\t} else {\n\t\t\t\tvar era = eras.a;\n\t\t\t\tvar olderEras = eras.b;\n\t\t\t\tif (_Utils_cmp(era.start, posixMinutes) < 0) {\n\t\t\t\t\treturn posixMinutes + era.offset;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$defaultOffset = defaultOffset,\n\t\t\t\t\t\t$temp$posixMinutes = posixMinutes,\n\t\t\t\t\t\t$temp$eras = olderEras;\n\t\t\t\t\tdefaultOffset = $temp$defaultOffset;\n\t\t\t\t\tposixMinutes = $temp$posixMinutes;\n\t\t\t\t\teras = $temp$eras;\n\t\t\t\t\tcontinue toAdjustedMinutesHelp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$time$Time$toAdjustedMinutes = F2(\n\tfunction (_v0, time) {\n\t\tvar defaultOffset = _v0.a;\n\t\tvar eras = _v0.b;\n\t\treturn A3(\n\t\t\t$elm$time$Time$toAdjustedMinutesHelp,\n\t\t\tdefaultOffset,\n\t\t\tA2(\n\t\t\t\t$elm$time$Time$flooredDiv,\n\t\t\t\t$elm$time$Time$posixToMillis(time),\n\t\t\t\t60000),\n\t\t\teras);\n\t});\nvar $elm$time$Time$toCivil = function (minutes) {\n\tvar rawDay = A2($elm$time$Time$flooredDiv, minutes, 60 * 24) + 719468;\n\tvar era = (((rawDay >= 0) ? rawDay : (rawDay - 146096)) / 146097) | 0;\n\tvar dayOfEra = rawDay - (era * 146097);\n\tvar yearOfEra = ((((dayOfEra - ((dayOfEra / 1460) | 0)) + ((dayOfEra / 36524) | 0)) - ((dayOfEra / 146096) | 0)) / 365) | 0;\n\tvar dayOfYear = dayOfEra - (((365 * yearOfEra) + ((yearOfEra / 4) | 0)) - ((yearOfEra / 100) | 0));\n\tvar mp = (((5 * dayOfYear) + 2) / 153) | 0;\n\tvar month = mp + ((mp < 10) ? 3 : (-9));\n\tvar year = yearOfEra + (era * 400);\n\treturn {\n\t\tday: (dayOfYear - ((((153 * mp) + 2) / 5) | 0)) + 1,\n\t\tmonth: month,\n\t\tyear: year + ((month <= 2) ? 1 : 0)\n\t};\n};\nvar $elm$time$Time$toDay = F2(\n\tfunction (zone, time) {\n\t\treturn $elm$time$Time$toCivil(\n\t\t\tA2($elm$time$Time$toAdjustedMinutes, zone, time)).day;\n\t});\nvar $elm$time$Time$toHour = F2(\n\tfunction (zone, time) {\n\t\treturn A2(\n\t\t\t$elm$core$Basics$modBy,\n\t\t\t24,\n\t\t\tA2(\n\t\t\t\t$elm$time$Time$flooredDiv,\n\t\t\t\tA2($elm$time$Time$toAdjustedMinutes, zone, time),\n\t\t\t\t60));\n\t});\nvar $elm$time$Time$toMinute = F2(\n\tfunction (zone, time) {\n\t\treturn A2(\n\t\t\t$elm$core$Basics$modBy,\n\t\t\t60,\n\t\t\tA2($elm$time$Time$toAdjustedMinutes, zone, time));\n\t});\nvar $elm$time$Time$Apr = {$: 'Apr'};\nvar $elm$time$Time$Aug = {$: 'Aug'};\nvar $elm$time$Time$Dec = {$: 'Dec'};\nvar $elm$time$Time$Feb = {$: 'Feb'};\nvar $elm$time$Time$Jan = {$: 'Jan'};\nvar $elm$time$Time$Jul = {$: 'Jul'};\nvar $elm$time$Time$Jun = {$: 'Jun'};\nvar $elm$time$Time$Mar = {$: 'Mar'};\nvar $elm$time$Time$May = {$: 'May'};\nvar $elm$time$Time$Nov = {$: 'Nov'};\nvar $elm$time$Time$Oct = {$: 'Oct'};\nvar $elm$time$Time$Sep = {$: 'Sep'};\nvar $elm$time$Time$toMonth = F2(\n\tfunction (zone, time) {\n\t\tvar _v0 = $elm$time$Time$toCivil(\n\t\t\tA2($elm$time$Time$toAdjustedMinutes, zone, time)).month;\n\t\tswitch (_v0) {\n\t\t\tcase 1:\n\t\t\t\treturn $elm$time$Time$Jan;\n\t\t\tcase 2:\n\t\t\t\treturn $elm$time$Time$Feb;\n\t\t\tcase 3:\n\t\t\t\treturn $elm$time$Time$Mar;\n\t\t\tcase 4:\n\t\t\t\treturn $elm$time$Time$Apr;\n\t\t\tcase 5:\n\t\t\t\treturn $elm$time$Time$May;\n\t\t\tcase 6:\n\t\t\t\treturn $elm$time$Time$Jun;\n\t\t\tcase 7:\n\t\t\t\treturn $elm$time$Time$Jul;\n\t\t\tcase 8:\n\t\t\t\treturn $elm$time$Time$Aug;\n\t\t\tcase 9:\n\t\t\t\treturn $elm$time$Time$Sep;\n\t\t\tcase 10:\n\t\t\t\treturn $elm$time$Time$Oct;\n\t\t\tcase 11:\n\t\t\t\treturn $elm$time$Time$Nov;\n\t\t\tdefault:\n\t\t\t\treturn $elm$time$Time$Dec;\n\t\t}\n\t});\nvar $elm$time$Time$toYear = F2(\n\tfunction (zone, time) {\n\t\treturn $elm$time$Time$toCivil(\n\t\t\tA2($elm$time$Time$toAdjustedMinutes, zone, time)).year;\n\t});\nvar $elm$time$Time$utc = A2($elm$time$Time$Zone, 0, _List_Nil);\nvar $author$project$Misc$formatPosix = function (t) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t' ',\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t'-',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$core$String$fromInt(\n\t\t\t\t\t\tA2($elm$time$Time$toYear, $elm$time$Time$utc, t)),\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$core$String$padLeft,\n\t\t\t\t\t\t2,\n\t\t\t\t\t\t_Utils_chr('0'),\n\t\t\t\t\t\t$elm$core$String$fromInt(\n\t\t\t\t\t\t\t$author$project$Helpers$Time$monthToInt(\n\t\t\t\t\t\t\t\tA2($elm$time$Time$toMonth, $elm$time$Time$utc, t)))),\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$core$String$padLeft,\n\t\t\t\t\t\t2,\n\t\t\t\t\t\t_Utils_chr('0'),\n\t\t\t\t\t\t$elm$core$String$fromInt(\n\t\t\t\t\t\t\tA2($elm$time$Time$toDay, $elm$time$Time$utc, t)))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t':',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$core$String$padLeft,\n\t\t\t\t\t\t2,\n\t\t\t\t\t\t_Utils_chr('0'),\n\t\t\t\t\t\t$elm$core$String$fromInt(\n\t\t\t\t\t\t\tA2($elm$time$Time$toHour, $elm$time$Time$utc, t))),\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$core$String$padLeft,\n\t\t\t\t\t\t2,\n\t\t\t\t\t\t_Utils_chr('0'),\n\t\t\t\t\t\t$elm$core$String$fromInt(\n\t\t\t\t\t\t\tA2($elm$time$Time$toMinute, $elm$time$Time$utc, t)))\n\t\t\t\t\t])),\n\t\t\t\t'(UTC)'\n\t\t\t]));\n};\nvar $author$project$Helpers$Time$HumanReadableInterval = F6(\n\tfunction (years, months, days, hours, min, sec) {\n\t\treturn {days: days, hours: hours, min: min, months: months, sec: sec, years: years};\n\t});\nvar $author$project$Helpers$Time$posixToMillisBigInt = function (t) {\n\treturn $cmditch$elm_bigint$BigInt$fromInt(\n\t\t$elm$time$Time$posixToMillis(t));\n};\nvar $author$project$Helpers$Time$posixToSecondsBigInt = function (t) {\n\treturn A2(\n\t\t$cmditch$elm_bigint$BigInt$div,\n\t\t$author$project$Helpers$Time$posixToMillisBigInt(t),\n\t\t$cmditch$elm_bigint$BigInt$fromInt(1000));\n};\nvar $author$project$Helpers$BigInt$toInt = function (val) {\n\tvar converted = $elm$core$String$toInt(\n\t\t$cmditch$elm_bigint$BigInt$toString(val));\n\treturn _Utils_eq(\n\t\tA2($elm$core$Maybe$map, $cmditch$elm_bigint$BigInt$fromInt, converted),\n\t\t$elm$core$Maybe$Just(val)) ? converted : $elm$core$Maybe$Nothing;\n};\nvar $author$project$Helpers$BigInt$toIntWithWarning = function (val) {\n\tvar _v0 = $author$project$Helpers$BigInt$toInt(val);\n\tif (_v0.$ === 'Just') {\n\t\tvar res = _v0.a;\n\t\treturn res;\n\t} else {\n\t\tvar _v1 = A2(\n\t\t\t$author$project$MaybeDebugLog$maybeDebugLog,\n\t\t\t'Warning! BigInt to Int conversion failed!',\n\t\t\t$cmditch$elm_bigint$BigInt$toString(val));\n\t\treturn 0;\n\t}\n};\nvar $author$project$Helpers$Time$toHumanReadableInterval = function (t) {\n\tvar secsInYears = $author$project$Helpers$Time$posixToSecondsBigInt(t);\n\tvar defaultToZeros = $elm$core$Maybe$withDefault(\n\t\t_Utils_Tuple2(\n\t\t\t$cmditch$elm_bigint$BigInt$fromInt(0),\n\t\t\t$cmditch$elm_bigint$BigInt$fromInt(0)));\n\treturn function (_v0) {\n\t\tvar years = _v0.a;\n\t\tvar secsInMonths = _v0.b;\n\t\treturn function (_v1) {\n\t\t\tvar months = _v1.a;\n\t\t\tvar secsInDays = _v1.b;\n\t\t\treturn function (_v2) {\n\t\t\t\tvar days = _v2.a;\n\t\t\t\tvar secsInHours = _v2.b;\n\t\t\t\treturn function (_v3) {\n\t\t\t\t\tvar hours = _v3.a;\n\t\t\t\t\tvar secsInMin = _v3.b;\n\t\t\t\t\treturn function (_v4) {\n\t\t\t\t\t\tvar min = _v4.a;\n\t\t\t\t\t\tvar sec = _v4.b;\n\t\t\t\t\t\treturn A6(\n\t\t\t\t\t\t\t$author$project$Helpers$Time$HumanReadableInterval,\n\t\t\t\t\t\t\t$author$project$Helpers$BigInt$toIntWithWarning(years),\n\t\t\t\t\t\t\t$author$project$Helpers$BigInt$toIntWithWarning(months),\n\t\t\t\t\t\t\t$author$project$Helpers$BigInt$toIntWithWarning(days),\n\t\t\t\t\t\t\t$author$project$Helpers$BigInt$toIntWithWarning(hours),\n\t\t\t\t\t\t\t$author$project$Helpers$BigInt$toIntWithWarning(min),\n\t\t\t\t\t\t\t$author$project$Helpers$BigInt$toIntWithWarning(sec));\n\t\t\t\t\t}(\n\t\t\t\t\t\tdefaultToZeros(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$divmod,\n\t\t\t\t\t\t\t\tsecsInMin,\n\t\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromInt(60))));\n\t\t\t\t}(\n\t\t\t\t\tdefaultToZeros(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$divmod,\n\t\t\t\t\t\t\tsecsInHours,\n\t\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromInt(60 * 60))));\n\t\t\t}(\n\t\t\t\tdefaultToZeros(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$divmod,\n\t\t\t\t\t\tsecsInDays,\n\t\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromInt((60 * 60) * 24))));\n\t\t}(\n\t\t\tdefaultToZeros(\n\t\t\t\tA2(\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$divmod,\n\t\t\t\t\tsecsInMonths,\n\t\t\t\t\t$cmditch$elm_bigint$BigInt$fromInt(((60 * 60) * 24) * 30))));\n\t}(\n\t\tdefaultToZeros(\n\t\t\tA2(\n\t\t\t\t$cmditch$elm_bigint$BigInt$divmod,\n\t\t\t\tsecsInYears,\n\t\t\t\t$cmditch$elm_bigint$BigInt$fromInt(((60 * 60) * 24) * 365))));\n};\nvar $author$project$Helpers$Time$roundToSingleUnit = function (t) {\n\tvar hri = $author$project$Helpers$Time$toHumanReadableInterval(t);\n\tvar _v0 = (hri.years > 0) ? _Utils_Tuple2(hri.years, 'year') : ((hri.months > 0) ? _Utils_Tuple2(hri.months, 'month') : ((hri.days > 0) ? _Utils_Tuple2(hri.days, 'day') : ((hri.hours > 0) ? _Utils_Tuple2(hri.hours, 'hour') : ((hri.min > 0) ? _Utils_Tuple2(hri.min, 'minute') : _Utils_Tuple2(hri.sec, 'second')))));\n\tvar num = _v0.a;\n\tvar unitStr = _v0.b;\n\tvar pluralizedUnitStr = (num > 1) ? (unitStr + 's') : unitStr;\n\treturn $elm$core$String$fromInt(num) + (' ' + pluralizedUnitStr);\n};\nvar $author$project$View$Attrs$title = A2($elm$core$Basics$composeR, $elm$html$Html$Attributes$title, $mdgriffith$elm_ui$Element$htmlAttribute);\nvar $author$project$View$Common$viewTiming = function (now) {\n\treturn A2(\n\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_List_fromArray(\n\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\tA2($author$project$View$Common$spinner, 20, $author$project$Helpers$Element$white)),\n\t\tfunction (time) {\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$View$Attrs$title(\n\t\t\t\t\t\t$author$project$Misc$formatPosix(time))\n\t\t\t\t\t]),\n\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\tfunction (s) {\n\t\t\t\t\t\treturn s + ' ago';\n\t\t\t\t\t}(\n\t\t\t\t\t\t$author$project$Helpers$Time$roundToSingleUnit(\n\t\t\t\t\t\t\tA2($author$project$Helpers$Time$sub, now, time)))));\n\t\t});\n};\nvar $author$project$View$Post$viewCardMobile = F3(\n\tfunction (timestamp, now, post) {\n\t\tvar timing = A2($author$project$View$Common$viewTiming, now, timestamp);\n\t\tvar col = $author$project$Chain$getColor(post.chain);\n\t\tvar block = $mdgriffith$elm_ui$Element$text(\n\t\t\t'@' + $elm$core$String$fromInt(post.id.block));\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$View$Attrs$hover,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(col),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t$author$project$View$Attrs$roundBorder,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t$author$project$View$Attrs$sansSerifFont,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\t{\n\t\t\t\tlabel: A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spaceEvenly,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(17),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$author$project$View$Common$viewChain(post.chain),\n\t\t\t\t\t\t\t$author$project$View$Common$verticalRule($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\tblock,\n\t\t\t\t\t\t\t$author$project$View$Common$verticalRule($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\ttiming\n\t\t\t\t\t\t])),\n\t\t\t\turl: A2($author$project$Chain$txUrl, post.chain, post.txHash)\n\t\t\t});\n\t});\nvar $author$project$View$Post$viewContent = F2(\n\tfunction (device, post) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$author$project$View$Attrs$sansSerifFont,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Common$whenJust,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t$elm$core$List$singleton,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph(\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$Font$bold])))),\n\t\t\t\t\tpost.content.title),\n\t\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Common$whenJust,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t$elm$core$List$singleton,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph(\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$Font$italic])))),\n\t\t\t\t\tpost.content.desc),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(100)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$clip\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2($author$project$View$Markdown$renderString, device, post.content.body))\n\t\t\t\t]));\n\t});\nvar $author$project$View$Post$viewReplies = function (replies) {\n\tvar len = $elm$core$Set$size(replies);\n\tvar word = (len === 1) ? 'reply' : 'replies';\n\treturn $elm$core$String$fromInt(len) + (' ' + word);\n};\nvar $author$project$View$Post$view = F9(\n\tfunction (dProfile, timestamp, now, replies, accounting, state, topic, wallet, post) {\n\t\tvar showActions = A3(\n\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\tfalse,\n\t\t\tA2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.chain;\n\t\t\t\t},\n\t\t\t\t$elm$core$Basics$eq(post.chain)),\n\t\t\twallet);\n\t\tvar isMobile = _Utils_eq(dProfile, $author$project$Helpers$Element$Mobile);\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$author$project$View$Attrs$typeFont\n\t\t\t\t]),\n\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Common$whenJust,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Post$viewAccounting(dProfile),\n\t\t\t\t\t\t\t\t\t\taccounting),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\t\t\t\t\t\t!isMobile,\n\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Common$viewTiming, now, timestamp))\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spaceEvenly\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignTop\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Common$whenJust,\n\t\t\t\t\t\t\t\t\t\t\tfunction (t) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(30),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$hover,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('#' + t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonPress: $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Types$GotoView(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Types$ViewTopic(t)))\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\ttopic)),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\t\t\t\t\t\t!isMobile,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Common$viewCard(post))\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\t\tisMobile,\n\t\t\t\t\t\tA3($author$project$View$Post$viewCardMobile, timestamp, now, post)),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t\t$author$project$View$Common$phaceElement,\n\t\t\t\t\t\t\t\t60,\n\t\t\t\t\t\t\t\tpost.author,\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t$author$project$Types$ShowOrHideAddress(\n\t\t\t\t\t\t\t\t\t$author$project$Types$PhaceForPublishedPost(post.id))),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Post$linkToPost,\n\t\t\t\t\t\t\t\t\t\tpost.id,\n\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Post$viewContent, dProfile, post)),\n\t\t\t\t\t\t\t\t\t\t(isMobile ? $mdgriffith$elm_ui$Element$column(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t\t\t\t\t])) : $mdgriffith$elm_ui$Element$row(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t\t\t\t\t])))(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Theme$almostWhite),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(17),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$alignRight, $mdgriffith$elm_ui$Element$alignBottom]),\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Post$linkToPost,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(23)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Img$speechBubble, 17, $author$project$Theme$almostWhite),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Post$viewReplies(replies))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]))))),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\t\t\t\t\t\t\t\tshowActions,\n\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Post$viewActions, post, state))\n\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])));\n\t});\nvar $author$project$View$Home$viewPost = F3(\n\tfunction (model, wallet, post) {\n\t\treturn A9(\n\t\t\t$author$project$View$Post$view,\n\t\t\tmodel.dProfile,\n\t\t\tA2($elm$core$Dict$get, post.core.id.block, model.blockTimes),\n\t\t\tmodel.now,\n\t\t\tA2(\n\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t$elm$core$Set$empty,\n\t\t\t\tA2($elm$core$Dict$get, post.core.key, model.replyIds)),\n\t\t\tA2($elm$core$Dict$get, post.core.key, model.accounting),\n\t\t\tA2(\n\t\t\t\t$elm$core$Maybe$andThen,\n\t\t\t\tfunction (x) {\n\t\t\t\t\treturn _Utils_eq(x.id, post.core.id) ? $elm$core$Maybe$Just(x) : $elm$core$Maybe$Nothing;\n\t\t\t\t},\n\t\t\t\tmodel.postState),\n\t\t\t$elm$core$Maybe$Just(post.topic),\n\t\t\twallet,\n\t\t\tpost.core);\n\t});\nvar $author$project$View$Home$viewDesktop = function (model) {\n\tvar posts = A2(\n\t\t$elm$core$List$filterMap,\n\t\tfunction (key) {\n\t\t\treturn A2($elm$core$Dict$get, key, model.rootPosts);\n\t\t},\n\t\tA2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t_List_Nil,\n\t\t\tA2($elm$core$Array$get, model.currentPage, model.pages)));\n\tvar pages = $author$project$View$Home$viewPagination(model);\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$column,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$View$Attrs$sansSerifFont,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(20),\n\t\t\t\t\t\t$author$project$View$Attrs$slightRound,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$orange),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(30),\n\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$mouseOver(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$darkRed)\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]),\n\t\t\t\t{\n\t\t\t\t\tlabel: A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('NEW TO SMOKE SIGNAL?')),\n\t\t\t\t\tonPress: $elm$core$Maybe$Just(\n\t\t\t\t\t\t$author$project$Types$ShowNewToSmokeSignalModal(true))\n\t\t\t\t}),\n\t\t\t\tpages,\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 0, 5)\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Home$viewPost,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t$author$project$Wallet$userInfo(model.wallet)),\n\t\t\t\t\tposts)),\n\t\t\t\tpages\n\t\t\t]));\n};\nvar $author$project$View$Home$view = function (model) {\n\tvar _v0 = model.dProfile;\n\tif (_v0.$ === 'Desktop') {\n\t\treturn $author$project$View$Home$viewDesktop(model);\n\t} else {\n\t\tvar posts = A2(\n\t\t\t$elm$core$List$filterMap,\n\t\t\tfunction (key) {\n\t\t\t\treturn A2($elm$core$Dict$get, key, model.rootPosts);\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t_List_Nil,\n\t\t\t\tA2($elm$core$Array$get, model.currentPage, model.pages)));\n\t\tvar pages = $author$project$View$Home$viewPagination(model);\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tpages,\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(5)\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Home$viewPost,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t$author$project$Wallet$userInfo(model.wallet)),\n\t\t\t\t\t\tposts)),\n\t\t\t\t\tpages\n\t\t\t\t]));\n\t}\n};\nvar $author$project$Types$ComposeOpen = {$: 'ComposeOpen'};\nvar $author$project$View$Img$globe = F2(\n\tfunction (size, color) {\n\t\treturn $author$project$View$Img$wrap(\n\t\t\tA2(\n\t\t\t\t$elm$svg$Svg$svg,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),\n\t\t\t\t\t\t$author$project$View$Img$height(size),\n\t\t\t\t\t\t$author$project$View$Img$width(size)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('none'),\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill(\n\t\t\t\t\t\t\t\t$author$project$View$Img$rgb(color)),\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2s.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2s.07-1.35.16-2h4.68c.09.65.16 1.32.16 2s-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2s-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t])));\n\t});\nvar $author$project$View$Common$horizontalRule = function (col) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$el,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t$mdgriffith$elm_ui$Element$px(1)),\n\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(col)\n\t\t\t]),\n\t\t$mdgriffith$elm_ui$Element$none);\n};\nvar $author$project$Wallet$isActive = function (walletState) {\n\tif (walletState.$ === 'Active') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $author$project$View$PostPage$viewAmount = F2(\n\tfunction (color, amount) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(3),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(3),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(22),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(color),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($author$project$View$Img$dollar, 22, $author$project$Helpers$Element$white),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t$author$project$Misc$formatDollar(amount))\n\t\t\t\t]));\n\t});\nvar $author$project$View$PostPage$viewAccounting = F2(\n\tfunction (_v0, accounting) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($author$project$View$PostPage$viewAmount, $author$project$Theme$darkRed, accounting.totalBurned),\n\t\t\t\t\tA2($author$project$View$PostPage$viewAmount, $author$project$Theme$darkGreen, accounting.totalTipped)\n\t\t\t\t]));\n\t});\nvar $author$project$View$PostPage$view = F2(\n\tfunction (model, post) {\n\t\tvar walletActive = $author$project$Wallet$isActive(model.wallet);\n\t\tvar showActions = A3(\n\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\tfalse,\n\t\t\tA2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.chain;\n\t\t\t\t},\n\t\t\t\t$elm$core$Basics$eq(post.chain)),\n\t\t\t$author$project$Wallet$userInfo(model.wallet));\n\t\tvar isMobile = _Utils_eq(model.dProfile, $author$project$Helpers$Element$Mobile);\n\t\tvar pd = isMobile ? 15 : 30;\n\t\tvar fontSize = isMobile ? 25 : 50;\n\t\tvar accounting = A2(\n\t\t\t$author$project$View$Common$whenJust,\n\t\t\t$author$project$View$PostPage$viewAccounting(model.dProfile),\n\t\t\tA2($elm$core$Dict$get, post.key, model.accounting));\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(20),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$author$project$View$Attrs$sansSerifFont\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(20),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(pd),\n\t\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Common$whenJust,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\t\t$elm$core$List$singleton,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(fontSize),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold\n\t\t\t\t\t\t\t\t\t\t\t])))),\n\t\t\t\t\t\t\tpost.content.title),\n\t\t\t\t\t\t\t(isMobile ? $mdgriffith$elm_ui$Element$column(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t\t])) : $mdgriffith$elm_ui$Element$row(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spaceEvenly\n\t\t\t\t\t\t\t\t])))(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\taccounting,\n\t\t\t\t\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Common$phaceElement,\n\t\t\t\t\t\t\t\t\t\t\t70,\n\t\t\t\t\t\t\t\t\t\t\tpost.author,\n\t\t\t\t\t\t\t\t\t\t\t_Utils_eq(\n\t\t\t\t\t\t\t\t\t\t\t\tmodel.showAddressId,\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Types$PhaceForPublishedPost(post.id))),\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Types$ShowOrHideAddress(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Types$PhaceForPublishedPost(post.id))),\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Common$viewCard(post)\n\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Common$viewTiming,\n\t\t\t\t\t\t\t\t\t\t\tmodel.now,\n\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$Dict$get, post.id.block, model.blockTimes)),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[$author$project$View$Attrs$hover]),\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$underline\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Img$globe, 20, $author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('View on block explorer')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t\t\turl: A2($author$project$Chain$txUrl, post.chain, post.txHash)\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t$author$project$View$Common$horizontalRule($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA2($author$project$View$Markdown$renderString, model.dProfile, post.content.body)),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\t\t\t\t\twalletActive,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$orange),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$roundBorder,\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$hover,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$black),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignBottom\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(20)\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Img$replyArrow, 15, $author$project$Helpers$Element$black),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Reply')\n\t\t\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t\tonPress: $elm$core$Maybe$Just($author$project$Types$ComposeOpen)\n\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\t\t\t\t\tshowActions,\n\t\t\t\t\t\t\t\t\tA2($author$project$View$Post$viewActions, post, model.postState))\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paddingEach(\n\t\t\t\t\t\t\t{bottom: 0, left: 50, right: 0, top: 0})\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (reply) {\n\t\t\t\t\t\t\treturn A9(\n\t\t\t\t\t\t\t\t$author$project$View$Post$view,\n\t\t\t\t\t\t\t\tmodel.dProfile,\n\t\t\t\t\t\t\t\tA2($elm$core$Dict$get, reply.core.id.block, model.blockTimes),\n\t\t\t\t\t\t\t\tmodel.now,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t\t\t\t\t$elm$core$Set$empty,\n\t\t\t\t\t\t\t\t\tA2($elm$core$Dict$get, reply.core.key, model.replyIds)),\n\t\t\t\t\t\t\t\tA2($elm$core$Dict$get, reply.core.key, model.accounting),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$Maybe$andThen,\n\t\t\t\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\t\t\t\treturn _Utils_eq(x.id, reply.core.id) ? $elm$core$Maybe$Just(x) : $elm$core$Maybe$Nothing;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tmodel.postState),\n\t\t\t\t\t\t\t\t$elm$core$Maybe$Nothing,\n\t\t\t\t\t\t\t\t$author$project$Wallet$userInfo(model.wallet),\n\t\t\t\t\t\t\t\treply.core);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$sortBy,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\t\treturn $.core;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tA3($author$project$Misc$sortPosts, model.blockTimes, model.accounting, model.now)),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$filterMap,\n\t\t\t\t\t\t\t\tfunction (id) {\n\t\t\t\t\t\t\t\t\treturn A2($elm$core$Dict$get, id, model.replyPosts);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t$elm$core$Set$toList,\n\t\t\t\t\t\t\t\t\tA2($elm$core$Dict$get, post.key, model.replyIds))))))\n\t\t\t\t]));\n\t});\nvar $author$project$View$Topic$topicHeader = F2(\n\tfunction (topic, walletActive) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(15),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$orange),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Theme$orange)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$black),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(35)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('#' + topic)\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\twalletActive,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$author$project$View$Attrs$sansSerifFont,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t\t\t$author$project$View$Attrs$slightRound,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$orange),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$black),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(20),\n\t\t\t\t\t\t\t\t$author$project$View$Attrs$hover\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(30)\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('+')),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('New Post')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tonPress: $elm$core$Maybe$Just($author$project$Types$ComposeOpen)\n\t\t\t\t\t\t}))\n\t\t\t\t]));\n\t});\nvar $author$project$View$Topic$view = F2(\n\tfunction (model, topic) {\n\t\tvar walletActive = $author$project$Wallet$isActive(model.wallet);\n\t\tvar posts = A2(\n\t\t\t$elm$core$List$sortBy,\n\t\t\tA2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.core;\n\t\t\t\t},\n\t\t\t\tA3($author$project$Misc$sortPosts, model.blockTimes, model.accounting, model.now)),\n\t\t\tA2(\n\t\t\t\t$elm$core$List$filter,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\treturn $.topic;\n\t\t\t\t\t},\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t$elm$core$String$toLower,\n\t\t\t\t\t\t$elm$core$Basics$eq(\n\t\t\t\t\t\t\t$elm$core$String$toLower(topic)))),\n\t\t\t\t$elm$core$Dict$values(model.rootPosts)));\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$alignTop\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($author$project$View$Topic$topicHeader, topic, walletActive),\n\t\t\t\t\t$elm$core$List$isEmpty(posts) ? A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX\n\t\t\t\t\t\t]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Be the first to create a post on this topic.')) : A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (post) {\n\t\t\t\t\t\t\treturn A9(\n\t\t\t\t\t\t\t\t$author$project$View$Post$view,\n\t\t\t\t\t\t\t\tmodel.dProfile,\n\t\t\t\t\t\t\t\tA2($elm$core$Dict$get, post.core.id.block, model.blockTimes),\n\t\t\t\t\t\t\t\tmodel.now,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t\t\t\t\t$elm$core$Set$empty,\n\t\t\t\t\t\t\t\t\tA2($elm$core$Dict$get, post.core.key, model.replyIds)),\n\t\t\t\t\t\t\t\tA2($elm$core$Dict$get, post.core.key, model.accounting),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$Maybe$andThen,\n\t\t\t\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\t\t\t\treturn _Utils_eq(x.id, post.core.id) ? $elm$core$Maybe$Just(x) : $elm$core$Maybe$Nothing;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tmodel.postState),\n\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(topic),\n\t\t\t\t\t\t\t\t$author$project$Wallet$userInfo(model.wallet),\n\t\t\t\t\t\t\t\tpost.core);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tposts))\n\t\t\t\t]));\n\t});\nvar $author$project$Types$TopicSubmit = {$: 'TopicSubmit'};\nvar $author$project$View$Img$close = F2(\n\tfunction (size, color) {\n\t\treturn $author$project$View$Img$wrap(\n\t\t\tA2(\n\t\t\t\t$elm$svg$Svg$svg,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),\n\t\t\t\t\t\t$author$project$View$Img$height(size),\n\t\t\t\t\t\t$author$project$View$Img$width(size)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill(\n\t\t\t\t\t\t\t\t$author$project$View$Img$rgb(color)),\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t])));\n\t});\nvar $author$project$View$Attrs$onEnter = function (msg) {\n\treturn A2(\n\t\t$elm$json$Json$Decode$andThen,\n\t\tfunction (key) {\n\t\t\treturn (key === 'Enter') ? $elm$json$Json$Decode$succeed(msg) : $elm$json$Json$Decode$fail('');\n\t\t},\n\t\tA2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string));\n};\nvar $author$project$View$Attrs$onKeydown = function (decoders) {\n\treturn $mdgriffith$elm_ui$Element$htmlAttribute(\n\t\tA2(\n\t\t\t$elm$html$Html$Events$on,\n\t\t\t'keydown',\n\t\t\tA2(\n\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\tfunction (val) {\n\t\t\t\t\tvar matchKeydown = function (ds) {\n\t\t\t\t\t\tif (ds.b) {\n\t\t\t\t\t\t\tvar decoder = ds.a;\n\t\t\t\t\t\t\tvar tail = ds.b;\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$Result$withDefault,\n\t\t\t\t\t\t\t\tmatchKeydown(tail),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$succeed,\n\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$decodeValue, decoder, val)));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn $elm$json$Json$Decode$fail('No match');\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\treturn matchKeydown(decoders);\n\t\t\t\t},\n\t\t\t\t$elm$json$Json$Decode$value)));\n};\nvar $author$project$Misc$sortTopics = A2(\n\t$elm$core$Basics$composeR,\n\t$elm$core$Dict$toList,\n\t$elm$core$List$sortBy(\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$elm$core$Tuple$second,\n\t\t\tA2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.total;\n\t\t\t\t},\n\t\t\t\tA2($elm$core$Basics$composeR, $author$project$TokenValue$toFloatWithWarning, $elm$core$Basics$negate)))));\nvar $author$project$View$Topics$viewTopics = A2(\n\t$elm$core$Basics$composeR,\n\t$elm$core$List$map(\n\t\tfunction (_v0) {\n\t\t\tvar topic = _v0.a;\n\t\t\tvar count = _v0.b;\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(20),\n\t\t\t\t\t\t$author$project$View$Attrs$hover,\n\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall\n\t\t\t\t\t]),\n\t\t\t\t{\n\t\t\t\t\tlabel: A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(40)\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(topic)\n\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[$author$project$View$Attrs$sansSerifFont]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Img$dollar, 25, $author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(30),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Misc$formatDollar(count.total)))\n\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$alignRight, $author$project$View$Attrs$sansSerifFont]),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t\t\t\t\tfunction (len) {\n\t\t\t\t\t\t\t\t\t\tvar suffix = (len === 1) ? '' : 's';\n\t\t\t\t\t\t\t\t\t\treturn $elm$core$String$fromInt(len) + (' post' + suffix);\n\t\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t\t$elm$core$Set$size(count.ids))))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\tonPress: $elm$core$Maybe$Just(\n\t\t\t\t\t\t$author$project$Types$GotoView(\n\t\t\t\t\t\t\t$author$project$Types$ViewTopic(topic)))\n\t\t\t\t});\n\t\t}),\n\t$mdgriffith$elm_ui$Element$column(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t])));\nvar $author$project$View$Topics$view = function (model) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$column,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t$mdgriffith$elm_ui$Element$alignTop\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$orange),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(15)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(35),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$black)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Topics'))),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(20),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$text,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color($author$project$Theme$almostWhite),\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$onKeydown(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$onEnter($author$project$Types$TopicSubmit)\n\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$sansSerifFont,\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Common$whenAttr,\n\t\t\t\t\t\t\t\t\t\t!$elm$core$String$isEmpty(model.topicInput),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$inFront(\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerY,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 5, 0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: A2($author$project$View$Img$close, 30, $author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t\t\t\t\t\t\tonPress: $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Types$TopicInputChange(''))\n\t\t\t\t\t\t\t\t\t\t\t\t})))\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$Input$labelHidden('topic'),\n\t\t\t\t\t\t\t\t\tonChange: $author$project$Types$TopicInputChange,\n\t\t\t\t\t\t\t\t\tplaceholder: $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$placeholder,\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white)\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Find topic'))),\n\t\t\t\t\t\t\t\t\ttext: model.topicInput\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$orange),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$roundBorder,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$hover,\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$sansSerifFont\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$text('Submit'),\n\t\t\t\t\t\t\t\t\tonPress: $elm$core$Maybe$Just($author$project$Types$TopicSubmit)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\t$author$project$View$Topics$viewTopics(\n\t\t\t\t$author$project$Misc$sortTopics(model.topics))\n\t\t\t]));\n};\nvar $author$project$View$banner = A2(\n\t$mdgriffith$elm_ui$Element$image,\n\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t$mdgriffith$elm_ui$Element$px(175)),\n\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black),\n\t\t\t$author$project$View$Attrs$whiteGlowAttribute,\n\t\t\t$mdgriffith$elm_ui$Element$centerX\n\t\t]),\n\t{description: 'Never be silenced', src: './img/banner.png'});\nvar $author$project$View$Img$link = F2(\n\tfunction (size, color) {\n\t\treturn $author$project$View$Img$wrap(\n\t\t\tA2(\n\t\t\t\t$elm$svg$Svg$svg,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$View$Img$height(size),\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),\n\t\t\t\t\t\t$author$project$View$Img$width(size)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M0 0h24v24H0z'),\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('none')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z'),\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill(\n\t\t\t\t\t\t\t\t$author$project$View$Img$rgb(color))\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t])));\n\t});\nvar $author$project$View$Sidebar$viewTopics = A2(\n\t$elm$core$Basics$composeR,\n\t$elm$core$List$map(\n\t\tfunction (_v0) {\n\t\t\tvar topic = _v0.a;\n\t\t\tvar count = _v0.b;\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 10, 5),\n\t\t\t\t\t\t$author$project$View$Attrs$hover,\n\t\t\t\t\t\t$author$project$View$Attrs$title(topic)\n\t\t\t\t\t]),\n\t\t\t\t{\n\t\t\t\t\tlabel: A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(30)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(topic)\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$alignTop]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$image,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(25))\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t{description: 'smokesignal logo', src: './favicon.svg'}),\n\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Img$dollar, 25, $author$project$Theme$softRed),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(25),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Theme$softRed)\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Misc$formatDollar(count.total)))\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\tonPress: $elm$core$Maybe$Just(\n\t\t\t\t\t\t$author$project$Types$GotoView(\n\t\t\t\t\t\t\t$author$project$Types$ViewTopic(topic)))\n\t\t\t\t});\n\t\t}),\n\t$mdgriffith$elm_ui$Element$column(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t])));\nvar $author$project$Helpers$Element$Action = function (a) {\n\treturn {$: 'Action', a: a};\n};\nvar $author$project$Types$ConnectToWeb3 = {$: 'ConnectToWeb3'};\nvar $author$project$Types$DemoPhace = {$: 'DemoPhace'};\nvar $author$project$Helpers$Element$NewTabLink = function (a) {\n\treturn {$: 'NewTabLink', a: a};\n};\nvar $author$project$Types$UserPhace = {$: 'UserPhace'};\nvar $author$project$Theme$lightGray = A3($mdgriffith$elm_ui$Element$rgb255, 233, 237, 242);\nvar $author$project$Helpers$Element$noSelectText = $mdgriffith$elm_ui$Element$htmlAttribute(\n\tA2($elm$html$Html$Attributes$style, 'user-select', 'none'));\nvar $mdgriffith$elm_ui$Element$Font$semiBold = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontWeight, $mdgriffith$elm_ui$Internal$Style$classes.textSemiBold);\nvar $author$project$Theme$disabledButton = F3(\n\tfunction (dProfile, attributes, text) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_Utils_ap(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(4),\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t$author$project$Helpers$Element$responsiveVal,\n\t\t\t\t\t\tdProfile,\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 25, 17),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(\n\t\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 18, 16)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$semiBold,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$lightGray),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$center,\n\t\t\t\t\t\t$author$project$Helpers$Element$noSelectText,\n\t\t\t\t\t\tA2($author$project$View$Attrs$style, 'cursor', 'not-allowed')\n\t\t\t\t\t]),\n\t\t\t\tattributes),\n\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerY, $mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\t$mdgriffith$elm_ui$Element$text(text)));\n\t});\nvar $author$project$TokenValue$isZero = function (tv) {\n\treturn _Utils_eq(\n\t\t$author$project$TokenValue$getEvmValue(tv),\n\t\t$cmditch$elm_bigint$BigInt$fromInt(0));\n};\nvar $mdgriffith$elm_ui$Element$link = F2(\n\tfunction (attrs, _v0) {\n\t\tvar url = _v0.url;\n\t\tvar label = _v0.label;\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$NodeName('a'),\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t$elm$html$Html$Attributes$href(url)),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t$elm$html$Html$Attributes$rel('noopener noreferrer')),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentCenterX + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.link)))),\n\t\t\t\t\t\t\t\tattrs))))),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[label])));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Active = {$: 'Active'};\nvar $mdgriffith$elm_ui$Internal$Flag$active = $mdgriffith$elm_ui$Internal$Flag$flag(32);\nvar $mdgriffith$elm_ui$Element$mouseDown = function (decs) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$active,\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$PseudoSelector,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Active,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$unwrapDecorations(decs)));\n};\nvar $author$project$Helpers$Element$button = F6(\n\tfunction (dProfile, extraAttributes, _v0, textColor, lines, buttonAction) {\n\t\tvar bgColor = _v0.a;\n\t\tvar bgHoverColor = _v0.b;\n\t\tvar bgPressedColor = _v0.c;\n\t\tvar textEl = A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(\n\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 8, 5)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$centerY\n\t\t\t\t]),\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Basics$composeL,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX])),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text),\n\t\t\t\tlines));\n\t\tvar attributes = _Utils_ap(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(4),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t\tA3(\n\t\t\t\t\t$author$project$Helpers$Element$responsiveVal,\n\t\t\t\t\tdProfile,\n\t\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 25, 17),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(textColor),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(\n\t\t\t\t\tA3($author$project$Helpers$Element$responsiveVal, dProfile, 18, 16)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$semiBold,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(bgColor),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$mouseDown(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(bgPressedColor)\n\t\t\t\t\t\t])),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$mouseOver(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(bgHoverColor)\n\t\t\t\t\t\t])),\n\t\t\t\t\t$author$project$Helpers$Element$noSelectText\n\t\t\t\t]),\n\t\t\textraAttributes);\n\t\tswitch (buttonAction.$) {\n\t\t\tcase 'Link':\n\t\t\t\tvar url = buttonAction.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$link,\n\t\t\t\t\tattributes,\n\t\t\t\t\t{label: textEl, url: url});\n\t\t\tcase 'NewTabLink':\n\t\t\t\tvar url = buttonAction.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t\t\t\tattributes,\n\t\t\t\t\t{label: textEl, url: url});\n\t\t\tdefault:\n\t\t\t\tvar msg = buttonAction.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\tattributes,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Events$onClick(msg)\n\t\t\t\t\t\t\t])),\n\t\t\t\t\ttextEl);\n\t\t}\n\t});\nvar $author$project$Theme$unscaryButton = F4(\n\tfunction (dProfile, attributes, text, buttonAction) {\n\t\treturn A6(\n\t\t\t$author$project$Helpers$Element$button,\n\t\t\tdProfile,\n\t\t\tattributes,\n\t\t\t_Utils_Tuple3(\n\t\t\t\tA3($mdgriffith$elm_ui$Element$rgb255, 0, 153, 0),\n\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 0, 1, 0, 0.8),\n\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 0, 1, 0, 0.6)),\n\t\t\t$author$project$Helpers$Element$white,\n\t\t\ttext,\n\t\t\tbuttonAction);\n\t});\nvar $author$project$View$Sidebar$viewChain = function (chain) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$el,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t$author$project$View$Attrs$roundBorder,\n\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t$author$project$Chain$getColor(chain)),\n\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white)\n\t\t\t]),\n\t\t$author$project$View$Common$viewChain(chain));\n};\nvar $author$project$View$Sidebar$viewWallet = function (model) {\n\tvar phaceEl = function () {\n\t\tvar _v3 = $author$project$Wallet$userInfo(model.wallet);\n\t\tif (_v3.$ === 'Nothing') {\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(10),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$glow,\n\t\t\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 1, 0, 1, 0.3),\n\t\t\t\t\t\t9)\n\t\t\t\t\t]),\n\t\t\t\tA4(\n\t\t\t\t\t$author$project$View$Common$phaceElement,\n\t\t\t\t\t80,\n\t\t\t\t\t$cmditch$elm_ethereum$Eth$Utils$unsafeToAddress(model.demoPhaceSrc),\n\t\t\t\t\t_Utils_eq(\n\t\t\t\t\t\tmodel.showAddressId,\n\t\t\t\t\t\t$elm$core$Maybe$Just($author$project$Types$DemoPhace)),\n\t\t\t\t\t$author$project$Types$ShowOrHideAddress($author$project$Types$DemoPhace)));\n\t\t} else {\n\t\t\tvar userInfo = _v3.a;\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(10),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$glow,\n\t\t\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 0, 0.5, 1, 0.4),\n\t\t\t\t\t\t9)\n\t\t\t\t\t]),\n\t\t\t\tA4(\n\t\t\t\t\t$author$project$View$Common$phaceElement,\n\t\t\t\t\t100,\n\t\t\t\t\tuserInfo.address,\n\t\t\t\t\t_Utils_eq(\n\t\t\t\t\t\tmodel.showAddressId,\n\t\t\t\t\t\t$elm$core$Maybe$Just($author$project$Types$UserPhace)),\n\t\t\t\t\t$author$project$Types$ShowOrHideAddress($author$project$Types$UserPhace)));\n\t\t}\n\t}();\n\tvar _v0 = function () {\n\t\tvar _v1 = model.wallet;\n\t\tswitch (_v1.$) {\n\t\t\tcase 'NoneDetected':\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t'Install Metamask',\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t$author$project$Helpers$Element$NewTabLink('https://metamask.io/')),\n\t\t\t\t\t$elm$core$Maybe$Just('Then come back to try on some phaces!'));\n\t\t\tcase 'NetworkReady':\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t'Connect Wallet',\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t$author$project$Helpers$Element$Action($author$project$Types$ConnectToWeb3)),\n\t\t\t\t\t$elm$core$Maybe$Just('Each address has a unique phace!'));\n\t\t\tcase 'Connecting':\n\t\t\t\treturn _Utils_Tuple3('Connecting', $elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing);\n\t\t\tdefault:\n\t\t\t\tvar userInfo = _v1.a;\n\t\t\t\tvar userHasNoEth = $author$project$TokenValue$isZero(userInfo.balance);\n\t\t\t\treturn userHasNoEth ? _Utils_Tuple3(\n\t\t\t\t\t'Compose Post',\n\t\t\t\t\t$elm$core$Maybe$Nothing,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t'That address has no ' + ($author$project$Chain$getName(userInfo.chain) + '! You will need to transfer some to post on SmokeSignal.'))) : _Utils_Tuple3(\n\t\t\t\t\t'Compose Post',\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t$author$project$Helpers$Element$Action($author$project$Types$ComposeOpen)),\n\t\t\t\t\t$elm$core$Maybe$Nothing);\n\t\t}\n\t}();\n\tvar buttonText = _v0.a;\n\tvar maybeButtonAction = _v0.b;\n\tvar maybeExplainerText = _v0.c;\n\tvar button = function () {\n\t\tif (maybeButtonAction.$ === 'Just') {\n\t\t\tvar buttonAction = maybeButtonAction.a;\n\t\t\treturn A4(\n\t\t\t\t$author$project$Theme$unscaryButton,\n\t\t\t\tmodel.dProfile,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 10, 5),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[buttonText]),\n\t\t\t\tbuttonAction);\n\t\t} else {\n\t\t\treturn A3(\n\t\t\t\t$author$project$Theme$disabledButton,\n\t\t\t\tmodel.dProfile,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 10, 5),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t]),\n\t\t\t\tbuttonText);\n\t\t}\n\t}();\n\tvar explainerParagraphOrNone = A2(\n\t\t$elm$core$Maybe$withDefault,\n\t\t$mdgriffith$elm_ui$Element$none,\n\t\tA2(\n\t\t\t$elm$core$Maybe$map,\n\t\t\tfunction (text) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(17),\n\t\t\t\t\t\t\t$author$project$View$Attrs$sansSerifFont\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(text)\n\t\t\t\t\t\t]));\n\t\t\t},\n\t\t\tmaybeExplainerText));\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$row,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[$mdgriffith$elm_ui$Element$alignTop]),\n\t\t\t\tphaceEl),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tbutton,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Common$whenJust,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\t\t\treturn $.chain;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t$author$project$View$Sidebar$viewChain),\n\t\t\t\t\t\t\t\t$author$project$Wallet$userInfo(model.wallet))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\texplainerParagraphOrNone\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar $author$project$View$Sidebar$view = function (model) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$column,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$author$project$View$Attrs$cappedWidth(350),\n\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$author$project$View$Sidebar$viewWallet(model),\n\t\t\t\tA2(\n\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t!_Utils_eq(model.view, $author$project$Types$ViewTopics),\n\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall,\n\t\t\t\t\t\t\t$author$project$View$Attrs$slightRound\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(30)),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t$author$project$View$Attrs$hover\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(30)),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$orange)\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX, $mdgriffith$elm_ui$Element$centerY]),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Topics'))),\n\t\t\t\t\t\t\t\tonPress: $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t$author$project$Types$GotoView($author$project$Types$ViewTopics))\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t$author$project$View$Sidebar$viewTopics(\n\t\t\t\t\t\t\t$author$project$Misc$sortTopics(model.topics))\n\t\t\t\t\t\t]))),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t$author$project$View$Attrs$sansSerifFont,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t$author$project$View$Attrs$hover\n\t\t\t\t\t]),\n\t\t\t\t{\n\t\t\t\t\tlabel: A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('SmokeSignal Alpha'),\n\t\t\t\t\t\t\t\tA2($author$project$View$Img$link, 20, $author$project$Helpers$Element$white)\n\t\t\t\t\t\t\t])),\n\t\t\t\t\turl: model.alphaUrl\n\t\t\t\t})\n\t\t\t]));\n};\nvar $author$project$View$viewFrame = F2(\n\tfunction (model, elem) {\n\t\treturn _Utils_eq(model.dProfile, $author$project$Helpers$Element$Mobile) ? elem : A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\tfalse,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\t\t_Utils_eq(model.view, $author$project$Types$ViewHome),\n\t\t\t\t\t\t$author$project$View$banner)),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telem,\n\t\t\t\t\t\t\t$author$project$View$Sidebar$view(model)\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $author$project$View$viewTxTracker = function (trackedTxs) {\n\treturn $elm$core$Dict$isEmpty(trackedTxs) ? A2(\n\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t$mdgriffith$elm_ui$Element$Font$center,\n\t\t\t\t$mdgriffith$elm_ui$Element$padding(10)\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$text('No currently tracked transactions.')\n\t\t\t])) : A2(\n\t\t$mdgriffith$elm_ui$Element$column,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t]),\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (trackedTx) {\n\t\t\t\tvar linkTextColor = A3($mdgriffith$elm_ui$Element$rgb, 0.5, 0.5, 1);\n\t\t\t\tvar titleEl = function () {\n\t\t\t\t\tvar _v4 = _Utils_Tuple2(trackedTx.txInfo, trackedTx.status);\n\t\t\t\t\tswitch (_v4.a.$) {\n\t\t\t\t\t\tcase 'TipTx':\n\t\t\t\t\t\t\tvar postId = _v4.a.a;\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Tip '),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(linkTextColor),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Events$onClick(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Types$GotoView(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Types$ViewPost(postId)))\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Post'))\n\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\tcase 'BurnTx':\n\t\t\t\t\t\t\tvar postId = _v4.a.a;\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Burn for '),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(linkTextColor),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Events$onClick(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Types$GotoView(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Types$ViewPost(postId)))\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Post'))\n\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif (_v4.b.$ === 'Mined') {\n\t\t\t\t\t\t\t\tvar _v5 = _v4.a;\n\t\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Element$text('Post');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar _v6 = _v4.a;\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(8)\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Post'),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(linkTextColor),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('(View Draft)'))\n\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\tvar etherscanLink = function (label) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$italic,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(linkTextColor)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$text(label),\n\t\t\t\t\t\t\turl: A2($author$project$Chain$txUrl, trackedTx.chain, trackedTx.txHash)\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tvar statusEl = function () {\n\t\t\t\t\tvar _v0 = trackedTx.status;\n\t\t\t\t\tswitch (_v0.$) {\n\t\t\t\t\t\tcase 'Mining':\n\t\t\t\t\t\t\treturn etherscanLink('Mining');\n\t\t\t\t\t\tcase 'Failed':\n\t\t\t\t\t\t\tvar failReason = _v0.a;\n\t\t\t\t\t\t\treturn etherscanLink('Failed');\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tvar maybePostId = _v0.a;\n\t\t\t\t\t\t\tvar _v2 = trackedTx.txInfo;\n\t\t\t\t\t\t\tif (_v2.$ === 'PostTx') {\n\t\t\t\t\t\t\t\tif (maybePostId.$ === 'Just') {\n\t\t\t\t\t\t\t\t\tvar postId = maybePostId.a;\n\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Theme$blue)\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Published')),\n\t\t\t\t\t\t\t\t\t\t\tonPress: $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Types$GotoView(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Types$ViewPost(postId)))\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn etherscanLink('Mined');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn etherscanLink('Mined');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Helpers$Element$black),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(20),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spaceEvenly,\n\t\t\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttributeSmall\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\ttitleEl),\n\t\t\t\t\t\t\tstatusEl\n\t\t\t\t\t\t]));\n\t\t\t},\n\t\t\t$elm$core$Dict$values(trackedTxs)));\n};\nvar $author$project$View$viewBody = function (model) {\n\tvar _v0 = model.view;\n\tswitch (_v0.$) {\n\t\tcase 'ViewHome':\n\t\t\treturn A2(\n\t\t\t\t$author$project$View$viewFrame,\n\t\t\t\tmodel,\n\t\t\t\t$author$project$View$Home$view(model));\n\t\tcase 'ViewTopics':\n\t\t\treturn A2(\n\t\t\t\t$author$project$View$viewFrame,\n\t\t\t\tmodel,\n\t\t\t\t$author$project$View$Topics$view(model));\n\t\tcase 'ViewPost':\n\t\t\tvar postId = _v0.a;\n\t\t\treturn A2(\n\t\t\t\t$author$project$View$viewFrame,\n\t\t\t\tmodel,\n\t\t\t\tA3(\n\t\t\t\t\t$elm_community$maybe_extra$Maybe$Extra$unwrap,\n\t\t\t\t\tA2($author$project$View$Common$appStatusMessage, $author$project$Theme$darkGray, 'Loading post...'),\n\t\t\t\t\t$author$project$View$PostPage$view(model),\n\t\t\t\t\tA2($author$project$Misc$getPostOrReply, postId, model)));\n\t\tcase 'ViewTopic':\n\t\t\tvar topic = _v0.a;\n\t\t\treturn A2(\n\t\t\t\t$author$project$View$viewFrame,\n\t\t\t\tmodel,\n\t\t\t\tA2($author$project$View$Topic$view, model, topic));\n\t\tcase 'ViewWallet':\n\t\t\treturn $author$project$View$Sidebar$viewWallet(model);\n\t\tdefault:\n\t\t\treturn $author$project$View$viewTxTracker(model.trackedTxs);\n\t}\n};\nvar $author$project$Types$CookieConsentGranted = {$: 'CookieConsentGranted'};\nvar $author$project$View$Modal$viewCookieConsent = A2(\n\t$mdgriffith$elm_ui$Element$row,\n\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$blue),\n\t\t\t$mdgriffith$elm_ui$Element$alignBottom,\n\t\t\t$author$project$View$Attrs$cappedWidth(900),\n\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t$author$project$View$Attrs$sansSerifFont,\n\t\t\t$mdgriffith$elm_ui$Element$padding(20),\n\t\t\t$mdgriffith$elm_ui$Element$spacing(20),\n\t\t\t$mdgriffith$elm_ui$Element$Border$roundEach(\n\t\t\t{bottomLeft: 0, bottomRight: 0, topLeft: 20, topRight: 20})\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t$author$project$View$Attrs$sansSerifFont\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$Font$bold, $author$project$View$Attrs$hover]),\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$text('Foundry'),\n\t\t\t\t\t\turl: 'https://foundrydao.com/'\n\t\t\t\t\t}),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(' products use cookies and analytics to track behavior patterns, to help zero in on effective marketing strategies. To avoid being tracked in this way, we recommend using the '),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$Font$bold, $author$project$View$Attrs$hover]),\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$text('Brave browser'),\n\t\t\t\t\t\turl: 'https://brave.com/'\n\t\t\t\t\t}),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(' or installing the '),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$Font$bold, $author$project$View$Attrs$hover]),\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$text('Google Analytics Opt-Out browser addon'),\n\t\t\t\t\t\turl: 'https://tools.google.com/dlpage/gaoptout'\n\t\t\t\t\t}),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('.')\n\t\t\t\t])),\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($author$project$Theme$orange),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(20),\n\t\t\t\t\t$author$project$View$Attrs$roundBorder,\n\t\t\t\t\t$author$project$View$Attrs$hover\n\t\t\t\t]),\n\t\t\t{\n\t\t\t\tlabel: $mdgriffith$elm_ui$Element$text('Understood'),\n\t\t\t\tonPress: $elm$core$Maybe$Just($author$project$Types$CookieConsentGranted)\n\t\t\t})\n\t\t]));\nvar $elm$svg$Svg$Attributes$class = _VirtualDom_attribute('class');\nvar $elm$svg$Svg$defs = $elm$svg$Svg$trustedNode('defs');\nvar $elm$svg$Svg$style = $elm$svg$Svg$trustedNode('style');\nvar $elm$svg$Svg$text = $elm$virtual_dom$VirtualDom$text;\nvar $author$project$View$Img$logo = function (size) {\n\treturn $author$project$View$Img$wrap(\n\t\tA2(\n\t\t\t$elm$svg$Svg$svg,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox('0 0 178.6 230.13'),\n\t\t\t\t\t$author$project$View$Img$width(size)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$defs,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$svg$Svg$style,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text('.cls-1{fill:#f69b1e}.cls-3{fill:#a6a7aa}')\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M97.7 169.36c1.67-2.2 7.06-7.72 7.06-18 0-14.58-18.75-22-12.64-38.67-11.81 6.26-12.81 26-8.79 32.22-3.86-1-6.37-6-6-10.12-6.36 7.52-7.65 20.72-.21 30.48 1.06 1.39 2.17 2.74 3.26 4.11S58.3 161.16 58.3 139c0-34.35 31.54-35.09 24.81-68.74 15.21 11.55 19.53 35.77 19.53 50.12 6.86-3.24 7.66-13.5 7.71-13.85.19.15 10.87 13.87 10.87 31.8 0 23.61-23.36 30.91-23.55 31z'),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$class('cls-1')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#808083'),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M89.3 38.12A52.76 52.76 0 0051.82 128a48.56 48.56 0 015.12-13.92 39.78 39.78 0 0115.39-59.21 40 40 0 011.89-.83 39.82 39.82 0 0148.5 58.52 65 65 0 014.89 14.61A52.75 52.75 0 0089.3 38.12z')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M52.89 151.56a70.76 70.76 0 1173.86-.64c-3.43 10.06-10.69 17-17.65 21.32a83.7 83.7 0 10-39.23.09c-6.57-4.28-13.56-11.16-16.98-20.77z'),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$class('cls-3')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M29.33 213.66L27.86 215a2.1 2.1 0 00-1.57-1.07 1 1 0 00-.64.21.58.58 0 00-.25.47.78.78 0 00.18.49 13.32 13.32 0 001.42 1.29c.76.63 1.21 1 1.38 1.19a4.29 4.29 0 01.85 1.17 2.85 2.85 0 01.25 1.21 2.78 2.78 0 01-.88 2.12 3.27 3.27 0 01-2.31.83 3.45 3.45 0 01-1.94-.54 4.38 4.38 0 01-1.35-1.71l1.66-1c.5.92 1.08 1.38 1.73 1.38a1.27 1.27 0 00.86-.3.88.88 0 00.35-.68 1.17 1.17 0 00-.27-.71 7 7 0 00-1.15-1.08 11.72 11.72 0 01-2.2-2.14 2.77 2.77 0 01-.5-1.51 2.48 2.48 0 01.83-1.86 2.89 2.89 0 012-.77 3.2 3.2 0 011.48.36 5.4 5.4 0 011.54 1.31zM50.65 212.24h2v10.41h-2zM81.69 213.94l-1.4 1.38a4.13 4.13 0 00-3.08-1.4 3.53 3.53 0 00-2.58 1 3.34 3.34 0 00-1 2.47 3.43 3.43 0 001.04 2.61 3.66 3.66 0 002.66 1 3.24 3.24 0 001.73-.44 3 3 0 001.14-1.35h-3v-1.86h5.24v.44a5 5 0 01-.71 2.59 4.91 4.91 0 01-1.83 1.87 5.21 5.21 0 01-2.64.64 5.86 5.86 0 01-2.89-.7 5.11 5.11 0 01-2-2 5.62 5.62 0 01-.74-2.81A5.23 5.23 0 0173 213.8a5.39 5.39 0 014.2-1.8 6.54 6.54 0 012.54.5 6 6 0 011.95 1.44zM98.25 212.24h1.9l4.45 6.85v-6.85h2v10.41h-1.9l-4.45-6.83v6.83h-2zM126.81 212.24h2l4 10.41h-2.06l-.82-2.14h-4.23l-.85 2.14h-2.06zm1 2.76l-1.39 3.58h2.78zM150.76 212.24h2v8.52h2.89v1.89h-4.87z'),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$class('cls-1')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M68.15 204.53h3.78l-2.99-21.22h-3.83l-3.76 13.99-3.75-13.99h-3.83l-3 21.22h3.79l1.67-11.85 3.18 11.85h3.89l3.18-11.85 1.67 11.85z'),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$class('cls-3')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M89.23 204.53a10.61 10.61 0 1110.61-10.61 10.62 10.62 0 01-10.61 10.61zm0-17.47a6.86 6.86 0 106.86 6.86 6.86 6.86 0 00-6.86-6.86z'),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$class('cls-1')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d('M114.17 194.34l8.58 10.19h4.9l-10.57-12.55 10.64-8.6v-.07h-5.87l-11.62 9.39v-9.39h-3.75v21.22h3.75v-7l3.94-3.19zM155.63 187.06v-3.75h-21.32v21.22h21.32v-3.75h-17.57v-4.99h17.57v-3.75h-17.57v-4.98h17.57zM33.71 204.54c-6.23 0-10.74-2.67-10.74-6.35h3.9c0 .73 2.32 2.45 6.84 2.45 3.64 0 6.39-1.06 6.39-2.45a1.31 1.31 0 00-.4-1c-.51-.5-2-1.33-6-1.31h-.37c-1.55 0-6.28 0-8.79-2.44a5.2 5.2 0 01-1.54-3.79c0-3.86 4-6.35 10.28-6.35S44 186 44 189.65h-3.9c0-.73-2.33-2.45-6.85-2.45-3.64 0-6.38 1.05-6.38 2.45a1.33 1.33 0 00.39 1c.51.5 2 1.31 6 1.31h.37c1.55 0 6.28-.05 8.8 2.44a5.22 5.22 0 011.57 3.79c0 3.86-4 6.35-10.29 6.35z'),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$class('cls-3')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil)\n\t\t\t\t])));\n};\nvar $author$project$View$Modal$viewNewToSmokeSignal = function (_v0) {\n\treturn A2(\n\t\t$author$project$View$Common$wrapModal,\n\t\t$author$project$Types$ShowNewToSmokeSignalModal(false),\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$View$Attrs$whiteGlowAttribute,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0.85)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(50),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(30),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$inFront(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignTop,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(30),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Helpers$Element$white),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(40),\n\t\t\t\t\t\t\t\t$author$project$View$Attrs$hover,\n\t\t\t\t\t\t\t\t$author$project$View$Attrs$sansSerifFont\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$text('X'),\n\t\t\t\t\t\t\tonPress: $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t$author$project$Types$ShowNewToSmokeSignalModal(false))\n\t\t\t\t\t\t}))\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(30)\n\t\t\t\t\t\t]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Welcome to')),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\t\t$author$project$View$Img$logo(120)),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('SmokeSignal uses the Ethereum blockchain to facilitate uncensorable, global chat.')),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($author$project$Theme$orange),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(28),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold\n\t\t\t\t\t\t]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('No Usernames. No Moderators. No censorship. No Deplatforming.')),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('All SmokeSignal posts are permanent and impossible for anyone to delete.')),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('All SmokeSignal authors are pseudonymous by default and cannot be deplatformed.'))\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('All you need to post is a web3 wallet like '),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(\n\t\t\t\t\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Element$rgb, 0.5, 0.5, 1))\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$text('Metamask'),\n\t\t\t\t\t\t\t\t\t\turl: 'https://metamask.io/'\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(' and '),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(\n\t\t\t\t\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Element$rgb, 0.5, 0.5, 1))\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$text('ETH to burn.'),\n\t\t\t\t\t\t\t\t\t\turl: 'https://www.google.com/search?q=how+to+buy+ether'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('The more ETH you burn, the more attention the post will get.'))\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(4),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$size(22),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$glow,\n\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Element$rgb, 0, 0, 1),\n\t\t\t\t\t\t\t3)\n\t\t\t\t\t\t]),\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$text('Cool, let\\'s go!'),\n\t\t\t\t\t\tonPress: $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t$author$project$Types$ShowNewToSmokeSignalModal(false))\n\t\t\t\t\t})\n\t\t\t\t])));\n};\nvar $author$project$View$viewPage = function (model) {\n\tvar isDesktop = _Utils_eq(model.dProfile, $author$project$Helpers$Element$Desktop);\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$column,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\tA2(\n\t\t\t\t$author$project$View$Common$whenAttr,\n\t\t\t\tmodel.newUserModal,\n\t\t\t\t$mdgriffith$elm_ui$Element$inFront(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t\t\tisDesktop,\n\t\t\t\t\t\t$author$project$View$Modal$viewNewToSmokeSignal(model.dProfile)))),\n\t\t\t\tA2(\n\t\t\t\t$author$project$View$Common$whenAttr,\n\t\t\t\tmodel.compose.modal,\n\t\t\t\t$mdgriffith$elm_ui$Element$inFront(\n\t\t\t\t\t$author$project$View$Compose$view(model))),\n\t\t\t\tA2(\n\t\t\t\t$author$project$View$Common$whenAttr,\n\t\t\t\t!model.cookieConsentGranted,\n\t\t\t\t$mdgriffith$elm_ui$Element$inFront(\n\t\t\t\t\tA2($author$project$View$Common$when, isDesktop, $author$project$View$Modal$viewCookieConsent)))\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$author$project$View$header(model),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$scrollbarY\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$author$project$View$Attrs$cappedWidth($author$project$View$maxContentColWidth),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX\n\t\t\t\t\t\t]),\n\t\t\t\t\t$author$project$View$viewBody(model))),\n\t\t\t\tA2(\n\t\t\t\t$author$project$View$Common$when,\n\t\t\t\t(!isDesktop) && (!model.compose.modal),\n\t\t\t\t$author$project$View$Mobile$navBar(model))\n\t\t\t]));\n};\nvar $author$project$View$view = function (model) {\n\treturn {\n\t\tbody: $elm$core$List$singleton(\n\t\t\tA2(\n\t\t\t\t$author$project$View$render,\n\t\t\t\tmodel,\n\t\t\t\t$author$project$View$viewPage(model))),\n\t\ttitle: $author$project$Misc$getTitle(model)\n\t};\n};\nvar $author$project$App$main = $author$project$Browser$Hashbang$application(\n\t{\n\t\tinit: $author$project$App$init,\n\t\tonUrlChange: A2($elm$core$Basics$composeR, $author$project$Routing$urlToRoute, $author$project$Types$RouteChanged),\n\t\tonUrlRequest: $author$project$Types$LinkClicked,\n\t\tsubscriptions: $author$project$App$subscriptions,\n\t\tupdate: $author$project$Update$update,\n\t\tview: $author$project$View$view\n\t});\n_Platform_export({'App':{'init':$author$project$App$main(\n\tA2(\n\t\t$elm$json$Json$Decode$andThen,\n\t\tfunction (xDaiProviderUrl) {\n\t\t\treturn A2(\n\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\tfunction (width) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\tfunction (nowInMillis) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\tfunction (newUser) {\n\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\t\tfunction (height) {\n\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\t\t\t\tfunction (hasWallet) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (ethProviderUrl) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (cookieConsent) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (chains) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$json$Json$Decode$succeed(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{chains: chains, cookieConsent: cookieConsent, ethProviderUrl: ethProviderUrl, hasWallet: hasWallet, height: height, newUser: newUser, nowInMillis: nowInMillis, width: width, xDaiProviderUrl: xDaiProviderUrl});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'chains', $elm$json$Json$Decode$value));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'cookieConsent', $elm$json$Json$Decode$bool));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'ethProviderUrl', $elm$json$Json$Decode$string));\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'hasWallet', $elm$json$Json$Decode$bool));\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'height', $elm$json$Json$Decode$int));\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'newUser', $elm$json$Json$Decode$bool));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'nowInMillis', $elm$json$Json$Decode$int));\n\t\t\t\t},\n\t\t\t\tA2($elm$json$Json$Decode$field, 'width', $elm$json$Json$Decode$int));\n\t\t},\n\t\tA2($elm$json$Json$Decode$field, 'xDaiProviderUrl', $elm$json$Json$Decode$string)))(0)}});\n\n//////////////////// HMR BEGIN ////////////////////\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Original Author: Flux Xu @fluxxu\n*/\n\n/*\n    A note about the environment that this code runs in...\n\n    assumed globals:\n        - `module` (from Node.js module system and webpack)\n\n    assumed in scope after injection into the Elm IIFE:\n        - `scope` (has an 'Elm' property which contains the public Elm API)\n        - various functions defined by Elm which we have to hook such as `_Platform_initialize` and `_Scheduler_binding`\n */\n\nif (false) {}\n//////////////////// HMR END ////////////////////\n\n\n}(this));\n\n//# sourceURL=webpack://smokesignal/./src/elm/App.elm?");

/***/ }),

/***/ "./src/index.css":
/*!***********************!*\
  !*** ./src/index.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./index.css */ \"./node_modules/css-loader/dist/cjs.js!./src/index.css\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__.default, options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});\n\n//# sourceURL=webpack://smokesignal/./src/index.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://smokesignal/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./src/fonts/D-DIN.woff":
/*!******************************!*\
  !*** ./src/fonts/D-DIN.woff ***!
  \******************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:font/woff;base64,\";\n\n//# sourceURL=webpack://smokesignal/./src/fonts/D-DIN.woff?");

/***/ }),

/***/ "./src/fonts/D-DIN.woff2":
/*!*******************************!*\
  !*** ./src/fonts/D-DIN.woff2 ***!
  \*******************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:font/woff2;base64,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\";\n\n//# sourceURL=webpack://smokesignal/./src/fonts/D-DIN.woff2?");

/***/ }),

/***/ "./src/fonts/Oswald-VariableFont_wght.ttf":
/*!************************************************!*\
  !*** ./src/fonts/Oswald-VariableFont_wght.ttf ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:font/ttf;base64,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AAAB8QMqAAsAJ0AkAAEABAMBBGcCAQAALU0GBQIDAy4DTgAAAAsACxERERERBwkbKzMRMxEzETMRIxEjET9x0HFx0AMq/qIBXvzWAXv+hQAAAgAQAAACIAMqABMAFwA7QDgFAwIBCwYCAAoBAGcACgAIBwoIZwQBAgItTQwJAgcHLgdOAAAXFhUUABMAExEREREREREREQ0JHyszESM1MzUzFTM1MxUzFSMRIxEjEREzNSM/Ly9x0HEvL3HQ0NACazqFhYWFOv2VAXv+hQHMn///AD8AAAHxBBICJgBOAAABBwLHARkA6AAIsQEBsOiwNSv//wA/AAAB8QQSAiYATgAAAQcCxgEZAOgACLEBAbDosDUrAAEARQAAALQDKgADABlAFgAAAC1NAgEBAS4BTgAAAAMAAxEDCRcrMxEzEUVvAyr81gD//wBF/+0B5QMqACYAUgAAAAcAYQD4AAD//wBFAAABBgQgAiYAUgAAAQcCwwB8AOgACLEBAbDosDUr////+QAAAQAD8QImAFIAAAEHAsgAfQDoAAixAQGw6LA1K////+8AAAEJBBICJgBSAAABBwLGAHwA6AAIsQEBsOiwNSv///+3AAAA3QQSAiYAUgAAAQcCzQB8AOgACLEBArDosDUr////8AAAAQgEEgImAFIAAAEHAsAAfADoAAixAQKw6LA1K///AEUAAAC0A/4CJgBSAAABBwLBAHwA6AAIsQEBsOiwNSv//wBF/1AAtAMqAiYAUgAAAAYC0XwA////9AAAALQEIAImAFIAAAEHAsIAfADoAAixAQGw6LA1K///ACwAAADsBCYCJgBSAAABBwLMAHwA6AAIsQEBsOiwNSv////4AAABAAQSAiYAUgAAAQcCzgB8AOgACLEBAbDosDUr//8AHAAAANwD1gImAFIAAAEHAssAfADoAAixAQGw6LA1K/////T/GQC1AyoCJgBSAAAABgLVfQD////mAAABEgQYAiYAUgAAAQcCygB8AOgACLEBAbDosDUrAAEAB//tAO0DKgANADhLsDFQWEARAAEBLU0AAAACYgMBAgI0Ak4bQA4AAAMBAgACZgABAS0BTllACwAAAA0ADBURBAkYKxc1Mj4CNREzERQGBiMHJS4ZCnAeTEYTUQoaMSYCcf2NRlkrAP//AAf/7QFCBBICJgBhAAABBwLGALUA6AAI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AAABBwLHARAA6AAIsQEBsOiwNSv//wA4//cB5wQSAiYAsAAAAQcCxgEQAOgACLEBAbDosDUr//8AOP/3AecEEgImALAAAAEHAs0BEADoAAixAQKw6LA1K///ADj/9wHnBBICJgCwAAABBwLAARAA6AAIsQECsOiwNSv//wA4/1AB5wMqAiYAsAAAAAcC0QEQAAD//wA4//cB5wQgAiYAsAAAAQcCwgEQAOgACLEBAbDosDUr//8AOP/3AecEJgImALAAAAEHAswBEADoAAixAQGw6LA1K///ADj/9wIvA3QCJgCwAAABBwLQAaYA6AAIsQEBsOiwNSv//wA4//cCLwQgAiYAugAAAQcCwwEQAOgACLECAbDosDUr//8AOP9QAi8DdAImALoAAAAHAtEBEAAA//8AOP/3Ai8EIAImALoAAAEHAsIBEADoAAixAgGw6LA1K///ADj/9wIvBCYCJgC6AAABBwLMARAA6AAIsQIBsOiwNSv//wA4//cCLwQYAiYAugAAAQcCygEQAOgACLECAbDosDUr//8AOP/3AecEEwImALAAAAEHAsQBEADoAAixAQKw6LA1K///ADj/9wHnBBICJgCwAAABBwLOARAA6AAIsQEBsOiwNSv//wA4//cB5wPWAiYAsAAAAQcCywEQAOgACLEBAbDosDUr//8AOP8ZAecDKgImALAAAAAHAtUBOAAA//8AOP/3AecEGwImALAAAAEHAskBEADoAAixAQKw6LA1K///ADj/9wHnBBgCJgCwAAABBwLKARAA6AAIsQEBsOiwNSsAAQAXAAAB4gMqAAYAIUAeAwECAAFMAQEAAC1NAwECAi4CTgAAAAYABhIRBAkYKzMDMxMTMwPMtWqAemezAyr9qwJV/NYAAAEAJAAAArUDKgAMACdAJAsGAwMDAAFMAgECAAAtTQUEAgMDLgNOAAAADAAMERISEQYJGiszAzMTEzMTEzMDIwMDqIReV21QblVcglJxcgMq/boCQ/26Akn81gJY/agA//8AJAAAArUEIAImAMcAAAEHAsMBbQDoAAixAQGw6LA1K///ACQAAAK1BBICJgDHAAABBwLGAW0A6AAIsQEBsOiwNSv//wAkAAACtQQSAiYAxwAAAQcCwAFtAOgACLEBArDosDUr//8AJAAAArUEIAImAMcAAAEHAsIBbQDoAAixAQGw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ASYAAAEHAsYAbwDoAAixAQGw6LA1KwACAD0AAACoAwgAAwAHAExLsBtQWEAXBQEDAwJfAAICL00AAAAwTQQBAQEuAU4bQBUAAgUBAwACA2cAAAAwTQQBAQEuAU5ZQBIEBAAABAcEBwYFAAMAAxEGCRcrMxEzEQM1MxU9a2trAkL9vgKYcHAAAQA9AAAAqAJCAAMAGUAWAAAAME0CAQEBLgFOAAAAAwADEQMJFyszETMRPWsCQv2+AP//AD0AAAD9AzgCJgErAAAABgLDcwD////wAAAA9wMJAiYBKwAAAAYCyHQA////5gAAAQADKgImASsAAAAGAsZzAP///64AAADUAyoCJgErAAAABgLNcwD////nAAAA/wMqAiYBKwAAAAYCwHMA//8APQAAAKkDFgImASsAAAAGAsFzAP//AD3/UACpAwgCJgEqAAAABgLRcwD////rAAAAqAM4AiYBKwAAAAYCwnMA//8AIwAAAOMDPgImASsAAAAGAsxzAP///+8AAAD3AyoCJgErAAAABgLOcwD//wA9/24BlgMIACYBKgAAAAcBOgDlAAD//wATAAAA0wLuAiYBKwAAAAYCy3MA////6v8ZAKsDCAImASoAAAAGAtVzAP///90AAAEJAzACJgErAAAABgLKcwAAAv/t/24AsQMIABAAFACEQAoEAQECAwEAAQJMS7AXUFhAHAYBBAQDXwADAy9NAAICME0AAQEAYgUBAAAyAE4bS7AbUFhAGQABBQEAAQBmBgEEBANfAAMDL00AAgIwAk4bQBcAAwYBBAIDBGcAAQUBAAEAZgACAjACTllZQBUREQEAERQRFBMSDQwIBgAQARAHCRYrFyImJzUWFjMyNjY1ETMRFAYDNTMVJA0fCwUSBRcaC2tLIGySAwRNAQISIBQCPf24REgDKnBwAAH/7f9uALACQgAQAEZACgQBAQIDAQABAkxLsBdQWEARAAICME0AAQEAYgMBAAAyAE4bQA4AAQMBAAEAZgACAjACTllADQEADQwIBgAQARAECRYrFyImJzUWFjMyNjY1ETMRFAYkDR8LBRIFFxoLa0uSAwRNAQISIBQCPf24REj////t/24BCAMqAiYBOwAAAAYCxnsAAAEAOAAAAa8DKwALACpAJwoJBgMEAgEBTAAAAC1NAAEBME0EAwICAi4CTgAAAAsACxISEQUJGSs3ETMRNzMHEyMDBxU4a5xwiIRrbDEBAyr+Hfri/qABKErd//8AOAAAAa8D3wImAT0AAAEHAscBHAC1AAixAQGwtbA1K///ADj+4QGvAysCJgE9AAAABwLTANcAAAABADsAAAGqAkIACwAmQCMKCQYDBAIAAUwBAQAAME0EAwICAi4CTgAAAAsACxISEQUJGSszETMVNzMHEyMDBxU7a5hshIRrYTgCQv7+3f6bARxUyAABAEAAAACrAyoAAwAZQBYAAAAtTQIBAQEuAU4AAAADAAMRAwkXKzMRMxFAawMq/NYA//8AQAAAAQAEIAImAUEAAAEHAsMAdgDoAAixAQGw6LA1K///AEAAAAFJAyoAJgFBAAABBwLFANsAGQAIsQEBsBmwNSv//wA//uEArQMqAiYBQQAAAAYC03YA//8AQAAAASoDKgAmAUEAAAEHAlwArAA8AAixAQGwPLA1K///AED/bgGWAyoAJgFBAAAABwE6AOUAAAABABEAAAD9AyoACwAmQCMKCQgHBAMCAQgBAAFMAAAALU0CAQEBLgFOAAAACwALFQMJFyszEQc1NxEzETcVBxFVRERrPT0BoCFUIAE3/voeUx7+LwABADYAAAJ1AkwAJgBcQAwDAQQAJRkJAwMEAkxLsBdQWEAWBgEEBABhAgECAAAwTQgHBQMDAy4DThtAGgAAADBNBgEEBAFhAgEBATZNCAcFAwMDLgNOWUAQAAAAJgAmIxYjFCQjEQkJHSszETMVNjYzMhYXNjYzMhYWFREjETQmIyIGBxQUFREjETQmIyIGBxE2Yx1GJSAzCx9JKBwuHGIbFxYwFGIbFxYvFQJCNyEgICkmIxs7MP46Ab8qHRkWBAgF/joBvyodGRb+Kf//ADYAAAJ1AxYCJgFIAAAABwLBAVQAAAABADYAAAGFAkoAFABRQAoDAQMAEwECAwJMS7AeUFhAEwADAwBhAQEAADBNBQQCAgIuAk4bQBcAAAAwTQADAwFhAAEBNk0FBAICAi4CTllADQAAABQAFCMUIxEGCRorMxEzFTY2MzIWFhURIxE0JiMiBgcRNmsdRiojJQ9rEhwSJxICQjkbJiQ2HP4sAbUfIhUP/i7//wA2AAABhQM4AiYBSgAAAAcCwwDcAAD//wAKAAABzANSACcCTv/iAt8BBgFKRwAACbEAAbgC37A1KwD//wA2AAABhQMqAiYBSgAAAAcCxwDcAAD//wA2/uEBhQJKAiYBSgAAAAcC0wDcAAAAAQAs/0gBewJKAB0AikAKEQEBAwwBAgECTEuwHlBYQBwAAQEDYQQBAwMwTQACAi5NAAAABWEGAQUFMgVOG0uwIFBYQCAAAwMwTQABAQRhAAQENk0AAgIuTQAAAAVhBgEFBTIFThtAHQAABgEFAAVlAAMDME0AAQEEYQAEBDZNAAICLgJOWVlADgAAAB0AHCMREyYRBwkbKxc1MjY2NRE0JiMiBgcRIxEzFTY2MzIWFhURFAYGI5oyMhIRHRInEmtrHUYrIiUPMVc5uFEWKyEBuh8iFQ/+LgJCORsmJDYc/iY7UCf//wA2/24CaAMIACYBSgAAAAcBOgG3AAD//wA2AAABhQMwAiYBSgAAAAcCygDcAAAAAgAs//gBfQJKABEAIwAtQCoAAwMBYQABATZNBQECAgBhBAEAADcAThMSAQAcGhIjEyMKCAARAREGCRYrFyImJjU1NDY2MzIWFhUVFAYGJzI2NjU1NCYmIyIGBhUVFBYW1UBKHx9KQEBJHx9JQB8ZBQUZHx8aBQUaCDRgQahBYDQ0YEGoQWA0TyQ7ILUhOiUlOiG1IDskAP//ACz/+AF9AzgCJgFSAAAABwLDANUAAP//ACz/+AF9AwkCJgFSAAAABwLIANYAAP//ACz/+AF9AyoCJgFSAAAABwLGANUAAP//ACz/+AHmA1YCJgFSAAAABwLtANUAAP//ACz/UAF9AxYCJgFSAAAAJwLRANUAAAAHAucA1QAA//8ALP/4Aa8DVgImAVIAAAAHAu4A1QAA//8ALP/4AcoDjwImAVIAAAAHAu8A1QAA//8ALP/4AX0DuAImAVIAAAAHAvAA1QAA//8AEP/4AX0DKgImAVIAAAAHAs0A1QAA//8ALP/4AX0DKgImAVIAAAAHAsAA1QAA//8ALP/4AX0D1gImAVIAAAAnAsAA1QAAAQcCywDVAOgACLEEAbDosDUr//8ALP/4AX0DwgImAVIAAAAnAsEA1QAAAQcCywDVANQACLEDAbDUsDUr//8ALP9QAX0CSgImAVIAAAAHAtEA1QAA//8ALP/4AX0DOAImAVIAAAAHAsIA1QAA//8ALP/4AX0DPgImAVIAAAAHAswA1QAA//8ALP/4AX0CjAImAVIAAAAHAtAA9AAA//8ALP/4AX0DOAImAWIAAAAHAsMA1AAA//8ALP9QAX0CjAImAWIAAAAHAtEA1AAA//8ALP/4AX0DOAImAWIAAAAHAsIA1AAA//8ALP/4AX0DPgImAWIAAAAHAswA1AAA//8ALP/4AX0DMAImAWIAAAAHAsoA1AAA//8ALP/4AaMDKwImAVIAAAAHAsQA1QAA//8ALP/4AX0DKgImAVIAAAAHAs4A1QAA//8ALP/4AX0C7gImAVIAAAAHAssA1QAA//8ALP8hAX0CSgImAVIAAAEHAtUBBwAIAAixAgGwCLA1KwADACz/oQF9ApwAAwAVACcANUAyAwEBSgEBAEkAAwMBYQABATZNBQECAgBhBAEAADcAThcWBQQgHhYnFycODAQVBRUGCRYrFycBFwMiJiY1NTQ2NjMyFhYVFRQGBicyNjY1NTQmJiMiBgYVFRQWFmAgAQolmkBKHx9KQEBJHx9JQB8ZBQUZHx8aBQUaXwsC8Az9aDRgQahBYDQ0YEGoQWA0TyQ7ILUhOiUlOiG1IDsk//8ALP+hAX0DOAImAWwAAAAHAsMA1AAA//8ALP/4AX0DMAImAVIAAAAHAsoA1QAA//8ALP/4AX0D3AImAVIAAAAnAsoA1QAAAQcCywDVAO4ACLEDAbDusDUrAAMAOf/4AnQCSgAqADwARwCQQAoNAQgBKAEABAJMS7AJUFhAKgAFAwQEBXIACQADBQkDZwoBCAgBYQIBAQE2TQwHAgQEAGIGCwIAADcAThtAKwAFAwQDBQSAAAkAAwUJA2cKAQgIAWECAQEBNk0MBwIEBABiBgsCAAA3AE5ZQCEsKwEAREI+PTUzKzwsPCYkISAdGxcWEhAKCAAqASoNCRYrFyImJjU1NDY2MzIWFhc+AjMyFhYVFSMVFBYWMzI2NTUzFRQGIyImJwYGJzI2NjU1NCYmIyIGBhUVFBYWEzM1NCYmIyIGBhXiQEofHkg+IC8hCgslNB9BQhfoBx4gHhprSk0zQhEOOS4fGgYGGh8eGgYGGsh9BhoeHBsICDNfQaxBXjQRHxQWHhA5bk8xJC5QMSsnJyZZUiYgHydYIzggrCA5IyM5IKwgOCMBCR8eOSQjOCAAAAIANv9CAZMCSgAUACQAnUAPAwEFACIhAgQFEwECBANMS7AXUFhAHQAFBQBhAQEAADBNBwEEBAJhAAICN00GAQMDMgNOG0uwHlBYQCMABQUAYQEBAAAwTQcBBAQCYQACAjdNBgEDAwBhAQEAADADThtAIQAFBQFhAAEBNk0HAQQEAmEAAgI3TQYBAwMAXwAAADADTllZQBQWFQAAHx0VJBYkABQAFCgjEQgJGSsXETMVNjYzMh4CFRUUBgYjIiYnFRMyNjY1NTQmJiMiBgcRFhY2axM2JS01GggYPzkfMBNNHBgGCBocFSYODya+AwAuFiAvR0kajD1tQx8U6QEKKUYqjCQ9JBIM/o4LD///ADb/QgGTAxYCJgFxAAAABwLBAN8AAAACADf/QgGUAyoAFAAkAHVADwMBBQEiIQIEBRMBAgQDTEuwF1BYQCEAAAAtTQAFBQFhAAEBNk0HAQQEAmEAAgI3TQYBAwMyA04bQCEGAQMCA4YAAAAtTQAFBQFhAAEBNk0HAQQEAmEAAgI3Ak5ZQBQWFQAAHx0VJBYkABQAFCgjEQgJGSsXETMRNjYzMh4CFRUUBgYjIiYnFRMyNjY1NTQmJiMiBgcRFhY3axM2JS01GggYPzkfMBNNGxkGCBscFSUODya+A+j+6hYgL0dJGow9bUMfFOkBCilGKowkPSQSDP6OCw8AAAIALP9CAYUCSgASACEAtUuwHlBYQA8PAQUBFxYCBAUBAQAEA0wbQA8PAQUCFxYCBAUBAQAEA0xZS7AXUFhAHQAFBQFhAgEBATZNBwEEBABhAAAAN00GAQMDMgNOG0uwHlBYQCMABQUBYQIBAQE2TQcBBAQAYQAAADdNBgEDAwFhAgEBATYDThtAIQAFBQFhAAEBNk0HAQQEAGEAAAA3TQYBAwMCXwACAjADTllZQBQUEwAAGxkTIRQhABIAEhMmIwgJGSsFNQYGIyImNTU0NjYzMhYXNTMRAzI2NxEmJiMiBhUVFBYWARoTLR1JSBY9Ox0wE2utDyMQDiIUJRoJHL7jFBlrgHBCcUQaEyX9AAEKCwsBewoPRzKjKEElAAABADkAAAE1AkkAEQBPQAsDAQIAEAoCAwICTEuwIlBYQBIAAgIAYQEBAAAwTQQBAwMuA04bQBYAAAAwTQACAgFhAAEBNk0EAQMDLgNOWUAMAAAAEQARJDMRBQkZKzMRMxU2NjMyMhcVJiYjIgYHETlrIEAgBAcGDB8QGSkUAkJSNSQBdgUHFyH+Wv//ADkAAAFCAzgCJgF1AAAABwLDALgAAP//ACwAAAFEAyoCJgF1AAAABwLHALgAAP//ADj+4QE1AkkCJgF1AAAABgLTbwD////zAAABNQMqAiYBdQAAAAcCzQC4AAD//wA0AAABPAMqAiYBdQAAAAcCzgC4AAAAAQAZ//gBXAJKACsAMUAuGRgEAwQBAwFMAAMDAmEAAgI2TQABAQBhBAEAADcATgEAHhwWFAgGACsBKwUJFisXIiYnNxYWMzI2NTQmJycmJjU0NjYzMhYXBy4CIyIGFRQWFxceAhUUBga8R1YGWQgmJR0eFhljHiklQy1FSQVIBBAcFxofDRBmFSUYKEgIWUkbNzchHBkoFVUaQDMuPyFZPxseLRkjGA8dDl4TLDglMUIh//8AGf/4AVwDOAImAXsAAAAHAsMAuwAA//8AGf/4AVwDKgImAXsAAAAHAscAuwAA//8AGf8VAVwCSgImAXsAAAAHAtQAuwAA//8AGf/4AVwDKgImAXsAAAAHAsYAuwAA//8AGf7hAVwCSgImAXsAAAAHAtMAuwAA//8AGf/4AVwDFgImAXsAAAAHAsEAuwAAAAEAO//3AcsDMwArAGa1IwEBAgFMS7AbUFhAHwACAAEAAgFpAAMDBWEABQUzTQAAAARhBwYCBAQuBE4bQCMAAgABAAIBaQADAwVhAAUFM00ABAQuTQAAAAZhBwEGBjQGTllADwAAACsAKyQUJREXEQgJHCsXNTI+AjU0JiYjNTI2NjU0JiMiBgYVESMRNDY2MzIWFRQGBx4CFRQOAt8pMxsLGjYqJCgRHjIfIg1rKVE8X10yMSo5Hhs4WglZFCc5JCpAJVkrRCQ0RBw1Jf2bAmQ/XTNrZUdWGgs2UDM5Wj4gAAABABMAAAEbAw0AFABbQAoMAQMCDQEBAwJMS7AjUFhAGwADAwJhAAICL00AAAABXwABATBNBQEEBC4EThtAGQACAAMBAgNpAAAAAV8AAQEwTQUBBAQuBE5ZQA0AAAAUABQlJBERBgkaKzMRIzUzNTQ2NjMyFhcVJiYjIgYVEVhFRRE2NhQfEwkWCR8RAfNPHjZNKgMETgIDKSL9jgABABb/+AEbAusAGAA/QDwVAQYBFgEABgJMAAMCA4UFAQEBAl8EAQICME0ABgYAYgcBAAA3AE4BABQRDg0MCwoJCAcGBQAYARgICRYrFyImJjURIzUzNTMVMxUjERQWMzI2NxUGBtAtNxk9PWtdXRYfCBUKFCIIIj4qAXlHqalH/o4iHQIBTwMDAAACABb/+AEiAusAAwAcAE9ATBkBCAEaAQIIAkwABQQFhQAACQEBCAABaAcBAwMEXwYBBAQwTQAICAJhCgECAjcCTgUEAAAYFRIREA8ODQwLCgkEHAUcAAMAAxELCRcrEzUhFQMiJiY1ESM1MzUzFTMVIxEUFjMyNjcVBgYaAQhSLTcZPT1rXV0WHwgVChQiAVQ3N/6kIj4qAXlHqalH/o4iHQIBTwMDAP//ABb/+AFXA2EAJgGEAAABBwLFAOkAUAAIsQEBsFCwNSv//wAW/xUBWgLrAiYBhAAAAAcC1ADQAAD//wAW/uEBGwLrAiYBhAAAAAcC0wDQAAD//wAW//gBGwO/AiYBhAAAAQcCwQCJAKkACLEBAbCpsDUrAAEAMv/4AYECQgAUAGhLsB5QWEAKDQECARIBAAICTBtACg0BAgESAQQCAkxZS7AeUFhAEwMBAQEwTQACAgBiBAUCAAA3AE4bQBcDAQEBME0ABAQuTQACAgBiBQEAADcATllAEQEAERAPDgsJBgUAFAEUBgkWKxciJiY1ETMRFBYzMjY3ETMRIzUGBokiJg9rEhwSJxJraxxHCCQ2HAHU/kwfIxUPAdL9vjkbJv//ADL/+AGBAzgCJgGKAAAABwLDANwAAP//ADL/+AGBAwkCJgGKAAAABwLIAN0AAP//ADL/+AGBAyoCJgGKAAAABwLHANwAAP//ADL/+AGBAyoCJgGKAAAABwLGANwAAP//ABf/+AGBAyoCJgGKAAAABwLNANwAAP//ADL/+AGBAyoCJgGKAAAABwLAANwAAP//ADL/UAGBAkICJgGKAAAABwLRANwAAP//ADL/+AGBAzgCJgGKAAAABwLCANwAAP//ADL/+AGBAz4CJgGKAAAABwLMANwAAP//ADL/+AG4AowCJgGKAAAABwLQAS8AAP//ADL/+AG4AzgCJgGUAAAABwLDANwAAP//ADL/UAG4AowCJgGUAAAABwLRANwAAP//ADL/+AG4AzgCJgGUAAAABwLCANwAAP//ADL/+AG4Az4CJgGUAAAABwLMANwAAP//ADL/+AG4AzACJgGUAAAABwLKANwAAP//ADL/+AGqAysCJgGKAAAABwLEANwAAP//ADL/+AGBAyoCJgGKAAAABwLOANwAAP//ADL/+AGBAu4CJgGKAAAABwLLANwAAP//ADL/GQGEAkICJgGKAAAABwLVAUwAAP//ADL/+AGBAzMCJgGKAAAABwLJANwAAP//ADL/+AGBAzACJgGKAAAABwLKANwAAAABAA8AAAFyAkIABgAhQB4DAQIAAUwBAQAAME0DAQICLgJOAAAABgAGEhEECRgrMwMzExMzA4FybEdIaG4CQv4vAdH9vgAAAQAcAAACMAJCAAwAJ0AkCwYDAwMAAUwCAQIAADBNBQQCAwMuA04AAAAMAAwREhIRBgkaKzMDMxMTMxMTMwMjAwN5XVg8TVJNPFhgWk9OAkL+VgGq/lgBqP2+AZj+aAD//wAcAAACMAM4AiYBoQAAAAcCwwEmAAD//wAcAAACMAMqAiYBoQAAAAcCxgEmAAD//wAcAAACMAMqAiYBoQAAAAcCwAEmAAD//wAcAAACMAM4AiYBoQAAAAcCwgEmAAAAAQAJAAABfQJCAAsAJkAjCgcEAQQCAAFMAQEAADBNBAMCAgIuAk4AAAALAAsSEhIFCRkrMxMDMxc3MwMTIycHCYJ/ZlVLaYSGZltOATABEre3/uH+3cTEAAEADP9vAX0CQgASAEK1CwEAAQFMS7AWUFhAEgIBAQEwTQAAAANiBAEDAzIDThtADwAABAEDAANmAgEBATABTllADAAAABIAERIXEQUJGSsXNTI2NjU0JicDMxMTMwMOAiMtJy4UDgh0bE5LbIoJMEs1kVIHExEJPiMB7P5QAbD9nioxFgD//wAM/28BfQM4AiYBpwAAAAcCwwDEAAD//wAM/28BfQMqAiYBpwAAAAcCxgDEAAD//wAM/28BfQMqAiYBpwAAAAcCwADEAAD//wAM/1ABfQJCAiYBpwAAAAcC0QE+AAD//wAM/28BfQM4AiYBpwAAAAcCwgDEAAD//wAM/28BfQM+AiYBpwAAAAcCzADEAAD//wAM/28BfQLuAiYBpwAAAAcCywDEAAD//wAM/28BfQMwAiYBpwAAAAcCygDEAAAAAQAgAAABRAJCAAkAL0AsBgEAAQEBAwICTAAAAAFfAAEBME0AAgIDXwQBAwMuA04AAAAJAAkSERIFCRkrMzUTIzUhFQMzFSCxnwESsq5IAapQOv5JUf//ACAAAAFEAzgCJgGwAAAABwLDAK4AAP//ACAAAAFEAyoCJgGwAAAABwLHAK4AAP//ACAAAAFEAxYCJgGwAAAABwLBAK4AAP//ABMAAAIgAw0AJgEcAAAABwEcAQUAAAACABMAAAKkAw0ALwAzAN5LsC1QWEAMHQwCAwIeDQIOAwJMG0AMHQwCAw0eDQIOAwJMWUuwI1BYQDEGAQMDAmENBQICAi9NEAEODgJhDQUCAgIvTQsJAgAAAV8HBAIBATBNDwwKAwgILghOG0uwLVBYQCkGAQMOAgNZDQUCAhABDgECDmcLCQIAAAFfBwQCAQEwTQ8MCgMICC4IThtAKgUBAgYBAw4CA2kADRABDgENDmcLCQIAAAFfBwQCAQEwTQ8MCgMICC4ITllZQCAwMAAAMDMwMzIxAC8ALy4tLCsqKRETJSQTJSQREREJHyszESM1MzU0NjYzMhYXFSYmIyIGFRUzNTQ2NjMyFhcVJiYjIgYVFTMRIxEjESMRIxEBNTMVWEVFETY2FCIQCRYJHxGGETY2FCEQCRYJHxHwaoZqhgF2awHzTx42TSoDBE4CAykiMB42TSoDBE4CAykiMP2+AfP+DQHz/g0CmHBwAP//ABP/bgORAw0AJgG1AAAABwE6AuAAAAABABMAAALOAyEAMQCUQA8jAwICCgYBCwIkAQMLA0xLsCNQWEArAAICAGENAQAAL00ACwsKYQAKCi9NCAYCBAQDXwwJAgMDME0HBQIBAS4BThtAKQAKAAsDCgtpAAICAGENAQAAL00IBgIEBANfDAkCAwMwTQcFAgEBLgFOWUAhAQAsKygmIR8bGhkYFxYVFBMSERAPDgoHBQQAMQExDgkWKwEyFhcRIxEmJiMiBgYVFTMVIxEjESMRIxEjNTM1NDY2MzIWFxUmJiMiBhUVMzU0PgICFiRbOWsSHg0uKAhYWGuaa0VFETY2FCASCRYJHxGaCCFMAyEMDfz4As0CAhwyISBP/g0B8/4NAfNPHjZNKgMETgIDKSIwHiBDOiT//wAT/24CnAMMACYBuQAAAAcBOgHrAAAAAgATAAABsAMMABoAHgCBQAoMAQMCDQEJAwJMS7AgUFhAKwADAwJhCAECAi9NCwEJCQJhCAECAi9NBgEAAAFfBAEBATBNCgcCBQUuBU4bQCQAAwkCA1kIAQILAQkBAglnBgEAAAFfBAEBATBNCgcCBQUuBU5ZQBgbGwAAGx4bHh0cABoAGhEREyQ0EREMCR0rMxEjNTM1NDY2MzIWFxUmJiMiBhUVMxEjESMREzUzFVhFRRk8NA0dEAoTCB8U7GuBi2IB808eOkwmAgJQAgIiKDD9vgHz/g0CmHBwAAEAEwAAAckDIQAeAD5AOw0BBAIQAQEEAkwbAQEBSwAEBAJhAAICL00FAQAAAV8AAQEwTQcGAgMDLgNOAAAAHgAeGDITJRERCAkcKzMRIzUzNTQ+AjMyFhcRIxEmJiMiBgYVFBQVMxUjEVhFRQghTEQkWzlrEh4NLigIWFgB808eIEM6JAwN/PgCzQICHDIhCBAIT/4NAAIATQFBAXIDNgAdACgAiEAMIiEIAwUCGwEEBQJMS7APUFhAKgACAQUBAnIABAUABQQAgAADAAECAwFpBwEFBAAFWQcBBQUAYQYBAAUAURtAKwACAQUBAgWAAAQFAAUEAIAAAwABAgMBaQcBBQQABVkHAQUFAGEGAQAFAFFZQBcfHgEAHigfKBoZFRMREA0LAB0BHQgKFisTIiY1ND4CNzU0JiMiBgYVIzY2MzIWFhURIzUGBicyNjc1DgIVFBayLDkiOUclEBsTFwpYAkhDNzsWVg83ARUiCBsvHhYBQT8wKDcmHAw1JTIYJxlKWy5WPv7TQB0pUh0ScQ0dJxwZGgACAEMBQAF4AzYADwAhADFALgABAAMCAQNpBQECAAACWQUBAgIAYQQBAAIAUREQAQAaGBAhESEJBwAPAQ8GChYrEyImJjU1NDYzMhYVFRQGBicyNjY1NTQmJiMiBgYVFRQWFt47RBxDWFNHH0M6HxkGBhkfHhsHBxsBQC1UOIRVZGdShDZUL04hNx9sIDUhITUgbB82Iv//ABMAAAHZAyoCBgABAAAAAgA/AAABzQMqAA8AGQAxQC4AAgAFBAIFaQABAQBfAAAAF00ABAQDXwYBAwMYA04AABkXEhAADwAOIRERBwcZKzMRIRUjFTMyFhYVFA4CIyczMjY2NTQmIyM/AVzrGVhzOR4/X0IfIDJBHz9WHQMqUv8pZl0/WTobURdEQlNGAP//AD8AAAHnAyoCBgAdAAAAAQA/AAABcwMqAAUAH0AcAAEBAF8AAAAXTQMBAgIYAk4AAAAFAAUREQQHGCszESEVIxE/ATTDAypU/Sr//wA/AAABcwQgAiYBwAAAAQcCwwDBAOgACLEBAbDosDUrAAEAPwAAAXQDlgAHAEdLsAtQWEAXAAEAAAFwAAICAF8AAAAXTQQBAwMYA04bQBYAAQABhQACAgBfAAAAF00EAQMDGANOWUAMAAAABwAHERERBQcZKzMRMzUzFSMRP+5HxAMqbMD9KgAAAgAL/20CXQMqABEAGwBjS7AZUFhAJQAHBwFfAAEBF00GAgIAAARfAAQEGE0GAgIAAANfCAUCAwMbA04bQB4IBQIDAANTAAcHAV8AAQEXTQYCAgAABF8ABAQYBE5ZQBIAABUUExIAEQARERERFxEJBxsrFzUzPgQ3NyERMxUjJyEHNyERIwcOBAslESEdGBMFDQFTTlcJ/m4JNwEGgwgEERcdIZPkDihBZ5xv8P0n5JOT5AKFt2yTXzskAP//AD8AAAF7AyoCBgAuAAD//wA/AAABewQgAiYBxAAAAQcCwgDgAOgACLEBAbDosDUr//8APwAAAXsEEgImAcQAAAEHAsAA4ADoAAixAQKw6LA1KwABAAQAAAKhAyoAFQAsQCkTDwwIBAEGAwABTAIBAgAAF00GBQQDAwMYA04AAAAVABUTEhMTEgcHGyszEwMzEzMRMxEzEzMDEyMDIxEjESMDBLypbZgGYAeXbqq9b6gIYAepAZ4BjP55AYf+eQGH/nT+YgGV/msBlf5rAAEAGf/3AbgDMQA8AFVAUiUBBwY1AQMEAkwABwYEBgcEgAABAwIDAQKABQEEAAMBBANpAAYGCGEACAgcTQACAgBhCQEAAB0ATgEALy0pJyMhHRsaGBYSDQsGBQA8ATwKBxYrFyImJjU1MxQUFxYWMzI2NjU0JicmIiIjNTIyNjM2NjU0JiMiBgcUFBUjNTQ2NjMyFhYVFAYHHgIVFAYG8EJYLGoBAiQ1JygOOE4ECwsFBAsLA007Kzc1LgRrMFxCQ10xPzUkNBwoWAkyXkAbBw8GNEIlQyw/VAUBVgEFR0A3Q0M2Bg0HG0FcMjNdQUlcDww0UTdIazoAAQA/AAAB4QMqAAkAJEAhCAMCAgABTAEBAAAXTQQDAgICGAJOAAAACQAJERIRBQcZKzMRMxETMxEjEQM/ZO1RY+sDKv3PAjH81gI6/cb//wA/AAAB4QPxAiYByQAAAQcCyAEbAOgACLEBAbDosDUr//8APwAAAeEEIAImAckAAAEHAsIBGgDoAAixAQGw6LA1KwABAD8AAAHwAyoADAAtQCoHAQQBAUwAAQAEAwEEZwIBAAAXTQYFAgMDGANOAAAADAAMERIREREHBxsrMxEzETMTMwMTIwMjET9xKpFxoLRxpCsDKv6YAWj+f/5XAYv+df//AD8AAAHwBCACJgHMAAABBwLDAP4A6AAIsQEBsOiwNSsAAQAC//wCBQMqABMALEApBwEAAwFMAAECSQAAAwIDAAKAAAMDAV8AAQEXTQACAhgCThERFhEEBxorMzUWPgM3EyERIxEjAw4EAhYlHRYQBhsBZHGSEwUQHzNOVAEIHkBuVAGv/NYC1v6lTn1dPRoA//8APQAAAlcDKgIGAG4AAP//AD8AAAHxAyoCBgBOAAD//wAw//cB6wMxAgYAeAAAAAEAPwAAAf0DKgAHACFAHgACAgBfAAAAF00EAwIBARgBTgAAAAcABxEREQUHGSszESERIxEjET8BvnHcAyr81gLZ/Sf//wA/AAAB0AMqAgYAlwAA//8AMP/3AdYDMQIGAB8AAP//AA8AAAGOAyoCBgCqAAAAAQAT/4EBuAMqABMAIkAfCgECAgABTAMBAgAChgEBAAAXAE4AAAATABMUFwQHGCsXNRY2NjQnAzMTEzcTMwMOBDU0ORcGoGtEKSQ9bJEKDRcuU3tXBQofNSUC0P6n/v//AVv9LjFKNB4K//8AE/+BAbgD8QImAdYAAAEHAsgA4wDoAAixAQGw6LA1KwADADD/3AJmA3MAIwAzAEMAXUBaEwEHAUFAKAMGBwEBAAYDTAACAQKFCgEFAAWGAwEBCQEHBgEHaQwICwMGAAAGWQwICwMGBgBhBAEABgBRNTQmJAAAPzw0QzVDLCkkMyYzACMAI0cyEjcjDQcbKwU1BgYjIiYmNTU0NjYzMhYXNTMVNjYzMhYWFRUUBgYjIiYnFScyNjcRJiYjIgYGFRUUFhYzMjY2NTU0JiYjIgYHERYWAREFFgg9VSwqTzcOHAdxCh4LOU8pKkovECARjQgQBAkSCCEmEA4o2iQmDg4mJgkSCAcUJIgBAiZeUspRXikBAZycAQEpX1DKUV4nAgGIyQEBAewBARpAOso6QBgYQDrKOkAaAQH+FAEB//8ADQAAAdUDKgIGAMwAAAABADEAAAHnAyoAFAAvQCwRAQIBAQEAAgJMAAIAAAQCAGkDAQEBF00FAQQEGAROAAAAFAAUEyQUIgYHGishEQYjIiYmNREzERQWFjMyNjcRMxEBdUI1RVstchYyKRUxG3IBdg8pVD8BB/75JjMZBgYBbfzWAAEAP/9tAlQDKgALAFJLsBlQWEAeAwEBARdNBAECAgBgAAAAGE0EAQICBWAGAQUFGwVOG0AYBgEFAgVUAwEBARdNBAECAgBgAAAAGABOWUAOAAAACwALEREREREHBxsrBSchETMRMxEzETMVAf0J/ktx5nFNk5MDKv0nAtn9J+QAAQA/AAACrwMqAAsAJUAiBAICAAAXTQMBAQEFYAYBBQUYBU4AAAALAAsREREREQcHGyszETMRMxEzETMRMxE/cZJxi3EDKv0oAtj9KALY/NYAAAEAP/9tAv0DKgAPAFlLsBlQWEAhBQMCAQEXTQYEAgICAGAAAAAYTQYEAgICB2AIAQcHGwdOG0AaCAEHAgdUBQMCAQEXTQYEAgICAGAAAAAYAE5ZQBAAAAAPAA8RERERERERCQcdKwUnIREzETMRMxEzETMRMxUCpQn9o3GScYtyTZOTAyr9JwLZ/ScC2f0n5AAAAQA//20B4wMqAAsATEuwGVBYQBgDAQEBF00AAgIAYAQBAAAYTQYBBQUbBU4bQBgGAQUABYYDAQEBF00AAgIAYAQBAAAYAE5ZQA4AAAALAAsREREREQcHGysXJyMRMxEzETMRIwfpB6Nxw3CeB5OTAyr9JwLZ/NaTAAACAD8AAAHTAyoADQAXACtAKAABAAQDAQRpAAAAF00AAwMCYAUBAgIYAk4AABcVEA4ADQAMIREGBxgrMxEzETMyFhYVFA4CIyczMjY2NTQmIyM/cSBYcjkeP19CJSUzQSBAViMDKv6vKWZdP1k6G1EXREJTRgAAAgAFAAACHQMqAA8AGQAxQC4AAgAFBAIFaQAAAAFfAAEBF00ABAQDXwYBAwMYA04AABkXEhAADwAOIRERBwcZKzMRIzUzETMyFhYVFA4CIyczMjY2NTQmIyOIg/QfWHQ5Hz5gQiUmMkEgQFYjAtRW/q8pZl0/WTobURdEQlNGAAADAD8AAAKYAyoADQAXABsANkAzAAEABAMBBGkFAQAAF00AAwMCYAgGBwMCAhgCThgYAAAYGxgbGhkXFRAOAA0ADCERCQcYKzMRMxEzMhYWFRQOAiMnMzI2NjU0JiMjAREzET9xIFhyOR4/X0IlJTNBIEBWIwF3cQMq/q8pZl0/WTobURdEQlNG/nkDKvzWAAACAA7//QMjAyoAHAAmAEBAPQcBAQcBTAADAAcBAwdpAAUFAl8AAgIXTQYBAQEAYQQIAgAAGABOAQAmJB8dFxYVEwwKCQgDAgAcARwJBxYrFyc1Fj4CNxMhETMyFhYVFA4CIyMRIwMOAyUzMjY2NTQmIyMkFh8tHhMGGQFmD1hzOR4/X0KGkRYFGjFMAbQVM0EgQFYTAQFUAhY8bVQBxf6vKWZdP1k6GwLW/o9diFkqVBdEQlNGAAIAPwAAAvIDKwAVAB8AM0AwAwEBCAEFBwEFaQIBAAAXTQAHBwRgCQYCBAQYBE4AAB8dGBYAFQAVESchERERCgccKzMRMxEzETMRMzIWFhUUDgIjIxEjESUzMjY2NTQmIyM/cb1yEFhyOR4/X0KHvQEvFTNBIEBVFAMr/q0BU/6uKWZdP1k6GwGH/nlRF0RCU0b//wAn//cBwAMxAgYAoQAAAAEAMP/3AdYDMQArAEhARQACAwQDAgSAAAcFBgUHBoAABAAFBwQFZwADAwFhAAEBHE0ABgYAYQgBAAAdAE4BACcmIiAcGxoZFRMPDgoIACsBKwkHFisFIiYmNRE0NjYzMhYWFRUjNTQmJiMiBgYVFTMVIxUUFhYzMjY2NTUzFRQGBgEKVl8lJV9WTFknawkoLzAsDcjIFC4nLigKayRYCUh6SwEeUnpDOGhJHRYtRSYpSzJoTos9Rx4pSDAhIUpxPwAAAQAxAAIB1wM9ACsAf0uwKlBYQC4ABgUEBQYEgAABAwIDAQKAAAQAAwEEA2cABQUHYQAHBxxNAAICAGEIAQAAGABOG0AsAAYFBAUGBIAAAQMCAwECgAAHAAUGBwVpAAQAAwEEA2cAAgIAYQgBAAAYAE5ZQBcBACQiHh0ZFxMSERAMCgYFACsBKwkHFis3IiYmNTUzFRQWFjMyNjY1NSM1MzU0JiYjIgYGFRUjNTQ2NjMyFhYVERQGBv5MWidrCSkvMCwMjo4ULSctKQtrJFlQVl4lJV4COGhJKCAsRicqTDKASnY9Rx4oSTAjJEpwP0h5TP7iUntDAAABAEUAAAC0AyoAAwAZQBYAAAAXTQIBAQEYAU4AAAADAAMRAwcXKzMRMxFFbwMq/NYA////8AAAAQgEEgImAecAAAEHAsAAfADoAAixAQKw6LA1KwABAAf/7QDtAyoADQA4S7AxUFhAEQABARdNAAAAAmIDAQICHQJOG0AOAAADAQIAAmYAAQEXAU5ZQAsAAAANAAwVEQQHGCsXNTI+AjURMxEUBgYjByUuGQpwHkxGE1EKGjEmAnH9jUZZKwAAAf//AAACBwMqABgAN0A0BwEFAxcBBAUCTAADAAUEAwVpAgEAAAFfAAEBF00HBgIEBBgETgAAABgAGCQTIxEREQgHHCszESM1IRUjETY2MzIWFREjETQmJiMiBgcRdHUBZ4AgOBpaVXIQJB8VLRoC1lRU/t4IB11f/vkBBycyGQYG/pMAAgA///cCnwMxABkAKwChS7AbUFhAIQAEAAEGBAFnAAcHA2EFAQMDF00JAQYGAGECCAIAAB0AThtLsCJQWEAlAAQAAQYEAWcABwcDYQUBAwMXTQACAhhNCQEGBgBhCAEAAB0AThtAKQAEAAEGBAFnAAMDF00ABwcFYQAFBRxNAAICGE0JAQYGAGEIAQAAHQBOWVlAGxsaAQAkIhorGysSEAwLCgkIBwYFABkBGQoHFisFIiYmNTUjESMRMxEzNTQ2NjMyFhYVERQGBicyNjY1ETQmJiMiBgYVERQWFgHSTlolXGpqXCVaTk5ZJiZZTissEBAsKystEBAtCUF4UHP+jQMq/p9lUXQ+P3RQ/tJPeEJZJUMtAWMtQSMjQS3+nS1DJQACAA0AAAHiAyoAEQAaADhANQEBAgQBTAcBBAACAQQCaQAFBQBfAAAAF00GAwIBARgBThMSAAAWFBIaExoAEQARMREnCAcZKzMTJiY1NDY2MzMRIxEjIiYjAxMzESMiBhUUFg2qNkEwcF6kcUACFgKMvCotTE1GAWwYb1dBZTr81gFQAf6vAaEBOEJMVlQAAQAKAAAB9wMqACEAPUA6BwEGAyABBQYCTAADAAYFAwZpAgEAAAFfAAEBF00ABQUEYQgHAgQEGAROAAAAIQAhJhEnIxEREQkHHSszESM1IRUjETY2MzIWFhUVFAYGIyM1MjY2NTU0JiMiBgcRfnQBZIESNR4oSzIrUzwSKikOKCsQJhYC1lRU/uEQEiJHOmFLXixRJT0iXiM3Cgv+iAAD//4AAAH3AyoAAwARABsAPUA6BwEBAAADAQBoAAMABgUDBmkAAgIXTQAFBQRfCAEEBBgETgQEAAAbGRQSBBEEEAkHBgUAAwADEQkHFysBFSE1ExEzETMyFhYVFA4CIyczMjY2NTQmIyMBdf6JZXEgWHI5Hj9fQiUlM0EgQFYjAqVWVv1bAyr+rylmXT9ZOhtRF0RCU0YAAAMABAAAAowDKgAMABAAFgBXQFQVEgIFAwMBAgYFAgEEBgoGAgAEBEwJAQYFBAUGBIAIAQQABQQAfgAFBQNfAAMDF00HAgEDAAAYAE4REQ0NAAARFhEWFBMNEA0QDw4ADAAMExQKBxgrMxMXNxMjAyMRIxEjAxMDIQMnExchNxME5VlY8m6eCGAHn5bLAhHGS5Mg/qwemQINKDz93wGV/msBlf5rAboBcP6QNwEcODf+5QACAAAAAAGKAyoAAwAJACNAIAAAAAECAAFnAAQEA18AAwMXTQACAhgCThEREREQBQcbKxEhFSETIxEhFSMBSf63wnEBOcgBzlb+iAMqUQACAAT/bQLBAyoAAwAZAGtACxcTEAwIBQYAAgFMS7AZUFhAGwQDAgICF00AAAAFYAkHBgMFBRhNCAEBARsBThtAGwgBAQUBhgQDAgICF00AAAAFYAkHBgMFBRgFTllAGgQEAAAEGQQZFhUSEQ8OCwoHBgADAAMRCgcXKwUnMxUlEwMzEzMRMxEzEzMDEyMDIxEjESMDAmoJYP1DvKltmAZgB5duqr1vqAhgB6mT5OSTAZ4BjP55AYf+eQGH/nT+YgGV/msBlf5rAAIAP/9tAg0DKgADAA8AYUAJDg0KBwQAAgFMS7AZUFhAGQMBAgIXTQAAAARgBwUCBAQYTQYBAQEbAU4bQBkGAQEEAYYDAQICF00AAAAEYAcFAgQEGAROWUAWBAQAAAQPBA8MCwkIBgUAAwADEQgHFysFJzMVJREzERMzAxMjAwcRAbYJYP4ycbppoLpumzST5OSTAyr+ggF+/pv+OwF8Xv7iAAIAP/9tAjADKgALAA8AZkuwGVBYQCEAAQAEBgEEZwIBAAAXTQAGBgNgCAUCAwMYTQkBBwcbB04bQCEJAQcDB4YAAQAEBgEEZwIBAAAXTQAGBgNgCAUCAwMYA05ZQBYMDAAADA8MDw4NAAsACxERERERCgcbKzMRMxEzETMRIxEjEQUnMxU/cdBxcdABKQlgAyr+ogFe/NYBe/6Fk+TkAP//AAwAAAHVAyoCBgDNAAAAAgAMAAAB1QMqAAMADAA4QDUIAQACCwUCAQACTAAABQEBBAABaAMBAgIXTQYBBAQYBE4EBAAABAwEDAoJBwYAAwADEQcHFysTNSEVAxEDMxMTMwMRLQGI+q9pfHpqrgEBTU3+/wEeAgz+eQGH/fT+4gAAAQA/AAAB9QMqABQAL0AsAQECABEBAQICTAAAAAIBAAJpBQEEBBdNAwEBARgBTgAAABQAFBMkEyMGBxorExE2NjMyFhURIxE0JiYjIgYHESMRsSE8GmlkchYxKhUxG3IDKv6KCAddX/75AQcnMhkGBv6TAyoAAAIAP/9tAjADKgALAA8AZkuwGVBYQCEAAQAEBgEEZwIBAAAXTQAGBgNgCAUCAwMYTQkBBwcbB04bQCEJAQcDB4YAAQAEBgEEZwIBAAAXTQAGBgNgCAUCAwMYA05ZQBYMDAAADA8MDw4NAAsACxERERERCgcbKzMRMxEzETMRIxEjERc3Mwc/cdBxcdD3KWAyAyr+ogFe/NYBe/6Fk+TkAP//ACz/9wHnAzECBgCpAAAAAwAw//cB6wMxAAMAFQAnAD1AOgAABgEBBAABZwAFBQNhAAMDHE0IAQQEAmEHAQICHQJOFxYFBAAAIB4WJxcnDgwEFQUVAAMAAxEJBxcrEzUhFQMiJiY1ETQ2NjMyFhYVERQGBicyNjY1ETQmJiMiBgYVERQWFmgBUatSYiorYVJSYCsrYFItLhAQLi0tLxAQLwFyTU3+hUB3UAEzUHM9PnJQ/sxPdkFZJUMtAWMtQSMjQS3+nS1DJQD//wAq//gBgwJKAgYA2gAAAAIANP/4AYsDSwAiADQAOkA3FgEDATABAgMCTA4NAgFKAAEAAwIBA2kFAQICAGEEAQAAHwBOJCMBAC0rIzQkNBsZACIBIgYHFisXIiYmNRE0NjY3PgI3Fw4CBwYGFRU+AjMyFhYVFRQGBicyNjY1NTQmJiMiBgYHFRQWFtcySicXMigqQj0gFhxDQh0dIA0qMRYkPCQuUSsWGw0KFhMKGRsPDR0ILVlCAVRMYDgQEQ4RE1kSEQ0ODjkyXQ0XECZbTm5bXyNPFTAoryUsFQcNCu4qNBgAAwA2AAABggJCABEAHAAlADlANgkBAwQBTAAEAAMCBANpAAUFAF8AAAAZTQACAgFfBgEBARgBTgAAJSMfHRwaFBIAEQAQIQcHFyszETMyFhYXFgYHHgIVFAYGIyczMjY2NTQmJiMjNTMyNjU0JiMjNqI7Qx0BAR4vJCcPHUdBPiYXJhcVIxcrNB8kKiQpAkInPyQrRA4HLT4hMkwqUQ0oJi0pCk0kLikgAAABADYAAAEfAkIABQAfQBwAAQEAXwAAABlNAwECAhgCTgAAAAUABRERBAcYKzMRMxUjETbpfgJCTf4LAP//ADYAAAE5AzgCJgH9AAAABwLDAK8AAAABADcAAAEgAqAABwBHS7ANUFhAFwABAAABcAACAgBfAAAAGU0EAQMDGANOG0AWAAEAAYUAAgIAXwAAABlNBAEDAxgDTllADAAAAAcABxEREQUHGSszETM1MxUjETeuO34CQl6r/gsAAAIAAv9tAdwCQgAPABgAa0AKFAEBBgEBAwECTEuwGVBYQCMABgYAXwAAABlNBQEBAQNfAAMDGE0FAQEBAl8HBAICAhsCThtAHQcEAgIBAlMABgYAXwAAABlNBQEBAQNfAAMDGANOWUARAAATEhEQAA8ADxERERcIBxorFzU+Azc3IREzFSMnIQc3MxEjBw4DAh4yJhYBAgEFRk4J/tQJGsVLAgETISuT2hdAYpBmTP4K35OT3wGpFWqNWTT//wAr//gBegJKAgYBBQAA//8AK//4AXoDOAImAgEAAAAHAsIA0wAA//8AK//4AXoDKgImAgEAAAAHAsAA0wAAAAEABAAAAj8CQgAVADhANQwIBAEEBQABTA8BBQFLAAUAAwAFA4ACAQIAABlNBwYEAwMDGANOAAAAFQAVERMSExMSCAccKzMTAzMTMxEzETMTMwMTIwMjESMRIwMEkYhmewhYCHpmiJFjhghYCYYBJwEb/uoBFv7qARb+5f7ZARz+5AEc/uQAAQAd//YBVwJKAC4ATkBLKAEDBAFMAAYFBAUGBIAAAQMCAwECgAAEAAMBBANpAAUFB2EABwceTQACAgBhCAEAAB0ATgEAIR8cGxkXExIREAoIBgUALgEuCQcWKxciLgI1MxQWMzI2NjU0JiYjNTI2NTQmIyIGFSM0NjYzMhYWFRQGBgceAhUUBr4oOiYSWyIfGxgGFTMtRi8kGx4kWydJMTZDHx8tFRYtH0wKFi9GMDs0HDEeJiUMTCowKyYmOUFMISxHJzI4GAIEFTk8UlYAAAEANgAAAZICQgAJACRAIQgDAgIAAUwBAQAAGU0EAwICAhgCTgAAAAkACRESEQUHGSszETMREzMRIxEDNlquVFitAkL+ewGF/b4BiP54//8ANgAAAZIDCQImAgYAAAAHAsgA6AAA//8ANgAAAZIDOAImAgYAAAAHAsIA5wAAAAEANgAAAZwCQgAMAC1AKgcBBAEBTAABAAQDAQRnAgEAABlNBgUCAwMYA04AAAAMAAwREhEREQcHGyszETMVMzczAxMjAyMRNmsebW55e3BtHgJC9PT+6P7WAQ7+8v//ADYAAAGcAzgCJgIJAAAABwLDAOQAAAABABH/+wGvAkIAEgBNS7AtUFhAFwADAwFfAAEBGU0AAAACYQUEAgICGAJOG0AbAAMDAV8AAQEZTQACAhhNAAAABGEFAQQEHwROWUANAAAAEgAREREVEQYHGisXNTI+Ajc3IREjESMHDgMjER4jEwoEDQEva2YJBRMoQzUFURg5YUn7/b4B8apjgkkeAAEAMwAAAd4CQgAMAC5AKwsIAwMDAAFMAAMAAgADAoABAQAAGU0FBAICAhgCTgAAAAwADBIREhEGBxorMxMzExMzEyMRAyMDETMGT4CBTwZaayFrAkL+nQFj/b4BWf7gAR7+qQABADYAAAGVAkIACwAnQCQAAQAEAwEEZwIBAAAZTQYFAgMDGANOAAAACwALEREREREHBxsrMxEzFTM1MxEjESMRNmuJa2uJAkLz8/2+AQH+/wD//wAs//gBfQJKAgYBUgAAAAEANgAAAYYCQgAHACFAHgACAgBfAAAAGU0EAwIBARgBTgAAAAcABxEREQUHGSszESERIxEjETYBUGt6AkL9vgHx/g///wA2/0IBkwJKAgYBcQAA//8AK//4AXICSgIGAPgAAAABAAsAAAFPAkIABwAhQB4CAQAAAV8AAQEZTQQBAwMYA04AAAAHAAcREREFBxkrMxEjNSEVIxF3bAFEbQHyUFD+Dv//AAz/bwF9AkICBgGnAAD//wAM/28BfQMJAiYCEwAAAAcCyADHAAAAAwAr/0ICMwMqAB4AKgA2AJhLsBZQWEAjCAsCBwQBAAUHAGkAAgIXTQkBBgYBYQMBAQEZTQoBBQUbBU4bS7AxUFhAIwoBBQAFhggLAgcEAQAFBwBpAAICF00JAQYGAWEDAQEBGQZOG0AhCgEFAAWGAwEBCQEGBwEGaQgLAgcEAQAFBwBpAAICFwJOWVlAGh8fAAA2NC0rHyofKiMhAB4AHighESkhDAcbKxc1IyIuAjU1ND4CMzM1MxUzMhYWFRUUDgIjIxUDMxEjIgYGFRUUFhYzMzI2NjU1NCYmIyP9CiFGPCUfN0coDWMRNVg1JDtFIQ5qBwofLhoYMIwGIzAZGi8gCb7eES5YRmg4UDMY8vIrXUtoRlguEd4BKgGGFDYzdzo/GRk/OnczNhT//wAJAAABfQJCAgYBpgAAAAEAJQAAAXoCQgAUAC9ALBEBAgEBAQACAkwAAgAABAIAaQMBAQEZTQUBBAQYBE4AAAAUABQTIxQjBgcaKyE1BgYjIiYmNTUzFRQWMzI2NxEzEQEPEyYUK0gqax0uDBoOa+UCBBg/OdPUHyQDAgES/b4AAAEANv9tAd0CQgALAFJLsBlQWEAeAwEBARlNBAECAgBgAAAAGE0EAQICBWAGAQUFGwVOG0AYBgEFAgVUAwEBARlNBAECAgBgAAAAGABOWUAOAAAACwALEREREREHBxsrBSchETMRMxEzETMVAY8J/rBri2tGk5MCQv4KAfb+Ct8AAQA2AAACNwJCAAsAJUAiBAICAAAZTQMBAQEFYAYBBQUYBU4AAAALAAsREREREQcHGyszETMRMxEzETMRMxE2Z2ZnZmcCQv4KAfb+CgH2/b4AAAEANv9tAn0CQgAPAFlLsBlQWEAhBQMCAQEZTQYEAgICAGAAAAAYTQYEAgICB2AIAQcHGwdOG0AaCAEHAgdUBQMCAQEZTQYEAgICAGAAAAAYAE5ZQBAAAAAPAA8RERERERERCQcdKwUnIREzETMRMxEzETMRMxUCLwn+EGdmZ2ZnRpOTAkL+CgH2/goB9v4K3wAAAQA2/20BiAJCAAsATEuwGVBYQBgDAQEBGU0AAgIAYAQBAAAYTQYBBQUbBU4bQBgGAQUABYYDAQEBGU0AAgIAYAQBAAAYAE5ZQA4AAAALAAsREREREQcHGysXJyMRMxEzETMRIwe+CX9rfGt8BpOTAkL+CgH2/b6TAAACADYAAAGMAkIAEQAeACtAKAABAAQDAQRpAAAAGU0AAwMCYAUBAgIYAk4AAB0aFBIAEQAQUREGBxgrMxEzFToCMx4DFRQOAiMnMzI2NjU0JiYjIiIjNmsCBwYCO1M0GBg2WD8GBjM6GBU3NAEIAgJC7wEPJUEzL0EoEj8SLysnLRUAAv/8AAABygJCABAAGwAxQC4AAgAFBAIFaQAAAAFfAAEBGU0ABAQDXwYBAwMYA04AABsZExEAEAAPIRERBwcZKzMRIzUzFTMyHgIVFA4CIyczMjY2NTQmJiMjdHjjETtTNBgYNlg/BgYzORgVNzQKAfNP7xAlQTMvQSgSPxIvKyYuFQAAAwA2AAACOQJCABEAHgAiADZAMwABAAQDAQRpBQEAABlNAAMDAmAIBgcDAgIYAk4fHwAAHyIfIiEgHRoUEgARABBREQkHGCszETMVOgIzHgMVFA4CIyczMjY2NTQmJiMiIiMBETMRNmsCBwYCO1M0GBg2WD8GBjM6GBU3NAEIAgEtawJC7wEPJUEzL0EoEj8SLysnLRX+7AJC/b4AAgAF//sCeQJCABwAJwCcS7AUUFhAIAACAAcAAgdpAAQEAV8AAQEZTQYBAAADYQgFAgMDGANOG0uwLVBYQCsAAgAHAAIHaQAEBAFfAAEBGU0AAAADYQgFAgMDGE0ABgYDYQgFAgMDGANOG0AoAAIABwACB2kABAQBXwABARlNAAYGA18AAwMYTQAAAAVhCAEFBR8FTllZQBIAACYlHx0AHAAbESghFBEJBxsrFzUyNjY3EyEVMzIeAhUUDgIHIxEjBw4DIyUzMjY2NTQmJiMjBSgnDwUNAS4QNkwvFRYxUDtuZwoFGStBLgGTBisxFBIwLgYFUC5sXQEA9BAlQTAuPygSAQHxvmh9PxREEy8oJC0VAAIANgAAAmECQgAZACoAYEuwJ1BYQB0DAQEIAQUHAQVpAgEAABlNAAcHBGAJBgIEBBgEThtAIgABAwUBVwADCAEFBwMFaQIBAAAZTQAHBwRgCQYCBAQYBE5ZQBMAACklHxoAGQAZEShRERERCgccKzMRMxUzNTMVOgIzHgMVFA4CByMRIxE3OgIxPgI1NCYmJyoCIzZremsCBQYBOE8wFhYyUjtxeuUBBAUrMRUSMC4BBAUBAkLv7/QBDyVAMS5AJxIBAQv+9T8BEy4oJCwVAf//ABn/+AFcAkoCBgF7AAAAAQAs//gBcwJKACoASEBFAAIDBAMCBIAABwUGBQcGgAAEAAUHBAVnAAMDAWEAAQEeTQAGBgBhCAEAAB8ATgEAJiUhHxwbGhkVEw8OCggAKgEqCQcWKxciJiY1NTQ2NjMyFhYVFSM1NCYmIyIGBhUVMxUjFRQWMzI2NjU1MxUUBgbVR0kZGklFQEQbYQoaGBocCY6OGyUbGQdhHEQIOWhFhUlnNylQPBAQJiwUGDkxMEZASjIZLh0bFDtTLAABACr/+AFxAkkAKQBIQEUABgUEBQYEgAABAwIDAQKAAAQAAwEEA2cABQUHYQAHBx5NAAICAGEIAQAAHwBOAQAiIBwbGBYSERAPCwkGBQApASkJBxYrFyImJjU1MxUUFjMyNjY1NSM1MzU0JiYjIgYVFSM1NDY2MzIWFhUVFAYGyD9EG2EaIhsbCYqKCxwYKBRhHEU+R0gZGkkIKFA7ERE3Lhk5MDs8PzI1FTcrHBU6Uiw5Z0aFSGc3AP//AD0AAACoAwgCBgEqAAD////nAAAA/wMqAiYBKwAAAAYCwHMA////7f9uALEDCAIGAToAAAAC//YAAAGWAyoAFgAaADxAOQMBAwEBTAAFCAEGAQUGaAABAAMCAQNpAAAAF00HBAICAhgCThcXAAAXGhcaGRgAFgAWIxQkEQkHGiszETMRPgIzMhYWFREjETQmIyIGBgcRAzUhFT9rAiI5IikwFGsRHQ0mHgK0AUIDKv6aAhQTHS0Y/nUBcRocDAwC/nMCaUBAAAIANv/4AhACSgAZACsAc0uwHlBYQCEABAABBgQBZwAHBwNhBQEDAxlNCQEGBgBhAggCAAAfAE4bQCkABAABBgQBZwADAxlNAAcHBWEABQUeTQACAhhNCQEGBgBhCAEAAB8ATllAGxsaAQAkIhorGysSEAwLCgkIBwYFABkBGQoHFisFIiYmNTUjFSMRMxUzNTQ2NjMyFhYVFRQGBicyNjY1NTQmJiMiBgYVFRQWFgF6OkIaUF5eUBpCOjpBGxtBOhwXBQUXHBwXBQUXCDRgQTH+AkL9MEFgNDRgQahBYDRPJDsgtSE6JSU6IbUgOyQAAAIACgAAAXkCQgASACAAOEA1AQECBAFMBwEEAAIBBAJpAAUFAF8AAAAZTQYDAgEBGAFOFRMAABsXEyAVIAASABIhESkIBxkrMzcuAjU0PgIzMxEjNSImJwcTMjIzNSIiIyIGBhUUFgptHCMQGDRWP3BqEBYNX4YCCQEBCQEvNxYz9QssQCguQioU/b7kAQHmASLjFzEpOTgAAv/2/20BlgMqACIAJgB2tRQBAQQBTEuwGVBYQCcABgkBBwQGB2gABAABAgQBaQADAxdNAAICGE0AAAAFYQgBBQUbBU4bQCQABgkBBwQGB2gABAABAgQBaQAACAEFAAVlAAMDF00AAgIYAk5ZQBYjIwAAIyYjJiUkACIAISQRFCchCgcbKxc1MzI+AjURNCYjIgYGBxEjETMRPgIzMhYWFREUDgIjAzUhFb8MHSYVCBEdESUbAmtrAiI5IikwFA0lSDvrAUKTRwgePzcBIRocDAwC/nMDKv6aAhQTHS0Y/ttLYjYWAvxAQAAAA//2AAABmgMqABEAHgAiAD5AOwABAAQDAQRpAAAAF00IAQYGBV8ABQUZTQADAwJfBwECAhgCTh8fAAAfIh8iISAdGhQSABEAEFERCQcYKzMRMxE6AjMeAxUUDgIjJzMyNjY1NCYmIyIiIyc1IRVEawIHBgI7UzQYGDZYPwYGMzoYFTc0AQgCuQFHAyr+KQEPJUEzL0EoEj8SLysnLRXfT08AAwAEAAACDgJCAAwAEgAWAEtASBIPAgMEDgMBAwUDCgYCAAUDTAIBBQFLBwEFAwADBQCAAAMDBF8ABAQZTQYCAQMAABgAThMTAAATFhMWFRQREAAMAAwTFAgHGCszExc3EyMDIxEjESMDEyc3FyE3FwMhAwSpW12pY3EFWAVxsBp4F/72Fi6kAcqhAVsuLv6lAQb++gEG/voBRQPWJyfxARX+6wACAAAAAAFsAkIAAwAJACNAIAAAAAECAAFnAAQEA18AAwMZTQACAhgCThEREREQBQcbKxEhFSETIxEhFSMBP/7BvGsBG7ABYE/+7wJCTwACAAT/bQJbAkIAAwAZAIBADhAMCAUEBwIBTBMBBwFLS7AZUFhAIwAHAgACBwCABAMCAgIZTQAAAAVgCggGAwUFGE0JAQEBGwFOG0AjAAcCAAIHAIAJAQEFAYYEAwICAhlNAAAABWAKCAYDBQUYBU5ZQBwEBAAABBkEGRgXFhUSEQ8OCwoHBgADAAMRCwcXKwUnMxUlEwMzEzMRMxEzEzMDEyMDIxEjESMDAg0OXP2pkYhmewhYCHpmiJFjhghYCYaT39+TAScBG/7qARb+6gEW/uX+2QEc/uQBHP7kAAACADb/bQG8AkIAAwAQAHG1CwEGAwFMS7AZUFhAIQADAAYAAwZnBAECAhlNAAAABWAJBwIFBRhNCAEBARsBThtAIQgBAQUBhgADAAYAAwZnBAECAhlNAAAABWAJBwIFBRgFTllAGgQEAAAEEAQQDw4NDAoJCAcGBQADAAMRCgcXKwUnMxUlETMVMzczAxMjAyMRAW4OXP56ax5tbnl7cG0ek9/fkwJC9PT+6P7WAQ7+8gAAAgA2/20B2wJCAAMADwBqS7AZUFhAIQADAAYAAwZnBAECAhlNAAAABWAJBwIFBRhNCAEBARsBThtAIQgBAQUBhgADAAYAAwZnBAECAhlNAAAABWAJBwIFBRgFTllAGgQEAAAEDwQPDg0MCwoJCAcGBQADAAMRCgcXKwUnMxUlETMVMzUzESMRIxEBjQ5c/ltriWtriZPf35MCQvPz/b4BAf7/AAABAAz/VQF9AkIACAAjQCAHBAEDAgABTAEBAAAZTQMBAgIbAk4AAAAIAAgSEgQHGCsXNQMzExMzAxWShmxOS2yKq84CH/6BAX/95dIAAgAM/1UBfQJCAAMADABdQAsIAQACCwUCAQACTEuwI1BYQBgDAQICGU0AAAABYAUBAQEYTQYBBAQbBE4bQBYAAAUBAQQAAWgDAQICGU0GAQQEGwROWUAUBAQAAAQMBAwKCQcGAAMAAxEHBxcrFzUhFQc1AzMTEzMDFSkBMsmGbE5LbIoOR0edzgIf/oEBf/3l0v//ADkAAAGLAyoCBgEmAAAAAgA2/20B2wJCAAMADwBqS7AZUFhAIQADAAYAAwZnBAECAhlNAAAABWAJBwIFBRhNCAEBARsBThtAIQgBAQUBhgADAAYAAwZnBAECAhlNAAAABWAJBwIFBRgFTllAGgQEAAAEDwQPDg0MCwoJCAcGBQADAAMRCgcXKwU3MwclETMVMzUzESMRIxEBWyRcMv6Na4lra4mT39+TAkLz8/2+AQH+////ACv/9wF6AkoCBgEZAAAAAwAs//gBfQJKAAMAFQAnAD1AOgAABgEBBAABZwAFBQNhAAMDHk0IAQQEAmEHAQICHwJOFxYFBAAAIB4WJxcnDgwEFQUVAAMAAxEJBxcrEzUzFQMiJiY1NTQ2NjMyFhYVFRQGBicyNjY1NTQmJiMiBgYVFRQWFl7tdkBKHx9KQEBJHx9JQB8ZBQUZHx8aBQUaAQtDQ/7tNGBBqEFgNDRgQahBYDRPJDsgtSE6JSU6IbUgOyQAAQA/AAAB7wMqAAcAH0AcAAAAAgEAAmcEAwIBASYBTgAAAAcABxEREQUIGSszESERIxEjET8BsGzZAyr81gLZ/ScAAQAR//cB6AJCABMAKUAmBQMCAQEEXwAEBCVNAAICJk0ABgYAYQAAACYAThQRERERFBAHCB0rBSImJjURIxEjESM1IRUjERQWFjMB3ENMH3FqQgHXTwwhHQkhQzIBZf4OAfJQUP6+KywP//8AEwAAAdkD/AImAAEAAAEHAskA9gDJAAixAgKwybA1K///AD8AAAHtAyoCBgBjAAAAAgA6//cBywMxABEAIwAtQCoAAwMBYQABATNNBQECAgBhBAEAADQAThMSAQAcGhIjEyMKCAARAREGCRYrBSImJjURNDY2MzIWFhURFAYGJzI2NjURNCYmIyIGBhURFBYWAQNFWSsqWUZGWCorWEUmJw8OJycnKA4PKQk+bEUBXUdrPDxrR/6jRmw9WCxFJQFfJ0UqKkUn/qElRSwAAQAeAAABFgMqAA4AIEAdBwECAQABTAAAAC1NAgEBAS4BTgAAAA4ADhwDCRcrMxEOAyM1PgM3MxGrASs2KgERLS8rD1ECngEKCghRBA4UHhT81gAAAQApAAABugMxAB4ANEAxAQEEAwFMAAEAAwABA4AAAAACYQACAjNNAAMDBF8FAQQELgROAAAAHgAeFyQUKAYJGiszNRM+AjU0JiMiBgYVFSM1NDY2MzIWFRQGBgcDIRUpzhcnGSQtJioQaydXSGJgGSgYugEATAFBJD5FLThAKkQnGxxJaTpvYjRORCT+5FoAAQAo//cBtgMxADsATkBLNAEDBAFMAAYFBAUGBIAAAQMCAwECgAAEAAMBBANpAAUFB2EABwczTQACAgBhCAEAADQATgEALiwoJiIgHBgUEw4MBgUAOwE7CQkWKxciJiY1NTMUFBUeAjMyNjY1NCYnJiIjNTIyMzY2NTQmIyIGBxQUFSM1NDY2MzIWFhUUBgceAhUUBgbuQlgsagEPJyUnKA4vOwMJAwMIAzkyJTc3JAJqLFlCQ1gsPzUlMxwoWAkyXkAbBAkFJDoiJUQsQFEEAWsCOEE3Qkk5BAkEG0FcMjJdQUlYEAs2UzdIazsAAAIAKAAAAdQDKgAKAA0AL0AsDQMCAgEBTAUBAgMBAAQCAGgAAQEtTQYBBAQuBE4AAAwLAAoAChEREhEHCRorITUjNRMzETMVIxUDMxEBE+vTfltb6oTZcAHh/g5f2QE4AXAAAQAv//gBvAMqACUATUBKGgEDBwFMAAQDAQMEAYAAAQIDAQJ+AAcAAwQHA2kABgYFXwAFBS1NAAICAGEIAQAANwBOAQAeHBkYFxYVFBIQCggFBAAlASUJCRYrFyImJjUzFBYWMzI2NjU0JiYjIgYHIxEhFSMHNjYzMhYWFRQOAvNJViVrDCcoLCYKDCYpIS4LWwFd/AcUOyZCSx8SLU4IOGpJJEUtM1c3N00pKRoBsmvgFRg+bEY+a08sAAACADr/9wHKAzEAIwA0AFFATg0BAgMZAQYEMAEFBgNMAAIDBAMCBIAABAAGBQQGaQADAwFhAAEBM00IAQUFAGEHAQAANABOJSQBAC0rJDQlNB0bFRMRDwoIACMBIwkJFisFIiYmNRE0NjYzMhYWFxQWFSM0JiMiBgYVFTY2MzIWFhUUBgYnMjY2NTQmJiMiBgYHFRQWFgEBRlgpJFdMP1cvAQFsJjUdKhUQOytDTCAoWEkkKBEJJi4WJBoIESgJR3lKARFPgk4uWD8CBwM7PiVMPHsZHzppR0l4R1kpRCgwUjEQGQ55KUYpAAABABYAAAFaAyoABgAlQCIFAQABAUwAAAABXwABAS1NAwECAi4CTgAAAAYABhERBAkYKzMTIzUhFQNdktkBRJYC1lQ0/QoAAwAy//cBwQMxAB8ALwA9AEVAQhcJAgMEAUwIAQQAAwIEA2kABQUBYQABATNNBwECAgBhBgEAADQATjEwISABADg2MD0xPSknIC8hLxEPAB8BHwkJFisXIiYmNTQ+AjcmJjU0NjYzMhYWFRQGBx4DFRQGBicyNjY1NCYmIyIGBhUUFhYTPgI1NCYjIgYVFBYW+klYJw4bJRYoMihVQUFTKDEpFiUbDydXSScqDxEqJSUrEhArJyIjDiQvLyYOJQk6a0gpPi8jDhtXQ0BeMzNeQERWGw4jLz4pSGs6VShEKiZDKypDJypEKAGQASg/IjJGRjIiPygAAgAs//cBvAMxACMAMwBNQEonAQUGEAEDBQJMAAEDAgMBAoAIAQUAAwEFA2kABgYEYQAEBDNNAAICAGEHAQAANABOJSQBAC0rJDMlMxwaFBIMCggHACMBIwkJFisXIiYmJzQ0NTMUFjMyNjY1NQYGIyImJjU0NjYzMhYWFREUBgYDMjY3NTQmJiMiBgYVFBYW9T9ZLgFrJjceKBQPOyxDTB8oWUhGWCkkVk0jLAwQKCMjKREJJwkvWkACBQI6PyVNO3sZHztpRkp3Rkd4Sv7wToRPAZojFXgqRSkqQygwUjEAAAEAUAGxAPoDeAAGADm3AwIBAwEAAUxLsDJQWEAMAAAAPU0CAQEBPgFOG0AMAAABAIUCAQEBPgFOWUAKAAAABgAGFAMKFysTEQc1NzMRrFyDJwGxAWQkRUL+OQAAAQBMAbEBcAOCABsANEAxAQEEAwFMAAEAAwABA4AAAAACYQACAj1NAAMDBF8FAQQEPgROAAAAGwAbFiQSKAYKGisTNTc+AjU0JiMiBhUjNTQ2NjMyFhUUBgcHMxVNfB4jDxwdJh9PHkE1QUovMlO5AbE9hyAtJBIeITEvDixHKkc+MkszVkYAAAEATgGnAWgDggAtAE5ASygBAwQBTAAGBQQFBgSAAAEDAgMBAoAABAADAQQDaQAFBQdhAAcHPU0AAgIAYQgBAABAAE4BACMhHhwaGBQSEQ8LCQYFAC0BLQkKFisTIiYmNTUzFRQWMzI2NTQmIyM1MzI2NTQmIyIGFRUjNTQ2MzIWFRQGBxYWFRQG3DI/HU8gIR0bGSAaFxodGh0hHE9NQT5JJxsbLE0BpyM9KBAEJSQiHyAiQiAhHCMoIQQQQ0U/Oy05CgkwNUFCAAACAE4BsQF0A3gACgANAFVACg0BAgEDAQACAkxLsDJQWEAWBQECAwEABAIAZwABAT1NBgEEBD4EThtAFgABAgGFBQECAwEABAIAZwYBBAQ+BE5ZQA8AAAwLAAoAChEREhEHChorEzUjNRMzETMVIxUnMyf6rL87LCyrXQEBsWs7ASH+4T1rqJIAAf9gAAABLwMqAAMAGUAWAAAALU0CAQEBLgFOAAAAAwADEQMJFysjATMBoAFzXP6NAyr81gD//wA5AAADTgMqACYCRemyACcCSQFUAAABBwJGAd7+TwASsQABuP+ysDUrsQIBuP5PsDUr//8AXAAAAx8DKgAmAkUMsgAnAkkBdwAAAQcCSAGr/k8AErEAAbj/srA1K7ECArj+T7A1K///ADsAAANIAzEAJgJH7a8AJwJJAaAAAAEHAkgB1P5PABKxAAG4/6+wNSuxAgK4/k+wNSsAAQAxAAAAnAB3AAMAGUAWAAAAAV8CAQEBLgFOAAAAAwADEQMJFyszNTMVMWt3dwAAAQAo/30AlwBzAAoAF0AUAQEASQABAQBfAAAALgBOERQCCRgrFyc2NjUjNTMVFAY5ERsfOW4ugy4JLR9zcTU/AAIAPABgAKgCEQADAAcAL0AsAAAEAQECAAFnAAIDAwJXAAICA18FAQMCA08EBAAABAcEBwYFAAMAAxEGCRcrEzUzFQM1MxU8bGxsAZ9ycv7BcnIAAAIAOv/SAKoCNQAKAA4AYEuwJ1BYQBwAAgABAAIBZwAABgEDAANlBwEFBQRfAAQEMAVOG0AiAAQHAQUCBAVnAAIAAQACAWcAAAMDAFkAAAADYQYBAwADUVlAFAsLAAALDgsODQwACgAKERIRCAkZKxcnNjY1IzUzFRQGAzUzFUwSHxs5bypFbC4vAiMecnA1PQHqd3cAAAMAJgAAAgUAdwADAAcACwAvQCwEAgIAAAFfCAUHAwYFAQEuAU4ICAQEAAAICwgLCgkEBwQHBgUAAwADEQkJFyshNTMVITUzFTM1MxUBmWz+IWxObHd3d3d3dwAAAgAyAAAAngMqAAMABwAsQCkEAQEBAF8AAAAtTQACAgNfBQEDAy4DTgQEAAAEBwQHBgUAAwADEQYJFys3AzMDBzUzFVQibCRIbK0Cff2DrW5uAAIAMv9OAJ4CeAADAAcAT0uwMVBYQBUAAgUBAwACA2cAAAABXwQBAQEyAU4bQBoAAgUBAwACA2cAAAEBAFcAAAABXwQBAQABT1lAEgQEAAAEBwQHBgUAAwADEQYJFysXEzMTAzUzFTIjJiNsbLICfP2EArxubgACADYAAAG+AzEAHQAhAD5AOxwPDgEEAgABTAUBAgADAAIDgAAAAAFhAAEBM00AAwMEXwYBBAQuBE4eHgAAHiEeISAfAB0AHSsnBwkYKzc1PgI1NCYjIgYVFBYXByYmNTQ2MzIWFRQGBgcVBzUzFaIyUTAxLygvBANkBQZkW19qMlY1ZGvLfCxYYjovPi4kDRcOEw8hD1Bla2JDbFwtYctubv//ADf/QwG/AnQBDwJUAfUCdMAAAAmxAAK4AnSwNSsAAAEAJAFCAJABsAADAB5AGwAAAQEAVwAAAAFfAgEBAAFPAAAAAwADEQMJFysTNTMVJGwBQm5uAAEARAEQAScB+wAPAB9AHAABAAABWQABAQBhAgEAAQBRAQAJBwAPAQ8DCRYrEyImJjU0NjYzMhYWFRQGBrUkMhsbMiQlMhsbMgEQHTYjJDQdHTUjJDUdAAABAC0B1QF7AykADgAcQBkODQwLCgkIBQQDAgEMAEkAAAAtAE4WAQkXKxMnNyc3FyczBzcXBxcHJ5M/T3YacQxRDXIZdlBBQAHVJm8tRDyKijxELm4mfQAAAgAgAAAByAMqABsAHwBHQEQHBQIDDwgCAgEDAmgOCQIBDAoCAAsBAGcGAQQELU0QDQILCy4LTgAAHx4dHAAbABsaGRgXFhUUExEREREREREREREJHyszEyM1MzcjNTMTMwMzEzMDMxUjBzMVIwMjEyMDEzM3IyIpKzcOQ04mayZaJmomKTQPQEsqaypZKTRaDlkBIlBhUQEG/voBBv76UWFQ/t4BIv7eAXJhAAEAHQAAAVQDKgADABlAFgAAAC1NAgEBAS4BTgAAAAMAAxEDCRcrMxMzAx3aXdsDKvzWAAABAB0AAAFUAyoAAwAZQBYAAAAtTQIBAQEuAU4AAAADAAMRAwkXKzMDMxP32lzbAyr81gAAAQAwAUIAfgGwAAMAHkAbAAABAQBXAAAAAV8CAQEAAU8AAAADAAMRAwkXKxM1MxUwTgFCbm4AAQBJ/z4BDAMxABcAHEAZAAMAAAMAZQACAgFhAAEBMwJOGBEaEAQJGisFLgQ1ND4DMxUOAxUUHgIXAQw5SSoTBAQTKkk5IyYQAwMQJiPCATlkgJJJSpGBZDpIAU1+mU1OmX5MAQAAAQAd/z4A4QMxABcAIkAfAAAEAQMAA2UAAQECYQACAjMBTgAAABcAFxEYEQUJGSsXNT4DNTQuAic1Mh4DFRQOAx0kJhADAxAmJDpJKhMEBBMqScJIAU1+mk1OmX1MAUc5ZIGQSkqRgmQ5AAEAKP9BARUDMQAoAFa1HwEBAgFMS7AWUFhAHQACAAEFAgFpAAQEA2EAAwMzTQAFBQBhAAAAMgBOG0AaAAIAAQUCAWkABQAABQBlAAQEA2EAAwMzBE5ZQAooJxEYERgQBgkbKwUiLgI1NTQmJiM1MjY2NTU0PgIzFSIOAhUVFAYHFhYVFRQeAjMBFT9IIwkJGRgYGQkJI0g/GRwMAiQeHiQCDBwZvw0pUEONNzURShI2NoxDUCkNTwgYMSmcS0AIB0BLnSoxGAcAAQAs/0EBGQMxACgAYLUKAQQDAUxLsBZQWEAeAAMABAADBGkAAQECYQACAjNNAAAABWEGAQUFMgVOG0AbAAMABAADBGkAAAYBBQAFZQABAQJhAAICMwFOWUASAAAAKAAoIB8eHRUUExIRBwkXKxc1Mj4CNTU0NjcmJjU1NC4CIzUyHgIVFRQWFjMVIgYGFRUUDgIsGRwMAiQfHyQCDBwZP0gjCQkZGBgZCQkjSL9PBxgxKp1LQAcIQEucKTEYCE8NKVBDjDY2EkoRNTeNQ1ApDQAAAQA//0gBGwMqAAcAQ0uwIFBYQBYAAQEAXwAAAC1NAAICA18EAQMDMgNOG0ATAAIEAQMCA2MAAQEAXwAAAC0BTllADAAAAAcABxEREQUJGSsXETMVIxEzFT/ccXG4A+I3/Iw3AAEAGv9IAPcDKgAHAENLsCBQWEAWAAEBAl8AAgItTQAAAANfBAEDAzIDThtAEwAABAEDAANjAAEBAl8AAgItAU5ZQAwAAAAHAAcREREFCRkrFzUzESM1MxEacXHduDcDczj8HgABADEBBQEQAVYAAwAeQBsAAAEBAFcAAAABXwIBAQABTwAAAAMAAxEDCRcrEzUzFTHfAQVRUQABADoB0wEgAiQAAwAeQBsAAAEBAFcAAAABXwIBAQABTwAAAAMAAxEDCRcrEzUzFTrmAdNRUQABAAgAzAHnAR0AAwAeQBsAAAEBAFcAAAABXwIBAQABTwAAAAMAAxEDCRcrNzUhFQgB38xRUQABAAgBDQO+AVsAAwAeQBsAAAEBAFcAAAABXwIBAQABTwAAAAMAAxEDCRcrEzUhFQgDtgENTk4A//8AMQEFARABVgAGAmMAAAABAAD/egFY/8sAAwAmsQZkREAbAAABAQBXAAAAAV8CAQEAAU8AAAADAAMRAwkXK7EGAEQVNSEVAViGUVEA//8AO/97ALEAhAMHAm4AAP1aAAmxAAG4/VqwNSsA//8AO/97AWEAhAAnAmkAsAAAAAYCaQAA//8AHwJDAUUDSwAmAm0AAAAHAm0AsAAA//8AOwIhAWEDKgAmAm4AAAAHAm4AsAAAAAEAHwJDAJUDSwAMACpAJwcBAQABTAAAAQCFAAECAgFXAAEBAmADAQIBAlAAAAAMAAwUFQQJGCsTNDQ1NDY3FwYGFTMVHyw3Ex8XNQJDGDEYTVgCJwM1OXAAAAEAOwIhALEDKgAMACVAIgABAQJfAAICLU0EAQMDAGEAAAA2A04AAAAMAAwREhEFCRkrEyc2NjUjNTMUFBUUBk4THxc1dSwCISgCNjhxGDEYTlcAAAIAHwApAYUCJQAGAA0ACLUKBwMAAjIrJSc1NxUHFwcnNTcVBxcBhaSkUlLDo6NSUinkNOSGeHmF5DTkhnh5AAACADkAKQGoAiUABgANAAi1CwcEAAIyKzc1Nyc1FxUXNTcnNRcVOVtbrRZbW6wphXl4huQ05IV5eIbkNAABACsAKQDyAiUABgAGswMAATIrNyc1NxUHF/LHx3V1KeQ05IZ4eQAAAQA8AF0BAgJaAAYABrMEAAEyKzc1Nyc1FxU8dXXGXYZ5d4fkNQACABQCMgEAAyoAAwAHACRAIQUDBAMBAQBfAgEAAC0BTgQEAAAEBwQHBgUAAwADEQYJFysTNTMHMzUzBxRhJ1FhJwIy+Pj4+AABABQCMgB1AyoAAwAZQBYCAQEBAF8AAAAtAU4AAAADAAMRAwkXKxM1MwcUYScCMvj4AAEAK/87AVQDEwAGAAazAwABMisFATUBFQMTAVT+1wEp1dXFAdI0AdKQ/qT+pAABABf/OwFAAxMABgAGswQAATIrFzUTAzUBFRfV1QEpxZABXAFckP4uNAADADD/swHWA3QAAwAHAC8AW0BYAAYHCQcGCYAACQgHCQh+AAILAQMHAgNnAAAKAQEAAWMABwcFYQAFBTNNAAgIBGEMAQQENAROCQgEBAAAKyomJB0bFxYSEAgvCS8EBwQHBgUAAwADEQ0JFysXNTMVAzUzFQMiJiY1ETQ2NjMyFhYVFSM1NCYmIyIGBhURFBYWMzI2NjU1MxUUBgb9IyMjFlZfJSVfVkxZJ2sJKC8wLA0ULicuKAprJFhNTU0Dd0pK/M1IeksBHlJ6QzhoSUA5LUUmKUsy/r89Rx4pSDA8PEpxPwABACv/sQFyApAALADDQAoKAQMBAQEGBAJMS7AJUFhAMAAAAQEAcAACAwUDAnIABQQDBQR+CAEHBgYHcQADAwFhAAEBNk0ABAQGYQAGBjcGThtLsBJQWEAxAAABAQBwAAIDBQMCBYAABQQDBQR+CAEHBgYHcQADAwFhAAEBNk0ABAQGYQAGBjcGThtALwAAAQCFAAIDBQMCBYAABQQDBQR+CAEHBgeGAAMDAWEAAQE2TQAEBAZhAAYGNwZOWVlAEAAAACwALBQUJiQUERsJCR0rFzUuAjU1NDY2NzUzFTIWFhUVIzU0JiYjIgYGFRUUFjMyNjY1NTMVFAYGIxWyODsUFjs3Ij9EGmEKGhgaHAkcJBsZB2EbRT5PSQc8Yj+FQ2I6BkhGKlA8IiMmLBQYOTG2SjIZLh0vKDpULEcAAwAw/7MB1gN0ACcAKwAvAJBLsBJQWEAwAAUCBAIFBIAMCQsDBwAAB3EIAQYAAgUGAmcAAwMBYQABATNNAAQEAGEKAQAANABOG0AvAAUCBAIFBIAMCQsDBwAHhggBBgACBQYCZwADAwFhAAEBM00ABAQAYQoBAAA0AE5ZQCMsLCgoAQAsLywvLi0oKygrKikjIh4cFRMPDgoIACcBJw0JFisFIiYmNRE0NjYzMhYWFRUjNTQmJiMiBgYVERQWFjMyNjY1NTMVFAYGBxMzAzMTMwMBClZfJSVfVkxZJ2sJKC8wLA0ULicuKAprJFjIcyNzK3MjcwlIeksBHlJ6QzhoSUA5LUUmKUsy/r89Rx4pSDA8PEpxP0QDwfw/A8H8PwAAAgAmALoCAAKUACMAMwBFQEIjHRoUEQsIAggCAwFMExIKCQQAShwbAQMBSQAAAAMCAANpBAECAQECWQQBAgIBYQABAgFRJSQtKyQzJTMhHy0FCRcrNyc3JiY1NDY3JzcXNjYzMhYXNxcHFhYVFAYHFwcnBgYnBiYnFzI2NjU0JiYjIgYGFRQWFjUPUBkeHhlQD08cSSoqSRxPD08ZHBwaUA9PHEkqKkkcjy9LLCxLLy5LLCxLug9PHEopKUocTw9PGh4eGk8PTxxKKSlKHE8PTxofAQEfGg0uTi8vTi4uTi8vTi4AAQAn/7MBwAN0ADQAi0ASGgECAyAfBQQEAQICTDMBAAFLS7ALUFhAHAADAgOFBQEEAAAEcQACAjNNAAEBAGIAAAA0AE4bS7ASUFhAHAADAgOFBQEEAAAEcQACAjNNAAEBAGIAAAA3AE4bQBsAAwIDhQUBBAAEhgACAjNNAAEBAGIAAAA3AE5ZWUANAAAANAA0ERwmEQYJGisXNSYmJzceAjMyNjU0JicnLgI1NDY3NTMVHgMXBy4CBwYGFRQWFxceAhUUBgYHFfdnZAVkAxUwKywtMiaIGiMRYlQjKj8rGQRgAxItKiovGRyJHjUhKksyTUUCgmcbK1AzMS43QyJ4GDQ/KFdhA0NDAx00SzIaKEUqAwMqLCUvGngbQ1IzN1MwBUYA//8AK/+GAb8DKgImAQEAAAFHApQACv4XRmZAAAAJsQIBuP4XsDUrAAAB//b/9wHWAzEANwBgQF0ABgcEBwYEgAANAQwBDQyACAEECQEDAgQDZwoBAgsBAQ0CAWcABwcFYQAFBTNNAAwMAGEOAQAANABOAQAzMi4sKCcmJSQjIiEdGxcWEhAMCwoJCAcGBQA3ATcPCRYrBSImJjU1IzUzNSM1MzU0NjYzMhYWFRUjNTQmJiMiBgYVFTMVIxUzFSMVFBYWMzI2NjU1MxUUBgYBClZfJTo6OjolX1ZMWSdrCSgvMCwNZGRkZBQuJy4oCmskWAlIekspO2Q8GlJ6QzhoSSojLUUmKUsyKzxkOzs9Rx4pSDAmJkpxPwAB////iQF3Aw0AJQB1QBIWAQUEFwEDBQQBAQIDAQABBExLsCNQWEAfAAEIAQABAGUABQUEYQAEBC9NBwECAgNfBgEDAzACThtAHQAEAAUDBAVpAAEIAQABAGUHAQICA18GAQMDMAJOWUAXAQAhIB8eGxkUEg4NDAsIBgAlASUJCRYrFyImJzcWFjMyNjcTIzUzNz4CMzIWFwcmJiMiBgcHMxUjAw4CQxMdFAgIFwggFQQwQksEBRo6NhQcFAgJFQgfFwQETFUwBRo6dwMDTwEEKiEBz08kNEsoAwJQAQQpIjBP/j00SygAAgAEAAABeAMqAAMADQA9QDoABAAFAAQFZwAABwEBBgABZwADAwJfAAICLU0IAQYGLgZOBAQAAAQNBA0MCwoJCAcGBQADAAMRCQkXKzc1IRUHESEVIxEzFSMRBAEd4gE5yJubrlBQrgMqUf7yUP6FAAMAMP+zAeIDdAADAAcAMgCvtTABCAkBTEuwF1BYQDgABgcKBwYKgAACDQEDBwIDZwAKAAkICglnAAAMAQEAAWMABwcFYQAFBTNNAAgIBGELDgIEBDQEThtAPAAGBwoHBgqAAAINAQMHAgNnAAoACQgKCWcAAAwBAQABYwAHBwVhAAUFM00ACwsuTQAICARhDgEEBDQETllAJgkIBAQAAC8uLSwrKiYkHRsXFhIQCDIJMgQHBAcGBQADAAMRDwkXKxc1MxUDNTMVAyImJjURNDY2MzIWFhUVIzU0JiYjIgYGFREUFhYzMjY2NTUjNTMRIycGBv0jIyMgTFspJV9VTF0qag4rLjItCxEwLCwwEmfNRwsQRE1NTQN3Skr8zEF8VwEPWX1CM2lQHhk1QyEuTzL+1DpOJipSPThQ/m9dLToAA//3AAACEQMqAAUACQANADxAOQQBAgUEAUwABAgBBQEEBWgCAQAALU0HAwYDAQEuAU4KCgYGAAAKDQoNDAsGCQYJCAcABQAFEgkJFyshAQEzAQEhETMRAzUhFQGZ/tMBA3n/AAEp/hpqngHAAb8Ba/6V/kEDKvzWAZdQUAAAAwACAAABdAMxABkAHQAhAFdAVAIBAgQDAUwAAQIHAgEHgAAHCwEIBQcIZwAFCgEGAwUGZwACAgBhAAAAM00AAwMEXwkBBAQuBE4eHhoaAAAeIR4hIB8aHRodHBsAGQAZFCMUJwwJGiszNTcRND4CMzIWFhUVIzQmJiMiBgYHETMVJTUhFSU1IRUCOwoiRDk0PhxQCBocHBoIAcz+jwEd/uMBHTYaAb47aFIuLE4zIR42Iyg8IP37Uf5QUIxQUAAAAwAJAAAB3wMqAA8AEwAXADVAMhcWFRQTEhEQCAIAAUwAAgABAAIBgAAAAC1NAAEBA2AEAQMDLgNOAAAADwAOFCERBQkZKzMRMxEzMjY2NTUzFRQGBiMDNSUVJTUlFT9xQD40C3ItZVXvAZ/+YQGfAyr9JzBcQS1CVnY9AWBQglAKUIJQAAACADgAAAHoAyoAFQAZAC5AKwAAAAIBAAJqAAQELU0HBQYDBAEBLgFOFhYAABYZFhkYFwAVABUkFCQICRkrMxE0NjYzMhYWFREjETQmJiMiBgYVETMRMxE4Il5YWV0iZBAxMzMyD0pUAd1Kbj09bkr+IwHiK0QpKUQr/h4DKvzWAAMACwAAAgQDKgALABcAIQCSQAogAQAIGwEKBQJMS7AXUFhAJAIBAgAMAQMEAANoAAQNBwYDBQoEBWcJAQgILU0OCwIKCi4KThtAMAABAAMAAXIABgQFBQZyAgEADAEDBAADaAAEDQcCBQoEBWcJAQgILU0OCwIKCi4KTllAJBgYDAwAABghGCEfHh0cGhkMFwwXFhUUExINAAsABxEREQ8JGSsTNTMXMzchFSsDBzU7BBUjJyMHAxEzExEzESMDEQtQFFsbAR9oEHkU9GoSfRHvVRRlFONN5l5I6QG6SwoKS4VLSwoK/ssDKv3mAhr81gIp/dcA//8AP//4BD4DKgAmAJcAAAAnAYQBzAAAAAcBewLiAAAABAAcAAACHQMqAA0AFQAgACgATUBKAAcLAQgDBwhnAAMKAQQFAwRnAAUAAQIFAWcABgYAXwAAAC1NCQECAi4CTiEhDg4AACEoISQjIiAeGBYOFQ4VFA8ADQANJyEMCRgrMxEzMhYWFRQOAiMjEQM1MzMhMzMVBTMyNjY1NCYmIyMHNSEVIyMhI1TJSVcoGTJKMlmpVRYBDh1r/qg0MTgYETY5NakCAW4Y/vEQAyo/dlM5XEEj/tcB0zw8WRxJQkpPH448PAAAAwAcAAAB5QMqAAwAEAAbADxAOQAFAAEDBQFnAAMIAQQCAwRnAAYGAF8AAAAtTQcBAgIuAk4NDQAAGxkTEQ0QDRAPDgAMAAwmIQkJGCszETMyFhYVFAYGIyMRJzUhFSczMjY2NTQmJiMjVMlJVygtWEJZqQF/1jQxOBgRNjk1Ayo7b09IaTn+uac8PPEaQjxESRwAAAIAIAAAAeADKgAkACgAnkuwHlBYQDsAAQoHBwFyAAAGCAYAcgsBCAiEAAMFAgNXAAUEAQIJBQJnAAkMAQoBCQpnAAcGBgdZAAcHBmIABgcGUhtAPAABCgcKAQeAAAAGCAYAcgsBCAiEAAMFAgNXAAUEAQIJBQJnAAkMAQoBCQpnAAcGBgdZAAcHBmIABgcGUllAGSUlAAAlKCUoJyYAJAAkIRcREREmISMNBh4rIScmJiMjNTMyNjY1NCYmIyM1IRUjJzIWFhUUDgIjNTMyFhcTATUhFQFzXRAoMY2uKSwQESwprQG4uR49RR0QLFNEKzg4Emb+QAG49ismVClMNDBBIVRULTZZNC1TQCYXNC/+8gIWVFQAAQACAAABdAMxACMAQ0BAAgECCAcBTAADBAEEAwGABQEBBgEABwEAZwAEBAJhAAICM00ABwcIXwkBCAguCE4AAAAjACMRERQjJSUREwoJHiszNTcRIzUzNTQ+AjMyFhYVFBQVIzQmJiMiBgYHFTMVIxEzFQI7OzsKIkQ5ND4cUAgaHBwaCAF4eMw2GgESUFw7aFIuLE4zChYBHjYjKDwgpFD+71EAAAMAJAAAArUDKgAHAAsAGABPQEwXAQAEEg8CBwMCTAAACQEBAgABaAACCgEDBwIDZwYFAgQELU0LCAIHBy4HTgwMCAgAAAwYDBgWFRQTERAODQgLCAsKCQAHAAMRDAkXKxM1IRUjIyEjBzUhFQEDMxMTMxMTMwMjAwMkApFYC/42CVsCkf3zhF5XbVBuVVyCUnFyAcRLS4xLS/7IAyr9ugJD/boCSfzWAlj9qAABAAoAAAHTAyoAFgA+QDsLAQMEAUwGAQMHAQIBAwJoCAEBCQEACgEAZwUBBAQtTQsBCgouCk4AAAAWABYVFBERERIREREREQwJHyszNSM1MzUjNTMDMxMTMwMzFSMVMxUjFblZWVlOpGl7emujTVlZWXNGQUUB6/55AYf+FUVBRnMAAQAkAUIAkAGwAAMAHkAbAAABAQBXAAAAAV8CAQEAAU8AAAADAAMRAwYXKxM1MxUkbAFCbm4AAwA8AAABqgMrAAMABwALADdANAcBAwMAXwIBAAAtTQAEBAFgCAUGAwEBLgFOCAgEBAAACAsICwoJBAcEBwYFAAMAAxEJCRcrMxMzAwM1MxUTNTMVU99c3nRrmGsDK/zVArR3d/1Md3cAAAEAHQAAAVQDKgADABdAFAAAAQCFAgEBAXYAAAADAAMRAwYXKzMTMwMd2l3bAyr81gAAAQAZANQBhgJrAAsALEApAAIBBQJXAwEBBAEABQEAZwACAgVfBgEFAgVPAAAACwALEREREREHCRsrNzUjNTM1MxUzFSMVpYyMUJGR1KNRo6NRowAAAQAtAW8BWAGvAAMAHkAbAAABAQBXAAAAAV8CAQEAAU8AAAADAAMRAwYXKxM1IRUtASsBb0BAAAABADEA/gFOAhwACwAGswQAATIrNyc3JzcXNxcHFwcnZzZZWTZYWTZZWTZZ/jZZWTZZWTZZWTZZAAMAEwCsAUgCfgADAAcACwBAQD0ABAgBBQAEBWcAAAYBAQIAAWcAAgMDAlcAAgIDXwcBAwIDTwgIBAQAAAgLCAsKCQQHBAcGBQADAAMRCQkXKxM1IRUHNTMVAzUzFRMBNcZVVVUBdE5OyG9vAWNvbwACADYBFwFpAhoAAwAHAC9ALAAABAEBAgABZwACAwMCVwACAgNfBQEDAgNPBAQAAAQHBAcGBQADAAMRBgkXKxM1IRUFNSEVNgEz/s0BMwHIUlKxUVEAAAEANgCxAWkCfQATAHJLsA1QWEAqAAQDAwRwCgEJAAAJcQUBAwYBAgEDAmgHAQEAAAFXBwEBAQBfCAEAAQBPG0AoAAQDBIUKAQkACYYFAQMGAQIBAwJoBwEBAAABVwcBAQEAXwgBAAEAT1lAEgAAABMAExEREREREREREQsGHys3NyM1MzcjNTM3MwczFSMHMxUjB2gcTmMbfpMbXRtDWRpziB2xZlFgUmNjUmBRZgAAAQA6ACQBWQIlAAYABrMEAAEyKzc1Nyc1BRU6zs4BHyRrlpRsy2sAAAEAHQAkATsCJQAGAAazAwABMislJTUlFQcXATv+4gEezc0kymvMbJWVAAIANwAAAWICcgAGAAoAKEAlBgUEAwIBAAcASgAAAQEAVwAAAAFfAgEBAAFPBwcHCgcKGAMGFys3NTcnNQUVATUhFTfOzgEf/uEBK3Frl5Rrymz+xEBAAAACACEAAAFMAmwABgAKAChAJQYFBAMCAQAHAEoAAAEBAFcAAAABXwIBAQABTwcHBwoHChgDBhcrJSU1JRUHFwU1IRUBR/7hAR/Ozv7aAStqy2vMbJWV1kBAAAACADkAAAE5Aa8ACwAPADhANQMBAQQBAAUBAGcAAggBBQYCBWcABgYHXwkBBwcuB04MDAAADA8MDw4NAAsACxERERERCgkbKzc1IzUzNTMVMxUjFQc1IRWQV1dSV1epAQCvV1JXV1JXr1JSAAACACQA+wGdAkAAGAAyAGRAYRQBAwIVCQIBAwgBAAEuAQcGLyICBQchAQQFBkwAAgABAAIBaQADCAEABgMAaQAHBQQHWQAGAAUEBgVpAAcHBGEJAQQHBFEaGQEALConJR8dGTIaMhIQDgwGBAAYARgKBhYrASIuAiMiBgcnPgIzMhYWMzI2NxcOAgciLgIjIgYHJz4CMzIeAjMyNjcXDgIBKRMnJyUQDigTJg4rLBEZNDIWDyQUJw4oKxMTJyclEA4oEyYOKywREycmJRAPJBQnDigrAbERFxEXDzMPIhgcHBcQMQ8kGrYSFhIXDzMPIhgRFxEYEDEQJBoAAQAjAWsBnAH6ABcAQrEGZERANxMBAwIUCAIBAwcBAAEDTAADAQADWQACAAEAAgFpAAMDAGEEAQADAFEBABEPDQsFAwAXARcFCRYrsQYARAEiJiYjIgYHJz4CMzIWFjMyNjcXDgIBKBk1MhYNKRMmDistERkzMhYPJRQmDSkrAWsdHBcPMw8iGBwdGBAxDyQaAAABACgBAAFoAcEABQBGS7ALUFhAFwMBAgAAAnEAAQAAAVcAAQEAXwAAAQBPG0AWAwECAAKGAAEAAAFXAAEBAF8AAAEAT1lACwAAAAUABRERBAkYKwE1ITUhFQEx/vcBQAEAcFHBAAABACIB5wGaAyoABgAnsQZkREAcBQEBAAFMAAABAIUDAgIBAXYAAAAGAAYREQQJGCuxBgBEExMzEyMnByKGbIZmVlcB5wFD/r3z8wAAAwAoAN8BlQJLAAMAEwAfAD9APAMBAwEBAQACAkwCAQFKAAEAAwIBA2kFAQIAAAJZBQECAgBhBAEAAgBRFRQFBBsZFB8VHw0LBBMFEwYGFis3JwEXAyImJjU0NjYzMhYWFRQGBicyNjU0JiMiBhUUFlMrAUIrtjNOLS1OMzNPLCxPMyYzMyYnMjLfKwFBK/7NK0wxMksrK0syMUwrSTYpKTY2KSk2AAMAFQB5AmMBsQAXACMALwBdQFoJAQUCLRsCBgcVAQMEA0wAAQAFBwEFaQACAAcGAgdpCQEEAwAEWQoBBgADAAYDaQkBBAQAYQgBAAQAUSUkGRgBACspJC8lLx4dGCMZIxMRDQsHBQAXARcLBhYrNyImNTQ2MzIWFzY2FxYWFRQGBwYmJwYGJzY2NyYmJyYGFRQWJTI2NTQmByIGBxYWp0lJSUk1SR8dQjJESkpEMkIdH0k3FCwgICwUHCQkAVAYIyMYECMgICN5WUNEWC8jIC0CAk9EQ1ACASwhIzBbARslJRsBAiYdHSUJHhsbHgEVIyMVAAABAA3/QgEnAzQAHQA6QDcSAQMCEwQCAQMDAQABA0wAAgADAQIDaQABAAABWQABAQBhBAEAAQBRAQAXFRAOCAYAHQEdBQYWKxciJic1FhYzMjY1ETQ2NjMyFhcVJiYjIgYVERQGBlIUHRQIFwggERI2NRQdFAkVCR8SEjW+AwJRAQQpIQKwNEsoAwJQAQQpIf1QNUsoAAABAD//QgHvAyoABwAmQCMEAwIBAgGGAAACAgBXAAAAAl8AAgACTwAAAAcABxEREQUGGSsXESERIxEjET8BsGzZvgPo/BgDl/xpAAEAGv9CAWQDKgAJAC9ALAYBAgIBAUwAAAABAgABZwACAwMCVwACAgNfBAEDAgNPAAAACQAJEhESBQYZKxcTAyEVIxMDMxUaoqIBSMmIi86+AfcB8VT+Y/5aUQAAAf/9AAAB8gMqAAgAMEAtBQEDAAFMAAIBAoUEAQMAA4YAAQAAAVcAAQEAXwAAAQBPAAAACAAIEhERBQYZKzMDBzUzExMzA9dwasJPe2muAgMBQP5aAo781gAAAQAy/1EBgQJCABUANEAxCQEBAA4BAwECTAABAAMAAQOAAgEAADBNAAMDLk0FAQQEMgROAAAAFQAVERMjEQYJGisXAzMRFBYzMjY3ETMRIzUGBgcGBiMVMwFrEhwSJxJraxIsGQcSB68C8f5MHyMVDwHS/b45ExwIAgOsAAIAJ//0AbwDNAApADwASEBFGAEBAh8PAgQBNy8CAwQDTAACAQKFAAEABAMBBGkGAQMAAANZBgEDAwBhBQEAAwBRKyoBADMxKjwrPBoZDAoAKQEpBwYWKxciJiY1NDQ3NzY2MzIWFhc+AzU0JiYnNzIeAxUUDgMHDgMnMjY2NzcmJiMiBgYHBxQUFRQW2S9RMgEPB1pKIjUlCgEBAQE6Yj0UIUtJPCQDBAUGAwgnOEMeGykbBxgfNxccJhUDECsMJ1FACA4HsVBbFBoJBhAQDgZGUykFRQ0kQmlNAyU6RkkiV2g0EU8TPD3fExMYLyOvBQoFLTcAAAUAJP/7A1cDMAADABEAIQAvAD8AmEuwLVBYQCwMAQQLAQIJBAJpAAcACQgHCWkABQUAYQMBAAAtTQ4BCAgBYQ0GCgMBAS4BThtANAwBBAsBAgkEAmkABwAJCAcJaQAAAC1NAAUFA2EAAwMzTQoBAQEuTQ4BCAgGYQ0BBgY3Bk5ZQCoxMCMiExIFBAAAOTcwPzE/KigiLyMvGxkSIRMhDAoEEQURAAMAAxEPCRcrIRMzAwMiJjU1NDYzMhYVFRQGJzI2NjU1NCYjIgYVFRQWFgEiJjU1NDYzMhYVFRQGJzI2NjU1NCYjIgYVFRQWFgEh31zevVNKSFVVSElUGhkJFScnFAkZAhJTSUdVVkdJVBoaCBUnJxQJGQMr/NUBfGZWP1lgXFhHV2JRHTAbRyk6OylHGy8d/i5lVz9YYV1YRlhhUR0wGkgpOjspRxsvHQAHACX/+wTHAzAAAwARACEALwA/AE0AXAC0S7AtUFhAMhABBA8BAgkEAmkLAQcNAQkIBwlpAAUFAGEDAQAALU0UDBIDCAgBYRMKEQYOBQEBLgFOG0A6EAEEDwECCQQCaQsBBw0BCQgHCWkAAAAtTQAFBQNhAAMDM00OAQEBLk0UDBIDCAgGYRMKEQMGBjcGTllAOk9OQUAxMCMiExIFBAAAV1VOXE9cSEZATUFNOTcwPzE/KigiLyMvGxkSIRMhDAoEEQURAAMAAxEVCRcrIRMzAwMiJjU1NDYzMhYVFRQGJzI2NjU1NCYjIgYVFRQWFgEiJjU1NDYzMhYVFRQGJzI2NjU1NCYjIgYVFRQWFgUiJjU1NDYzMhYVFRQGJzI2NjU1NCYjIgYVFRQWASLfXN69U0pIVVVISVQaGQkVJycUCRkCElNKSFVWR0lUGhkJFScnFAkZAYhTSkhVVkdJVBoZCRUnJxQWAyv81QF8ZlY/WWBcWEdXYlEdMBtHKTo7KUcbLx3+LmVXP1hhXVhGWGFRHTAaSCk6OylHGy8dUWVXPllhXVhGWGFRHS8bSCk6OylIKD4AAgAkAAABrgJDAAUACQAhQB4JCAcEAQUBAAFMAAABAIUCAQEBdgAAAAUABRIDBhcrMwMTMxMDJzcnB9SwqTGwqRp3e3cBIQEi/t7+30jZ09MAAAIAO/96A14DKgBLAFoA20uwHlBYQBMoAQkEUBgCBglIAQgCSQEACARMG0ATKAEJBVAYAgYJSAEIAkkBAAgETFlLsBxQWEAnAAYDAQIIBgJqAAgKAQAIAGUABwcBYQABAS1NAAkJBGEFAQQENglOG0uwHlBYQCUFAQQACQYECWkABgMBAggGAmoACAoBAAgAZQAHBwFhAAEBLQdOG0AsAAUECQQFCYAABAAJBgQJaQAGAwECCAYCagAICgEACABlAAcHAWEAAQEtB05ZWUAbAQBUUkVDOjgwLiopJSMbGhUTCwkASwFLCwkWKwUiLgI1ND4CMzIeAgcUDgIjIiYmJwYGBwYmJjU0PgIzMhYWFzczAwYGFjMyPgI1Ni4CIyIOAhUUHgMzMjY2NxcGBgM2Njc3JiYjIgYGFRQWFgHWV5ZwPkN5pWNbhVYpASJAWDYcLBoBBywsMkMhIkBXNAsYFggKTjkCAgsQIDYpFwEgQ2tKToBcMh45UGM5HTs/HxM3akcXLAojBw4HKEcsDyCGMmedaofHgkBAb4tLQnVZMxYqHB84AwQxVTE4c2A6BwwGEf6REyAUJ0ZcND9yWDI9c6NlRW1QNRoGDAlOEBABPAQxNOkCA0NwRB0vGAAAAwA6//cCJgMxAC4AOQBGAFpAVxcHAgIGMzIhGAQDAiwBAAUDTAACBgMGAgOAAAYGAWEAAQEzTQADAwBiBAcCAAA0TQgBBQUAYQQHAgAANABOMC8BAEJALzkwOSklJCMdHBAOAC4BLgkJFisXIiYmNTQ2Ny4CNTQ2NjMyFhYVFAYGBxc+AjczFAYGBxYWMxUiIiMuAicGBicyNjcnBgYVFBYWEz4CNTQmIyIGFRQW6TdPKUUxEikdKk41MU0uMUYhegsPCwNqFyQTDSoYBAcDHS4lERtXPCY0E3wYHQweJRUlGCQdJB4fCS9SNU1xLCRJTys2UC0kQy81YVMgwBU1PBwnVk0bEBluARkkECItWSUXvx9TLBcrGwF8GURNJR0hOCMuWwAAAQAg/6ABrQMqAA4AKUAmAAADAgMAAoAFBAICAoQAAwMBXwABAS0DTgAAAA4ADhERJREGCRorFxEiJjU0NjYzMxEjESMRx0leLFM41k1NYAJjS0gzQSD8dgNX/KkAAAIAKv/4AYMDMQA6AEgANUAyQjUjIhcMBQQIAQMBTAADAwJhAAICM00AAQEAYQQBAAA3AE4BACgmHx0KCAA6AToFCRYrFyImJic3HgIzMjY3NiYmJycmJjU0NjcmJjU0NjYzMhYWFwcuAiMiBhUUFhYXFxYWBxQGBxYWFRQGAzY2NTYmJycGBhUUFhfWMkUqClEHFyMZHSUCAggTEXMiMTAlHjQrTDIyRCoJUQcWIhocIQoRCIEiJQEpIBsrXjERIAERFDgRHxILCCpGKRsUKx0dHQ8bGgxLFjszMkIQFD4rKzwgKkQoGxMpHiAdDBURBlQWRi0uPxEXOitKTAFNCCIZEScOJgkoGhAfCAADAB3/9QNBA0IAEwA8AFAAabEGZERAXgAEBQcFBAeAAAcGBQcGfgABAAkDAQlpAAMABQQDBWkABgsBAggGAmkMAQgAAAhZDAEICABiCgEACABSPj0VFAEASEY9UD5QODczMSooJCMfHRQ8FTwLCQATARMNCRYrsQYARAUiLgI1ND4CMzIeAhUUDgInIi4CNTU0NjYzMhYWFRUjNTQmJiMiBgYVFRQWFjMyNjY1NTMVFAYGBzI+AjU0LgIjIg4CFRQeAgGva5hhLi5hmGtrmGEuLWGZajtKJw8dUU1GTB1pDR0aHiAMDyAbHh0JaR5MQ1yFVioqVoVcXIZWKSlWhgtKepdMTJZ6Skp6lkxMl3pKhyI/WTZrTGw5KlQ/GxsoLxQZPDOeNDgVGi8fIBk9Vy5bQGyIR0iHbD8/bIdIR4hsQAAABAAu//MDSgM3ABMAJwA2AD8AabEGZERAXjEBBggBTAwHAgUGAgYFAoAAAQADBAEDaQAEAAkIBAlpAAgABgUIBmcLAQIAAAJZCwECAgBhCgEAAgBRKCgVFAEAPz05Nyg2KDY1NDMyKykfHRQnFScLCQATARMNCRYrsQYARAUiLgI1ND4CMzIeAhUUDgInMj4CNTQuAiMiDgIVFB4CJxEzMhYWFRQGBxcjJyMVETMyNjU0JiMjAbxql2AtLWCXamqXYC0tX5drWYBTKChTgFlZgVMoKFOBP5w7SyMuJ2BhVT0hPikjLjcNSXmVS0yUeUlJeZRMTJR5STI+aoNFRYNpPT1pg0VFg2o+awISJEQyMj0R+OXlARcsNysvAAACADcBcQKoAyoADAAUAENAQAsIAwMCBQFMCggJBAMFAgUChgYBAgAFBQBXBgECAAAFXwcBBQAFTw0NAAANFA0UExIREA8OAAwADBIREhELBhorAREzExMzESMRAyMDESERIzUzFSMRAVVKX2dDPlkhXP70Ue1MAXEBuf7NATP+RwEQ/vABD/7xAXZDQ/6KAAACADoB4QGLAzEADwAbADmxBmREQC4AAQADAgEDaQUBAgAAAlkFAQICAGEEAQACAFEREAEAFxUQGxEbCQcADwEPBgkWK7EGAEQTIiYmNTQ2NjMyFhYVFAYGJzI2NTQmIyIGFRQW4jNMKSlMMzRLKipLNCkuLikpLi4B4ShMNTVKKChKNTVMKEg2Kyw1NSwrNgABAB4CQgCOAyoAAwAZQBYCAQEBAF8AAAAtAU4AAAADAAMRAwkXKxM3MwceD2E2AkLo6AAAAgAeAlYBJQMqAAMABwAkQCEFAwQDAQEAXwIBAAAtAU4EBAAABAcEBwYFAAMAAxEGCRcrEzczBzM3MwceD2E2XQ9hNgJW1NTU1AABAEX/bACpAyoAAwAwS7AZUFhADAAAAC1NAgEBATIBThtADAIBAQABhgAAAC0ATllACgAAAAMAAxEDCRcrFxMzEUUBY5QDvvxCAAIAP/9nAJUDKgADAAcAS0uwIlBYQBcEAQEBAF8AAAAtTQACAgNfBQEDAzIDThtAFAACBQEDAgNjBAEBAQBfAAAALQFOWUASBAQAAAQHBAcGBQADAAMRBgkXKxMRMxEDETMRP1ZWVgGQAZr+Zv3XAZn+ZwAAAQAqAAABUAMjAAsAJ0AkAwEBBAEABQEAZwACAi1NBgEFBS4FTgAAAAsACxERERERBwkbKzMRIzUzNTMVMxUjEYlfX2hfXwIbU7W1U/3lAAABAEX/8wHoA6QAIAARQA4gEhEDAEkAAAB2GgEGFyslDgImJjcTPgIeAgYGBwMnEz4CJiYGBwMGFhY2NwGKHkVBMRYKXwYpODktExVKR9kk0UVADhUkIAVmCRIpNhtIIysHIVBCAoEpOBwDJElwmmT+zSIBMGSOXC0FHh/9eTg3CCIiAAABACMAAAFbAyQAEwA3QDQHAQEIAQAJAQBnAAQELU0GAQICA18FAQMDME0KAQkJLglOAAAAEwATERERERERERERCwkfKzM1IzUzNSM1MzUzFTMVIxUzFSMVjGlpaWlmaWlpaf1JtEji4ki0Sf0AAAMAQf/2A4sDKgAJABcAKQB6QAoIAQcFAwEGBwJMS7AXUFhAIAEBAAAtTQAHBwVhAAUFNk0KAQYGAl8JBAgDBAICLgJOG0AkAQEAAC1NAAcHBWEABQU2TQgDAgICLk0KAQYGBGEJAQQENAROWUAcGRgLCgAAIiAYKRkpEhAKFwsXAAkACRESEQsJGSszETMTETMRIwMRBSImNTU0NjMyFhUVFAYnMjY2NTU0JiYjIgYGFRUUFhZBUeJbT+ECQFVVVVVWVlZWHyALCyAfHh8LCx8DKv3OAjL81gI//cEKZGi+aGRkaL5oZEcdOyzALTodHTsswCw7HQAAAgAo//ICTQI6ABkAIgBEQEEiHAIEBRYVDwMDAgJMAAEABQQBBWkABAACAwQCZwADAAADWQADAwBhBgEAAwBRAQAgHhsaExEODQoIABkBGQcGFisFIiYmNTQ+AjMyFhYVIRUWFjMyNjcXDgIDITUmJiMiBgcBO1p6PzBQYjFOfEj+VBdTME1bJCUZPljcATQTUTg0SxkOU4ZMTG5HIkeCWrkZJj85FSdBKAFRjxQpJBgA//8AFAIyAHUDKgAGAnQAAP//AC4C6QDuAyoCBgLiAAAAAv90ArsAjAMqAAMABwAysQZkREAnAgEAAQEAVwIBAAABXwUDBAMBAAFPBAQAAAQHBAcGBQADAAMRBgkXK7EGAEQTNTMVITUzFSBs/uhsArtvb29vAAAB/8oCnwA2AxYAAwAmsQZkREAbAAABAQBXAAAAAV8CAQEAAU8AAAADAAMRAwkXK7EGAEQDNTMVNmwCn3d3AAH/eAJyABwDOAADAB+xBmREQBQAAAEAhQIBAQF2AAAAAwADEQMJFyuxBgBEAyczFxlvazkCcsbGAAAB/+QCcgCKAzgAAwAfsQZkREAUAAABAIUCAQEBdgAAAAMAAxEDCRcrsQYARAM3MwccO2twAnLGxgAAAv+qAoAAzgMrAAMABwAysQZkREAnAgEAAQEAVwIBAAABXwUDBAMBAAFPBAQAAAQHBAcGBQADAAMRBgkXK7EGAEQTNzMHIzczByg6bG+1J1hJAoCrq6urAAH//wIbAG4DEQAKABxAGQEBAEkAAQAAAVcAAQEAXwAAAQBPERQCBhgrEyc2NjUjNTMVFAYQERsfOW4uAhsuCS0fc3E1PwAB/3MCewCNAyoABgAnsQZkREAcBQEBAAFMAAABAIUDAgIBAXYAAAAGAAYREQQJGCuxBgBEAzczFyMnB41WbVdRPTwCe6+veXkAAAH/dAJ9AIwDKgAGACexBmREQBwDAQIAAUwBAQACAIUDAQICdgAAAAYABhIRBAkYK7EGAEQDJzMXNzMHNVdSOjpSWAJ9rXV1rQAAAf98AoEAgwMJAA0AVLEGZERLsBBQWEAYAwEBAgIBcAACAAACWQACAgBiBAEAAgBSG0AXAwEBAgGFAAIAAAJZAAICAGIEAQACAFJZQA8BAAsKCAYEAwANAQ0FCRYrsQYARAMiJjUzFhYzMjY1MxQGAUg7PgEfJSYfPzsCgU46JCcoIzpOAAAC/5ACVABwAzMACwAXADmxBmREQC4AAQADAgEDaQUBAgAAAlkFAQICAGEEAQACAFENDAEAExEMFw0XBwUACwELBgkWK7EGAEQRIiY1NDYzMhYVFAYnMjY1NCYjIgYVFBYyPj4yMj4+MhogIBobHx8CVD0zMzw8MzM9Nh8bHB4eHBsfAAAB/2oCvACWAzAAFwCYsQZkREuwHlBYQBsABAEABFkFAQMAAQADAWkABAQAYgIGAgAEAFIbS7AnUFhAIgACAQABAgCAAAQBAARZBQEDAAECAwFpAAQEAGIGAQAEAFIbQCkABQMEAwUEgAACAQABAgCAAAQBAARZAAMAAQIDAWkABAQAYgYBAAQAUllZQBMBABQTEQ8NCwgHBQMAFwEXBwkWK7EGAEQTIiYmIyIGFSM0NjYzMhYWMzI2NTMUBgZMHCsmFhERPQ8jHhkpKBUREDwMIAK8GRgSFx4xHRgYEhgeMh4AAf+gAq0AYALuAAMAJrEGZERAGwAAAQEAVwAAAAFfAgEBAAFPAAAAAwADEQMJFyuxBgBEAzUzFWDAAq1BQQAB/7ACfABwAz4AFAArsQZkREAgCwEAAQFMCgECAEkAAQAAAVkAAQEAYQAAAQBRJCYCCRgrsQYARBMnNjY1NCYjIgYHNTYzMhYWFRQGBgEiHSQjGgwaDScqHzIeHTICfCgNGhMVEgMENgoSJx4dKBsAAv87AoAAYQMqAAMABwAysQZkREAnAgEAAQEAVwIBAAABXwUDBAMBAAFPBAQAAAQHBAcGBQADAAMRBgkXK7EGAEQDJzMXMyczF1VwbDpKSlgoAoCqqqqqAAH/fAKVAIQDKgAPAC6xBmREQCMEAwIBAgGGAAACAgBZAAAAAmEAAgACUQAAAA8ADyITIwUJGSuxBgBEAz4CMzIWFhUjNCYjIgYHhAEVOTU1ORY/HyYlHwEClSpDKChDKjAoKS8A////yQKAADcDYAIGAuYAAAAB//YCCgCJAowACQBOsQZkREuwEFBYQBcAAQAAAXAAAAICAFkAAAACYgMBAgACUhtAFgABAAGFAAACAgBZAAAAAmIDAQIAAlJZQAsAAAAJAAgSIQQJGCuxBgBEAzUzMjY1MxQGIwoKHhhTRkECCjglJUFBAAH/yv9QADb/wQADACaxBmREQBsAAAEBAFcAAAABXwIBAQABTwAAAAMAAxEDCRcrsQYARAc1MxU2bLBxcQD///90/1IAjP/BAwcCwAAA/JcACbEAArj8l7A1KwAAAf/J/uEAN//BAAoAMLEGZERAJQACAAEAAgFnAAADAwBZAAAAA2EEAQMAA1EAAAAKAAoREhEFCRkrsQYARAMnNjY1IzUzBwYGHBsfGTdtAQEd/uE1Ah8dbWc1QgAB/8r/FQCKAAAAFwBpsQZkREALDgQCAQMDAQABAkxLsApQWEAcAAIDAoUAAwEBA3AAAQAAAVkAAQEAYgQBAAEAUhtAGwACAwKFAAMBA4UAAQAAAVkAAQEAYgQBAAEAUllADwEAEhEQDwgGABcBFwUJFiuxBgBEFyImJzUWFjMyNjU0JiYnNTMVMhYVFAYGDRAiEQ0aDBojFCYbNjI9ITnrBgQ2BAMSFRIVDQRTOC4oICkUAAAB/3f/GQA4AAAAFwAusQZkREAjAAECAYUAAgAAAlkAAgIAYgMBAAIAUgEAExAKCQAXARcECRYrsQYARBciLgI1NDY2NzMOAhUUFjMyNjcHBgYCGzInFyIzGjYSJxs0HAgRBxIIFOcGEiIcITwsCBArLxcfEQEBNQEC////fP8TAIP/mwMHAsgAAPySAAmxAAG4/JKwNSsA////oP9AAGD/gQMHAssAAPyTAAmxAAG4/JOwNSsAAAH/oAFFAGABhgADACaxBmREQBsAAAEBAFcAAAABXwIBAQABTwAAAAMAAxEDCRcrsQYARAM1MxVgwAFFQUEAAQA4AmQA3gMqAAMAH7EGZERAFAAAAQCFAgEBAXYAAAADAAMRAwkXK7EGAEQTNzMHODtrcAJkxsYAAAEAKwKVATIDKgAPADGxBmREQCYDAQECAYUAAgAAAlkAAgIAYQQBAAIAUQEADAsJBwUEAA8BDwUJFiuxBgBEEyImJjUzFhYzMjY1MxQGBq41ORU+AR8lJh8/FTkClShDKjAoKS8qQygAAQAeAn0BNAMqAAYAJ7EGZERAHAMBAgABTAEBAAIAhQMBAgJ2AAAABgAGEhEECRgrsQYARBMnMxc3Mwd0VlE6OlFXAn2tdXWtAP//AFD/FQEQAAAABwLUAIYAAAABAB8CbgE5AyoABgAnsQZkREAcBQEBAAFMAAABAIUDAgIBAXYAAAAGAAYREQQJGCuxBgBEEzczFyMnBx9WbVdRPTwCbry8hoYAAAIAPAK7AVMDKgADAAcAMrEGZERAJwIBAAEBAFcCAQAAAV8FAwQDAQABTwQEAAAEBwQHBgUAAwADEQYJFyuxBgBEEzUzFSE1MxXnbP7pawK7b29vbwAAAQAgAo0AjQL9AAMAJrEGZERAGwAAAQEAVwAAAAFfAgEBAAFPAAAAAwADEQMJFyuxBgBEEzUzFSBtAo1wcAABADkCZADdAyoAAwAfsQZkREAUAAABAIUCAQEBdgAAAAMAAxEDCRcrsQYARBMnMxenbms5AmTGxgD//wA2AoABWgMrAAcCxACMAAAAAQAuAukA7gMqAAMAJrEGZERAGwAAAQEAVwAAAAFfAgEBAAFPAAAAAwADEQMJFyuxBgBEEzUzFS7AAulBQf//AFD/GQERAAAABwLVANkAAAACACECVAEAAzMACwAXADmxBmREQC4AAQADAgEDaQUBAgAAAlkFAQICAGEEAQACAFENDAEAExEMFw0XBwUACwELBgkWK7EGAEQTIiY1NDYzMhYVFAYnMjY1NCYjIgYVFBaRMj4+MjI9PTIaHx8aGx8fAlQ9MzM8PDMzPTYfGxweHhwbHwABAD4CvAFpAzEAGACYsQZkREuwHlBYQBsABAEABFkFAQMAAQADAWkABAQAYgIGAgAEAFIbS7AnUFhAIgACAQABAgCAAAQBAARZBQEDAAECAwFpAAQEAGIGAQAEAFIbQCkABQMEAwUEgAACAQABAgCAAAQBAARZAAMAAQIDAWkABAQAYgYBAAQAUllZQBMBABUUEhEODAgHBAMAGAEYBwkWK7EGAEQBIiYmIyYGFSM0PgIXMhYWFzI2NTMUBgYBFhgwKhANDD0IFCEZGDIrDQwLPA4kArwYGQETFxcnHhEBGBcBEhgeMh7////JAoAANwNgAQ8C0wAAAkHAAAAJsQABuAJBsDUrAAAB/3MCewCNAxYABgAhQB4FAQEAAUwDAgIBAAGGAAAALwBOAAAABgAGEREECRgrAzczFyMnB41WbVdRPTwCe5ubZWUAAAH/7AIKAIkCjAAJADxLsBBQWEASAAEAAAFwAwECAgBhAAAAMAJOG0ARAAEAAYUDAQICAGEAAAAwAk5ZQAsAAAAJAAgSIQQJGCsDNTMyNjUzFAYjFBQeGFNGQQIKOCUlQUEAAv98Am4AgwOdAAMAEQBpS7AQUFhAIwAAAQCFBgEBAwGFBQEDBAQDcAAEAgIEWQAEBAJiBwECBAJSG0AiAAABAIUGAQEDAYUFAQMEA4UABAICBFkABAQCYgcBAgQCUllAFgUEAAAPDgwKCAcEEQURAAMAAxEICRcrAzczBwciJjUzFhYzMjY1MxQGNEBraw1IOz4BHyUmHz87Ayd2drlOOiQnKCM6TgAAAv98Am4AgwOdAAMAEQBpS7AQUFhAIwAAAQCFBgEBAwGFBQEDBAQDcAAEAgIEWQAEBAJiBwECBAJSG0AiAAABAIUGAQEDAYUFAQMEA4UABAICBFkABAQCYgcBAgQCUllAFgUEAAAPDgwKCAcEEQURAAMAAxEICRcrAyczFwciJjUzFhYzMjY1MxQGEmtrQC9IOz4BHyUmHz87Ayd2drlOOiQnKCM6TgAAAv98AoEAgwPMABMAIQBlQAsLAQABCgECAwACTEuwHFBYQBcAAQAAAwEAaQAEBgECBAJmBQEDAy8DThtAIgUBAwAEAAMEgAABAAADAQBpAAQCAgRZAAQEAmIGAQIEAlJZQBEVFB8eHBoYFxQhFSElJgcJGCsTJzY2NTQmIyIGBzU2NjMyFhUUBgciJjUzFhYzMjY1MxQGAyIWGh0UChkLEiQTKzs1LUg7PgEfJSYfPzsDCigNGhMVEgMENgUFKi0oMppOOiQnKCM6TgD///9qAoEAlgOuAiYCyAAAAQYCygB+AAixAQGwfrA1KwAC/3MCewERA1YABgAKADJALwUBAQQBTAUCAgEEAYYAAwYBBAEDBGcAAAAvAE4HBwAABwoHCgkIAAYABhERBwkYKwM3MxcjJwc3NzMHjVZtV1E9PLw1XVACe5ubZWVoc3MAAAL/cwJ7ANoDVgAGAAoAVbUFAQEEAUxLsA1QWEAXBQICAQQEAXEAAwYBBAEDBGcAAAAvAE4bQBYFAgIBBAGGAAMGAQQBAwRnAAAALwBOWUATBwcAAAcKBwoJCAAGAAYREQcJGCsDNzMXIycHNyczF41WbVdRPTzVUF01Anubm2VlaHNzAAL/cwJ7APUDjwATABoANEAxCwEAAQoBAgAZAQIDAgNMBQQCAwIDhgABAAACAQBpAAICLwJOFBQUGhQaERYlJgYJGisTJzY2NTQmIyIGBzU2NjMyFhUUBgU3MxcjJweXIhYaHRQKGQsSJBMrOzX+s1ZtV1E9PALNKA0aExUSAwQ2BQUqLSwuY5ubZWX///9qAnsAlgO4AiYC5wAAAQcCygAAAIgACLEBAbCIsDUrAAAAAQAAAvIAYAAHAGoABQACACoAVwCNAAAAiA4VAAQAAwAAACkAVwBoAHkAigCfALAAwQDSAOMA9AEFARoBKwE8AU0BXgFvAXsBjAGdAa4BvwHLAdwB9gIHAkkCWgKzAsQDGwMsAz0DSQNaA2sDpQOxA70ECAQZBGQEdQSBBI0EugTLBNwE7QT+BQ8FJAU1BUYFVwVoBXkFigWWBacFuAXJBdoF5gX3BlQGZQaNBp4HGgcrBzwHTQdeB2oHewgKCDQIdAiFCJYIrwi7CMwI3QjuCP8JEAkhCSwJPQlOCV8JcAl7CYwJwQnSCf4KDwobCjkKRQpWCmcKcwqECpAKvwrvCwALJwszC0QLVQthC6sLtwvIDBYMJww4DEkMWgxvDIAMkQyiDLMMxAzeDPgNBA0VDSYNNw1IDVQNZQ12DYcNmA2pDboNxg4gDjEOQg5cDqwO5w74DzUPlQ/YD+kP+hAGEBcQKBCEEJUQphCyEMMQzxDgEU4RrBHNEf8SEBIcEigSORJvEoASkRKiErMSxBLVEuES8hMDExQTJRMxE0ITUxNkE3UThhOXE6MTtBPFE+gUGBQpFDoUSxRcFIoUsRTCFNMU5BTwFQEVEhUjFTQVYBVxFYIVkxYrFjcWQxZPFl8WaxZ3FoMWjxabFqcWtxbDFs8W2xbnFvMW/xcLFxcXIxcvFzsXRxdcF2gYjhiaGRgZKRl9GYkZlRmhGa0ZuRozGsQa1RtkG3UbgRuNG/4cChwWHCIcLhw6HEocVhxiHG4cehyGHJIcnhyqHLYcwhzOHN8c6x1fHbodxh4bHiwe7x77HwcfEx8fHysfNyANIEggkSCiILMg6yEEIQ8hGiElITAhOyFGIVEhXCFnIXIhfiGJIZQhnyIEIkQiTyJ8Io0imSLDItwi7SL+IwkjGiMmI1AjtiPCJAwkGCQqJDYkQiS0JMAkzCUYJSQlMCU8JUglWCVkJXAlfCWIJZQlqSW+Jcol1iXiJe4l+iYGJhImHiYqJjYmQiZOJl8mtybDJs8m5CePKBUoISiUKSMpaCl0KYApiymXKaMp/CoIKhQqICosKjgqRCq1KwMrSCucK60ruSvFK9YsLCw4LEQsUCxcLGgsdCyALIwsmCykLLAsvCzILNQs4CzsLPgtBC0QLRwtKC1LLXsthy2TLZ8tqy3XLhouJi4yLj4uSi5WLmIubi56LqUusS69Lsku1S+ML5gwJzAzMKEw7DFsMbcxvzH/MgcyJTI2MmoyyDLQMuEy8jMvM6sz0jPjM/Q0JDQ1NG00dTR9NIU0pzSvNLc0vzT0NQU1kzWbNdU2FTY+Noc2xDb/Nz83hzfiOCs4MziUORA5KTk6OW85sTpCOok62DskO307pDwIPFk8qTyxPOo9JT11PX092j3iPkw+oT6/Pss+/z9dP2U/cT99P8BAKEBPQFtAZ0CWQKJA6EEaQUNBS0FtQXVBfUGeQaZBskJIQlBCiULJQvJDO0N4Q7lD+0RJRNJFOkVCRaBF/UYFRhBGGEZhRtlHJUeaR+tIPUhkSNNJLEl+SaRJ7Un1SkdKT0qpSspK/0sQSxhLZkuQS9hMT0yATN5NU012TfFOYk6QTtRPOU99T5hPsk/MT+ZP/lAeUEhQk1DBUOpRJVF2UYZRoVHNUflST1JpUoNSnlLRUwZTalPTVAVUN1RSVG1UiFSkVKxUy1TaVOZU8lT+VStVVVV1VZNVp1W6Vd5V91YOViNWI1YjViNWlVczV8NYNVjHWNtZU1nHWf9an1reWz5bgVvBXDxcTFyvXPldhF3XXi1ebl6JXr5e118BXx1fOV9xX5xf9GAIYB1gSWB2YKxhKWFyYaVhy2IeYphi42MIYzZjY2OhZBxkw2WdZcZmtGdHZ3Zn/GidaStpc2m7adVp+mofallqgWrDavprdmvPa9dr32wKbClsRmxjbI9ssmzXbPxtP22BbfJuEW5JbnVuqG6wbupvCW8Yb0ZvoG/db+xv+3AacDdwa3CQcJlwvnDpcQhxJXEucU1xVnGYcgxyHHI+cm9yw3MXc31zjXO+dAB0RnRXdFcAAAABAAAABBmaF4SpsV8PPPUADwPoAAAAANXqoGUAAAAA2O4IxP87/uEExwURAAAABgACAAAAAAAAAqoAWgHsABMB7AATAewAEwHsABMB7AATAewAEwHsABMB7AATAewAEwHsABMB7AATAewAEwHsABMB7AATAewAEwHsABMB7AATAewAEwHsABMB7AATAewAEwHsABMB7AATAewAEwHsABMB7AATAnv/zQJ7/80CDAA/AgwAPwIDADACAwAwAgMAMAIDADACAwAwAgMAMAIPAD8DsAA/A7AAPwIGAA4CDwA/AhEAEQIPAD8DagA/A2oAPwGXAD8BlwA/AZcAPwGXAD8BlwA/AZcAPwGXAD8BlwA/AZcAPwGXAD8BlwAbAZcAPwGXAD8BlwA/AZcAPwGXAD8BlwA/AZcAPwGXAD8BlwA/AcgAHgHIAB4BhwA/AYcAPwIXADACFwAwAhcAMAIXADACFwAwAhcAMAIXADACFwAwAjEAPwIxABACMQA/AjEAPwD4AEUCJQBFAPgARQD4//kA+P/vAPj/twD4//AA+ABFAPgARQD4//QA+AAsAPj/+AD4ABwA+P/0APj/5gEtAAcBLQAHAe8APwHvAD8B7wA/AY0APwK6AD8BjQA/AY0APwGNAD8BjQA/AnMAPwGN//oClAA9ApQAPQIQAD8DPQA/AhAAPwIQAD8CEAA/AhMAPwL2AD8CEAA/AhsAMAIbADACGwAwAhsAMAIbADACGwAwAhsAMAIbADACGwAwAhsAMAIbADACGwAwAhsAMAIbADACGwAwAhsAMAIbADACGwAwAhsAMAIbADACGwAwAhsAMAIbADACGwAwAhsAMAIbADACHAAwAhwAMAIbADACGwAwAqsAMAHgAD8B4AA/AfcAPwIdADACBwA/AgcAPwIHAD8CBwA/AgcAPwIHAD8B2QAnAdkAJwHZACcB2QAnAdkAJwHZACcB2QAnAhsAOAIXACwBnQAPAZAADwGQAA8BkAAPAZAADwGQAA8CHwA4Ah8AOAIfADgCHwA4Ah8AOAIfADgCHwA4Ah8AOAIfADgCHwA4Ah8AOAIfADgCHwA4Ah8AOAIfADgCHwA4Ah8AOAIfADgCHwA4Ah8AOAIfADgCHwA4AfkAFwLZACQC2QAkAtkAJALZACQC2QAkAeIADQHhAAwB4QAMAeEADAHhAAwB4QAMAeEADAHhAAwB4QAMAeEADAGhACYBoQAmAaEAJgGhACYBqgAqAaoAKgGqACoBqgAqAaoAKgGqACoBqgAqAaoAKgGqACoBqgAqAaoAKgGqACoBqgAqAaoAKgGqACoBqgAWAaoAKgGqACoBqgAqAaoAKgGqACoBqgAqAaoAKgGqACoBqgAqAaoAKgKLACoCiwAqAb8AOAG/ADgBmwArAZsAKwGbACsBmwArAZsAKwGbACsBugArAdcANAIOACsBxgArAboAKwMVACsDFQArAaUAKwGlACsBpQArAaUAKwGlACsBpQArAaUAKwGlACsBpQArAaUAKwGlAA4BpQArAaUAKwGlACsBpQArAaUAKwGlACsBpQArAaUAKwGlACsBpQArAcoAHgHKAB4BHwATAR8AEwGzABQBswAUAbMAFAGzABQBswAUAbMAFAGzABQBs//xAb0AOQG9//oBvQA5Ab3/4gDlAD0A4AA9AOAAPQDg//AA4P/mAOD/rgDg/+cA4AA9AOUAPQDg/+sA4AAjAOD/7wHLAD0A4AATAOX/6gDg/90A5v/tAOb/7QDm/+0BrQA4Aa0AOAGtADgBrgA7AOUAQADlAEABNQBAAOUAPwEcAEABywBAAQsAEQKoADYCqAA2AbcANgG3ADYB9QAKAbcANgG3ADYBhAAsAp0ANgG3ADYBqQAsAakALAGpACwBqQAsAakALAGpACwBqQAsAakALAGpACwBqQAQAakALAGpACwBqQAsAakALAGpACwBqQAsAakALAGpACwBqQAsAakALAGpACwBqQAsAakALAGpACwBqQAsAakALAGoACwBqAAsAakALAGpACwCrQA5Ab4ANgG+ADYBvwA3AbsALAFBADkBQQA5AUEALAFBADgBQf/zAUEANAF2ABkBdgAZAXYAGQF2ABkBdgAZAXYAGQF2ABkCAwA7AR8AEwE0ABYA9AAWAUsAFgE0ABYBNAAWATQAFgG4ADIBuAAyAbgAMgG4ADIBuAAyAbgAFwG4ADIBuAAyAbgAMgG4ADIBuAAyAbgAMgG4ADIBuAAyAbgAMgG4ADIBuAAyAbgAMgG4ADIBuAAyAbgAMgG4ADIBgQAPAkwAHAJMABwCTAAcAkwAHAJMABwBhQAJAYgADAGIAAwBiAAMAYgADAGIAAwBiAAMAYgADAGIAAwBiAAMAVsAIAFbACABWwAgAVsAIAIkABMC4AATA8YAEwMIABMC0QATAesAEwIDABMBuwBNAbsAQwHsABMB7gA/AgwAPwGCAD8BggA/AXkAPwJzAAsBlwA/AZcAPwGXAD8CpAAEAeAAGQIhAD8CIQA/AiEAPwH8AD8B/AA/AkUAAgKUAD0CMQA/AhsAMAI8AD8B4AA/AgMAMAGdAA8BxAATAcQAEwKWADAB4gANAiYAMQJuAD8C7gA/AxYAPwIjAD8B7gA/AjcABQLYAD8DRAAOAw4APwHZACcB9wAwAgcAMQD4AEUA+P/wAS0ABwI4//8CzwA/AiEADQIjAAoCEv/+Ao8ABAGZAAACwQAEAg0APwI6AD8B4QAMAd0ADAImAD8COgA/AhcALAIcADABqgAqAbYANAGfADYBIgA2ASIANgEoADcB8AACAaUAKwGlACsBpQArAkMABAF3AB0ByQA2AckANgHJADYBnwA2AZ8ANgHlABECEQAzAcsANgGpACwBvAA2Ab4ANgGbACsBWgALAYgADAGIAAwCXgArAYUACQGxACUB5QA2AnEANgKYADYBvgA2AZ8ANgHg//wCbwA2ApMABQJ2ADYBdgAZAY0ALAGcACoA5QA9AOD/5wDm/+0Byf/2Aj0ANgGwAAoByf/2Aa3/9gISAAQBdAAAAlUABAG2ADYB5QA2AYQADAGJAAwBvQA5AeUANgGlACsBqAAsAi4APwIPABEB7AATAe8APwIFADoBjAAeAd4AKQHdACgB4wAoAdwALwH3ADoBggAWAfMAMgH2ACwBVABQAaYATAGqAE4BsgBOALf/YAOxADkDsQBc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AXEBdAF1AXsBhAGKAaABoQGmAacBsAJfArcCYAKfAngCUwJ7Ao0CfQKPArgCsALeArEBuwJvAqACZAKyAuICtAKdAkYCRwLZAqgCrwJWAtwCRQG8AnACSwJKAkwCVQATAAIACgAaABEAGAAbACIAPAAvADIAOQBbAFQAVgBYACgAdwCGAHkAewCUAIIClQCSALgAsQC0ALYAzgCZAYIA7ADbAOMA8wDqAPEA9AD7ARMBBgEJARABMwEsAS4BMAD/AVEBYAFTAVUBbgFcApYBbAGSAYsBjgGQAagBcwGqABYA7wADANwAFwDwACAA+QAjAPwAJAD9ACEA+gApAQAAKgEBAD8BFgAwAQcAOgERAEABFwAxAQgASgEiAEgBIABMASQASwEjAFEBKQBPAScAYAE5AF4BNwBVAS0AXwE4AFkBKwBTATYAYgE8AGUBPwFAAGgBQgBqAUQAaQFDAGsBRQBtAUcAcgFLAHQBTgBzAU0BTAB1AU8AkAFqAHoBVACOAWgAlgFwAJwBdgCeAXgAnQF3AKIBfAClAX8ApAF+AKMBfQCtAYcArAGGAKsBhQDFAZ8AwgGcALIBjADEAZ4AwAGaAMMBnQDJAaMAzwGpANAA1wGxANkBswDYAbIBgwCIAWIAugGUACcALQEEAGcAbAFGAHEAdgFQAAkA4gCzAY0ATQElAEkBIQBkAT4AkQFrAEMBGwAmACwBAwBHAR8AGQDyABwA9QCTAW0AEADpABUA7gA4AQ8APgEVAFcBLwBdATUAgQFbAI8BaQCfAXkAoAF6ALUBjwDBAZsApgGAAK4BiABQASgAgwFdAJUBbwCEAV4A1AGuAt0C2wLaAt8C5ALjAuUC4QLCAsMCxgLKAssCyALBAsACzALJAsQCxwHFAcYB7QHBAeUB5AHnAegB6QHiAeMB6gHNAcsB1wHeAb0BvgG/AcABwwHEAccByAHJAcoBzAHYAdkB2wHaAdwB3QHgAeEB3wHmAesB7AH6AfsB/AH9AgACAQIEAgUCBgIHAgkCFQIWAhgCFwIZAhoCHQIeAhwCIwIoAikCAgIDAioB/gIiAiECJAIlAiYCHwIgAicCCgIIAhQCGwHuAisB7wIsAcIB/wHwAi0B8QIuAfICLwHzAjAB9AIxAfUCMgH2AjMB9wI0AfgCNQH5AjYAHgD3ACsBAgBFAR0AbwFJAJgBcgCn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LkawAiVGsBdDWFAbUllYIDxZIyAuRrACJUawF0NYUhtQWVggPFkusTABFCstsEMssDorIyAuRrACJUawF0NYUBtSWVggPFkusTABFCstsEQssDsriiAgPLAGI0KKOCMgLkawAiVGsBdDWFAbUllYIDxZLrEwARQrsAZDLrAwKy2wRSywABawBCWwBCYgICBGI0dhsAwjQi5HI0cjYbALQysjIDwgLiM4sTABFCstsEYssQoEJUKwABawBCWwBCUgLkcjRyNhILAGI0KxDABCsAtDKyCwYFBYILBAUVizBCAFIBuzBCYFGllCQiMgR7AGQ7ACYiCwAFBYsEBgWWawAWNgILABKyCKimEgsARDYGQjsAVDYWRQWLAEQ2EbsAVDYFmwAyWwAmIgsABQWLBAYFlmsAFjYbACJUZhOCMgPCM4GyEgIEYjR7ABKyNhOCFZsTABFCstsEcssQA6Ky6xMAEUKy2wSCyxADsrISMgIDywBiNCIzixMAEUK7AGQy6wMCstsEkssAAVIEewACNCsgABARUUEy6wNiotsEossAAVIEewACNCsgABARUUEy6wNiotsEsssQABFBOwNyotsEwssDkqLbBNLLAAFkUjIC4gRoojYTixMAEUKy2wTiywCiNCsE0rLbBPLLIAAEYrLbBQLLIAAUYrLbBRLLIBAEYrLbBSLLIBAUYrLbBTLLIAAEcrLbBULLIAAUcrLbBVLLIBAEcrLbBWLLIBAUcrLbBXLLMAAABDKy2wWCyzAAEAQystsFksswEAAEMrLbBaLLMBAQBDKy2wWyyzAAABQystsFwsswABAUMrLbBdLLMBAAFDKy2wXiyzAQEBQystsF8ssgAARSstsGAssgABRSstsGEssgEARSstsGIssgEBRSstsGMssgAASCstsGQssgABSCstsGUssgEASCstsGYssgEBSCstsGcsswAAAEQrLbBoLLMAAQBEKy2waSyzAQAARCstsGosswEBAEQrLbBrLLMAAAFEKy2wbCyzAAEBRCstsG0sswEAAUQrLbBuLLMBAQFEKy2wbyyxADwrLrEwARQrLbBwLLEAPCuwQCstsHEssQA8K7BBKy2wciywABaxADwrsEIrLbBzLLEBPCuwQCstsHQssQE8K7BBKy2wdSywABaxATwrsEIrLbB2LLEAPSsusTABFCstsHcssQA9K7BAKy2weCyxAD0rsEErLbB5LLEAPSuwQistsHossQE9K7BAKy2weyyxAT0rsEErLbB8LLEBPSuwQistsH0ssQA+Ky6xMAEUKy2wfiyxAD4rsEArLbB/LLEAPiuwQSstsIAssQA+K7BCKy2wgSyxAT4rsEArLbCCLLEBPiuwQSstsIMssQE+K7BCKy2whCyxAD8rLrEwARQrLbCFLLEAPyuwQCstsIYssQA/K7BBKy2whyyxAD8rsEIrLbCILLEBPyuwQCstsIkssQE/K7BBKy2wiiyxAT8rsEIrLbCLLLILAANFUFiwBhuyBAIDRVgjIRshWVlCK7AIZbADJFB4sQUBFUVYMFktAAAAAEu4AMhSWLEBAY5ZsAG5CAAIAGNwsQAHQrUANiceBAAqsQAHQkAKOwQrCCMEFQcECiqxAAdCQAo/AjMGJwIcBQQKKrEAC0K9DwALAAkABYAABAALKrEAD0K9AEAAQABAAEAABAALKrkAA/+cRLEkAYhRWLBAiFi5AAP/nESxKAGIUVi4CACIWLkAA/+cRFkbsScBiFFYugiAAAEEQIhjVFi5AAP/nERZWVlZWUAKPQItBiUCFwUEDiq4Af+FsASNsQIARLMFZAYAREQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAawBrAE8ATwMqAAACQgAA/1kDMf/3Akr/+P9ZABgAGAAYABgCQv/3AkL/9wBrAGsATwBPAyoAAAMbAkIAAP9YAzH/9wMbAkr/+P9YABgAGAAYABgDggGxA4IBpwAAAAAAFQECAAMAAQQJAAAAqgAAAAMAAQQJAAEADACqAAMAAQQJAAIADgC2AAMAAQQJAAMAMgDEAAMAAQQJAAQAHAD2AAMAAQQJAAUAVgESAAMAAQQJAAYAHAFoAAMAAQQJAAgAGAGEAAMAAQQJAAkAGAGEAAMAAQQJAAsAMgGcAAMAAQQJAAwAMgGcAAMAAQQJAA0BIAHOAAMAAQQJAA4ANALuAAMAAQQJAQAADAMiAAMAAQQJAQEAFAMuAAMAAQQJAQIACgNCAAMAAQQJAQMADgC2AAMAAQQJAQQADANMAAMAAQQJAQUAEANYAAMAAQQJAQYACANoAAMAAQQJAQcACgNwAEMAbwBwAHkAcgBpAGcAaAB0ACAAMgAwADEANgAgAFQAaABlACAATwBzAHcAYQBsAGQAIABQAHIAbwBqAGUAYwB0ACAAQQB1AHQAaABvAHIAcwAgACgAaAB0AHQAcABzADoALwAvAGcAaQB0AGgAdQBiAC4AYwBvAG0ALwBnAG8AbwBnAGwAZQBmAG8AbgB0AHMALwBPAHMAdwBhAGwAZABGAG8AbgB0ACkATwBzAHcAYQBsAGQAUgBlAGcAdQBsAGEAcgA0AC4AMQAwADAAOwBuAGUAdwB0ADsATwBzAHcAYQBsAGQALQBSAGUAZwB1AGwAYQByAE8AcwB3AGEAbABkACAAUgBlAGcAdQBsAGEAcgBWAGUAcgBzAGkAbwBuACAANAAuADEAMAAwADsAIAB0AHQAZgBhAHUAdABvAGgAaQBuAHQAIAAoAHYAMQAuADgALgAxAC4ANAAzAC0AYgAwAGMAOQApAE8AcwB3AGEAbABkAC0AUgBlAGcAdQBsAGEAcgBWAGUAcgBuAG8AbgAgAEEAZABhAG0AcwBoAHQAdABwADoALwAvAHcAdwB3AC4AcwBhAG4AcwBvAHgAeQBnAGUAbgAuAGMAbwBtAFQAaABpAHMAIABGAG8AbgB0ACAAUwBvAGYAdAB3AGEAcgBlACAAaQBzACAAbABpAGMAZQBuAHMAZQBkACAAdQBuAGQAZQByACAAdABoAGUAIABTAEkATAAgAE8AcABlAG4AIABGAG8AbgB0ACAATABpAGMAZQBuAHMAZQAsACAAVgBlAHIAcwBpAG8AbgAgADEALgAxAC4AIABUAGgAaQBzACAAbABpAGMAZQBuAHMAZQAgAGkAcwAgAGEAdgBhAGkAbABhAGIAbABlACAAdwBpAHQAaAAgAGEAIABGAEEAUQAgAGEAdAA6ACAAaAB0AHQAcAA6AC8ALwBzAGMAcgBpAHAAdABzAC4AcwBpAGwALgBvAHIAZwAvAE8ARgBMAGgAdAB0AHAAOgAvAC8AcwBjAHIAaQBwAHQAcwAuAHMAaQBsAC4AbwByAGcALwBPAEYATABXAGUAaQBnAGgAdABFAHgAdAByAGEATABpAGcAaAB0AEwAaQBnAGgAdABNAGUAZABpAHUAbQBTAGUAbQBpAEIAbwBsAGQAQgBvAGwAZABSAG8AbQBhAG4AAgAAAAAAAP+cADIAAAAAAAAAAAAAAAAAAAAAAAAAAALyAAAAJADJAQIBAwEEAQUBBgEHAQgAxwEJAQoBCwEMAQ0BDgBiAQ8ArQEQAREBEgETAGMBFACuAJABFQAlARYAJgD9AP8AZAEXARgAJwEZARoA6QEbARwBHQEeAR8AKABlASABIQDIASIBIwEkASUBJgEnAMoBKAEpAMsBKgErASwBLQEuAS8BMAApATEAKgEyAPgBMwE0ATUBNgE3ACsBOAE5AToALAE7AMwBPADNAT0AzgD6AT4AzwE/AUABQQFCAUMALQFEAC4BRQFGAC8BRwFIAUkBSgFLAUwA4gAwAU0AMQFOAU8BUAFRAVIBUwBmADIA0AFUANEBVQFWAVcBWAFZAVoAZwFbAVwBXQDTAV4BXwFgAWEBYgFjAWQBZQFmAWcBaACRAWkArwFqALAAMwFrAO0ANAA1AWwBbQFuAW8BcAA2AXEA5AD7AXIBcwF0AXUBdgA3AXcBeAF5AXoBewA4ANQBfAF9ANUBfgBoAX8A1gGAAYEBggGDAYQBhQGGAYcBiAGJAYoBiwGMADkAOgGNAY4BjwGQADsAPADrAZEAuwGSAZMBlAGVAZYAPQGXAOYBmABEAGkBmQGaAZsBnAGdAZ4BnwBrAaABoQGiAaMBpAGlAGwBpgBqAacBqAGpAaoAbgGrAG0AoAGsAEUBrQBGAP4BAABvAa4BrwBHAOoBsAEBAbEBsgGzAEgAcAG0AbUAcgG2AbcBuAG5AboBuwBzAbwBvQBxAb4BvwHAAcEBwgHDAcQBxQBJAcYASgHHAPkByAHJAcoBywHMAEsBzQHOAc8ATADXAHQB0AB2AdEAdwHSAdMAdQHUAdUB1gHXAdgB2QBNAdoB2wBOAdwB3QHeAE8B3wHgAeEB4gHjAOMAUAHkAFEB5QHmAecB6AHpAeoAeABSAHkB6wB7AewB7QHuAe8B8AHxAHwB8gHzAfQAegH1AfYB9wH4AfkB+gH7AfwB/QH+Af8AoQIAAH0CAQCxAFMCAgDuAFQAVQIDAgQCBQIGAgcAVgIIAOUA/AIJAgoCCwCJAgwAVwINAg4CDwIQAhEAWAB+AhICEwCAAhQAgQIVAH8CFgIXAhgCGQIaAhsCHAIdAh4CHwIgAiECIgBZAFoCIwIkAiUCJgBbAFwA7AInALoCKAIpAioCKwIsAF0CLQDnAi4CLwIwAjECMgIzAMAAwQCdAJ4CNAI1AjYCNwI4AjkCOgI7AjwCPQI+Aj8CQAJBAkICQwJEAkUCRgJHAkgCSQJKAksCTAJNAk4CTwJQAlECUgJTAlQCVQJWAlcCWAJZAloCWwJcAl0CXgJfAmACYQJiAmMCZAJlAmYCZwJoAmkCagJrAmwCbQJuAm8CcAJxAnICcwJ0AnUCdgJ3AngCeQJ6AnsCfAJ9An4CfwKAAoECggKDAoQChQKGAocCiAKJAooCiwKMAo0CjgKPApACkQKSApMClAKVApYClwKYApkCmgKbApwCnQKeAp8CoAKhAqICowKkAqUCpgKnAqgCqQKqAqsCrAKtAq4AmwKvArAAEwAUABUAFgAXABgAGQAaABsAHAKxArICswK0ALwA9AD1APYAEQAPAB0AHgCrAAQAowAiAKIAwwCHAA0ABgASAD8CtQALAAwAXgBgAD4AQAAQArYAsgCzArcAQgDEAMUAtAC1ALYAtwCpAKoAvgC/AAUACgK4ArkAAwK6ArsCvACEAr0AvQAHAr4CvwCmAPcCwALBAsICwwLEAsUCxgLHAsgCyQCFAsoAlgLLAswCzQAOAO8A8AC4ACAAjwAhAB8AlQCUAJMApwBhAKQAQQLOAJIAnACaAJkApQLPAJgACADGALkAIwAJAIgAhgCLAIoAjACDAtAC0QBfAOgAggLSAMIC0wLUAtUC1gLXAtgC2QLaAtsC3ALdAt4C3wLgAuEC4gLjAuQC5QLmAucC6ALpAuoC6wLsAu0C7gLvAI0A2wDhAN4A2ACOANwAQwDfANoA4ADdANkC8ALxAvIC8wL0AvUC9gL3AvgC+QL6AvsGQWJyZXZlB3VuaTFFQUUHdW5pMUVCNgd1bmkxRUIwB3VuaTFFQjIHdW5pMUVCNAd1bmkwMUNEB3VuaTFFQTQHdW5pMUVBQwd1bmkxRUE2B3VuaTFFQTgHdW5pMUVBQQd1bmkwMjAwB3VuaTFFQTAHdW5pMUVBMgd1bmkwMjAyB0FtYWNyb24HQW9nb25lawpBcmluZ2FjdXRlB0FFYWN1dGUHdW5pMUUwMgtDY2lyY3VtZmxleApDZG90YWNjZW50B3VuaTAxRjEHdW5pMDFDNAZEY2Fyb24GRGNyb2F0B3VuaTFFMEEHdW5pMDFGMgd1bmkwMUM1BkVicmV2ZQZFY2Fyb24HdW5pMUVCRQd1bmkxRUM2B3VuaTFFQzAHdW5pMUVDMgd1bmkxRUM0B3VuaTAyMDQKRWRvdGFjY2VudAd1bmkxRUI4B3VuaTFFQkEHdW5pMDIwNgdFbWFjcm9uB0VvZ29uZWsHdW5pMUVCQwd1bmkwMUI3B3VuaTAxRUUHdW5pMUUxRQd1bmkwMUY0BkdjYXJvbgtHY2lyY3VtZmxleAd1bmkwMTIyCkdkb3RhY2NlbnQHdW5pMDFFNARIYmFyB3VuaTAyMUULSGNpcmN1bWZsZXgCSUoGSWJyZXZlB3VuaTAyMDgHdW5pMUVDQQd1bmkxRUM4B3VuaTAyMEEHSW1hY3JvbgdJb2dvbmVrBkl0aWxkZQtKY2lyY3VtZmxleAd1bmkwMUU4B3VuaTAxMzYHdW5pMDFDNwZMYWN1dGUGTGNhcm9uB3VuaTAxM0IETGRvdAd1bmkwMUM4B3VuaTFFNDAHdW5pMDFDQQZOYWN1dGUGTmNhcm9uB3VuaTAxNDUDRW5nB3VuaTAxQ0IGT2JyZXZlB3VuaTFFRDAHdW5pMUVEOAd1bmkxRUQyB3VuaTFFRDQHdW5pMUVENgd1bmkwMjBDB3VuaTAyMkEHdW5pMDIzMAd1bmkxRUNDB3VuaTFFQ0UFT2hvcm4HdW5pMUVEQQd1bmkxRUUyB3VuaTFFREMHdW5pMUVERQd1bmkxRUUwDU9odW5nYXJ1bWxhdXQHdW5pMDIwRQdPbWFjcm9uB3VuaTAxRUELT3NsYXNoYWN1dGUHdW5pMDIyQwd1bmkxRTU2BlJhY3V0ZQZSY2Fyb24HdW5pMDE1Ngd1bmkwMjEwB3VuaTAyMTIGU2FjdXRlC1NjaXJjdW1mbGV4B3VuaTAyMTgHdW5pMUU2MAd1bmkxRTlFB3VuaTAxOEYEVGJhcgZUY2Fyb24HdW5pMDE2Mgd1bmkwMjFBB3VuaTFFNkEGVWJyZXZlB3VuaTAxRDMHdW5pMDIxNAd1bmkxRUU0B3VuaTFFRTYFVWhvcm4HdW5pMUVFOAd1bmkxRUYwB3VuaTFFRUEHdW5pMUVFQwd1bmkxRUVFDVVodW5nYXJ1bWxhdXQHdW5pMDIxNgdVbWFjcm9uB1VvZ29uZWsFVXJpbmcGVXRpbGRlBldhY3V0ZQtXY2lyY3VtZmxleAlXZGllcmVzaXMGV2dyYXZlC1ljaXJjdW1mbGV4B3VuaTFFRjQGWWdyYXZlB3VuaTFFRjYHdW5pMDIzMgd1bmkxRUY4BlphY3V0ZQpaZG90YWNjZW50BmFicmV2ZQd1bmkxRUFGB3VuaTFFQjcHdW5pMUVCMQd1bmkxRUIzB3VuaTFFQjUHdW5pMDFDRQd1bmkxRUE1B3VuaTFFQUQHdW5pMUVBNwd1bmkxRUE5B3VuaTFFQUIHdW5pMDIwMQd1bmkxRUExB3VuaTFFQTMHdW5pMDIwMwdhbWFjcm9uB2FvZ29uZWsKYXJpbmdhY3V0ZQdhZWFjdXRlB3VuaTFFMDMLY2NpcmN1bWZsZXgKY2RvdGFjY2VudAZkY2Fyb24HdW5pMUUwQgd1bmkwMUYzB3VuaTAxQzYGZWJyZXZlBmVjYXJvbgd1bmkxRUJGB3VuaTFFQzcHdW5pMUVDMQd1bmkxRUMzB3VuaTFFQzUHdW5pMDIwNQplZG90YWNjZW50B3VuaTFFQjkHdW5pMUVCQgd1bmkwMjA3B2VtYWNyb24HZW9nb25lawd1bmkxRUJEB3VuaTAyNTkHdW5pMDI5Mgd1bmkwMUVGB3VuaTFFMUYHdW5pMDFGNQZnY2Fyb24LZ2NpcmN1bWZsZXgHdW5pMDEyMwpnZG90YWNjZW50B3VuaTAxRTUEaGJhcgd1bmkwMjFGC2hjaXJjdW1mbGV4BmlicmV2ZQd1bmkwMjA5CWkubG9jbFRSSwd1bmkxRUNCB3VuaTFFQzkHdW5pMDIwQgJpagdpbWFjcm9uB2lvZ29uZWsGaXRpbGRlB3VuaTAyMzcLamNpcmN1bWZsZXgHdW5pMDFFOQd1bmkwMTM3DGtncmVlbmxhbmRpYwZsYWN1dGUGbGNhcm9uB3VuaTAxM0MEbGRvdAd1bmkwMUM5B3VuaTFFNDEGbmFjdXRlC25hcG9zdHJvcGhlBm5jYXJvbgd1bmkwMTQ2A2VuZwd1bmkwMUNDBm9icmV2ZQd1bmkxRUQxB3VuaTFFRDkHdW5pMUVEMwd1bmkxRUQ1B3VuaTFFRDcHdW5pMDIwRAd1bmkwMjJCB3VuaTAyMzEHdW5pMUVDRAd1bmkxRUNGBW9ob3JuB3VuaTFFREIHdW5pMUVFMwd1bmkxRUREB3VuaTFFREYHdW5pMUVFMQ1vaHVuZ2FydW1sYXV0B3VuaTAyMEYHb21hY3Jvbgd1bmkwMUVCC29zbGFzaGFjdXRlB3VuaTAyMkQHdW5pMUU1NwZyYWN1dGUGcmNhcm9uB3VuaTAxNTcHdW5pMDIxMQd1bmkwMjEzBnNhY3V0ZQtzY2lyY3VtZmxleAd1bmkwMjE5B3VuaTFFNjEFbG9uZ3MEdGJhcgZ0Y2Fyb24HdW5pMDE2Mwd1bmkwMjFCB3VuaTFFNkIGdWJyZXZlB3VuaTAxRDQHdW5pMDIxNQd1bmkxRUU1B3VuaTFFRTcFdWhvcm4HdW5pMUVFOQd1bmkxRUYxB3VuaTFFRUIHdW5pMUVFRAd1bmkxRUVGDXVodW5nYXJ1bWxhdXQHdW5pMDIxNwd1bWFjcm9uB3VvZ29uZWsFdXJpbmcGdXRpbGRlBndhY3V0ZQt3Y2lyY3VtZmxleAl3ZGllcmVzaXMGd2dyYXZlC3ljaXJjdW1mbGV4B3VuaTFFRjUGeWdyYXZlB3VuaTFFRjcHdW5pMDIzMwd1bmkxRUY5BnphY3V0ZQp6ZG90YWNjZW50A2ZfZgVmX2ZfaQZmX2ZfaWoFZl9mX2wEZl9pagd1bmkwNDEwB3VuaTA0MTEHdW5pMDQxMgd1bmkwNDEzB3VuaTA0MDMHdW5pMDQ5MAd1bmkwNDE0B3VuaTA0MTUHdW5pMDQwMAd1bmkwNDAxB3VuaTA0MTYHdW5pMDQxNwd1bmkwNDE4B3VuaTA0MTkHdW5pMDQwRAd1bmkwNDFBB3VuaTA0MEMHdW5pMDQxQgd1bmkwNDFDB3VuaTA0MUQHdW5pMDQxRQd1bmkwNDFGB3VuaTA0MjAHdW5pMDQyMQd1bmkwNDIyB3VuaTA0MjMHdW5pMDQwRQd1bmkwNDI0B3VuaTA0MjUHdW5pMDQyNwd1bmkwNDI2B3VuaTA0MjgHdW5pMDQyOQd1bmkwNDBGB3VuaTA0MkMHdW5pMDQyQQd1bmkwNDJCB3VuaTA0MDkHdW5pMDQwQQd1bmkwNDA1B3VuaTA0MDQHdW5pMDQyRAd1bmkwNDA2B3VuaTA0MDcHdW5pMDQwOAd1bmkwNDBCB3VuaTA0MkUHdW5pMDQyRgd1bmkwNDAyB3VuaTA0NjIHdW5pMDQ2QQd1bmkwNDkyB3VuaTA0OTYHdW5pMDQ5QQd1bmkwNEEyCVVzdHJhaXRjeQ9Vc3RyYWl0c3Ryb2tlY3kHdW5pMDRCQQd1bmkwNEM5B3VuaTA0RDgHdW5pMDRFOAd1bmkwNDMwB3VuaTA0MzEHdW5pMDQzMgd1bmkwNDMzB3VuaTA0NTMHdW5pMDQ5MQd1bmkwNDM0B3VuaTA0MzUHdW5pMDQ1MAd1bmkwNDUxB3VuaTA0MzYHdW5pMDQzNwd1bmkwNDM4B3VuaTA0MzkHdW5pMDQ1RAd1bmkwNDNBB3VuaTA0NUMHdW5pMDQzQgd1bmkwNDNDB3VuaTA0M0QHdW5pMDQzRQd1bmkwNDNGB3VuaTA0NDAHdW5pMDQ0MQd1bmkwNDQyB3VuaTA0NDMHdW5pMDQ1RQd1bmkwNDQ0B3VuaTA0NDUHdW5pMDQ0Nwd1bmkwNDQ2B3VuaTA0NDgHdW5pMDQ0OQd1bmkwNDVGB3VuaTA0NEMHdW5pMDQ0QQd1bmkwNDRCB3VuaTA0NTkHdW5pMDQ1QQd1bmkwNDU1B3VuaTA0NTQHdW5pMDQ0RAd1bmkwNDU2B3VuaTA0NTcHdW5pMDQ1OAd1bmkwNDVCB3VuaTA0NEUHdW5pMDQ0Rgd1bmkwNDUyB3VuaTA0NjMHdW5pMDQ2Qgd1bmkwNDkzB3VuaTA0OTcHdW5pMDQ5Qgd1bmkwNEEzCXVzdHJhaXRjeQ91c3RyYWl0c3Ryb2tlY3kHdW5pMDRCQgd1bmkwNENBB3VuaTA0RDkHdW5pMDRFOQJQaQd1bmkyMTJCB3VuaTIxMkEHdW5pMDBCOQd1bmkwMEIyB3VuaTAwQjMHdW5pMjA3NBZwZXJpb2RjZW50ZXJlZC5sb2NsQ0FUB3VuaTAwQUQHdW5pMjAxMAd1bmkyN0U4B3VuaTI3RTkHdW5pMDBBMAJDUgd1bmkyMEI1DWNvbG9ubW9uZXRhcnkEZG9uZwRFdXJvB3VuaTIwQjIHdW5pMjBBRARsaXJhB3VuaTIwQkEHdW5pMjBCQwd1bmkyMEE2BnBlc2V0YQd1bmkyMEIxB3VuaTIwQkQHdW5pMjBCOQd1bmkyMEE5B3VuaTIyMTkHdW5pMjA1Mgd1bmkyMjE1CGVtcHR5c2V0B3VuaTAwQjUGbWludXRlBnNlY29uZAd1bmkyMTEzB3VuaTIxMTYJZXN0aW1hdGVkB3VuaTAyQkMHdW5pMDJDOQd1bmkwMzA4B3VuaTAzMDcJZ3JhdmVjb21iCWFjdXRlY29tYgd1bmkwMzBCC3VuaTAzMEMuYWx0B3VuaTAzMDIHdW5pMDMwQwd1bmkwMzA2B3VuaTAzMEEJdGlsZGVjb21iB3VuaTAzMDQNaG9v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H3QfhA8+AAAPWAAAD0gAAA9YAAAbfAAAG4YAAA9oAAAbhgAAH7QAAB/EAAAPfAAAH8QAAA98AAAfxAAAH7QAAA9yAAAPfAAAH8QAAA+GAAAfxAAAD5AAAA+uAAAPmgAAD64AAA+kAAAPrgAAG7AAABvKG9obugAAG8ob2g++AAAbyhvaG7oAABvKG9obugAAG8ob2g/IAAAbyhvaD8gAABAEG9oP0gAAG8ob2g/cAAAbyhvaD+YAABvKG9oP8AAAG8ob2hu6AAAbyhvaD/oAABvKG9obsAAAEAQb2hu6AAAbyhvaEA4AABvKG9obugAAG8ob2hu6AAAbyhvaG7AAABvKG9oQHgAAG8ob2hAoAAAQPAAAEDIAABA8AAAf1AAAH94AABBMAAAf3gAAH+4AAB/4AAAQYAAAH/gAABBWAAAf+AAAEGAAAB/4AAAQYAAAH/gAAB/uAAAQagAAEHQAAB/4AAAf7gAAH/gAABw8AAAcRgAAEH4AABxGAAAQfgAAHEYAABDKAAAQ3hDuAAAAAAAAEO4QwAAAEN4Q7hCIAAAQ3hDuEMAAABDeEO4QkgAAEN4Q7hDAAAAQ3hDuEJwAABDeEO4QygAAEKYQ7hDAAAAQ3hDuELAAABDeEO4QwAAAEN4Q7hDAAAAQ3hDuEMoAABDeEO4Q1AAAEN4Q7hD+AAARGAAAEQgAABEYAAAflAAAH6QAABEoAAAfpAAAH5QAABEyAAARUBFaEWoAAAAAEVoAAAAAETwRWhFqAAARUBFaEWoAABFQEVoRRgAAEVARWhFqAAARUBFaEWoAABwiAAAcLAAAEXoAABwsAAAgCAAAIBIAABGEAAAgEgAAEYQAACASAAAgCAAAEY4AACAIAAAgEgAAEZgAACASAAAdJh0wHUAdUBIWHTAdQB1QEaIdMB1AHVASFh0wHUAdUBGsHTAdQB1QEawdMBHyHVARth0wHUAdUBHAHTAdQB1QEcodMB1AHVAR1B0wHUAdUBIWHTAdQB1QEd4dMB1AHVAR6B0wHUAdUB0mHTAR8h1QEhYdMB1AHVAR/B0wHUAdUB0mHTAdQB1QEhYdMB1AHVAdJh0wEfIdUBIWHTAdQB1QEfwdMB1AHVASRB0wHUAdUBIGHTAdQB1QEhYdMB1AHVASFh0wHUAdUB0mHTAdQB1QEiAdMBI0HVASKh0wEjQdUBJEHTAdQB1QEk4dMB1AHVASWAAAEmgAABxWAAAcYAAAEngAABxgAAASggAAEowAABKcAAASxAAAEroAABLEAAASugAAEsQAABKcAAASpgAAErAAABLEAAASugAAEsQAABy+AAAcyAAAEt4AABzIAAAS3gAAHMgAABy+AAAS1AAAEt4AABzIAAAcvgAAEugAABLyAAAcyAAAHHAAABx6AAAccAAAHHoAABL8AAAcegAAHHAAABMGAAAccAAAExAAABMaAAAcegAAE3ITkBOgE7ATaBOQE6ATsBMqE5AToBOwE2gTkBOgE7ATaBOQE6ATsBM0E5AToBOwE2gTkBOgE7ATchOQEz4TsBNoE5AToBOwE0gTkBOgE7ATchOQE6ATsBNoE5AToBOwE3ITkBM+E7ATaBOQE6ATsBNIE5AToBOwE4YTkBOgE7ATWBOQE6ATsBNoE5AToBOwE2gTkBOgE7ATchOQE6ATsBN8E5AToBOwE4YTkBOgE7ATwAAAE8oAACA4AAAgQgAAE9oAACBCAAAT2gAAIEIAABPaAAAgQgAAE9oAACBCAAAcpAAAHK4AABzyAAAc/AAAE/4AABz8AAAT/gAAHPwAABP+AAAc/AAAHPIAABPkAAAT/gAAHPwAABPuAAAc/AAAE/4AABz8AAAUCAAAHPwAABQSAAAUMAAAFBwAABQwAAAUHAAAFDAAABQmAAAUMAAAHWAAAB1wHXoUrgAAHXAdehREAAAdcB16FDoAAB1wHXoURAAAFJQdehROAAAdcB16HWAAAB1wHXoUWAAAHXAdehSuAAAdcB16FK4AAB1wHXoUYgAAHXAdehRiAAAUlB16FGwAAB1wHXoUdgAAHXAdehSAAAAdcB16FIoAAB1wHXoUrgAAHXAdeh1gAAAUlB16FK4AAB1wHXoUngAAHXAdehSuAAAdcB16FK4AAB1wHXodYAAAHXAdehS4AAAdcB16FMIAAB1wHXoUzAAAHXAdehTWAAAU6gAAFOAAABTqAAAU+gAAFRQAABUEAAAVFAAAHjYAAB5AAAAVLgAAHkAAABUuAAAeQAAAHjYAABUkAAAVLgAAHkAAABU4AAAeQAAAFUIVbBVcAAAVQhVsFVwAABVMFWwVXAAAAAAVbAAAAAAAABVsAAAAAB2kAAAdvh3OHa4AAB2+Hc4VdgAAHb4dzh2uAAAdvh3OHa4AAB2+Hc4VgAAAHb4dzhWAAAAVvB3OFYoAAB2+Hc4VlAAAHb4dzhWeAAAdvh3OFagAAB2+Hc4drgAAHb4dzhWyAAAdvh3OHaQAABW8Hc4drgAAHb4dzhXGAAAdvh3OHa4AAB2+Hc4drgAAHb4dzh2kAAAdvh3OFdAAAB2+Hc4V2gAAFe4AABXkAAAV7gAAIR4AACEuAAAV/gAAIS4AABY2AAAWQAAAFhgAABZAAAAWDgAAFkAAABYYAAAWQAAAFhgAABZAAAAWIgAAFkAAABYsAAAWQAAAFjYAABZAAAAe+AAAHwgAABZQAAAfCAAAFmYAAB8IAAAAAAAAHq4evhZwAAAe2B7oHs4AAB7YHugWegAAHtge6B7OAAAe2B7oFoQAAB7YHugezgAAHtge6BaOAAAe2B7oAAAAABaYHr4ezgAAHtge6BaiAAAe2B7oHs4AAB7YHugAAAAAHq4evh7OAAAe2B7oAAAAAB6uHr4WsgAAHtge6Ba8AAAW0AAAFsYAABbQAAAW+gAAFvAAABbmAAAW8AAAFvoAABcQAAAXNBc+F04AABcgFz4XTgAAFzQXPhdOAAAXNBc+FyoAABc0Fz4XTgAAFzQXPhdOAAAXXgAAF3IAABdoAAAXcgAAF7AAABfEAAAXnAAAF8QAABeCAAAXjAAAF5wAABfEAAAXsAAAF6YAABewAAAXxAAAF7oAABfEAAAfGB8oHzgfSBioHygfOB9IF9QfKB84H0gYqB8oHzgfSBfeHygfOB9IF94fKBgkH0gX6B8oHzgfSBfyHygfOB9IF/wfKB84H0gYBh8oHzgfSBioHygfOB9IGBAfKB84H0gYGh8oHzgfSB8YHygYJB9IGKgfKB84H0gYLh8oHzgfSBg+HygYiB9IGFIfKBiIH0gYPh8oGEgfSBhSHygYiB9IGGIfKBiIH0gYeB8oGIgfSBiYHygfOB9IGKgfKB84H0gYqB8oHzgfSB8YHygfOB9IGLIfKB84H0gYvB8oHzgfSBjMHygfOB9IGNYfKB84H0gY4AAAGOoAAB4cAAAeJgAAGPoAAB4mAAAZBAAAGQ4AABkeAAAZTAAAGTwAABlMAAAZPAAAGUwAABkeAAAZKAAAGTIAABlMAAAZPAAAGUwAAB6UAAAengAAGWYAAB6eAAAZZgAAHp4AAB6UAAAZXAAAGWYAAB6eAAAelAAAGXAAABl6AAAengAA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AAADqAAAAAoAAgAcgAAAAwAAAxYAAAAKAAIAXYAAAAMAAAMqAAAACgACADiAAAADAAADjwAAAAoAAgAKgAAAAwAAA7gAAAAKAAIAEIAAAAAAAQAAAAoBKgH0AAJERkxUAA5sYXRuACYABAAAAAD//wAHAAAAAQADAAQABQAOAA8ANAAIQVpFIABKQ0FUIABgQ1JUIAB2S0FaIACMTU9MIACiUk9NIAC4VEFUIADOVFJLIADkAAD//wAIAAAAAQACAAMABAAFAA4ADwAA//8ACAAAAAEAAwAEAAUABgAOAA8AAP//AAgAAAABAAMABAAFAAcADgAPAAD//wAIAAAAAQADAAQABQAIAA4ADwAA//8ACAAAAAEAAwAEAAUACQAOAA8AAP//AAgAAAABAAMABAAFAAoADgAPAAD//wAIAAAAAQADAAQABQALAA4ADwAA//8ACAAAAAEAAwAEAAUADAAOAA8AAP//AAgAAAABAAMABAAFAA0ADgAPABBhYWx0AGJjYXNlAGpjY21wAHBkbGlnAHpmcmFjAIBsaWdhAIZsb2NsAIxsb2NsAJJsb2NsAJhsb2NsAJ5sb2NsAKRsb2NsAKpsb2NsALBsb2NsALZvcmRuALxzdXBzAMQAAAACAAAAAQAAAAEAGAAAAAMAAgAFAAgAAAABABkAAAABABQAAAABABoAAAABABIAAAABAAkAAAABABEAAAABAA4AAAABAA0AAAABAAwAAAABAA8AAAABABAAAAACABUAFwAAAAEAEwAbADgAigCgAWYBZgGIA4QDhAG+AhwCWgJaAm4CbgKQApACkAKQApACpAK8AvgDQANiA4QDngPCAAEAAAABAAgAAgAmABABuwG8AKYArgG7ATsBvAGAAYgCRQJGAkcCSAJcAucC6AABABAAAQB4AKQArQDaAToBUgF+AYcCPAI9Aj4CPwJWAsYC0AADAAAAAQAIAAECDAABAAgAAgErATEABgAAAAQADgAgAFwAbgADAAAAAQAmAAEAPgABAAAAAwADAAAAAQAUAAIAHAAsAAEAAAAEAAEAAgEqAToAAgACAtAC0gAAAtQC2AADAAIAAgLAAsQAAALGAs8ABQADAAECmgABApoAAAABAAAAAwADAAEAEgABAogAAAABAAAABAACAAsAAQAIAAAACgBBAAgARABMAEAATgBPAEkAUQBjAEsAZQCyAF4AtADZAKwBvQHtANIB9AH1AQMB+QH5AQUCNwI3AQYAAQAAAAEACAACAA4ABAErATsC5wLoAAEABAEqAToCxgLQAAYAAAACAAoAHAADAAAAAQIEAAEAJAABAAAABgADAAEAEgABAfIAAAABAAAABwABAAIC5wLoAAQAAAABAAgAAQBOAAIACgAsAAQACgAQABYAHALtAAICwwLuAAICwgLvAAICzALwAAICygAEAAoAEAAWABwC6QACAsMC6gACAsIC6wACAswC7AACAsoAAQACAsYCyAAGAAAAAgAKACQAAwABABQAAQBCAAEAFAABAAAACgABAAEBQQADAAEAFAABACgAAQAUAAEAAAALAAEAAQBmAAEAAAABAAgAAQAGAAYAAQABAlYAAQAAAAEACAACAA4ABACmAK4BgAGIAAEABACkAK0BfgGHAAEAAAABAAgAAQAGAAcAAQABASoAAQAAAAEACAABAAYACQACAAECPAI/AAAABAAAAAEACAABACwAAgAKACAAAgAGAA4CSwADAloCPwJKAAMCWgI9AAEABAJMAAMCWgI/AAEAAgI8Aj4ABgAAAAIACgAkAAMAAQAsAAEAEgAAAAEAAAAWAAEAAgABANoAAwABABIAAQAcAAAAAQAAABYAAgABAjsCRAAAAAEAAgB4AVIAAQAAAAEACAACAA4ABAG7AbwBuwG8AAEABAABAHgA2gFSAAQAAAABAAgAAQAUAAEACAABAAQCvAADAVICTQABAAEAcAABAAAAAQAIAAIACgACAucC6AABAAICxgLQAAQAAAABAAgAAQBaAAEACAACAAYADgG2AAMBHAE2AbgAAgE2AAQAAAABAAgAAQA2AAEACAAFAAwAFAAcACIAKAG1AAMBHAEqAbcAAwEcAUEBtAACARwBuQACASoBugACAUEAAQABARwAAAABAAAAAAAUAAAC4QAAAAAAAAAAAAEAAAAcAAUAAAAsAAAAPAAAAoQAAAKdAAACswABAALAAMAAAAAAAEAAQAAACAAAAAEAARYdIUNYXWZzAR8AAAACAAAAAYAQhDeHMYgxjySTUpYxnS6ec6AwoD6gRqB1onCkaaV/pmuoWqstrTquXq5yr2OwY7BysiGyNLJlsn6zJrRztVK2V7dRt1u5HrkkuVG5W7o+ux27YbtqvEq8U71Avg2/Ir9PwFfBI8FCwVLCPMJ3w/jDAcMuw2jE8cRBxF7FZ8VwxhTGG8cRxz/HScdUyBTIIckUySTJMsoryjXKQcpDyxXLIstAzFzNIc0ozTXNPc1GzV/Nas4zzjvP9c8vz1HQRNBL0GfRHNEy0T3RVNL50iHSO9Jw0nPTLtM40zrTO9NA1C7UVNUh1S3VLtVI1VLVYtYZ1h3WIdYx1jXWONY61k3XMdc11zvXS9dP11PXb9j62A7YG9gk2DXYWtlA2U7aBdo+2kHaQ9pw2wXbEttc3BjcMNw03DncQNxY3RfdSN1v3iHfMN8y3zXfPt9C4CjgaOEb4SHiIeIu5BnkJOQs5C/kOuRH5Q3lIeYw5jTmQOZC5kPmZucV5y3nL+dB6BfoLug16DvoPOhL6eDpHOkv6T/qCeot6/3rKesy6zjrQOwu7C/sQ+3r7QLtB+0M7RjtMe1O7h3uLe4y7jfuO+497yDvLu8470vvTfAF8BDwGfAc8D/xGfFu8ijyNfI78yHzQ/Qd9R31JPUs9TH1OPU89T71RvVR9i32M/Y79lH3Rfgr+SP5MPk5+kL6SfpR+0T7Vfzc/FT/JAEgASEBLQI7A/8DNQVbByUIJQopC+kLJA4qEzIVLxk1J/ArLUNUUQ0ABQABAAIAAAAB/wCj/wFz/xDO/yYb/3QvAAQAAQACAAEAAADNvACAxACXywCG0QAEAAIAAgAAAAH+nwCz/sMAAP/DAAAAAAAAABgC5wI7AsECwQLBAsECwQLBAsECwQLBAsECwQLBAsECwQLBAsECwQLBAsECwQLBAsECwQLBAsECwQMEAwQCmwKbArQCtAK0ArQCtAK0AvwCtwK4AxwC/AL2AvwCpwKnAusC6wLrAusC6wLrAusC6wLrAusC6wLrAusC6wLrAusC6wLrAusC6wMZAxkC/wL/ArwCvAK8ArwCvAK8ArwCvALXAtIC1wLXAnwCGwJ8AnwCfAJ8AnwCfAJ8AnwCfAJ8AnwCfAJ8ApgCmAKeAp4CngK/Aj0CvwK/Ar8CvwJSAsACrgKuAu4CXgLuAu4C7gMSAoQC7gLGAsYCxgLGAsYCxgLGAsYCxgLGAsYCxgLGAsYCxgLGAsYCxgLGAsYCxgLGAsYCxgLGAsYC3wLfAsYCxgIyAxEDEQMOAtoC+QL5AvkC+QL5AvkCywLLAssCywLLAssCywKFAsYDCwLQAxcDFwMXAxcC+gL6AvoC+gL6AvoC+gL6AvoC+gL6AvoC+gL6AvoC+gL6AvoC+gL6AvoC+gK6AsQCxALEAsQCxAKqAtUC1QLVAtUC1QLVAtUC1QLVAuUC5QLlAuUCYwJjAmMCYwJjAmMCYwJjAmMCYwJjAmMCYwJjAmMCYwJjAmMCYwJjAmMCYwJjAmMCYwJjAmICYgJbAlsCmgKaApoCmgKaApoCZAKAAhgCcAJkAioCKgJ7AnsCewJ7AnsCewJ7AnsCewJ7AnsCewJ7AnsCewJ7AnsCewJ7AnsCewJBAkECqQKpAwMDAwMDAwMDAwMDAwMDAwJRAk0CUQJRAooCfQJ9An0CfQJ9An0CfQKKAn0CfQJ9AiwCfQKKAn0CrwKvAq8CaQJpAmkC2AJzAnMCFwJzAjACJgLRAkQCRAJfAl8CRQJfAl8ABAIeAl8CfgJ+An4CfgJ+An4CfgJ+An4CfgJ+An4CfgJ+An4CfgJ+An4CfgJ+An4CfgJ+An4CfgJ+AoECgQJ+An4CQAJoAmgCXQJkApACkAKQApACkAKQAtsC2wLbAtsC2wLbAtsCqAKgAmsABQIOAmsCawJrAm8CbwJvAm8CbwJvAm8CbwJvAm8CbwJvAm8CbwJvAm8CbwJvAm8CbwJvAm8CrQLIAsgCyALIAsgC7ALhAuEC4QLhAuEC4QLhAuEC4QLJAskCyQLJAicCTgIVAgUCEAI1AiQCVAJUAsECwgKbAuMC4wMJAjMC6wLrAusCNgLPArsCuwK7Ao0CjQLDAq4C1wLGArMDEQK0AwsABgAGAikCqgJuAi0CYAIcApkCpAK9Aj4CtQKjAssCzALNAnkCeQKXAu8CWQLeAjQCnAI6AAMCDwKDArAC1QLpAmwCsALGAuACYwMNAowC9wL3AwIChgJ7AnsCewIhAuICWgJaAloCdwJ3AnYCTAKlAn4CkgJoApoC3QLhAuECIgLsAkMCHwIgAg0CdQJ/Ao4CDAYCAlgC2wLOArYCigJ9Aq8CVgYBAmUCVQK5AiUCUAIWAj8CVwLtAtwCUQJXAnsCggMQAgoCwQKeAAICZgMWAxMDFAMMAwADGgAAAwoCBAIaAgkCBgJcBAIEAAMBAvUC+wMFAvgCnwL0AvECygLKAxgCCAJ4AqECiwKLAhICpgMGAisCEwI3AogCkQLnApQEAwgBAtYCSQIDAgICAwJGAkgC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\";\n\n//# sourceURL=webpack://smokesignal/./src/fonts/Oswald-VariableFont_wght.ttf?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("__webpack_require__(/*! ./index.css */ \"./src/index.css\");\r\nconst {\r\n  getWallet,\r\n  requestAccounts,\r\n  handleWalletEvents,\r\n  xDaiImport,\r\n  sendTransaction,\r\n} = __webpack_require__(/*! ./metamask.js */ \"./src/metamask.js\");\r\nconst chains = __webpack_require__(/*! ../config.json */ \"./config.json\");\r\n\r\nif (window.navigator.serviceWorker) {\r\n  window.navigator.serviceWorker.register(\"./sw.js\");\r\n}\r\n\r\nconst { Elm } = __webpack_require__(/*! ./elm/App.elm */ \"./src/elm/App.elm\");\r\n\r\n/* eslint-disable no-undef */\r\nconst xDaiProviderUrl = \"https://rpc.xdaichain.com/\";\r\nconst ethProviderUrl = \"http://127.0.0.1:8545/\";\r\n/* eslint-enable no-undef */\r\n\r\n// Local storage keys\r\nconst HAS_VISITED = \"has-visited\";\r\nconst COOKIE_CONSENT = \"cookie-consent\";\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n  const app = startDapp();\r\n\r\n  analyticsGtagPortStuff(app);\r\n  seoPortStuff(app);\r\n\r\n  app.ports.setVisited.subscribe(() => localStorage.setItem(HAS_VISITED, true));\r\n\r\n  app.ports.log.subscribe((x) => console.log(x));\r\n\r\n  app.ports.xDaiImport.subscribe((_) =>\r\n    xDaiImport().then(console.log).catch(console.error)\r\n  );\r\n\r\n  app.ports.connectToWeb3.subscribe(() =>\r\n    (async () => {\r\n      const [account] = await requestAccounts();\r\n\r\n      const wallet = account ? await getWallet(account) : null;\r\n\r\n      app.ports.walletResponse.send(wallet);\r\n    })().catch((e) => {\r\n      app.ports.walletResponse.send(e);\r\n    })\r\n  );\r\n\r\n  app.ports.submitPost.subscribe((params) =>\r\n    sendTransaction(params)\r\n      .then(app.ports.postResponse.send)\r\n      .catch(app.ports.postResponse.send)\r\n  );\r\n\r\n  app.ports.txOut.subscribe((params) =>\r\n    sendTransaction(params).then(app.ports.txIn.send).catch(app.ports.txIn.send)\r\n  );\r\n});\r\n\r\nfunction startDapp() {\r\n  const hasWallet = Boolean(window.ethereum);\r\n\r\n  const app = Elm.App.init({\r\n    node: document.getElementById(\"elm\"),\r\n    flags: {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      nowInMillis: Date.now(),\r\n      cookieConsent: getCookieConsent(),\r\n      newUser: !window.localStorage.getItem(HAS_VISITED),\r\n      ethProviderUrl,\r\n      xDaiProviderUrl,\r\n      hasWallet,\r\n      chains,\r\n    },\r\n  });\r\n\r\n  if (hasWallet) {\r\n    handleWalletEvents(app.ports.walletResponse.send);\r\n  }\r\n\r\n  return app;\r\n}\r\n\r\nfunction analyticsGtagPortStuff(app) {\r\n  app.ports.gTagOutPort.subscribe(function (data) {\r\n    if (window.gtag) {\r\n      window.gtag(\"event\", data.event, {\r\n        event_category: data.category,\r\n        event_label: data.label,\r\n        value: data.value,\r\n      });\r\n    }\r\n  });\r\n\r\n  app.ports.consentToCookies.subscribe(function () {\r\n    setCookieConsent();\r\n  });\r\n}\r\n\r\nfunction seoPortStuff(app) {\r\n  app.ports.setDescription.subscribe(function (newDescription) {\r\n    document\r\n      .querySelector('meta[name=\"description\"]')\r\n      .setAttribute(\"content\", newDescription);\r\n  });\r\n}\r\n\r\nfunction getCookieConsent() {\r\n  return Boolean(window.localStorage.getItem(COOKIE_CONSENT));\r\n}\r\nfunction setCookieConsent() {\r\n  window.localStorage.setItem(COOKIE_CONSENT, true);\r\n}\r\n\n\n//# sourceURL=webpack://smokesignal/./src/index.js?");

/***/ }),

/***/ "./src/metamask.js":
/*!*************************!*\
  !*** ./src/metamask.js ***!
  \*************************/
/***/ ((module) => {

eval("const sendTransaction = (params) =>\r\n  window.ethereum.request({ method: \"eth_sendTransaction\", params: [params] });\r\n\r\n// https://eth.wiki/json-rpc/API#eth_accounts\r\nconst getAccounts = () => window.ethereum.request({ method: \"eth_accounts\" });\r\n\r\n// https://docs.metamask.io/guide/rpc-api.html#eth-requestaccounts\r\nconst requestAccounts = () =>\r\n  window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n\r\n// https://docs.metamask.io/guide/rpc-api.html#wallet-addethereumchain\r\nconst xDaiImport = () =>\r\n  window.ethereum.request({\r\n    method: \"wallet_addEthereumChain\",\r\n    params: [\r\n      // https://www.xdaichain.com/for-users/wallets/metamask/metamask-setup\r\n      {\r\n        chainId: \"0x64\",\r\n        chainName: \"xDai Chain\",\r\n        rpcUrls: [\"https://rpc.xdaichain.com\"],\r\n        blockExplorerUrls: [\"https://blockscout.com/xdai/mainnet\"],\r\n        nativeCurrency: {\r\n          name: \"xDAI\",\r\n          symbol: \"xDAI\",\r\n          decimals: 18,\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\nconst getWallet = async (address) => {\r\n  const balance = await window.ethereum.request({\r\n    method: \"eth_getBalance\",\r\n    params: [address, \"latest\"],\r\n  });\r\n\r\n  const network = await window.ethereum.request({\r\n    method: \"net_version\",\r\n  });\r\n\r\n  return { address, balance, network };\r\n};\r\n\r\nconst handleWalletEvents = (port) => {\r\n  window.ethereum.on(\"chainChanged\", (_chain) =>\r\n    (async () => {\r\n      const [account] = await getAccounts();\r\n\r\n      const wallet = account ? await getWallet(account) : null;\r\n\r\n      port(wallet);\r\n    })().catch((e) => {\r\n      console.error(\"chainChanged\", e);\r\n      port(e);\r\n    })\r\n  );\r\n\r\n  window.ethereum.on(\"accountsChanged\", ([account]) =>\r\n    (async () => {\r\n      const wallet = account ? await getWallet(account) : null;\r\n\r\n      port(wallet);\r\n    })().catch((e) => {\r\n      console.error(\"accountsChanged\", e);\r\n      port(e);\r\n    })\r\n  );\r\n\r\n  window.ethereum.on(\"disconnect\", (message) =>\r\n    (async () => {\r\n      console.log(message);\r\n\r\n      const [account] = await getAccounts();\r\n\r\n      const wallet = account ? await getWallet(account) : null;\r\n\r\n      port(wallet);\r\n    })().catch((e) => {\r\n      console.error(\"disconnect\", e);\r\n      port(e);\r\n    })\r\n  );\r\n};\r\n\r\nmodule.exports = {\r\n  getAccounts,\r\n  getWallet,\r\n  requestAccounts,\r\n  handleWalletEvents,\r\n  xDaiImport,\r\n  sendTransaction,\r\n};\r\n\n\n//# sourceURL=webpack://smokesignal/./src/metamask.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;